/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/test/page"],{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5CTushar%20bajaj%5C%5COneDrive%5C%5CDesktop%5C%5Cdrawing%5C%5Csrc%5C%5Capp%5C%5Ctest%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!":
/*!**************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5CTushar%20bajaj%5C%5COneDrive%5C%5CDesktop%5C%5Cdrawing%5C%5Csrc%5C%5Capp%5C%5Ctest%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false! ***!
  \**************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/test/page.tsx */ \"(app-pages-browser)/./src/app/test/page.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyQyUzQSU1QyU1Q1VzZXJzJTVDJTVDVHVzaGFyJTIwYmFqYWolNUMlNUNPbmVEcml2ZSU1QyU1Q0Rlc2t0b3AlNUMlNUNkcmF3aW5nJTVDJTVDc3JjJTVDJTVDYXBwJTVDJTVDdGVzdCU1QyU1Q3BhZ2UudHN4JTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJnNlcnZlcj1mYWxzZSEiLCJtYXBwaW5ncyI6IkFBQUEsd0tBQWtIIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJDOlxcXFxVc2Vyc1xcXFxUdXNoYXIgYmFqYWpcXFxcT25lRHJpdmVcXFxcRGVza3RvcFxcXFxkcmF3aW5nXFxcXHNyY1xcXFxhcHBcXFxcdGVzdFxcXFxwYWdlLnRzeFwiKTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5CTushar%20bajaj%5C%5COneDrive%5C%5CDesktop%5C%5Cdrawing%5C%5Csrc%5C%5Capp%5C%5Ctest%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/test/page.tsx":
/*!*******************************!*\
  !*** ./src/app/test/page.tsx ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var fabric__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! fabric */ \"(app-pages-browser)/./node_modules/fabric/dist/index.min.mjs\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\nconst Page = ()=>{\n    _s();\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Page.useEffect\": ()=>{\n            if (!canvasRef.current) return;\n            // Create a very large canvas\n            const canvas = new fabric__WEBPACK_IMPORTED_MODULE_2__.Canvas(canvasRef.current, {\n                width: window.innerWidth * 2,\n                height: window.innerHeight * 2,\n                backgroundColor: '#121212',\n                selection: true\n            });\n            canvas.isDragging = false;\n            // Center the viewport\n            canvas.setViewportTransform([\n                1,\n                0,\n                0,\n                1,\n                window.innerWidth / 2,\n                window.innerHeight / 2\n            ]);\n            // Enable panning\n            canvas.on('mouse:down', {\n                \"Page.useEffect\": (opt)=>{\n                    const evt = opt.e;\n                    if (evt instanceof MouseEvent) {\n                        if (evt.altKey === true) {\n                            canvas.isDragging = true;\n                            canvas.lastPosX = evt.clientX;\n                            canvas.lastPosY = evt.clientY;\n                        }\n                    }\n                }\n            }[\"Page.useEffect\"]);\n            canvas.on('mouse:move', {\n                \"Page.useEffect\": (opt)=>{\n                    if (canvas.isDragging) {\n                        const evt = opt.e;\n                        if (evt instanceof MouseEvent) {\n                            const vpt = canvas.viewportTransform;\n                            if (!vpt) return;\n                            var _canvas_lastPosX;\n                            // Use default values if lastPosX or lastPosY are undefined\n                            const lastPosX = (_canvas_lastPosX = canvas.lastPosX) !== null && _canvas_lastPosX !== void 0 ? _canvas_lastPosX : evt.clientX;\n                            var _canvas_lastPosY;\n                            const lastPosY = (_canvas_lastPosY = canvas.lastPosY) !== null && _canvas_lastPosY !== void 0 ? _canvas_lastPosY : evt.clientY;\n                            vpt[4] += evt.clientX - lastPosX;\n                            vpt[5] += evt.clientY - lastPosY;\n                            canvas.requestRenderAll();\n                            canvas.lastPosX = evt.clientX; // Update lastPosX\n                            canvas.lastPosY = evt.clientY; // Update lastPosY\n                        }\n                    }\n                }\n            }[\"Page.useEffect\"]);\n            canvas.on('mouse:up', {\n                \"Page.useEffect\": ()=>{\n                    canvas.isDragging = false;\n                }\n            }[\"Page.useEffect\"]);\n            // Enable zooming\n            canvas.on('mouse:wheel', {\n                \"Page.useEffect\": (opt)=>{\n                    const delta = opt.e.deltaY;\n                    let zoom = canvas.getZoom();\n                    zoom *= 0.999 ** delta;\n                    if (zoom > 20) zoom = 20;\n                    if (zoom < 0.01) zoom = 0.01;\n                    // Create a Point instance for zoomToPoint\n                    const point = new fabric__WEBPACK_IMPORTED_MODULE_2__.Point(opt.e.offsetX, opt.e.offsetY);\n                    canvas.zoomToPoint(point, zoom); // Use the Point instance\n                    opt.e.preventDefault();\n                    opt.e.stopPropagation();\n                }\n            }[\"Page.useEffect\"]);\n            // Handle window resize\n            const handleResize = {\n                \"Page.useEffect.handleResize\": ()=>{\n                    canvas.setDimensions({\n                        width: window.innerWidth * 2,\n                        height: window.innerHeight * 2\n                    });\n                }\n            }[\"Page.useEffect.handleResize\"];\n            window.addEventListener('resize', handleResize);\n            return ({\n                \"Page.useEffect\": ()=>{\n                    canvas.dispose();\n                    window.removeEventListener('resize', handleResize);\n                }\n            })[\"Page.useEffect\"];\n        }\n    }[\"Page.useEffect\"], []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex-1 bg-gray-50 p-4 overflow-auto\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"w-full h-full min-h-[300px] border-2 border-dashed border-gray-300 rounded-lg flex items-center justify-center\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n                ref: canvasRef,\n                className: \"w-full h-full\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Tushar bajaj\\\\OneDrive\\\\Desktop\\\\drawing\\\\src\\\\app\\\\test\\\\page.tsx\",\n                lineNumber: 99,\n                columnNumber: 17\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\Tushar bajaj\\\\OneDrive\\\\Desktop\\\\drawing\\\\src\\\\app\\\\test\\\\page.tsx\",\n            lineNumber: 98,\n            columnNumber: 13\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\Tushar bajaj\\\\OneDrive\\\\Desktop\\\\drawing\\\\src\\\\app\\\\test\\\\page.tsx\",\n        lineNumber: 97,\n        columnNumber: 9\n    }, undefined);\n};\n_s(Page, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = Page;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Page);\nvar _c;\n$RefreshReg$(_c, \"Page\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/test/page.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n true &&\n  (function () {\n    function getComponentNameFromType(type) {\n      if (null == type) return null;\n      if (\"function\" === typeof type)\n        return type.$$typeof === REACT_CLIENT_REFERENCE$2\n          ? null\n          : type.displayName || type.name || null;\n      if (\"string\" === typeof type) return type;\n      switch (type) {\n        case REACT_FRAGMENT_TYPE:\n          return \"Fragment\";\n        case REACT_PORTAL_TYPE:\n          return \"Portal\";\n        case REACT_PROFILER_TYPE:\n          return \"Profiler\";\n        case REACT_STRICT_MODE_TYPE:\n          return \"StrictMode\";\n        case REACT_SUSPENSE_TYPE:\n          return \"Suspense\";\n        case REACT_SUSPENSE_LIST_TYPE:\n          return \"SuspenseList\";\n      }\n      if (\"object\" === typeof type)\n        switch (\n          (\"number\" === typeof type.tag &&\n            console.error(\n              \"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"\n            ),\n          type.$$typeof)\n        ) {\n          case REACT_CONTEXT_TYPE:\n            return (type.displayName || \"Context\") + \".Provider\";\n          case REACT_CONSUMER_TYPE:\n            return (type._context.displayName || \"Context\") + \".Consumer\";\n          case REACT_FORWARD_REF_TYPE:\n            var innerType = type.render;\n            type = type.displayName;\n            type ||\n              ((type = innerType.displayName || innerType.name || \"\"),\n              (type = \"\" !== type ? \"ForwardRef(\" + type + \")\" : \"ForwardRef\"));\n            return type;\n          case REACT_MEMO_TYPE:\n            return (\n              (innerType = type.displayName || null),\n              null !== innerType\n                ? innerType\n                : getComponentNameFromType(type.type) || \"Memo\"\n            );\n          case REACT_LAZY_TYPE:\n            innerType = type._payload;\n            type = type._init;\n            try {\n              return getComponentNameFromType(type(innerType));\n            } catch (x) {}\n        }\n      return null;\n    }\n    function testStringCoercion(value) {\n      return \"\" + value;\n    }\n    function checkKeyStringCoercion(value) {\n      try {\n        testStringCoercion(value);\n        var JSCompiler_inline_result = !1;\n      } catch (e) {\n        JSCompiler_inline_result = !0;\n      }\n      if (JSCompiler_inline_result) {\n        JSCompiler_inline_result = console;\n        var JSCompiler_temp_const = JSCompiler_inline_result.error;\n        var JSCompiler_inline_result$jscomp$0 =\n          (\"function\" === typeof Symbol &&\n            Symbol.toStringTag &&\n            value[Symbol.toStringTag]) ||\n          value.constructor.name ||\n          \"Object\";\n        JSCompiler_temp_const.call(\n          JSCompiler_inline_result,\n          \"The provided key is an unsupported type %s. This value must be coerced to a string before using it here.\",\n          JSCompiler_inline_result$jscomp$0\n        );\n        return testStringCoercion(value);\n      }\n    }\n    function disabledLog() {}\n    function disableLogs() {\n      if (0 === disabledDepth) {\n        prevLog = console.log;\n        prevInfo = console.info;\n        prevWarn = console.warn;\n        prevError = console.error;\n        prevGroup = console.group;\n        prevGroupCollapsed = console.groupCollapsed;\n        prevGroupEnd = console.groupEnd;\n        var props = {\n          configurable: !0,\n          enumerable: !0,\n          value: disabledLog,\n          writable: !0\n        };\n        Object.defineProperties(console, {\n          info: props,\n          log: props,\n          warn: props,\n          error: props,\n          group: props,\n          groupCollapsed: props,\n          groupEnd: props\n        });\n      }\n      disabledDepth++;\n    }\n    function reenableLogs() {\n      disabledDepth--;\n      if (0 === disabledDepth) {\n        var props = { configurable: !0, enumerable: !0, writable: !0 };\n        Object.defineProperties(console, {\n          log: assign({}, props, { value: prevLog }),\n          info: assign({}, props, { value: prevInfo }),\n          warn: assign({}, props, { value: prevWarn }),\n          error: assign({}, props, { value: prevError }),\n          group: assign({}, props, { value: prevGroup }),\n          groupCollapsed: assign({}, props, { value: prevGroupCollapsed }),\n          groupEnd: assign({}, props, { value: prevGroupEnd })\n        });\n      }\n      0 > disabledDepth &&\n        console.error(\n          \"disabledDepth fell below zero. This is a bug in React. Please file an issue.\"\n        );\n    }\n    function describeBuiltInComponentFrame(name) {\n      if (void 0 === prefix)\n        try {\n          throw Error();\n        } catch (x) {\n          var match = x.stack.trim().match(/\\n( *(at )?)/);\n          prefix = (match && match[1]) || \"\";\n          suffix =\n            -1 < x.stack.indexOf(\"\\n    at\")\n              ? \" (<anonymous>)\"\n              : -1 < x.stack.indexOf(\"@\")\n                ? \"@unknown:0:0\"\n                : \"\";\n        }\n      return \"\\n\" + prefix + name + suffix;\n    }\n    function describeNativeComponentFrame(fn, construct) {\n      if (!fn || reentry) return \"\";\n      var frame = componentFrameCache.get(fn);\n      if (void 0 !== frame) return frame;\n      reentry = !0;\n      frame = Error.prepareStackTrace;\n      Error.prepareStackTrace = void 0;\n      var previousDispatcher = null;\n      previousDispatcher = ReactSharedInternals.H;\n      ReactSharedInternals.H = null;\n      disableLogs();\n      try {\n        var RunInRootFrame = {\n          DetermineComponentFrameRoot: function () {\n            try {\n              if (construct) {\n                var Fake = function () {\n                  throw Error();\n                };\n                Object.defineProperty(Fake.prototype, \"props\", {\n                  set: function () {\n                    throw Error();\n                  }\n                });\n                if (\"object\" === typeof Reflect && Reflect.construct) {\n                  try {\n                    Reflect.construct(Fake, []);\n                  } catch (x) {\n                    var control = x;\n                  }\n                  Reflect.construct(fn, [], Fake);\n                } else {\n                  try {\n                    Fake.call();\n                  } catch (x$0) {\n                    control = x$0;\n                  }\n                  fn.call(Fake.prototype);\n                }\n              } else {\n                try {\n                  throw Error();\n                } catch (x$1) {\n                  control = x$1;\n                }\n                (Fake = fn()) &&\n                  \"function\" === typeof Fake.catch &&\n                  Fake.catch(function () {});\n              }\n            } catch (sample) {\n              if (sample && control && \"string\" === typeof sample.stack)\n                return [sample.stack, control.stack];\n            }\n            return [null, null];\n          }\n        };\n        RunInRootFrame.DetermineComponentFrameRoot.displayName =\n          \"DetermineComponentFrameRoot\";\n        var namePropDescriptor = Object.getOwnPropertyDescriptor(\n          RunInRootFrame.DetermineComponentFrameRoot,\n          \"name\"\n        );\n        namePropDescriptor &&\n          namePropDescriptor.configurable &&\n          Object.defineProperty(\n            RunInRootFrame.DetermineComponentFrameRoot,\n            \"name\",\n            { value: \"DetermineComponentFrameRoot\" }\n          );\n        var _RunInRootFrame$Deter =\n            RunInRootFrame.DetermineComponentFrameRoot(),\n          sampleStack = _RunInRootFrame$Deter[0],\n          controlStack = _RunInRootFrame$Deter[1];\n        if (sampleStack && controlStack) {\n          var sampleLines = sampleStack.split(\"\\n\"),\n            controlLines = controlStack.split(\"\\n\");\n          for (\n            _RunInRootFrame$Deter = namePropDescriptor = 0;\n            namePropDescriptor < sampleLines.length &&\n            !sampleLines[namePropDescriptor].includes(\n              \"DetermineComponentFrameRoot\"\n            );\n\n          )\n            namePropDescriptor++;\n          for (\n            ;\n            _RunInRootFrame$Deter < controlLines.length &&\n            !controlLines[_RunInRootFrame$Deter].includes(\n              \"DetermineComponentFrameRoot\"\n            );\n\n          )\n            _RunInRootFrame$Deter++;\n          if (\n            namePropDescriptor === sampleLines.length ||\n            _RunInRootFrame$Deter === controlLines.length\n          )\n            for (\n              namePropDescriptor = sampleLines.length - 1,\n                _RunInRootFrame$Deter = controlLines.length - 1;\n              1 <= namePropDescriptor &&\n              0 <= _RunInRootFrame$Deter &&\n              sampleLines[namePropDescriptor] !==\n                controlLines[_RunInRootFrame$Deter];\n\n            )\n              _RunInRootFrame$Deter--;\n          for (\n            ;\n            1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter;\n            namePropDescriptor--, _RunInRootFrame$Deter--\n          )\n            if (\n              sampleLines[namePropDescriptor] !==\n              controlLines[_RunInRootFrame$Deter]\n            ) {\n              if (1 !== namePropDescriptor || 1 !== _RunInRootFrame$Deter) {\n                do\n                  if (\n                    (namePropDescriptor--,\n                    _RunInRootFrame$Deter--,\n                    0 > _RunInRootFrame$Deter ||\n                      sampleLines[namePropDescriptor] !==\n                        controlLines[_RunInRootFrame$Deter])\n                  ) {\n                    var _frame =\n                      \"\\n\" +\n                      sampleLines[namePropDescriptor].replace(\n                        \" at new \",\n                        \" at \"\n                      );\n                    fn.displayName &&\n                      _frame.includes(\"<anonymous>\") &&\n                      (_frame = _frame.replace(\"<anonymous>\", fn.displayName));\n                    \"function\" === typeof fn &&\n                      componentFrameCache.set(fn, _frame);\n                    return _frame;\n                  }\n                while (1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter);\n              }\n              break;\n            }\n        }\n      } finally {\n        (reentry = !1),\n          (ReactSharedInternals.H = previousDispatcher),\n          reenableLogs(),\n          (Error.prepareStackTrace = frame);\n      }\n      sampleLines = (sampleLines = fn ? fn.displayName || fn.name : \"\")\n        ? describeBuiltInComponentFrame(sampleLines)\n        : \"\";\n      \"function\" === typeof fn && componentFrameCache.set(fn, sampleLines);\n      return sampleLines;\n    }\n    function describeUnknownElementTypeFrameInDEV(type) {\n      if (null == type) return \"\";\n      if (\"function\" === typeof type) {\n        var prototype = type.prototype;\n        return describeNativeComponentFrame(\n          type,\n          !(!prototype || !prototype.isReactComponent)\n        );\n      }\n      if (\"string\" === typeof type) return describeBuiltInComponentFrame(type);\n      switch (type) {\n        case REACT_SUSPENSE_TYPE:\n          return describeBuiltInComponentFrame(\"Suspense\");\n        case REACT_SUSPENSE_LIST_TYPE:\n          return describeBuiltInComponentFrame(\"SuspenseList\");\n      }\n      if (\"object\" === typeof type)\n        switch (type.$$typeof) {\n          case REACT_FORWARD_REF_TYPE:\n            return (type = describeNativeComponentFrame(type.render, !1)), type;\n          case REACT_MEMO_TYPE:\n            return describeUnknownElementTypeFrameInDEV(type.type);\n          case REACT_LAZY_TYPE:\n            prototype = type._payload;\n            type = type._init;\n            try {\n              return describeUnknownElementTypeFrameInDEV(type(prototype));\n            } catch (x) {}\n        }\n      return \"\";\n    }\n    function getOwner() {\n      var dispatcher = ReactSharedInternals.A;\n      return null === dispatcher ? null : dispatcher.getOwner();\n    }\n    function hasValidKey(config) {\n      if (hasOwnProperty.call(config, \"key\")) {\n        var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\n        if (getter && getter.isReactWarning) return !1;\n      }\n      return void 0 !== config.key;\n    }\n    function defineKeyPropWarningGetter(props, displayName) {\n      function warnAboutAccessingKey() {\n        specialPropKeyWarningShown ||\n          ((specialPropKeyWarningShown = !0),\n          console.error(\n            \"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)\",\n            displayName\n          ));\n      }\n      warnAboutAccessingKey.isReactWarning = !0;\n      Object.defineProperty(props, \"key\", {\n        get: warnAboutAccessingKey,\n        configurable: !0\n      });\n    }\n    function elementRefGetterWithDeprecationWarning() {\n      var componentName = getComponentNameFromType(this.type);\n      didWarnAboutElementRef[componentName] ||\n        ((didWarnAboutElementRef[componentName] = !0),\n        console.error(\n          \"Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release.\"\n        ));\n      componentName = this.props.ref;\n      return void 0 !== componentName ? componentName : null;\n    }\n    function ReactElement(type, key, self, source, owner, props) {\n      self = props.ref;\n      type = {\n        $$typeof: REACT_ELEMENT_TYPE,\n        type: type,\n        key: key,\n        props: props,\n        _owner: owner\n      };\n      null !== (void 0 !== self ? self : null)\n        ? Object.defineProperty(type, \"ref\", {\n            enumerable: !1,\n            get: elementRefGetterWithDeprecationWarning\n          })\n        : Object.defineProperty(type, \"ref\", { enumerable: !1, value: null });\n      type._store = {};\n      Object.defineProperty(type._store, \"validated\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: 0\n      });\n      Object.defineProperty(type, \"_debugInfo\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: null\n      });\n      Object.freeze && (Object.freeze(type.props), Object.freeze(type));\n      return type;\n    }\n    function jsxDEVImpl(\n      type,\n      config,\n      maybeKey,\n      isStaticChildren,\n      source,\n      self\n    ) {\n      if (\n        \"string\" === typeof type ||\n        \"function\" === typeof type ||\n        type === REACT_FRAGMENT_TYPE ||\n        type === REACT_PROFILER_TYPE ||\n        type === REACT_STRICT_MODE_TYPE ||\n        type === REACT_SUSPENSE_TYPE ||\n        type === REACT_SUSPENSE_LIST_TYPE ||\n        type === REACT_OFFSCREEN_TYPE ||\n        (\"object\" === typeof type &&\n          null !== type &&\n          (type.$$typeof === REACT_LAZY_TYPE ||\n            type.$$typeof === REACT_MEMO_TYPE ||\n            type.$$typeof === REACT_CONTEXT_TYPE ||\n            type.$$typeof === REACT_CONSUMER_TYPE ||\n            type.$$typeof === REACT_FORWARD_REF_TYPE ||\n            type.$$typeof === REACT_CLIENT_REFERENCE$1 ||\n            void 0 !== type.getModuleId))\n      ) {\n        var children = config.children;\n        if (void 0 !== children)\n          if (isStaticChildren)\n            if (isArrayImpl(children)) {\n              for (\n                isStaticChildren = 0;\n                isStaticChildren < children.length;\n                isStaticChildren++\n              )\n                validateChildKeys(children[isStaticChildren], type);\n              Object.freeze && Object.freeze(children);\n            } else\n              console.error(\n                \"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\"\n              );\n          else validateChildKeys(children, type);\n      } else {\n        children = \"\";\n        if (\n          void 0 === type ||\n          (\"object\" === typeof type &&\n            null !== type &&\n            0 === Object.keys(type).length)\n        )\n          children +=\n            \" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\";\n        null === type\n          ? (isStaticChildren = \"null\")\n          : isArrayImpl(type)\n            ? (isStaticChildren = \"array\")\n            : void 0 !== type && type.$$typeof === REACT_ELEMENT_TYPE\n              ? ((isStaticChildren =\n                  \"<\" +\n                  (getComponentNameFromType(type.type) || \"Unknown\") +\n                  \" />\"),\n                (children =\n                  \" Did you accidentally export a JSX literal instead of a component?\"))\n              : (isStaticChildren = typeof type);\n        console.error(\n          \"React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s\",\n          isStaticChildren,\n          children\n        );\n      }\n      if (hasOwnProperty.call(config, \"key\")) {\n        children = getComponentNameFromType(type);\n        var keys = Object.keys(config).filter(function (k) {\n          return \"key\" !== k;\n        });\n        isStaticChildren =\n          0 < keys.length\n            ? \"{key: someKey, \" + keys.join(\": ..., \") + \": ...}\"\n            : \"{key: someKey}\";\n        didWarnAboutKeySpread[children + isStaticChildren] ||\n          ((keys =\n            0 < keys.length ? \"{\" + keys.join(\": ..., \") + \": ...}\" : \"{}\"),\n          console.error(\n            'A props object containing a \"key\" prop is being spread into JSX:\\n  let props = %s;\\n  <%s {...props} />\\nReact keys must be passed directly to JSX without using spread:\\n  let props = %s;\\n  <%s key={someKey} {...props} />',\n            isStaticChildren,\n            children,\n            keys,\n            children\n          ),\n          (didWarnAboutKeySpread[children + isStaticChildren] = !0));\n      }\n      children = null;\n      void 0 !== maybeKey &&\n        (checkKeyStringCoercion(maybeKey), (children = \"\" + maybeKey));\n      hasValidKey(config) &&\n        (checkKeyStringCoercion(config.key), (children = \"\" + config.key));\n      if (\"key\" in config) {\n        maybeKey = {};\n        for (var propName in config)\n          \"key\" !== propName && (maybeKey[propName] = config[propName]);\n      } else maybeKey = config;\n      children &&\n        defineKeyPropWarningGetter(\n          maybeKey,\n          \"function\" === typeof type\n            ? type.displayName || type.name || \"Unknown\"\n            : type\n        );\n      return ReactElement(type, children, self, source, getOwner(), maybeKey);\n    }\n    function validateChildKeys(node, parentType) {\n      if (\n        \"object\" === typeof node &&\n        node &&\n        node.$$typeof !== REACT_CLIENT_REFERENCE\n      )\n        if (isArrayImpl(node))\n          for (var i = 0; i < node.length; i++) {\n            var child = node[i];\n            isValidElement(child) && validateExplicitKey(child, parentType);\n          }\n        else if (isValidElement(node))\n          node._store && (node._store.validated = 1);\n        else if (\n          (null === node || \"object\" !== typeof node\n            ? (i = null)\n            : ((i =\n                (MAYBE_ITERATOR_SYMBOL && node[MAYBE_ITERATOR_SYMBOL]) ||\n                node[\"@@iterator\"]),\n              (i = \"function\" === typeof i ? i : null)),\n          \"function\" === typeof i &&\n            i !== node.entries &&\n            ((i = i.call(node)), i !== node))\n        )\n          for (; !(node = i.next()).done; )\n            isValidElement(node.value) &&\n              validateExplicitKey(node.value, parentType);\n    }\n    function isValidElement(object) {\n      return (\n        \"object\" === typeof object &&\n        null !== object &&\n        object.$$typeof === REACT_ELEMENT_TYPE\n      );\n    }\n    function validateExplicitKey(element, parentType) {\n      if (\n        element._store &&\n        !element._store.validated &&\n        null == element.key &&\n        ((element._store.validated = 1),\n        (parentType = getCurrentComponentErrorInfo(parentType)),\n        !ownerHasKeyUseWarning[parentType])\n      ) {\n        ownerHasKeyUseWarning[parentType] = !0;\n        var childOwner = \"\";\n        element &&\n          null != element._owner &&\n          element._owner !== getOwner() &&\n          ((childOwner = null),\n          \"number\" === typeof element._owner.tag\n            ? (childOwner = getComponentNameFromType(element._owner.type))\n            : \"string\" === typeof element._owner.name &&\n              (childOwner = element._owner.name),\n          (childOwner = \" It was passed a child from \" + childOwner + \".\"));\n        var prevGetCurrentStack = ReactSharedInternals.getCurrentStack;\n        ReactSharedInternals.getCurrentStack = function () {\n          var stack = describeUnknownElementTypeFrameInDEV(element.type);\n          prevGetCurrentStack && (stack += prevGetCurrentStack() || \"\");\n          return stack;\n        };\n        console.error(\n          'Each child in a list should have a unique \"key\" prop.%s%s See https://react.dev/link/warning-keys for more information.',\n          parentType,\n          childOwner\n        );\n        ReactSharedInternals.getCurrentStack = prevGetCurrentStack;\n      }\n    }\n    function getCurrentComponentErrorInfo(parentType) {\n      var info = \"\",\n        owner = getOwner();\n      owner &&\n        (owner = getComponentNameFromType(owner.type)) &&\n        (info = \"\\n\\nCheck the render method of `\" + owner + \"`.\");\n      info ||\n        ((parentType = getComponentNameFromType(parentType)) &&\n          (info =\n            \"\\n\\nCheck the top-level render call using <\" + parentType + \">.\"));\n      return info;\n    }\n    var React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"),\n      REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n      REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n      REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n      REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n      REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\n    Symbol.for(\"react.provider\");\n    var REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n      REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n      REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n      REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n      REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\n      REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n      REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n      REACT_OFFSCREEN_TYPE = Symbol.for(\"react.offscreen\"),\n      MAYBE_ITERATOR_SYMBOL = Symbol.iterator,\n      REACT_CLIENT_REFERENCE$2 = Symbol.for(\"react.client.reference\"),\n      ReactSharedInternals =\n        React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n      hasOwnProperty = Object.prototype.hasOwnProperty,\n      assign = Object.assign,\n      REACT_CLIENT_REFERENCE$1 = Symbol.for(\"react.client.reference\"),\n      isArrayImpl = Array.isArray,\n      disabledDepth = 0,\n      prevLog,\n      prevInfo,\n      prevWarn,\n      prevError,\n      prevGroup,\n      prevGroupCollapsed,\n      prevGroupEnd;\n    disabledLog.__reactDisabledLog = !0;\n    var prefix,\n      suffix,\n      reentry = !1;\n    var componentFrameCache = new (\n      \"function\" === typeof WeakMap ? WeakMap : Map\n    )();\n    var REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\"),\n      specialPropKeyWarningShown;\n    var didWarnAboutElementRef = {};\n    var didWarnAboutKeySpread = {},\n      ownerHasKeyUseWarning = {};\n    exports.Fragment = REACT_FRAGMENT_TYPE;\n    exports.jsxDEV = function (\n      type,\n      config,\n      maybeKey,\n      isStaticChildren,\n      source,\n      self\n    ) {\n      return jsxDEVImpl(type, config, maybeKey, isStaticChildren, source, self);\n    };\n  })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw4TEFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVHVzaGFyIGJhamFqXFxPbmVEcml2ZVxcRGVza3RvcFxcZHJhd2luZ1xcbm9kZV9tb2R1bGVzXFxuZXh0XFxkaXN0XFxjb21waWxlZFxccmVhY3RcXGpzeC1kZXYtcnVudGltZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/fabric/dist/index.min.mjs":
/*!************************************************!*\
  !*** ./node_modules/fabric/dist/index.min.mjs ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ActiveSelection: () => (/* binding */ Vo),\n/* harmony export */   BaseBrush: () => (/* binding */ Bn),\n/* harmony export */   BaseFabricObject: () => (/* binding */ Bs),\n/* harmony export */   Canvas: () => (/* binding */ xn),\n/* harmony export */   Canvas2dFilterBackend: () => (/* binding */ zo),\n/* harmony export */   CanvasDOMManager: () => (/* binding */ un),\n/* harmony export */   Circle: () => (/* binding */ Gn),\n/* harmony export */   CircleBrush: () => (/* binding */ Nn),\n/* harmony export */   ClipPathLayout: () => (/* binding */ Xo),\n/* harmony export */   Color: () => (/* binding */ Ut),\n/* harmony export */   Control: () => (/* binding */ Hs),\n/* harmony export */   Ellipse: () => (/* binding */ eo),\n/* harmony export */   FabricImage: () => (/* binding */ Qo),\n/* harmony export */   FabricObject: () => (/* binding */ yi),\n/* harmony export */   FabricText: () => (/* binding */ So),\n/* harmony export */   FitContentLayout: () => (/* binding */ Cr),\n/* harmony export */   FixedLayout: () => (/* binding */ Yo),\n/* harmony export */   Gradient: () => (/* binding */ Ln),\n/* harmony export */   Group: () => (/* binding */ Dr),\n/* harmony export */   IText: () => (/* binding */ Io),\n/* harmony export */   Image: () => (/* binding */ Qo),\n/* harmony export */   InteractiveFabricObject: () => (/* binding */ mi),\n/* harmony export */   Intersection: () => (/* binding */ Fs),\n/* harmony export */   LayoutManager: () => (/* binding */ Tr),\n/* harmony export */   LayoutStrategy: () => (/* binding */ xr),\n/* harmony export */   Line: () => (/* binding */ Zn),\n/* harmony export */   Object: () => (/* binding */ yi),\n/* harmony export */   Observable: () => (/* binding */ st),\n/* harmony export */   Path: () => (/* binding */ Wn),\n/* harmony export */   Pattern: () => (/* binding */ In),\n/* harmony export */   PatternBrush: () => (/* binding */ qn),\n/* harmony export */   PencilBrush: () => (/* binding */ Vn),\n/* harmony export */   Point: () => (/* binding */ ot),\n/* harmony export */   Polygon: () => (/* binding */ oo),\n/* harmony export */   Polyline: () => (/* binding */ no),\n/* harmony export */   Rect: () => (/* binding */ fr),\n/* harmony export */   Shadow: () => (/* binding */ us),\n/* harmony export */   SprayBrush: () => (/* binding */ Un),\n/* harmony export */   StaticCanvas: () => (/* binding */ ue),\n/* harmony export */   StaticCanvasDOMManager: () => (/* binding */ ce),\n/* harmony export */   Text: () => (/* binding */ So),\n/* harmony export */   Textbox: () => (/* binding */ Bo),\n/* harmony export */   Triangle: () => (/* binding */ $n),\n/* harmony export */   WebGLFilterBackend: () => (/* binding */ Ho),\n/* harmony export */   cache: () => (/* binding */ _),\n/* harmony export */   classRegistry: () => (/* binding */ tt),\n/* harmony export */   config: () => (/* binding */ o),\n/* harmony export */   controlsUtils: () => (/* binding */ Ta),\n/* harmony export */   createCollectionMixin: () => (/* binding */ ct),\n/* harmony export */   filters: () => (/* binding */ fh),\n/* harmony export */   getCSSRules: () => (/* binding */ oa),\n/* harmony export */   getEnv: () => (/* binding */ p),\n/* harmony export */   getFabricDocument: () => (/* binding */ m),\n/* harmony export */   getFabricWindow: () => (/* binding */ v),\n/* harmony export */   getFilterBackend: () => (/* binding */ Uo),\n/* harmony export */   iMatrix: () => (/* binding */ T),\n/* harmony export */   initFilterBackend: () => (/* binding */ No),\n/* harmony export */   isPutImageFaster: () => (/* binding */ ka),\n/* harmony export */   isWebGLPipelineState: () => (/* binding */ Oa),\n/* harmony export */   loadSVGFromString: () => (/* binding */ da),\n/* harmony export */   loadSVGFromURL: () => (/* binding */ ga),\n/* harmony export */   parseAttributes: () => (/* binding */ ur),\n/* harmony export */   parseFontDeclaration: () => (/* binding */ ar),\n/* harmony export */   parsePointsAttribute: () => (/* binding */ so),\n/* harmony export */   parseSVGDocument: () => (/* binding */ ua),\n/* harmony export */   parseStyleAttribute: () => (/* binding */ cr),\n/* harmony export */   parseTransformAttribute: () => (/* binding */ nr),\n/* harmony export */   runningAnimations: () => (/* binding */ et),\n/* harmony export */   setEnv: () => (/* binding */ f),\n/* harmony export */   setFilterBackend: () => (/* binding */ qo),\n/* harmony export */   util: () => (/* binding */ ln),\n/* harmony export */   version: () => (/* binding */ x)\n/* harmony export */ });\nfunction t(t,e,s){return(e=function(t){var e=function(t,e){if(\"object\"!=typeof t||!t)return t;var s=t[Symbol.toPrimitive];if(void 0!==s){var i=s.call(t,e||\"default\");if(\"object\"!=typeof i)return i;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===e?String:Number)(t)}(t,\"string\");return\"symbol\"==typeof e?e:e+\"\"}(e))in t?Object.defineProperty(t,e,{value:s,enumerable:!0,configurable:!0,writable:!0}):t[e]=s,t}function e(t,e){var s=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),s.push.apply(s,i)}return s}function s(s){for(var i=1;i<arguments.length;i++){var r=null!=arguments[i]?arguments[i]:{};i%2?e(Object(r),!0).forEach((function(e){t(s,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(s,Object.getOwnPropertyDescriptors(r)):e(Object(r)).forEach((function(t){Object.defineProperty(s,t,Object.getOwnPropertyDescriptor(r,t))}))}return s}function i(t,e){if(null==t)return{};var s,i,r=function(t,e){if(null==t)return{};var s={};for(var i in t)if({}.hasOwnProperty.call(t,i)){if(e.indexOf(i)>=0)continue;s[i]=t[i]}return s}(t,e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);for(i=0;i<n.length;i++)s=n[i],e.indexOf(s)>=0||{}.propertyIsEnumerable.call(t,s)&&(r[s]=t[s])}return r}function r(t,e){return e||(e=t.slice(0)),Object.freeze(Object.defineProperties(t,{raw:{value:Object.freeze(e)}}))}class n{constructor(){t(this,\"browserShadowBlurConstant\",1),t(this,\"DPI\",96),t(this,\"devicePixelRatio\",\"undefined\"!=typeof window?window.devicePixelRatio:1),t(this,\"perfLimitSizeTotal\",2097152),t(this,\"maxCacheSideLimit\",4096),t(this,\"minCacheSideLimit\",256),t(this,\"disableStyleCopyPaste\",!1),t(this,\"enableGLFiltering\",!0),t(this,\"textureSize\",4096),t(this,\"forceGLPutImageData\",!1),t(this,\"cachesBoundsOfCurve\",!1),t(this,\"fontPaths\",{}),t(this,\"NUM_FRACTION_DIGITS\",4)}}const o=new class extends n{constructor(t){super(),this.configure(t)}configure(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};Object.assign(this,t)}addFonts(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.fontPaths=s(s({},this.fontPaths),t)}removeFonts(){(arguments.length>0&&void 0!==arguments[0]?arguments[0]:[]).forEach((t=>{delete this.fontPaths[t]}))}clearFonts(){this.fontPaths={}}restoreDefaults(t){const e=new n,s=(null==t?void 0:t.reduce(((t,s)=>(t[s]=e[s],t)),{}))||e;this.configure(s)}},a=function(t){for(var e=arguments.length,s=new Array(e>1?e-1:0),i=1;i<e;i++)s[i-1]=arguments[i];return console[t](\"fabric\",...s)};class h extends Error{constructor(t,e){super(\"fabric: \".concat(t),e)}}class c extends h{constructor(t){super(\"\".concat(t,\" 'options.signal' is in 'aborted' state\"))}}class l{}class u extends l{testPrecision(t,e){const s=\"precision \".concat(e,\" float;\\nvoid main(){}\"),i=t.createShader(t.FRAGMENT_SHADER);return!!i&&(t.shaderSource(i,s),t.compileShader(i),!!t.getShaderParameter(i,t.COMPILE_STATUS))}queryWebGL(t){const e=t.getContext(\"webgl\");e&&(this.maxTextureSize=e.getParameter(e.MAX_TEXTURE_SIZE),this.GLPrecision=[\"highp\",\"mediump\",\"lowp\"].find((t=>this.testPrecision(e,t))),e.getExtension(\"WEBGL_lose_context\").loseContext(),a(\"log\",\"WebGL: max texture size \".concat(this.maxTextureSize)))}isSupported(t){return!!this.maxTextureSize&&this.maxTextureSize>=t}}const d={};let g;const f=t=>{g=t},p=()=>g||(g={document:document,window:window,isTouchSupported:\"ontouchstart\"in window||\"ontouchstart\"in document||window&&window.navigator&&window.navigator.maxTouchPoints>0,WebGLProbe:new u,dispose(){},copyPasteData:d}),m=()=>p().document,v=()=>p().window,y=()=>{var t;return Math.max(null!==(t=o.devicePixelRatio)&&void 0!==t?t:v().devicePixelRatio,1)};const _=new class{constructor(){t(this,\"charWidthsCache\",{}),t(this,\"boundsOfCurveCache\",{})}getFontCache(t){let{fontFamily:e,fontStyle:s,fontWeight:i}=t;e=e.toLowerCase(),this.charWidthsCache[e]||(this.charWidthsCache[e]={});const r=this.charWidthsCache[e],n=\"\".concat(s.toLowerCase(),\"_\").concat((i+\"\").toLowerCase());return r[n]||(r[n]={}),r[n]}clearFontCache(t){(t=(t||\"\").toLowerCase())?this.charWidthsCache[t]&&delete this.charWidthsCache[t]:this.charWidthsCache={}}limitDimsByArea(t){const{perfLimitSizeTotal:e}=o,s=Math.sqrt(e*t);return[Math.floor(s),Math.floor(e/s)]}};const x=\"6.5.4\";function C(){}const b=Math.PI/2,w=2*Math.PI,S=Math.PI/180,T=Object.freeze([1,0,0,1,0,0]),O=16,k=.4477152502,D=\"center\",M=\"left\",P=\"top\",E=\"bottom\",A=\"right\",j=\"none\",F=/\\r?\\n/,L=\"moving\",R=\"scaling\",I=\"rotating\",B=\"rotate\",X=\"skewing\",Y=\"resizing\",W=\"modifyPoly\",V=\"modifyPath\",z=\"changed\",H=\"scale\",G=\"scaleX\",N=\"scaleY\",U=\"skewX\",q=\"skewY\",K=\"fill\",J=\"stroke\",Q=\"modified\",Z=\"json\",$=\"svg\";const tt=new class{constructor(){this[Z]=new Map,this[$]=new Map}has(t){return this[Z].has(t)}getClass(t){const e=this[Z].get(t);if(!e)throw new h(\"No class registered for \".concat(t));return e}setClass(t,e){e?this[Z].set(e,t):(this[Z].set(t.type,t),this[Z].set(t.type.toLowerCase(),t))}getSVGClass(t){return this[$].get(t)}setSVGClass(t,e){this[$].set(null!=e?e:t.type.toLowerCase(),t)}};const et=new class extends Array{remove(t){const e=this.indexOf(t);e>-1&&this.splice(e,1)}cancelAll(){const t=this.splice(0);return t.forEach((t=>t.abort())),t}cancelByCanvas(t){if(!t)return[];const e=this.filter((e=>{var s;return e.target===t||\"object\"==typeof e.target&&(null===(s=e.target)||void 0===s?void 0:s.canvas)===t}));return e.forEach((t=>t.abort())),e}cancelByTarget(t){if(!t)return[];const e=this.filter((e=>e.target===t));return e.forEach((t=>t.abort())),e}};class st{constructor(){t(this,\"__eventListeners\",{})}on(t,e){if(this.__eventListeners||(this.__eventListeners={}),\"object\"==typeof t)return Object.entries(t).forEach((t=>{let[e,s]=t;this.on(e,s)})),()=>this.off(t);if(e){const s=t;return this.__eventListeners[s]||(this.__eventListeners[s]=[]),this.__eventListeners[s].push(e),()=>this.off(s,e)}return()=>!1}once(t,e){if(\"object\"==typeof t){const e=[];return Object.entries(t).forEach((t=>{let[s,i]=t;e.push(this.once(s,i))})),()=>e.forEach((t=>t()))}if(e){const s=this.on(t,(function(){for(var t=arguments.length,i=new Array(t),r=0;r<t;r++)i[r]=arguments[r];e.call(this,...i),s()}));return s}return()=>!1}_removeEventListener(t,e){if(this.__eventListeners[t])if(e){const s=this.__eventListeners[t],i=s.indexOf(e);i>-1&&s.splice(i,1)}else this.__eventListeners[t]=[]}off(t,e){if(this.__eventListeners)if(void 0===t)for(const t in this.__eventListeners)this._removeEventListener(t);else\"object\"==typeof t?Object.entries(t).forEach((t=>{let[e,s]=t;this._removeEventListener(e,s)})):this._removeEventListener(t,e)}fire(t,e){var s;if(!this.__eventListeners)return;const i=null===(s=this.__eventListeners[t])||void 0===s?void 0:s.concat();if(i)for(let t=0;t<i.length;t++)i[t].call(this,e||{})}}const it=(t,e)=>{const s=t.indexOf(e);return-1!==s&&t.splice(s,1),t},rt=t=>{if(0===t)return 1;switch(Math.abs(t)/b){case 1:case 3:return 0;case 2:return-1}return Math.cos(t)},nt=t=>{if(0===t)return 0;const e=t/b,s=Math.sign(t);switch(e){case 1:return s;case 2:return 0;case 3:return-s}return Math.sin(t)};class ot{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;\"object\"==typeof t?(this.x=t.x,this.y=t.y):(this.x=t,this.y=e)}add(t){return new ot(this.x+t.x,this.y+t.y)}addEquals(t){return this.x+=t.x,this.y+=t.y,this}scalarAdd(t){return new ot(this.x+t,this.y+t)}scalarAddEquals(t){return this.x+=t,this.y+=t,this}subtract(t){return new ot(this.x-t.x,this.y-t.y)}subtractEquals(t){return this.x-=t.x,this.y-=t.y,this}scalarSubtract(t){return new ot(this.x-t,this.y-t)}scalarSubtractEquals(t){return this.x-=t,this.y-=t,this}multiply(t){return new ot(this.x*t.x,this.y*t.y)}scalarMultiply(t){return new ot(this.x*t,this.y*t)}scalarMultiplyEquals(t){return this.x*=t,this.y*=t,this}divide(t){return new ot(this.x/t.x,this.y/t.y)}scalarDivide(t){return new ot(this.x/t,this.y/t)}scalarDivideEquals(t){return this.x/=t,this.y/=t,this}eq(t){return this.x===t.x&&this.y===t.y}lt(t){return this.x<t.x&&this.y<t.y}lte(t){return this.x<=t.x&&this.y<=t.y}gt(t){return this.x>t.x&&this.y>t.y}gte(t){return this.x>=t.x&&this.y>=t.y}lerp(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.5;return e=Math.max(Math.min(1,e),0),new ot(this.x+(t.x-this.x)*e,this.y+(t.y-this.y)*e)}distanceFrom(t){const e=this.x-t.x,s=this.y-t.y;return Math.sqrt(e*e+s*s)}midPointFrom(t){return this.lerp(t)}min(t){return new ot(Math.min(this.x,t.x),Math.min(this.y,t.y))}max(t){return new ot(Math.max(this.x,t.x),Math.max(this.y,t.y))}toString(){return\"\".concat(this.x,\",\").concat(this.y)}setXY(t,e){return this.x=t,this.y=e,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setFromPoint(t){return this.x=t.x,this.y=t.y,this}swap(t){const e=this.x,s=this.y;this.x=t.x,this.y=t.y,t.x=e,t.y=s}clone(){return new ot(this.x,this.y)}rotate(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:at;const s=nt(t),i=rt(t),r=this.subtract(e);return new ot(r.x*i-r.y*s,r.x*s+r.y*i).add(e)}transform(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return new ot(t[0]*this.x+t[2]*this.y+(e?0:t[4]),t[1]*this.x+t[3]*this.y+(e?0:t[5]))}}const at=new ot(0,0),ht=t=>!!t&&Array.isArray(t._objects);function ct(e){class s extends e{constructor(){super(...arguments),t(this,\"_objects\",[])}_onObjectAdded(t){}_onObjectRemoved(t){}_onStackOrderChanged(t){}add(){for(var t=arguments.length,e=new Array(t),s=0;s<t;s++)e[s]=arguments[s];const i=this._objects.push(...e);return e.forEach((t=>this._onObjectAdded(t))),i}insertAt(t){for(var e=arguments.length,s=new Array(e>1?e-1:0),i=1;i<e;i++)s[i-1]=arguments[i];return this._objects.splice(t,0,...s),s.forEach((t=>this._onObjectAdded(t))),this._objects.length}remove(){const t=this._objects,e=[];for(var s=arguments.length,i=new Array(s),r=0;r<s;r++)i[r]=arguments[r];return i.forEach((s=>{const i=t.indexOf(s);-1!==i&&(t.splice(i,1),e.push(s),this._onObjectRemoved(s))})),e}forEachObject(t){this.getObjects().forEach(((e,s,i)=>t(e,s,i)))}getObjects(){for(var t=arguments.length,e=new Array(t),s=0;s<t;s++)e[s]=arguments[s];return 0===e.length?[...this._objects]:this._objects.filter((t=>t.isType(...e)))}item(t){return this._objects[t]}isEmpty(){return 0===this._objects.length}size(){return this._objects.length}contains(t,e){return!!this._objects.includes(t)||!!e&&this._objects.some((e=>e instanceof s&&e.contains(t,!0)))}complexity(){return this._objects.reduce(((t,e)=>t+=e.complexity?e.complexity():0),0)}sendObjectToBack(t){return!(!t||t===this._objects[0])&&(it(this._objects,t),this._objects.unshift(t),this._onStackOrderChanged(t),!0)}bringObjectToFront(t){return!(!t||t===this._objects[this._objects.length-1])&&(it(this._objects,t),this._objects.push(t),this._onStackOrderChanged(t),!0)}sendObjectBackwards(t,e){if(!t)return!1;const s=this._objects.indexOf(t);if(0!==s){const i=this.findNewLowerIndex(t,s,e);return it(this._objects,t),this._objects.splice(i,0,t),this._onStackOrderChanged(t),!0}return!1}bringObjectForward(t,e){if(!t)return!1;const s=this._objects.indexOf(t);if(s!==this._objects.length-1){const i=this.findNewUpperIndex(t,s,e);return it(this._objects,t),this._objects.splice(i,0,t),this._onStackOrderChanged(t),!0}return!1}moveObjectTo(t,e){return t!==this._objects[e]&&(it(this._objects,t),this._objects.splice(e,0,t),this._onStackOrderChanged(t),!0)}findNewLowerIndex(t,e,s){let i;if(s){i=e;for(let s=e-1;s>=0;--s)if(t.isOverlapping(this._objects[s])){i=s;break}}else i=e-1;return i}findNewUpperIndex(t,e,s){let i;if(s){i=e;for(let s=e+1;s<this._objects.length;++s)if(t.isOverlapping(this._objects[s])){i=s;break}}else i=e+1;return i}collectObjects(t){let{left:e,top:s,width:i,height:r}=t,{includeIntersecting:n=!0}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const o=[],a=new ot(e,s),h=a.add(new ot(i,r));for(let t=this._objects.length-1;t>=0;t--){const e=this._objects[t];e.selectable&&e.visible&&(n&&e.intersectsWithRect(a,h)||e.isContainedWithinRect(a,h)||n&&e.containsPoint(a)||n&&e.containsPoint(h))&&o.push(e)}return o}}return s}class lt extends st{_setOptions(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};for(const e in t)this.set(e,t[e])}_setObject(t){for(const e in t)this._set(e,t[e])}set(t,e){return\"object\"==typeof t?this._setObject(t):this._set(t,e),this}_set(t,e){this[t]=e}toggle(t){const e=this.get(t);return\"boolean\"==typeof e&&this.set(t,!e),this}get(t){return this[t]}}function ut(t){return v().requestAnimationFrame(t)}function dt(t){return v().cancelAnimationFrame(t)}let gt=0;const ft=()=>gt++,pt=()=>{const t=m().createElement(\"canvas\");if(!t||void 0===t.getContext)throw new h(\"Failed to create `canvas` element\");return t},mt=()=>m().createElement(\"img\"),vt=t=>{const e=pt();return e.width=t.width,e.height=t.height,e},yt=(t,e,s)=>t.toDataURL(\"image/\".concat(e),s),_t=t=>t*S,xt=t=>t/S,Ct=t=>t.every(((t,e)=>t===T[e])),bt=(t,e,s)=>new ot(t).transform(e,s),wt=t=>{const e=1/(t[0]*t[3]-t[1]*t[2]),s=[e*t[3],-e*t[1],-e*t[2],e*t[0],0,0],{x:i,y:r}=new ot(t[4],t[5]).transform(s,!0);return s[4]=-i,s[5]=-r,s},St=(t,e,s)=>[t[0]*e[0]+t[2]*e[1],t[1]*e[0]+t[3]*e[1],t[0]*e[2]+t[2]*e[3],t[1]*e[2]+t[3]*e[3],s?0:t[0]*e[4]+t[2]*e[5]+t[4],s?0:t[1]*e[4]+t[3]*e[5]+t[5]],Tt=(t,e)=>t.reduceRight(((t,s)=>s&&t?St(s,t,e):s||t),void 0)||T.concat(),Ot=t=>{let[e,s]=t;return Math.atan2(s,e)},kt=t=>{const e=Ot(t),s=Math.pow(t[0],2)+Math.pow(t[1],2),i=Math.sqrt(s),r=(t[0]*t[3]-t[2]*t[1])/i,n=Math.atan2(t[0]*t[2]+t[1]*t[3],s);return{angle:xt(e),scaleX:i,scaleY:r,skewX:xt(n),skewY:0,translateX:t[4]||0,translateY:t[5]||0}},Dt=function(t){return[1,0,0,1,t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:0]};function Mt(){let{angle:t=0}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{x:e=0,y:s=0}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const i=_t(t),r=rt(i),n=nt(i);return[r,n,-n,r,e?e-(r*e-n*s):0,s?s-(n*e+r*s):0]}const Pt=function(t){return[t,0,0,arguments.length>1&&void 0!==arguments[1]?arguments[1]:t,0,0]},Et=t=>Math.tan(_t(t)),At=t=>[1,0,Et(t),1,0,0],jt=t=>[1,Et(t),0,1,0,0],Ft=t=>{let{scaleX:e=1,scaleY:s=1,flipX:i=!1,flipY:r=!1,skewX:n=0,skewY:o=0}=t,a=Pt(i?-e:e,r?-s:s);return n&&(a=St(a,At(n),!0)),o&&(a=St(a,jt(o),!0)),a},Lt=t=>{const{translateX:e=0,translateY:s=0,angle:i=0}=t;let r=Dt(e,s);i&&(r=St(r,Mt({angle:i})));const n=Ft(t);return Ct(n)||(r=St(r,n)),r},Rt=function(t){let{signal:e,crossOrigin:s=null}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return new Promise((function(i,r){if(e&&e.aborted)return r(new c(\"loadImage\"));const n=mt();let o;e&&(o=function(t){n.src=\"\",r(t)},e.addEventListener(\"abort\",o,{once:!0}));const a=function(){n.onload=n.onerror=null,o&&(null==e||e.removeEventListener(\"abort\",o)),i(n)};t?(n.onload=a,n.onerror=function(){o&&(null==e||e.removeEventListener(\"abort\",o)),r(new h(\"Error loading \".concat(n.src)))},s&&(n.crossOrigin=s),n.src=t):a()}))},It=function(t){let{signal:e,reviver:s=C}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return new Promise(((i,r)=>{const n=[];e&&e.addEventListener(\"abort\",r,{once:!0}),Promise.all(t.map((t=>tt.getClass(t.type).fromObject(t,{signal:e}).then((e=>(s(t,e),n.push(e),e)))))).then(i).catch((t=>{n.forEach((t=>{t.dispose&&t.dispose()})),r(t)})).finally((()=>{e&&e.removeEventListener(\"abort\",r)}))}))},Bt=function(t){let{signal:e}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return new Promise(((s,i)=>{const r=[];e&&e.addEventListener(\"abort\",i,{once:!0});const n=Object.values(t).map((t=>t&&t.type&&tt.has(t.type)?It([t],{signal:e}).then((t=>{let[e]=t;return r.push(e),e})):t)),o=Object.keys(t);Promise.all(n).then((t=>t.reduce(((t,e,s)=>(t[o[s]]=e,t)),{}))).then(s).catch((t=>{r.forEach((t=>{t.dispose&&t.dispose()})),i(t)})).finally((()=>{e&&e.removeEventListener(\"abort\",i)}))}))},Xt=function(t){return(arguments.length>1&&void 0!==arguments[1]?arguments[1]:[]).reduce(((e,s)=>(s in t&&(e[s]=t[s]),e)),{})},Yt=(t,e)=>Object.keys(t).reduce(((s,i)=>(e(t[i],i,t)&&(s[i]=t[i]),s)),{}),Wt={aliceblue:\"#F0F8FF\",antiquewhite:\"#FAEBD7\",aqua:\"#0FF\",aquamarine:\"#7FFFD4\",azure:\"#F0FFFF\",beige:\"#F5F5DC\",bisque:\"#FFE4C4\",black:\"#000\",blanchedalmond:\"#FFEBCD\",blue:\"#00F\",blueviolet:\"#8A2BE2\",brown:\"#A52A2A\",burlywood:\"#DEB887\",cadetblue:\"#5F9EA0\",chartreuse:\"#7FFF00\",chocolate:\"#D2691E\",coral:\"#FF7F50\",cornflowerblue:\"#6495ED\",cornsilk:\"#FFF8DC\",crimson:\"#DC143C\",cyan:\"#0FF\",darkblue:\"#00008B\",darkcyan:\"#008B8B\",darkgoldenrod:\"#B8860B\",darkgray:\"#A9A9A9\",darkgrey:\"#A9A9A9\",darkgreen:\"#006400\",darkkhaki:\"#BDB76B\",darkmagenta:\"#8B008B\",darkolivegreen:\"#556B2F\",darkorange:\"#FF8C00\",darkorchid:\"#9932CC\",darkred:\"#8B0000\",darksalmon:\"#E9967A\",darkseagreen:\"#8FBC8F\",darkslateblue:\"#483D8B\",darkslategray:\"#2F4F4F\",darkslategrey:\"#2F4F4F\",darkturquoise:\"#00CED1\",darkviolet:\"#9400D3\",deeppink:\"#FF1493\",deepskyblue:\"#00BFFF\",dimgray:\"#696969\",dimgrey:\"#696969\",dodgerblue:\"#1E90FF\",firebrick:\"#B22222\",floralwhite:\"#FFFAF0\",forestgreen:\"#228B22\",fuchsia:\"#F0F\",gainsboro:\"#DCDCDC\",ghostwhite:\"#F8F8FF\",gold:\"#FFD700\",goldenrod:\"#DAA520\",gray:\"#808080\",grey:\"#808080\",green:\"#008000\",greenyellow:\"#ADFF2F\",honeydew:\"#F0FFF0\",hotpink:\"#FF69B4\",indianred:\"#CD5C5C\",indigo:\"#4B0082\",ivory:\"#FFFFF0\",khaki:\"#F0E68C\",lavender:\"#E6E6FA\",lavenderblush:\"#FFF0F5\",lawngreen:\"#7CFC00\",lemonchiffon:\"#FFFACD\",lightblue:\"#ADD8E6\",lightcoral:\"#F08080\",lightcyan:\"#E0FFFF\",lightgoldenrodyellow:\"#FAFAD2\",lightgray:\"#D3D3D3\",lightgrey:\"#D3D3D3\",lightgreen:\"#90EE90\",lightpink:\"#FFB6C1\",lightsalmon:\"#FFA07A\",lightseagreen:\"#20B2AA\",lightskyblue:\"#87CEFA\",lightslategray:\"#789\",lightslategrey:\"#789\",lightsteelblue:\"#B0C4DE\",lightyellow:\"#FFFFE0\",lime:\"#0F0\",limegreen:\"#32CD32\",linen:\"#FAF0E6\",magenta:\"#F0F\",maroon:\"#800000\",mediumaquamarine:\"#66CDAA\",mediumblue:\"#0000CD\",mediumorchid:\"#BA55D3\",mediumpurple:\"#9370DB\",mediumseagreen:\"#3CB371\",mediumslateblue:\"#7B68EE\",mediumspringgreen:\"#00FA9A\",mediumturquoise:\"#48D1CC\",mediumvioletred:\"#C71585\",midnightblue:\"#191970\",mintcream:\"#F5FFFA\",mistyrose:\"#FFE4E1\",moccasin:\"#FFE4B5\",navajowhite:\"#FFDEAD\",navy:\"#000080\",oldlace:\"#FDF5E6\",olive:\"#808000\",olivedrab:\"#6B8E23\",orange:\"#FFA500\",orangered:\"#FF4500\",orchid:\"#DA70D6\",palegoldenrod:\"#EEE8AA\",palegreen:\"#98FB98\",paleturquoise:\"#AFEEEE\",palevioletred:\"#DB7093\",papayawhip:\"#FFEFD5\",peachpuff:\"#FFDAB9\",peru:\"#CD853F\",pink:\"#FFC0CB\",plum:\"#DDA0DD\",powderblue:\"#B0E0E6\",purple:\"#800080\",rebeccapurple:\"#639\",red:\"#F00\",rosybrown:\"#BC8F8F\",royalblue:\"#4169E1\",saddlebrown:\"#8B4513\",salmon:\"#FA8072\",sandybrown:\"#F4A460\",seagreen:\"#2E8B57\",seashell:\"#FFF5EE\",sienna:\"#A0522D\",silver:\"#C0C0C0\",skyblue:\"#87CEEB\",slateblue:\"#6A5ACD\",slategray:\"#708090\",slategrey:\"#708090\",snow:\"#FFFAFA\",springgreen:\"#00FF7F\",steelblue:\"#4682B4\",tan:\"#D2B48C\",teal:\"#008080\",thistle:\"#D8BFD8\",tomato:\"#FF6347\",turquoise:\"#40E0D0\",violet:\"#EE82EE\",wheat:\"#F5DEB3\",white:\"#FFF\",whitesmoke:\"#F5F5F5\",yellow:\"#FF0\",yellowgreen:\"#9ACD32\"},Vt=(t,e,s)=>(s<0&&(s+=1),s>1&&(s-=1),s<1/6?t+6*(e-t)*s:s<.5?e:s<2/3?t+(e-t)*(2/3-s)*6:t),zt=(t,e,s,i)=>{t/=255,e/=255,s/=255;const r=Math.max(t,e,s),n=Math.min(t,e,s);let o,a;const h=(r+n)/2;if(r===n)o=a=0;else{const i=r-n;switch(a=h>.5?i/(2-r-n):i/(r+n),r){case t:o=(e-s)/i+(e<s?6:0);break;case e:o=(s-t)/i+2;break;case s:o=(t-e)/i+4}o/=6}return[Math.round(360*o),Math.round(100*a),Math.round(100*h),i]},Ht=function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"1\";return parseFloat(t)/(t.endsWith(\"%\")?100:1)},Gt=t=>Math.min(Math.round(t),255).toString(16).toUpperCase().padStart(2,\"0\"),Nt=t=>{let[e,s,i,r=1]=t;const n=Math.round(.3*e+.59*s+.11*i);return[n,n,n,r]};class Ut{constructor(e){if(t(this,\"isUnrecognised\",!1),e)if(e instanceof Ut)this.setSource([...e._source]);else if(Array.isArray(e)){const[t,s,i,r=1]=e;this.setSource([t,s,i,r])}else this.setSource(this._tryParsingColor(e));else this.setSource([0,0,0,1])}_tryParsingColor(t){return(t=t.toLowerCase())in Wt&&(t=Wt[t]),\"transparent\"===t?[255,255,255,0]:Ut.sourceFromHex(t)||Ut.sourceFromRgb(t)||Ut.sourceFromHsl(t)||(this.isUnrecognised=!0)&&[0,0,0,1]}getSource(){return this._source}setSource(t){this._source=t}toRgb(){const[t,e,s]=this.getSource();return\"rgb(\".concat(t,\",\").concat(e,\",\").concat(s,\")\")}toRgba(){return\"rgba(\".concat(this.getSource().join(\",\"),\")\")}toHsl(){const[t,e,s]=zt(...this.getSource());return\"hsl(\".concat(t,\",\").concat(e,\"%,\").concat(s,\"%)\")}toHsla(){const[t,e,s,i]=zt(...this.getSource());return\"hsla(\".concat(t,\",\").concat(e,\"%,\").concat(s,\"%,\").concat(i,\")\")}toHex(){return this.toHexa().slice(0,6)}toHexa(){const[t,e,s,i]=this.getSource();return\"\".concat(Gt(t)).concat(Gt(e)).concat(Gt(s)).concat(Gt(Math.round(255*i)))}getAlpha(){return this.getSource()[3]}setAlpha(t){return this._source[3]=t,this}toGrayscale(){return this.setSource(Nt(this.getSource())),this}toBlackWhite(t){const[e,,,s]=Nt(this.getSource()),i=e<(t||127)?0:255;return this.setSource([i,i,i,s]),this}overlayWith(t){t instanceof Ut||(t=new Ut(t));const e=this.getSource(),s=t.getSource(),[i,r,n]=e.map(((t,e)=>Math.round(.5*t+.5*s[e])));return this.setSource([i,r,n,e[3]]),this}static fromRgb(t){return Ut.fromRgba(t)}static fromRgba(t){return new Ut(Ut.sourceFromRgb(t))}static sourceFromRgb(t){const e=t.match(/^rgba?\\(\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*[\\s|,]\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*[\\s|,]\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*(?:\\s*[,/]\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*)?\\)$/i);if(e){const[t,s,i]=e.slice(1,4).map((t=>{const e=parseFloat(t);return t.endsWith(\"%\")?Math.round(2.55*e):e}));return[t,s,i,Ht(e[4])]}}static fromHsl(t){return Ut.fromHsla(t)}static fromHsla(t){return new Ut(Ut.sourceFromHsl(t))}static sourceFromHsl(t){const e=t.match(/^hsla?\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?(?:deg|turn|rad)?)\\s*[\\s|,]\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*[\\s|,]\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*(?:\\s*[,/]\\s*(\\d*(?:\\.\\d+)?%?)\\s*)?\\)$/i);if(!e)return;const s=(Ut.parseAngletoDegrees(e[1])%360+360)%360/360,i=parseFloat(e[2])/100,r=parseFloat(e[3])/100;let n,o,a;if(0===i)n=o=a=r;else{const t=r<=.5?r*(i+1):r+i-r*i,e=2*r-t;n=Vt(e,t,s+1/3),o=Vt(e,t,s),a=Vt(e,t,s-1/3)}return[Math.round(255*n),Math.round(255*o),Math.round(255*a),Ht(e[4])]}static fromHex(t){return new Ut(Ut.sourceFromHex(t))}static sourceFromHex(t){if(t.match(/^#?(([0-9a-f]){3,4}|([0-9a-f]{2}){3,4})$/i)){const e=t.slice(t.indexOf(\"#\")+1);let s;s=e.length<=4?e.split(\"\").map((t=>t+t)):e.match(/.{2}/g);const[i,r,n,o=255]=s.map((t=>parseInt(t,16)));return[i,r,n,o/255]}}static parseAngletoDegrees(t){const e=t.toLowerCase(),s=parseFloat(e);return e.includes(\"rad\")?xt(s):e.includes(\"turn\")?360*s:s}}const qt=(t,e)=>parseFloat(Number(t).toFixed(e)),Kt=function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:O;const s=/\\D{0,2}$/.exec(t),i=parseFloat(t),r=o.DPI;switch(null==s?void 0:s[0]){case\"mm\":return i*r/25.4;case\"cm\":return i*r/2.54;case\"in\":return i*r;case\"pt\":return i*r/72;case\"pc\":return i*r/72*12;case\"em\":return i*e;default:return i}},Jt=t=>{const[e,s]=t.trim().split(\" \"),[i,r]=(n=e)&&n!==j?[n.slice(1,4),n.slice(5,8)]:n===j?[n,n]:[\"Mid\",\"Mid\"];var n;return{meetOrSlice:s||\"meet\",alignX:i,alignY:r}},Qt=t=>\"matrix(\"+t.map((t=>qt(t,o.NUM_FRACTION_DIGITS))).join(\" \")+\")\",Zt=function(t,e){let s,i,r=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(e)if(e.toLive)s=\"url(#SVGID_\".concat(e.id,\")\");else{const t=new Ut(e),r=t.getAlpha();s=t.toRgb(),1!==r&&(i=r.toString())}else s=\"none\";return r?\"\".concat(t,\": \").concat(s,\"; \").concat(i?\"\".concat(t,\"-opacity: \").concat(i,\"; \"):\"\"):\"\".concat(t,'=\"').concat(s,'\" ').concat(i?\"\".concat(t,'-opacity=\"').concat(i,'\" '):\"\")},$t=t=>!!t&&void 0!==t.toLive,te=t=>!!t&&\"function\"==typeof t.toObject,ee=t=>!!t&&void 0!==t.offsetX&&\"source\"in t,se=t=>!!t&&\"multiSelectionStacking\"in t;function ie(t){const e=t&&re(t);let s=0,i=0;if(!t||!e)return{left:s,top:i};let r=t;const n=e.documentElement,o=e.body||{scrollLeft:0,scrollTop:0};for(;r&&(r.parentNode||r.host)&&(r=r.parentNode||r.host,r===e?(s=o.scrollLeft||n.scrollLeft||0,i=o.scrollTop||n.scrollTop||0):(s+=r.scrollLeft||0,i+=r.scrollTop||0),1!==r.nodeType||\"fixed\"!==r.style.position););return{left:s,top:i}}const re=t=>t.ownerDocument||null,ne=t=>{var e;return(null===(e=t.ownerDocument)||void 0===e?void 0:e.defaultView)||null},oe=function(t,e,s){let{width:i,height:r}=s,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;t.width=i,t.height=r,n>1&&(t.setAttribute(\"width\",(i*n).toString()),t.setAttribute(\"height\",(r*n).toString()),e.scale(n,n))},ae=(t,e)=>{let{width:s,height:i}=e;s&&(t.style.width=\"number\"==typeof s?\"\".concat(s,\"px\"):s),i&&(t.style.height=\"number\"==typeof i?\"\".concat(i,\"px\"):i)};function he(t){return void 0!==t.onselectstart&&(t.onselectstart=()=>!1),t.style.userSelect=j,t}class ce{constructor(e){t(this,\"_originalCanvasStyle\",void 0),t(this,\"lower\",void 0);const s=this.createLowerCanvas(e);this.lower={el:s,ctx:s.getContext(\"2d\")}}createLowerCanvas(t){const e=(s=t)&&void 0!==s.getContext?t:t&&m().getElementById(t)||pt();var s;if(e.hasAttribute(\"data-fabric\"))throw new h(\"Trying to initialize a canvas that has already been initialized. Did you forget to dispose the canvas?\");return this._originalCanvasStyle=e.style.cssText,e.setAttribute(\"data-fabric\",\"main\"),e.classList.add(\"lower-canvas\"),e}cleanupDOM(t){let{width:e,height:s}=t;const{el:i}=this.lower;i.classList.remove(\"lower-canvas\"),i.removeAttribute(\"data-fabric\"),i.setAttribute(\"width\",\"\".concat(e)),i.setAttribute(\"height\",\"\".concat(s)),i.style.cssText=this._originalCanvasStyle||\"\",this._originalCanvasStyle=void 0}setDimensions(t,e){const{el:s,ctx:i}=this.lower;oe(s,i,t,e)}setCSSDimensions(t){ae(this.lower.el,t)}calcOffset(){return function(t){var e;const s=t&&re(t),i={left:0,top:0};if(!s)return i;const r=(null===(e=ne(t))||void 0===e?void 0:e.getComputedStyle(t,null))||{};i.left+=parseInt(r.borderLeftWidth,10)||0,i.top+=parseInt(r.borderTopWidth,10)||0,i.left+=parseInt(r.paddingLeft,10)||0,i.top+=parseInt(r.paddingTop,10)||0;let n={left:0,top:0};const o=s.documentElement;void 0!==t.getBoundingClientRect&&(n=t.getBoundingClientRect());const a=ie(t);return{left:n.left+a.left-(o.clientLeft||0)+i.left,top:n.top+a.top-(o.clientTop||0)+i.top}}(this.lower.el)}dispose(){p().dispose(this.lower.el),delete this.lower}}const le={backgroundVpt:!0,backgroundColor:\"\",overlayVpt:!0,overlayColor:\"\",includeDefaultValues:!0,svgViewportTransformation:!0,renderOnAddRemove:!0,skipOffscreen:!0,enableRetinaScaling:!0,imageSmoothingEnabled:!0,controlsAboveOverlay:!1,allowTouchScrolling:!1,viewportTransform:[...T]};class ue extends(ct(lt)){get lowerCanvasEl(){var t;return null===(t=this.elements.lower)||void 0===t?void 0:t.el}get contextContainer(){var t;return null===(t=this.elements.lower)||void 0===t?void 0:t.ctx}static getDefaults(){return ue.ownDefaults}constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};super(),Object.assign(this,this.constructor.getDefaults()),this.set(e),this.initElements(t),this._setDimensionsImpl({width:this.width||this.elements.lower.el.width||0,height:this.height||this.elements.lower.el.height||0}),this.skipControlsDrawing=!1,this.viewportTransform=[...this.viewportTransform],this.calcViewportBoundaries()}initElements(t){this.elements=new ce(t)}add(){const t=super.add(...arguments);return arguments.length>0&&this.renderOnAddRemove&&this.requestRenderAll(),t}insertAt(t){for(var e=arguments.length,s=new Array(e>1?e-1:0),i=1;i<e;i++)s[i-1]=arguments[i];const r=super.insertAt(t,...s);return s.length>0&&this.renderOnAddRemove&&this.requestRenderAll(),r}remove(){const t=super.remove(...arguments);return t.length>0&&this.renderOnAddRemove&&this.requestRenderAll(),t}_onObjectAdded(t){t.canvas&&t.canvas!==this&&(a(\"warn\",\"Canvas is trying to add an object that belongs to a different canvas.\\nResulting to default behavior: removing object from previous canvas and adding to new canvas\"),t.canvas.remove(t)),t._set(\"canvas\",this),t.setCoords(),this.fire(\"object:added\",{target:t}),t.fire(\"added\",{target:this})}_onObjectRemoved(t){t._set(\"canvas\",void 0),this.fire(\"object:removed\",{target:t}),t.fire(\"removed\",{target:this})}_onStackOrderChanged(){this.renderOnAddRemove&&this.requestRenderAll()}getRetinaScaling(){return this.enableRetinaScaling?y():1}calcOffset(){return this._offset=this.elements.calcOffset()}getWidth(){return this.width}getHeight(){return this.height}setWidth(t,e){return this.setDimensions({width:t},e)}setHeight(t,e){return this.setDimensions({height:t},e)}_setDimensionsImpl(t){let{cssOnly:e=!1,backstoreOnly:i=!1}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!e){const e=s({width:this.width,height:this.height},t);this.elements.setDimensions(e,this.getRetinaScaling()),this.hasLostContext=!0,this.width=e.width,this.height=e.height}i||this.elements.setCSSDimensions(t),this.calcOffset()}setDimensions(t,e){this._setDimensionsImpl(t,e),e&&e.cssOnly||this.requestRenderAll()}getZoom(){return this.viewportTransform[0]}setViewportTransform(t){this.viewportTransform=t,this.calcViewportBoundaries(),this.renderOnAddRemove&&this.requestRenderAll()}zoomToPoint(t,e){const s=t,i=[...this.viewportTransform],r=bt(t,wt(i));i[0]=e,i[3]=e;const n=bt(r,i);i[4]+=s.x-n.x,i[5]+=s.y-n.y,this.setViewportTransform(i)}setZoom(t){this.zoomToPoint(new ot(0,0),t)}absolutePan(t){const e=[...this.viewportTransform];return e[4]=-t.x,e[5]=-t.y,this.setViewportTransform(e)}relativePan(t){return this.absolutePan(new ot(-t.x-this.viewportTransform[4],-t.y-this.viewportTransform[5]))}getElement(){return this.elements.lower.el}clearContext(t){t.clearRect(0,0,this.width,this.height)}getContext(){return this.elements.lower.ctx}clear(){this.remove(...this.getObjects()),this.backgroundImage=void 0,this.overlayImage=void 0,this.backgroundColor=\"\",this.overlayColor=\"\",this.clearContext(this.getContext()),this.fire(\"canvas:cleared\"),this.renderOnAddRemove&&this.requestRenderAll()}renderAll(){this.cancelRequestedRender(),this.destroyed||this.renderCanvas(this.getContext(),this._objects)}renderAndReset(){this.nextRenderHandle=0,this.renderAll()}requestRenderAll(){this.nextRenderHandle||this.disposed||this.destroyed||(this.nextRenderHandle=ut((()=>this.renderAndReset())))}calcViewportBoundaries(){const t=this.width,e=this.height,s=wt(this.viewportTransform),i=bt({x:0,y:0},s),r=bt({x:t,y:e},s),n=i.min(r),o=i.max(r);return this.vptCoords={tl:n,tr:new ot(o.x,n.y),bl:new ot(n.x,o.y),br:o}}cancelRequestedRender(){this.nextRenderHandle&&(dt(this.nextRenderHandle),this.nextRenderHandle=0)}drawControls(t){}renderCanvas(t,e){if(this.destroyed)return;const s=this.viewportTransform,i=this.clipPath;this.calcViewportBoundaries(),this.clearContext(t),t.imageSmoothingEnabled=this.imageSmoothingEnabled,t.patternQuality=\"best\",this.fire(\"before:render\",{ctx:t}),this._renderBackground(t),t.save(),t.transform(s[0],s[1],s[2],s[3],s[4],s[5]),this._renderObjects(t,e),t.restore(),this.controlsAboveOverlay||this.skipControlsDrawing||this.drawControls(t),i&&(i._set(\"canvas\",this),i.shouldCache(),i._transformDone=!0,i.renderCache({forClipping:!0}),this.drawClipPathOnCanvas(t,i)),this._renderOverlay(t),this.controlsAboveOverlay&&!this.skipControlsDrawing&&this.drawControls(t),this.fire(\"after:render\",{ctx:t}),this.__cleanupTask&&(this.__cleanupTask(),this.__cleanupTask=void 0)}drawClipPathOnCanvas(t,e){const s=this.viewportTransform;t.save(),t.transform(...s),t.globalCompositeOperation=\"destination-in\",e.transform(t),t.scale(1/e.zoomX,1/e.zoomY),t.drawImage(e._cacheCanvas,-e.cacheTranslationX,-e.cacheTranslationY),t.restore()}_renderObjects(t,e){for(let s=0,i=e.length;s<i;++s)e[s]&&e[s].render(t)}_renderBackgroundOrOverlay(t,e){const s=this[\"\".concat(e,\"Color\")],i=this[\"\".concat(e,\"Image\")],r=this.viewportTransform,n=this[\"\".concat(e,\"Vpt\")];if(!s&&!i)return;const o=$t(s);if(s){if(t.save(),t.beginPath(),t.moveTo(0,0),t.lineTo(this.width,0),t.lineTo(this.width,this.height),t.lineTo(0,this.height),t.closePath(),t.fillStyle=o?s.toLive(t):s,n&&t.transform(...r),o){t.transform(1,0,0,1,s.offsetX||0,s.offsetY||0);const e=s.gradientTransform||s.patternTransform;e&&t.transform(...e)}t.fill(),t.restore()}if(i){t.save();const{skipOffscreen:e}=this;this.skipOffscreen=n,n&&t.transform(...r),i.render(t),this.skipOffscreen=e,t.restore()}}_renderBackground(t){this._renderBackgroundOrOverlay(t,\"background\")}_renderOverlay(t){this._renderBackgroundOrOverlay(t,\"overlay\")}getCenter(){return{top:this.height/2,left:this.width/2}}getCenterPoint(){return new ot(this.width/2,this.height/2)}centerObjectH(t){return this._centerObject(t,new ot(this.getCenterPoint().x,t.getCenterPoint().y))}centerObjectV(t){return this._centerObject(t,new ot(t.getCenterPoint().x,this.getCenterPoint().y))}centerObject(t){return this._centerObject(t,this.getCenterPoint())}viewportCenterObject(t){return this._centerObject(t,this.getVpCenter())}viewportCenterObjectH(t){return this._centerObject(t,new ot(this.getVpCenter().x,t.getCenterPoint().y))}viewportCenterObjectV(t){return this._centerObject(t,new ot(t.getCenterPoint().x,this.getVpCenter().y))}getVpCenter(){return bt(this.getCenterPoint(),wt(this.viewportTransform))}_centerObject(t,e){t.setXY(e,D,D),t.setCoords(),this.renderOnAddRemove&&this.requestRenderAll()}toDatalessJSON(t){return this.toDatalessObject(t)}toObject(t){return this._toObjectMethod(\"toObject\",t)}toJSON(){return this.toObject()}toDatalessObject(t){return this._toObjectMethod(\"toDatalessObject\",t)}_toObjectMethod(t,e){const i=this.clipPath,r=i&&!i.excludeFromExport?this._toObject(i,t,e):null;return s(s(s({version:x},Xt(this,e)),{},{objects:this._objects.filter((t=>!t.excludeFromExport)).map((s=>this._toObject(s,t,e)))},this.__serializeBgOverlay(t,e)),r?{clipPath:r}:null)}_toObject(t,e,s){let i;this.includeDefaultValues||(i=t.includeDefaultValues,t.includeDefaultValues=!1);const r=t[e](s);return this.includeDefaultValues||(t.includeDefaultValues=!!i),r}__serializeBgOverlay(t,e){const s={},i=this.backgroundImage,r=this.overlayImage,n=this.backgroundColor,o=this.overlayColor;return $t(n)?n.excludeFromExport||(s.background=n.toObject(e)):n&&(s.background=n),$t(o)?o.excludeFromExport||(s.overlay=o.toObject(e)):o&&(s.overlay=o),i&&!i.excludeFromExport&&(s.backgroundImage=this._toObject(i,t,e)),r&&!r.excludeFromExport&&(s.overlayImage=this._toObject(r,t,e)),s}toSVG(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=arguments.length>1?arguments[1]:void 0;t.reviver=e;const s=[];return this._setSVGPreamble(s,t),this._setSVGHeader(s,t),this.clipPath&&s.push('<g clip-path=\"url(#'.concat(this.clipPath.clipPathId,')\" >\\n')),this._setSVGBgOverlayColor(s,\"background\"),this._setSVGBgOverlayImage(s,\"backgroundImage\",e),this._setSVGObjects(s,e),this.clipPath&&s.push(\"</g>\\n\"),this._setSVGBgOverlayColor(s,\"overlay\"),this._setSVGBgOverlayImage(s,\"overlayImage\",e),s.push(\"</svg>\"),s.join(\"\")}_setSVGPreamble(t,e){e.suppressPreamble||t.push('<?xml version=\"1.0\" encoding=\"',e.encoding||\"UTF-8\",'\" standalone=\"no\" ?>\\n','<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ','\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n')}_setSVGHeader(t,e){const s=e.width||\"\".concat(this.width),i=e.height||\"\".concat(this.height),r=o.NUM_FRACTION_DIGITS,n=e.viewBox;let a;if(n)a='viewBox=\"'.concat(n.x,\" \").concat(n.y,\" \").concat(n.width,\" \").concat(n.height,'\" ');else if(this.svgViewportTransformation){const t=this.viewportTransform;a='viewBox=\"'.concat(qt(-t[4]/t[0],r),\" \").concat(qt(-t[5]/t[3],r),\" \").concat(qt(this.width/t[0],r),\" \").concat(qt(this.height/t[3],r),'\" ')}else a='viewBox=\"0 0 '.concat(this.width,\" \").concat(this.height,'\" ');t.push(\"<svg \",'xmlns=\"http://www.w3.org/2000/svg\" ','xmlns:xlink=\"http://www.w3.org/1999/xlink\" ','version=\"1.1\" ','width=\"',s,'\" ','height=\"',i,'\" ',a,'xml:space=\"preserve\">\\n',\"<desc>Created with Fabric.js \",x,\"</desc>\\n\",\"<defs>\\n\",this.createSVGFontFacesMarkup(),this.createSVGRefElementsMarkup(),this.createSVGClipPathMarkup(e),\"</defs>\\n\")}createSVGClipPathMarkup(t){const e=this.clipPath;return e?(e.clipPathId=\"CLIPPATH_\".concat(ft()),'<clipPath id=\"'.concat(e.clipPathId,'\" >\\n').concat(e.toClipPathSVG(t.reviver),\"</clipPath>\\n\")):\"\"}createSVGRefElementsMarkup(){return[\"background\",\"overlay\"].map((t=>{const e=this[\"\".concat(t,\"Color\")];if($t(e)){const s=this[\"\".concat(t,\"Vpt\")],i=this.viewportTransform,r={isType:()=>!1,width:this.width/(s?i[0]:1),height:this.height/(s?i[3]:1)};return e.toSVG(r,{additionalTransform:s?Qt(i):\"\"})}})).join(\"\")}createSVGFontFacesMarkup(){const t=[],e={},s=o.fontPaths;this._objects.forEach((function e(s){t.push(s),ht(s)&&s._objects.forEach(e)})),t.forEach((t=>{if(!(i=t)||\"function\"!=typeof i._renderText)return;var i;const{styles:r,fontFamily:n}=t;!e[n]&&s[n]&&(e[n]=!0,r&&Object.values(r).forEach((t=>{Object.values(t).forEach((t=>{let{fontFamily:i=\"\"}=t;!e[i]&&s[i]&&(e[i]=!0)}))})))}));const i=Object.keys(e).map((t=>\"\\t\\t@font-face {\\n\\t\\t\\tfont-family: '\".concat(t,\"';\\n\\t\\t\\tsrc: url('\").concat(s[t],\"');\\n\\t\\t}\\n\"))).join(\"\");return i?'\\t<style type=\"text/css\"><![CDATA[\\n'.concat(i,\"]]></style>\\n\"):\"\"}_setSVGObjects(t,e){this.forEachObject((s=>{s.excludeFromExport||this._setSVGObject(t,s,e)}))}_setSVGObject(t,e,s){t.push(e.toSVG(s))}_setSVGBgOverlayImage(t,e,s){const i=this[e];i&&!i.excludeFromExport&&i.toSVG&&t.push(i.toSVG(s))}_setSVGBgOverlayColor(t,e){const s=this[\"\".concat(e,\"Color\")];if(s)if($t(s)){const i=s.repeat||\"\",r=this.width,n=this.height,o=this[\"\".concat(e,\"Vpt\")]?Qt(wt(this.viewportTransform)):\"\";t.push('<rect transform=\"'.concat(o,\" translate(\").concat(r/2,\",\").concat(n/2,')\" x=\"').concat(s.offsetX-r/2,'\" y=\"').concat(s.offsetY-n/2,'\" width=\"').concat(\"repeat-y\"!==i&&\"no-repeat\"!==i||!ee(s)?r:s.source.width,'\" height=\"').concat(\"repeat-x\"!==i&&\"no-repeat\"!==i||!ee(s)?n:s.source.height,'\" fill=\"url(#SVGID_').concat(s.id,')\"></rect>\\n'))}else t.push('<rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" ','fill=\"',s,'\"',\"></rect>\\n\")}loadFromJSON(t,e){let{signal:s}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!t)return Promise.reject(new h(\"`json` is undefined\"));const i=\"string\"==typeof t?JSON.parse(t):t,{objects:r=[],backgroundImage:n,background:o,overlayImage:a,overlay:c,clipPath:l}=i,u=this.renderOnAddRemove;return this.renderOnAddRemove=!1,Promise.all([It(r,{reviver:e,signal:s}),Bt({backgroundImage:n,backgroundColor:o,overlayImage:a,overlayColor:c,clipPath:l},{signal:s})]).then((t=>{let[e,s]=t;return this.clear(),this.add(...e),this.set(i),this.set(s),this.renderOnAddRemove=u,this}))}clone(t){const e=this.toObject(t);return this.cloneWithoutData().loadFromJSON(e)}cloneWithoutData(){const t=vt(this);return new this.constructor(t)}toDataURL(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{format:e=\"png\",quality:s=1,multiplier:i=1,enableRetinaScaling:r=!1}=t,n=i*(r?this.getRetinaScaling():1);return yt(this.toCanvasElement(n,t),e,s)}toCanvasElement(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,{width:e,height:s,left:i,top:r,filter:n}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const o=(e||this.width)*t,a=(s||this.height)*t,h=this.getZoom(),c=this.width,l=this.height,u=this.skipControlsDrawing,d=h*t,g=this.viewportTransform,f=[d,0,0,d,(g[4]-(i||0))*t,(g[5]-(r||0))*t],p=this.enableRetinaScaling,m=vt({width:o,height:a}),v=n?this._objects.filter((t=>n(t))):this._objects;return this.enableRetinaScaling=!1,this.viewportTransform=f,this.width=o,this.height=a,this.skipControlsDrawing=!0,this.calcViewportBoundaries(),this.renderCanvas(m.getContext(\"2d\"),v),this.viewportTransform=g,this.width=c,this.height=l,this.calcViewportBoundaries(),this.enableRetinaScaling=p,this.skipControlsDrawing=u,m}dispose(){return!this.disposed&&this.elements.cleanupDOM({width:this.width,height:this.height}),et.cancelByCanvas(this),this.disposed=!0,new Promise(((t,e)=>{const s=()=>{this.destroy(),t(!0)};s.kill=e,this.__cleanupTask&&this.__cleanupTask.kill(\"aborted\"),this.destroyed?t(!1):this.nextRenderHandle?this.__cleanupTask=s:s()}))}destroy(){this.destroyed=!0,this.cancelRequestedRender(),this.forEachObject((t=>t.dispose())),this._objects=[],this.backgroundImage&&this.backgroundImage.dispose(),this.backgroundImage=void 0,this.overlayImage&&this.overlayImage.dispose(),this.overlayImage=void 0,this.elements.dispose()}toString(){return\"#<Canvas (\".concat(this.complexity(),\"): { objects: \").concat(this._objects.length,\" }>\")}}t(ue,\"ownDefaults\",le);const de=[\"touchstart\",\"touchmove\",\"touchend\"];const ge=t=>{const e=ie(t.target),s=function(t){const e=t.changedTouches;return e&&e[0]?e[0]:t}(t);return new ot(s.clientX+e.left,s.clientY+e.top)},fe=t=>de.includes(t.type)||\"touch\"===t.pointerType,pe=t=>{t.preventDefault(),t.stopPropagation()},me=t=>{let e=0,s=0,i=0,r=0;for(let n=0,o=t.length;n<o;n++){const{x:o,y:a}=t[n];(o>i||!n)&&(i=o),(o<e||!n)&&(e=o),(a>r||!n)&&(r=a),(a<s||!n)&&(s=a)}return{left:e,top:s,width:i-e,height:r-s}},ve=[\"translateX\",\"translateY\",\"scaleX\",\"scaleY\"],ye=(t,e)=>_e(t,St(e,t.calcOwnMatrix())),_e=(t,e)=>{const s=kt(e),{translateX:r,translateY:n,scaleX:o,scaleY:a}=s,h=i(s,ve),c=new ot(r,n);t.flipX=!1,t.flipY=!1,Object.assign(t,h),t.set({scaleX:o,scaleY:a}),t.setPositionByOrigin(c,D,D)},xe=t=>{t.scaleX=1,t.scaleY=1,t.skewX=0,t.skewY=0,t.flipX=!1,t.flipY=!1,t.rotate(0)},Ce=t=>({scaleX:t.scaleX,scaleY:t.scaleY,skewX:t.skewX,skewY:t.skewY,angle:t.angle,left:t.left,flipX:t.flipX,flipY:t.flipY,top:t.top}),be=(t,e,s)=>{const i=t/2,r=e/2,n=[new ot(-i,-r),new ot(i,-r),new ot(-i,r),new ot(i,r)].map((t=>t.transform(s))),o=me(n);return new ot(o.width,o.height)},we=function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:T;return St(wt(arguments.length>1&&void 0!==arguments[1]?arguments[1]:T),t)},Se=function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:T,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:T;return t.transform(we(e,s))},Te=function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:T,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:T;return t.transform(we(e,s),!0)},Oe=(t,e,s)=>{const i=we(e,s);return _e(t,St(i,t.calcOwnMatrix())),i},ke=(t,e)=>{var i;const{transform:{target:r}}=e;null===(i=r.canvas)||void 0===i||i.fire(\"object:\".concat(t),s(s({},e),{},{target:r})),r.fire(t,e)},De={left:-.5,top:-.5,center:0,bottom:.5,right:.5},Me=t=>\"string\"==typeof t?De[t]:t-.5,Pe=\"not-allowed\";function Ee(t){return Me(t.originX)===Me(D)&&Me(t.originY)===Me(D)}function Ae(t){return.5-Me(t)}const je=(t,e)=>t[e],Fe=(t,e,s,i)=>({e:t,transform:e,pointer:new ot(s,i)});function Le(t,e){const s=t.getTotalAngle()+xt(Math.atan2(e.y,e.x))+360;return Math.round(s%360/45)}function Re(t,e,s,i,r){var n;let{target:o,corner:a}=t;const h=o.controls[a],c=(null===(n=o.canvas)||void 0===n?void 0:n.getZoom())||1,l=o.padding/c,u=function(t,e,s,i){const r=t.getRelativeCenterPoint(),n=void 0!==s&&void 0!==i?t.translateToGivenOrigin(r,D,D,s,i):new ot(t.left,t.top);return(t.angle?e.rotate(-_t(t.angle),r):e).subtract(n)}(o,new ot(i,r),e,s);return u.x>=l&&(u.x-=l),u.x<=-l&&(u.x+=l),u.y>=l&&(u.y-=l),u.y<=l&&(u.y+=l),u.x-=h.offsetX,u.y-=h.offsetY,u}const Ie=(t,e,s,i)=>{const{target:r,offsetX:n,offsetY:o}=e,a=s-n,h=i-o,c=!je(r,\"lockMovementX\")&&r.left!==a,l=!je(r,\"lockMovementY\")&&r.top!==h;return c&&r.set(M,a),l&&r.set(P,h),(c||l)&&ke(L,Fe(t,e,s,i)),c||l};class Be{getSvgStyles(t){const e=this.fillRule?this.fillRule:\"nonzero\",s=this.strokeWidth?this.strokeWidth:\"0\",i=this.strokeDashArray?this.strokeDashArray.join(\" \"):j,r=this.strokeDashOffset?this.strokeDashOffset:\"0\",n=this.strokeLineCap?this.strokeLineCap:\"butt\",o=this.strokeLineJoin?this.strokeLineJoin:\"miter\",a=this.strokeMiterLimit?this.strokeMiterLimit:\"4\",h=void 0!==this.opacity?this.opacity:\"1\",c=this.visible?\"\":\" visibility: hidden;\",l=t?\"\":this.getSvgFilter(),u=Zt(K,this.fill);return[Zt(J,this.stroke),\"stroke-width: \",s,\"; \",\"stroke-dasharray: \",i,\"; \",\"stroke-linecap: \",n,\"; \",\"stroke-dashoffset: \",r,\"; \",\"stroke-linejoin: \",o,\"; \",\"stroke-miterlimit: \",a,\"; \",u,\"fill-rule: \",e,\"; \",\"opacity: \",h,\";\",l,c].join(\"\")}getSvgFilter(){return this.shadow?\"filter: url(#SVGID_\".concat(this.shadow.id,\");\"):\"\"}getSvgCommons(){return[this.id?'id=\"'.concat(this.id,'\" '):\"\",this.clipPath?'clip-path=\"url(#'.concat(this.clipPath.clipPathId,')\" '):\"\"].join(\"\")}getSvgTransform(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"\";const s=t?this.calcTransformMatrix():this.calcOwnMatrix(),i='transform=\"'.concat(Qt(s));return\"\".concat(i).concat(e,'\" ')}_toSVG(t){return[\"\"]}toSVG(t){return this._createBaseSVGMarkup(this._toSVG(t),{reviver:t})}toClipPathSVG(t){return\"\\t\"+this._createBaseClipPathSVGMarkup(this._toSVG(t),{reviver:t})}_createBaseClipPathSVGMarkup(t){let{reviver:e,additionalTransform:s=\"\"}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const i=[this.getSvgTransform(!0,s),this.getSvgCommons()].join(\"\"),r=t.indexOf(\"COMMON_PARTS\");return t[r]=i,e?e(t.join(\"\")):t.join(\"\")}_createBaseSVGMarkup(t){let{noStyle:e,reviver:s,withShadow:i,additionalTransform:r}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=e?\"\":'style=\"'.concat(this.getSvgStyles(),'\" '),o=i?'style=\"'.concat(this.getSvgFilter(),'\" '):\"\",a=this.clipPath,h=this.strokeUniform?'vector-effect=\"non-scaling-stroke\" ':\"\",c=a&&a.absolutePositioned,l=this.stroke,u=this.fill,d=this.shadow,g=[],f=t.indexOf(\"COMMON_PARTS\");let p;a&&(a.clipPathId=\"CLIPPATH_\".concat(ft()),p='<clipPath id=\"'.concat(a.clipPathId,'\" >\\n').concat(a.toClipPathSVG(s),\"</clipPath>\\n\")),c&&g.push(\"<g \",o,this.getSvgCommons(),\" >\\n\"),g.push(\"<g \",this.getSvgTransform(!1),c?\"\":o+this.getSvgCommons(),\" >\\n\");const m=[n,h,e?\"\":this.addPaintOrder(),\" \",r?'transform=\"'.concat(r,'\" '):\"\"].join(\"\");return t[f]=m,$t(u)&&g.push(u.toSVG(this)),$t(l)&&g.push(l.toSVG(this)),d&&g.push(d.toSVG(this)),a&&g.push(p),g.push(t.join(\"\")),g.push(\"</g>\\n\"),c&&g.push(\"</g>\\n\"),s?s(g.join(\"\")):g.join(\"\")}addPaintOrder(){return this.paintFirst!==K?' paint-order=\"'.concat(this.paintFirst,'\" '):\"\"}}function Xe(t){return new RegExp(\"^(\"+t.join(\"|\")+\")\\\\b\",\"i\")}var Ye;const We=String.raw(Ye||(Ye=r([\"(?:[-+]?(?:d*.d+|d+.?)(?:[eE][-+]?d+)?)\"],[\"(?:[-+]?(?:\\\\d*\\\\.\\\\d+|\\\\d+\\\\.?)(?:[eE][-+]?\\\\d+)?)\"]))),Ve=\"http://www.w3.org/2000/svg\",ze=new RegExp(\"(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(\"+We+\"(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|\"+We+\"))?\\\\s+(.*)\"),He={cx:M,x:M,r:\"radius\",cy:P,y:P,display:\"visible\",visibility:\"visible\",transform:\"transformMatrix\",\"fill-opacity\":\"fillOpacity\",\"fill-rule\":\"fillRule\",\"font-family\":\"fontFamily\",\"font-size\":\"fontSize\",\"font-style\":\"fontStyle\",\"font-weight\":\"fontWeight\",\"letter-spacing\":\"charSpacing\",\"paint-order\":\"paintFirst\",\"stroke-dasharray\":\"strokeDashArray\",\"stroke-dashoffset\":\"strokeDashOffset\",\"stroke-linecap\":\"strokeLineCap\",\"stroke-linejoin\":\"strokeLineJoin\",\"stroke-miterlimit\":\"strokeMiterLimit\",\"stroke-opacity\":\"strokeOpacity\",\"stroke-width\":\"strokeWidth\",\"text-decoration\":\"textDecoration\",\"text-anchor\":\"textAnchor\",opacity:\"opacity\",\"clip-path\":\"clipPath\",\"clip-rule\":\"clipRule\",\"vector-effect\":\"strokeUniform\",\"image-rendering\":\"imageSmoothing\"},Ge=\"font-size\",Ne=\"clip-path\",Ue=Xe([\"path\",\"circle\",\"polygon\",\"polyline\",\"ellipse\",\"rect\",\"line\",\"image\",\"text\"]),qe=Xe([\"symbol\",\"image\",\"marker\",\"pattern\",\"view\",\"svg\"]),Ke=Xe([\"symbol\",\"g\",\"a\",\"svg\",\"clipPath\",\"defs\"]),Je=new RegExp(\"^\\\\s*(\"+We+\"+)\\\\s*,?\\\\s*(\"+We+\"+)\\\\s*,?\\\\s*(\"+We+\"+)\\\\s*,?\\\\s*(\"+We+\"+)\\\\s*$\"),Qe=new ot(1,0),Ze=new ot,$e=(t,e)=>t.rotate(e),ts=(t,e)=>new ot(e).subtract(t),es=t=>t.distanceFrom(Ze),ss=(t,e)=>Math.atan2(os(t,e),as(t,e)),is=t=>ss(Qe,t),rs=t=>t.eq(Ze)?t:t.scalarDivide(es(t)),ns=function(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];return rs(new ot(-t.y,t.x).scalarMultiply(e?1:-1))},os=(t,e)=>t.x*e.y-t.y*e.x,as=(t,e)=>t.x*e.x+t.y*e.y,hs=(t,e,s)=>{if(t.eq(e)||t.eq(s))return!0;const i=os(e,s),r=os(e,t),n=os(s,t);return i>=0?r>=0&&n<=0:!(r<=0&&n>=0)},cs=\"(-?\\\\d+(?:\\\\.\\\\d*)?(?:px)?(?:\\\\s?|$))?\",ls=new RegExp(\"(?:\\\\s|^)\"+cs+cs+\"(\"+We+\"?(?:px)?)?(?:\\\\s?|$)(?:$|\\\\s)\");class us{constructor(t){const e=\"string\"==typeof t?us.parseShadow(t):t;Object.assign(this,us.ownDefaults,e),this.id=ft()}static parseShadow(t){const e=t.trim(),[,s=0,i=0,r=0]=(ls.exec(e)||[]).map((t=>parseFloat(t)||0));return{color:(e.replace(ls,\"\")||\"rgb(0,0,0)\").trim(),offsetX:s,offsetY:i,blur:r}}toString(){return[this.offsetX,this.offsetY,this.blur,this.color].join(\"px \")}toSVG(t){const e=$e(new ot(this.offsetX,this.offsetY),_t(-t.angle)),s=new Ut(this.color);let i=40,r=40;return t.width&&t.height&&(i=100*qt((Math.abs(e.x)+this.blur)/t.width,o.NUM_FRACTION_DIGITS)+20,r=100*qt((Math.abs(e.y)+this.blur)/t.height,o.NUM_FRACTION_DIGITS)+20),t.flipX&&(e.x*=-1),t.flipY&&(e.y*=-1),'<filter id=\"SVGID_'.concat(this.id,'\" y=\"-').concat(r,'%\" height=\"').concat(100+2*r,'%\" x=\"-').concat(i,'%\" width=\"').concat(100+2*i,'%\" >\\n\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"').concat(qt(this.blur?this.blur/2:0,o.NUM_FRACTION_DIGITS),'\"></feGaussianBlur>\\n\\t<feOffset dx=\"').concat(qt(e.x,o.NUM_FRACTION_DIGITS),'\" dy=\"').concat(qt(e.y,o.NUM_FRACTION_DIGITS),'\" result=\"oBlur\" ></feOffset>\\n\\t<feFlood flood-color=\"').concat(s.toRgb(),'\" flood-opacity=\"').concat(s.getAlpha(),'\"/>\\n\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n\\t<feMerge>\\n\\t\\t<feMergeNode></feMergeNode>\\n\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n\\t</feMerge>\\n</filter>\\n')}toObject(){const t={color:this.color,blur:this.blur,offsetX:this.offsetX,offsetY:this.offsetY,affectStroke:this.affectStroke,nonScaling:this.nonScaling,type:this.constructor.type},e=us.ownDefaults;return this.includeDefaultValues?t:Yt(t,((t,s)=>t!==e[s]))}static async fromObject(t){return new this(t)}}t(us,\"ownDefaults\",{color:\"rgb(0,0,0)\",blur:0,offsetX:0,offsetY:0,affectStroke:!1,includeDefaultValues:!0,nonScaling:!1}),t(us,\"type\",\"shadow\"),tt.setClass(us,\"shadow\");const ds=(t,e,s)=>Math.max(t,Math.min(e,s)),gs=[P,M,G,N,\"flipX\",\"flipY\",\"originX\",\"originY\",\"angle\",\"opacity\",\"globalCompositeOperation\",\"shadow\",\"visible\",U,q],fs=[K,J,\"strokeWidth\",\"strokeDashArray\",\"width\",\"height\",\"paintFirst\",\"strokeUniform\",\"strokeLineCap\",\"strokeDashOffset\",\"strokeLineJoin\",\"strokeMiterLimit\",\"backgroundColor\",\"clipPath\"],ps={top:0,left:0,width:0,height:0,angle:0,flipX:!1,flipY:!1,scaleX:1,scaleY:1,minScaleLimit:0,skewX:0,skewY:0,originX:M,originY:P,strokeWidth:1,strokeUniform:!1,padding:0,opacity:1,paintFirst:K,fill:\"rgb(0,0,0)\",fillRule:\"nonzero\",stroke:null,strokeDashArray:null,strokeDashOffset:0,strokeLineCap:\"butt\",strokeLineJoin:\"miter\",strokeMiterLimit:4,globalCompositeOperation:\"source-over\",backgroundColor:\"\",shadow:null,visible:!0,includeDefaultValues:!0,excludeFromExport:!1,objectCaching:!0,clipPath:void 0,inverted:!1,absolutePositioned:!1,centeredRotation:!0,centeredScaling:!1,dirty:!0},ms=(t,e,s,i)=>(t<Math.abs(e)?(t=e,i=s/4):i=0===e&&0===t?s/w*Math.asin(1):s/w*Math.asin(e/t),{a:t,c:e,p:s,s:i}),vs=(t,e,s,i,r)=>t*Math.pow(2,10*(i-=1))*Math.sin((i*r-e)*w/s),ys=(t,e,s,i)=>-s*Math.cos(t/i*b)+s+e,_s=(t,e,s,i)=>(t/=i)<1/2.75?s*(7.5625*t*t)+e:t<2/2.75?s*(7.5625*(t-=1.5/2.75)*t+.75)+e:t<2.5/2.75?s*(7.5625*(t-=2.25/2.75)*t+.9375)+e:s*(7.5625*(t-=2.625/2.75)*t+.984375)+e,xs=(t,e,s,i)=>s-_s(i-t,0,s,i)+e;var Cs=Object.freeze({__proto__:null,defaultEasing:ys,easeInBack:function(t,e,s,i){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1.70158;return s*(t/=i)*t*((r+1)*t-r)+e},easeInBounce:xs,easeInCirc:(t,e,s,i)=>-s*(Math.sqrt(1-(t/=i)*t)-1)+e,easeInCubic:(t,e,s,i)=>s*(t/i)**3+e,easeInElastic:(t,e,s,i)=>{const r=s;let n=0;if(0===t)return e;if(1===(t/=i))return e+s;n||(n=.3*i);const{a:o,s:a,p:h}=ms(r,s,n,1.70158);return-vs(o,a,h,t,i)+e},easeInExpo:(t,e,s,i)=>0===t?e:s*2**(10*(t/i-1))+e,easeInOutBack:function(t,e,s,i){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1.70158;return(t/=i/2)<1?s/2*(t*t*((1+(r*=1.525))*t-r))+e:s/2*((t-=2)*t*((1+(r*=1.525))*t+r)+2)+e},easeInOutBounce:(t,e,s,i)=>t<i/2?.5*xs(2*t,0,s,i)+e:.5*_s(2*t-i,0,s,i)+.5*s+e,easeInOutCirc:(t,e,s,i)=>(t/=i/2)<1?-s/2*(Math.sqrt(1-t**2)-1)+e:s/2*(Math.sqrt(1-(t-=2)*t)+1)+e,easeInOutCubic:(t,e,s,i)=>(t/=i/2)<1?s/2*t**3+e:s/2*((t-2)**3+2)+e,easeInOutElastic:(t,e,s,i)=>{const r=s;let n=0;if(0===t)return e;if(2===(t/=i/2))return e+s;n||(n=i*(.3*1.5));const{a:o,s:a,p:h,c:c}=ms(r,s,n,1.70158);return t<1?-.5*vs(o,a,h,t,i)+e:o*Math.pow(2,-10*(t-=1))*Math.sin((t*i-a)*w/h)*.5+c+e},easeInOutExpo:(t,e,s,i)=>0===t?e:t===i?e+s:(t/=i/2)<1?s/2*2**(10*(t-1))+e:s/2*-(2**(-10*--t)+2)+e,easeInOutQuad:(t,e,s,i)=>(t/=i/2)<1?s/2*t**2+e:-s/2*(--t*(t-2)-1)+e,easeInOutQuart:(t,e,s,i)=>(t/=i/2)<1?s/2*t**4+e:-s/2*((t-=2)*t**3-2)+e,easeInOutQuint:(t,e,s,i)=>(t/=i/2)<1?s/2*t**5+e:s/2*((t-2)**5+2)+e,easeInOutSine:(t,e,s,i)=>-s/2*(Math.cos(Math.PI*t/i)-1)+e,easeInQuad:(t,e,s,i)=>s*(t/=i)*t+e,easeInQuart:(t,e,s,i)=>s*(t/=i)*t**3+e,easeInQuint:(t,e,s,i)=>s*(t/i)**5+e,easeInSine:(t,e,s,i)=>-s*Math.cos(t/i*b)+s+e,easeOutBack:function(t,e,s,i){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1.70158;return s*((t=t/i-1)*t*((r+1)*t+r)+1)+e},easeOutBounce:_s,easeOutCirc:(t,e,s,i)=>s*Math.sqrt(1-(t=t/i-1)*t)+e,easeOutCubic:(t,e,s,i)=>s*((t/i-1)**3+1)+e,easeOutElastic:(t,e,s,i)=>{const r=s;let n=0;if(0===t)return e;if(1===(t/=i))return e+s;n||(n=.3*i);const{a:o,s:a,p:h,c:c}=ms(r,s,n,1.70158);return o*2**(-10*t)*Math.sin((t*i-a)*w/h)+c+e},easeOutExpo:(t,e,s,i)=>t===i?e+s:s*-(2**(-10*t/i)+1)+e,easeOutQuad:(t,e,s,i)=>-s*(t/=i)*(t-2)+e,easeOutQuart:(t,e,s,i)=>-s*((t=t/i-1)*t**3-1)+e,easeOutQuint:(t,e,s,i)=>s*((t/i-1)**5+1)+e,easeOutSine:(t,e,s,i)=>s*Math.sin(t/i*b)+e});const bs=()=>!1;class ws{constructor(e){let{startValue:s,byValue:i,duration:r=500,delay:n=0,easing:o=ys,onStart:a=C,onChange:h=C,onComplete:c=C,abort:l=bs,target:u}=e;t(this,\"_state\",\"pending\"),t(this,\"durationProgress\",0),t(this,\"valueProgress\",0),this.tick=this.tick.bind(this),this.duration=r,this.delay=n,this.easing=o,this._onStart=a,this._onChange=h,this._onComplete=c,this._abort=l,this.target=u,this.startValue=s,this.byValue=i,this.value=this.startValue,this.endValue=Object.freeze(this.calculate(this.duration).value)}get state(){return this._state}isDone(){return\"aborted\"===this._state||\"completed\"===this._state}start(){const t=t=>{\"pending\"===this._state&&(this.startTime=t||+new Date,this._state=\"running\",this._onStart(),this.tick(this.startTime))};this.register(),this.delay>0?setTimeout((()=>ut(t)),this.delay):ut(t)}tick(t){const e=(t||+new Date)-this.startTime,s=Math.min(e,this.duration);this.durationProgress=s/this.duration;const{value:i,valueProgress:r}=this.calculate(s);this.value=Object.freeze(i),this.valueProgress=r,\"aborted\"!==this._state&&(this._abort(this.value,this.valueProgress,this.durationProgress)?(this._state=\"aborted\",this.unregister()):e>=this.duration?(this.durationProgress=this.valueProgress=1,this._onChange(this.endValue,this.valueProgress,this.durationProgress),this._state=\"completed\",this._onComplete(this.endValue,this.valueProgress,this.durationProgress),this.unregister()):(this._onChange(this.value,this.valueProgress,this.durationProgress),ut(this.tick)))}register(){et.push(this)}unregister(){et.remove(this)}abort(){this._state=\"aborted\",this.unregister()}}const Ss=[\"startValue\",\"endValue\"];class Ts extends ws{constructor(t){let{startValue:e=0,endValue:r=100}=t;super(s(s({},i(t,Ss)),{},{startValue:e,byValue:r-e}))}calculate(t){const e=this.easing(t,this.startValue,this.byValue,this.duration);return{value:e,valueProgress:Math.abs((e-this.startValue)/this.byValue)}}}const Os=[\"startValue\",\"endValue\"];class ks extends ws{constructor(t){let{startValue:e=[0],endValue:r=[100]}=t;super(s(s({},i(t,Os)),{},{startValue:e,byValue:r.map(((t,s)=>t-e[s]))}))}calculate(t){const e=this.startValue.map(((e,s)=>this.easing(t,e,this.byValue[s],this.duration,s)));return{value:e,valueProgress:Math.abs((e[0]-this.startValue[0])/this.byValue[0])}}}const Ds=[\"startValue\",\"endValue\",\"easing\",\"onChange\",\"onComplete\",\"abort\"],Ms=(t,e,s,i)=>e+s*(1-Math.cos(t/i*b)),Ps=t=>t&&((e,s,i)=>t(new Ut(e).toRgba(),s,i));class Es extends ws{constructor(t){let{startValue:e,endValue:r,easing:n=Ms,onChange:o,onComplete:a,abort:h}=t,c=i(t,Ds);const l=new Ut(e).getSource(),u=new Ut(r).getSource();super(s(s({},c),{},{startValue:l,byValue:u.map(((t,e)=>t-l[e])),easing:n,onChange:Ps(o),onComplete:Ps(a),abort:Ps(h)}))}calculate(t){const[e,s,i,r]=this.startValue.map(((e,s)=>this.easing(t,e,this.byValue[s],this.duration,s))),n=[...[e,s,i].map(Math.round),ds(0,r,1)];return{value:n,valueProgress:n.map(((t,e)=>0!==this.byValue[e]?Math.abs((t-this.startValue[e])/this.byValue[e]):0)).find((t=>0!==t))||0}}}function As(t){const e=(t=>Array.isArray(t.startValue)||Array.isArray(t.endValue))(t)?new ks(t):new Ts(t);return e.start(),e}function js(t){const e=new Es(t);return e.start(),e}class Fs{constructor(t){this.status=t,this.points=[]}includes(t){return this.points.some((e=>e.eq(t)))}append(){for(var t=arguments.length,e=new Array(t),s=0;s<t;s++)e[s]=arguments[s];return this.points=this.points.concat(e.filter((t=>!this.includes(t)))),this}static isPointContained(t,e,s){let i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(e.eq(s))return t.eq(e);if(e.x===s.x)return t.x===e.x&&(i||t.y>=Math.min(e.y,s.y)&&t.y<=Math.max(e.y,s.y));if(e.y===s.y)return t.y===e.y&&(i||t.x>=Math.min(e.x,s.x)&&t.x<=Math.max(e.x,s.x));{const r=ts(e,s),n=ts(e,t).divide(r);return i?Math.abs(n.x)===Math.abs(n.y):n.x===n.y&&n.x>=0&&n.x<=1}}static isPointInPolygon(t,e){const s=new ot(t).setX(Math.min(t.x-1,...e.map((t=>t.x))));let i=0;for(let r=0;r<e.length;r++){const n=this.intersectSegmentSegment(e[r],e[(r+1)%e.length],t,s);if(n.includes(t))return!0;i+=Number(\"Intersection\"===n.status)}return i%2==1}static intersectLineLine(t,e,s,i){let r=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],n=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];const o=e.x-t.x,a=e.y-t.y,h=i.x-s.x,c=i.y-s.y,l=t.x-s.x,u=t.y-s.y,d=h*u-c*l,g=o*u-a*l,f=c*o-h*a;if(0!==f){const e=d/f,s=g/f;return(r||0<=e&&e<=1)&&(n||0<=s&&s<=1)?new Fs(\"Intersection\").append(new ot(t.x+e*o,t.y+e*a)):new Fs}if(0===d||0===g){const o=r||n||Fs.isPointContained(t,s,i)||Fs.isPointContained(e,s,i)||Fs.isPointContained(s,t,e)||Fs.isPointContained(i,t,e);return new Fs(o?\"Coincident\":void 0)}return new Fs(\"Parallel\")}static intersectSegmentLine(t,e,s,i){return Fs.intersectLineLine(t,e,s,i,!1,!0)}static intersectSegmentSegment(t,e,s,i){return Fs.intersectLineLine(t,e,s,i,!1,!1)}static intersectLinePolygon(t,e,s){let i=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const r=new Fs,n=s.length;for(let o,a,h,c=0;c<n;c++){if(o=s[c],a=s[(c+1)%n],h=Fs.intersectLineLine(t,e,o,a,i,!1),\"Coincident\"===h.status)return h;r.append(...h.points)}return r.points.length>0&&(r.status=\"Intersection\"),r}static intersectSegmentPolygon(t,e,s){return Fs.intersectLinePolygon(t,e,s,!1)}static intersectPolygonPolygon(t,e){const s=new Fs,i=t.length,r=[];for(let n=0;n<i;n++){const o=t[n],a=t[(n+1)%i],h=Fs.intersectSegmentPolygon(o,a,e);\"Coincident\"===h.status?(r.push(h),s.append(o,a)):s.append(...h.points)}return r.length>0&&r.length===t.length?new Fs(\"Coincident\"):(s.points.length>0&&(s.status=\"Intersection\"),s)}static intersectPolygonRectangle(t,e,s){const i=e.min(s),r=e.max(s),n=new ot(r.x,i.y),o=new ot(i.x,r.y);return Fs.intersectPolygonPolygon(t,[i,n,r,o])}}class Ls extends lt{getX(){return this.getXY().x}setX(t){this.setXY(this.getXY().setX(t))}getY(){return this.getXY().y}setY(t){this.setXY(this.getXY().setY(t))}getRelativeX(){return this.left}setRelativeX(t){this.left=t}getRelativeY(){return this.top}setRelativeY(t){this.top=t}getXY(){const t=this.getRelativeXY();return this.group?bt(t,this.group.calcTransformMatrix()):t}setXY(t,e,s){this.group&&(t=bt(t,wt(this.group.calcTransformMatrix()))),this.setRelativeXY(t,e,s)}getRelativeXY(){return new ot(this.left,this.top)}setRelativeXY(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.originX,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.originY;this.setPositionByOrigin(t,e,s)}isStrokeAccountedForInDimensions(){return!1}getCoords(){const{tl:t,tr:e,br:s,bl:i}=this.aCoords||(this.aCoords=this.calcACoords()),r=[t,e,s,i];if(this.group){const t=this.group.calcTransformMatrix();return r.map((e=>bt(e,t)))}return r}intersectsWithRect(t,e){return\"Intersection\"===Fs.intersectPolygonRectangle(this.getCoords(),t,e).status}intersectsWithObject(t){const e=Fs.intersectPolygonPolygon(this.getCoords(),t.getCoords());return\"Intersection\"===e.status||\"Coincident\"===e.status||t.isContainedWithinObject(this)||this.isContainedWithinObject(t)}isContainedWithinObject(t){return this.getCoords().every((e=>t.containsPoint(e)))}isContainedWithinRect(t,e){const{left:s,top:i,width:r,height:n}=this.getBoundingRect();return s>=t.x&&s+r<=e.x&&i>=t.y&&i+n<=e.y}isOverlapping(t){return this.intersectsWithObject(t)||this.isContainedWithinObject(t)||t.isContainedWithinObject(this)}containsPoint(t){return Fs.isPointInPolygon(t,this.getCoords())}isOnScreen(){if(!this.canvas)return!1;const{tl:t,br:e}=this.canvas.vptCoords;return!!this.getCoords().some((s=>s.x<=e.x&&s.x>=t.x&&s.y<=e.y&&s.y>=t.y))||(!!this.intersectsWithRect(t,e)||this.containsPoint(t.midPointFrom(e)))}isPartiallyOnScreen(){if(!this.canvas)return!1;const{tl:t,br:e}=this.canvas.vptCoords;if(this.intersectsWithRect(t,e))return!0;return this.getCoords().every((s=>(s.x>=e.x||s.x<=t.x)&&(s.y>=e.y||s.y<=t.y)))&&this.containsPoint(t.midPointFrom(e))}getBoundingRect(){return me(this.getCoords())}getScaledWidth(){return this._getTransformedDimensions().x}getScaledHeight(){return this._getTransformedDimensions().y}scale(t){this._set(G,t),this._set(N,t),this.setCoords()}scaleToWidth(t){const e=this.getBoundingRect().width/this.getScaledWidth();return this.scale(t/this.width/e)}scaleToHeight(t){const e=this.getBoundingRect().height/this.getScaledHeight();return this.scale(t/this.height/e)}getCanvasRetinaScaling(){var t;return(null===(t=this.canvas)||void 0===t?void 0:t.getRetinaScaling())||1}getTotalAngle(){return this.group?xt(Ot(this.calcTransformMatrix())):this.angle}getViewportTransform(){var t;return(null===(t=this.canvas)||void 0===t?void 0:t.viewportTransform)||T.concat()}calcACoords(){const t=Mt({angle:this.angle}),{x:e,y:s}=this.getRelativeCenterPoint(),i=Dt(e,s),r=St(i,t),n=this._getTransformedDimensions(),o=n.x/2,a=n.y/2;return{tl:bt({x:-o,y:-a},r),tr:bt({x:o,y:-a},r),bl:bt({x:-o,y:a},r),br:bt({x:o,y:a},r)}}setCoords(){this.aCoords=this.calcACoords()}transformMatrixKey(){let t=arguments.length>0&&void 0!==arguments[0]&&arguments[0],e=[];return!t&&this.group&&(e=this.group.transformMatrixKey(t)),e.push(this.top,this.left,this.width,this.height,this.scaleX,this.scaleY,this.angle,this.strokeWidth,this.skewX,this.skewY,+this.flipX,+this.flipY,Me(this.originX),Me(this.originY)),e}calcTransformMatrix(){let t=arguments.length>0&&void 0!==arguments[0]&&arguments[0],e=this.calcOwnMatrix();if(t||!this.group)return e;const s=this.transformMatrixKey(t),i=this.matrixCache;return i&&i.key.every(((t,e)=>t===s[e]))?i.value:(this.group&&(e=St(this.group.calcTransformMatrix(!1),e)),this.matrixCache={key:s,value:e},e)}calcOwnMatrix(){const t=this.transformMatrixKey(!0),e=this.ownMatrixCache;if(e&&e.key===t)return e.value;const s=this.getRelativeCenterPoint(),i={angle:this.angle,translateX:s.x,translateY:s.y,scaleX:this.scaleX,scaleY:this.scaleY,skewX:this.skewX,skewY:this.skewY,flipX:this.flipX,flipY:this.flipY},r=Lt(i);return this.ownMatrixCache={key:t,value:r},r}_getNonTransformedDimensions(){return new ot(this.width,this.height).scalarAdd(this.strokeWidth)}_calculateCurrentDimensions(t){return this._getTransformedDimensions(t).transform(this.getViewportTransform(),!0).scalarAdd(2*this.padding)}_getTransformedDimensions(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const e=s({scaleX:this.scaleX,scaleY:this.scaleY,skewX:this.skewX,skewY:this.skewY,width:this.width,height:this.height,strokeWidth:this.strokeWidth},t),i=e.strokeWidth;let r=i,n=0;this.strokeUniform&&(r=0,n=i);const o=e.width+r,a=e.height+r;let h;return h=0===e.skewX&&0===e.skewY?new ot(o*e.scaleX,a*e.scaleY):be(o,a,Ft(e)),h.scalarAdd(n)}translateToGivenOrigin(t,e,s,i,r){let n=t.x,o=t.y;const a=Me(i)-Me(e),h=Me(r)-Me(s);if(a||h){const t=this._getTransformedDimensions();n+=a*t.x,o+=h*t.y}return new ot(n,o)}translateToCenterPoint(t,e,s){if(e===D&&s===D)return t;const i=this.translateToGivenOrigin(t,e,s,D,D);return this.angle?i.rotate(_t(this.angle),t):i}translateToOriginPoint(t,e,s){const i=this.translateToGivenOrigin(t,D,D,e,s);return this.angle?i.rotate(_t(this.angle),t):i}getCenterPoint(){const t=this.getRelativeCenterPoint();return this.group?bt(t,this.group.calcTransformMatrix()):t}getRelativeCenterPoint(){return this.translateToCenterPoint(new ot(this.left,this.top),this.originX,this.originY)}getPointByOrigin(t,e){return this.translateToOriginPoint(this.getRelativeCenterPoint(),t,e)}setPositionByOrigin(t,e,s){const i=this.translateToCenterPoint(t,e,s),r=this.translateToOriginPoint(i,this.originX,this.originY);this.set({left:r.x,top:r.y})}_getLeftTopCoords(){return this.translateToOriginPoint(this.getRelativeCenterPoint(),M,P)}}const Rs=[\"type\"],Is=[\"extraParam\"];let Bs=class e extends Ls{static getDefaults(){return e.ownDefaults}get type(){const t=this.constructor.type;return\"FabricObject\"===t?\"object\":t.toLowerCase()}set type(t){a(\"warn\",\"Setting type has no effect\",t)}constructor(s){super(),t(this,\"_cacheContext\",null),Object.assign(this,e.ownDefaults),this.setOptions(s)}_createCacheCanvas(){this._cacheCanvas=pt(),this._cacheContext=this._cacheCanvas.getContext(\"2d\"),this._updateCacheCanvas(),this.dirty=!0}_limitCacheSize(t){const e=t.width,s=t.height,i=o.maxCacheSideLimit,r=o.minCacheSideLimit;if(e<=i&&s<=i&&e*s<=o.perfLimitSizeTotal)return e<r&&(t.width=r),s<r&&(t.height=r),t;const n=e/s,[a,h]=_.limitDimsByArea(n),c=ds(r,a,i),l=ds(r,h,i);return e>c&&(t.zoomX/=e/c,t.width=c,t.capped=!0),s>l&&(t.zoomY/=s/l,t.height=l,t.capped=!0),t}_getCacheCanvasDimensions(){const t=this.getTotalObjectScaling(),e=this._getTransformedDimensions({skewX:0,skewY:0}),s=e.x*t.x/this.scaleX,i=e.y*t.y/this.scaleY;return{width:Math.ceil(s+2),height:Math.ceil(i+2),zoomX:t.x,zoomY:t.y,x:s,y:i}}_updateCacheCanvas(){const t=this._cacheCanvas,e=this._cacheContext,{width:s,height:i,zoomX:r,zoomY:n,x:o,y:a}=this._limitCacheSize(this._getCacheCanvasDimensions()),h=s!==t.width||i!==t.height,c=this.zoomX!==r||this.zoomY!==n;if(!t||!e)return!1;if(h||c){s!==t.width||i!==t.height?(t.width=s,t.height=i):(e.setTransform(1,0,0,1,0,0),e.clearRect(0,0,t.width,t.height));const h=o/2,c=a/2;return this.cacheTranslationX=Math.round(t.width/2-h)+h,this.cacheTranslationY=Math.round(t.height/2-c)+c,e.translate(this.cacheTranslationX,this.cacheTranslationY),e.scale(r,n),this.zoomX=r,this.zoomY=n,!0}return!1}setOptions(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this._setOptions(t)}transform(t){const e=this.group&&!this.group._transformDone||this.group&&this.canvas&&t===this.canvas.contextTop,s=this.calcTransformMatrix(!e);t.transform(s[0],s[1],s[2],s[3],s[4],s[5])}getObjectScaling(){if(!this.group)return new ot(Math.abs(this.scaleX),Math.abs(this.scaleY));const t=kt(this.calcTransformMatrix());return new ot(Math.abs(t.scaleX),Math.abs(t.scaleY))}getTotalObjectScaling(){const t=this.getObjectScaling();if(this.canvas){const e=this.canvas.getZoom(),s=this.getCanvasRetinaScaling();return t.scalarMultiply(e*s)}return t}getObjectOpacity(){let t=this.opacity;return this.group&&(t*=this.group.getObjectOpacity()),t}_constrainScale(t){return Math.abs(t)<this.minScaleLimit?t<0?-this.minScaleLimit:this.minScaleLimit:0===t?1e-4:t}_set(t,e){t!==G&&t!==N||(e=this._constrainScale(e)),t===G&&e<0?(this.flipX=!this.flipX,e*=-1):\"scaleY\"===t&&e<0?(this.flipY=!this.flipY,e*=-1):\"shadow\"!==t||!e||e instanceof us||(e=new us(e));const s=this[t]!==e;return this[t]=e,s&&this.constructor.cacheProperties.includes(t)&&(this.dirty=!0),this.parent&&(this.dirty||s&&this.constructor.stateProperties.includes(t))&&this.parent._set(\"dirty\",!0),this}isNotVisible(){return 0===this.opacity||!this.width&&!this.height&&0===this.strokeWidth||!this.visible}render(t){this.isNotVisible()||this.canvas&&this.canvas.skipOffscreen&&!this.group&&!this.isOnScreen()||(t.save(),this._setupCompositeOperation(t),this.drawSelectionBackground(t),this.transform(t),this._setOpacity(t),this._setShadow(t),this.shouldCache()?(this.renderCache(),this.drawCacheOnCanvas(t)):(this._removeCacheCanvas(),this.drawObject(t,!1,{}),this.dirty=!1),t.restore())}drawSelectionBackground(t){}renderCache(t){if(t=t||{},this._cacheCanvas&&this._cacheContext||this._createCacheCanvas(),this.isCacheDirty()&&this._cacheContext){const{zoomX:e,zoomY:s,cacheTranslationX:i,cacheTranslationY:r}=this,{width:n,height:o}=this._cacheCanvas;this.drawObject(this._cacheContext,t.forClipping,{zoomX:e,zoomY:s,cacheTranslationX:i,cacheTranslationY:r,width:n,height:o,parentClipPaths:[]}),this.dirty=!1}}_removeCacheCanvas(){this._cacheCanvas=void 0,this._cacheContext=null}hasStroke(){return this.stroke&&\"transparent\"!==this.stroke&&0!==this.strokeWidth}hasFill(){return this.fill&&\"transparent\"!==this.fill}needsItsOwnCache(){return!!(this.paintFirst===J&&this.hasFill()&&this.hasStroke()&&this.shadow)||!!this.clipPath}shouldCache(){return this.ownCaching=this.objectCaching&&(!this.parent||!this.parent.isOnACache())||this.needsItsOwnCache(),this.ownCaching}willDrawShadow(){return!!this.shadow&&(0!==this.shadow.offsetX||0!==this.shadow.offsetY)}drawClipPathOnCache(t,e,s){t.save(),e.inverted?t.globalCompositeOperation=\"destination-out\":t.globalCompositeOperation=\"destination-in\",t.setTransform(1,0,0,1,0,0),t.drawImage(s,0,0),t.restore()}drawObject(t,e,s){const i=this.fill,r=this.stroke;e?(this.fill=\"black\",this.stroke=\"\",this._setClippingProperties(t)):this._renderBackground(t),this._render(t),this._drawClipPath(t,this.clipPath,s),this.fill=i,this.stroke=r}createClipPathLayer(t,e){const s=vt(e),i=s.getContext(\"2d\");if(i.translate(e.cacheTranslationX,e.cacheTranslationY),i.scale(e.zoomX,e.zoomY),t._cacheCanvas=s,e.parentClipPaths.forEach((t=>{t.transform(i)})),e.parentClipPaths.push(t),t.absolutePositioned){const t=wt(this.calcTransformMatrix());i.transform(t[0],t[1],t[2],t[3],t[4],t[5])}return t.transform(i),t.drawObject(i,!0,e),s}_drawClipPath(t,e,s){if(!e)return;e._transformDone=!0;const i=this.createClipPathLayer(e,s);this.drawClipPathOnCache(t,e,i)}drawCacheOnCanvas(t){t.scale(1/this.zoomX,1/this.zoomY),t.drawImage(this._cacheCanvas,-this.cacheTranslationX,-this.cacheTranslationY)}isCacheDirty(){let t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.isNotVisible())return!1;const e=this._cacheCanvas,s=this._cacheContext;return!(!e||!s||t||!this._updateCacheCanvas())||!!(this.dirty||this.clipPath&&this.clipPath.absolutePositioned)&&(e&&s&&!t&&(s.save(),s.setTransform(1,0,0,1,0,0),s.clearRect(0,0,e.width,e.height),s.restore()),!0)}_renderBackground(t){if(!this.backgroundColor)return;const e=this._getNonTransformedDimensions();t.fillStyle=this.backgroundColor,t.fillRect(-e.x/2,-e.y/2,e.x,e.y),this._removeShadow(t)}_setOpacity(t){this.group&&!this.group._transformDone?t.globalAlpha=this.getObjectOpacity():t.globalAlpha*=this.opacity}_setStrokeStyles(t,e){const s=e.stroke;s&&(t.lineWidth=e.strokeWidth,t.lineCap=e.strokeLineCap,t.lineDashOffset=e.strokeDashOffset,t.lineJoin=e.strokeLineJoin,t.miterLimit=e.strokeMiterLimit,$t(s)?\"percentage\"===s.gradientUnits||s.gradientTransform||s.patternTransform?this._applyPatternForTransformedGradient(t,s):(t.strokeStyle=s.toLive(t),this._applyPatternGradientTransform(t,s)):t.strokeStyle=e.stroke)}_setFillStyles(t,e){let{fill:s}=e;s&&($t(s)?(t.fillStyle=s.toLive(t),this._applyPatternGradientTransform(t,s)):t.fillStyle=s)}_setClippingProperties(t){t.globalAlpha=1,t.strokeStyle=\"transparent\",t.fillStyle=\"#000000\"}_setLineDash(t,e){e&&0!==e.length&&t.setLineDash(e)}_setShadow(t){if(!this.shadow)return;const e=this.shadow,s=this.canvas,i=this.getCanvasRetinaScaling(),[r,,,n]=(null==s?void 0:s.viewportTransform)||T,a=r*i,h=n*i,c=e.nonScaling?new ot(1,1):this.getObjectScaling();t.shadowColor=e.color,t.shadowBlur=e.blur*o.browserShadowBlurConstant*(a+h)*(c.x+c.y)/4,t.shadowOffsetX=e.offsetX*a*c.x,t.shadowOffsetY=e.offsetY*h*c.y}_removeShadow(t){this.shadow&&(t.shadowColor=\"\",t.shadowBlur=t.shadowOffsetX=t.shadowOffsetY=0)}_applyPatternGradientTransform(t,e){if(!$t(e))return{offsetX:0,offsetY:0};const s=e.gradientTransform||e.patternTransform,i=-this.width/2+e.offsetX||0,r=-this.height/2+e.offsetY||0;return\"percentage\"===e.gradientUnits?t.transform(this.width,0,0,this.height,i,r):t.transform(1,0,0,1,i,r),s&&t.transform(s[0],s[1],s[2],s[3],s[4],s[5]),{offsetX:i,offsetY:r}}_renderPaintInOrder(t){this.paintFirst===J?(this._renderStroke(t),this._renderFill(t)):(this._renderFill(t),this._renderStroke(t))}_render(t){}_renderFill(t){this.fill&&(t.save(),this._setFillStyles(t,this),\"evenodd\"===this.fillRule?t.fill(\"evenodd\"):t.fill(),t.restore())}_renderStroke(t){if(this.stroke&&0!==this.strokeWidth){if(this.shadow&&!this.shadow.affectStroke&&this._removeShadow(t),t.save(),this.strokeUniform){const e=this.getObjectScaling();t.scale(1/e.x,1/e.y)}this._setLineDash(t,this.strokeDashArray),this._setStrokeStyles(t,this),t.stroke(),t.restore()}}_applyPatternForTransformedGradient(t,e){var s;const i=this._limitCacheSize(this._getCacheCanvasDimensions()),r=this.getCanvasRetinaScaling(),n=i.x/this.scaleX/r,o=i.y/this.scaleY/r,a=vt({width:Math.ceil(n),height:Math.ceil(o)}),h=a.getContext(\"2d\");h&&(h.beginPath(),h.moveTo(0,0),h.lineTo(n,0),h.lineTo(n,o),h.lineTo(0,o),h.closePath(),h.translate(n/2,o/2),h.scale(i.zoomX/this.scaleX/r,i.zoomY/this.scaleY/r),this._applyPatternGradientTransform(h,e),h.fillStyle=e.toLive(t),h.fill(),t.translate(-this.width/2-this.strokeWidth/2,-this.height/2-this.strokeWidth/2),t.scale(r*this.scaleX/i.zoomX,r*this.scaleY/i.zoomY),t.strokeStyle=null!==(s=h.createPattern(a,\"no-repeat\"))&&void 0!==s?s:\"\")}_findCenterFromElement(){return new ot(this.left+this.width/2,this.top+this.height/2)}clone(t){const e=this.toObject(t);return this.constructor.fromObject(e)}cloneAsImage(t){const e=this.toCanvasElement(t);return new(tt.getClass(\"image\"))(e)}toCanvasElement(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const e=Ce(this),s=this.group,i=this.shadow,r=Math.abs,n=t.enableRetinaScaling?y():1,o=(t.multiplier||1)*n,a=t.canvasProvider||(t=>new ue(t,{enableRetinaScaling:!1,renderOnAddRemove:!1,skipOffscreen:!1}));delete this.group,t.withoutTransform&&xe(this),t.withoutShadow&&(this.shadow=null),t.viewportTransform&&Oe(this,this.getViewportTransform()),this.setCoords();const h=pt(),c=this.getBoundingRect(),l=this.shadow,u=new ot;if(l){const t=l.blur,e=l.nonScaling?new ot(1,1):this.getObjectScaling();u.x=2*Math.round(r(l.offsetX)+t)*r(e.x),u.y=2*Math.round(r(l.offsetY)+t)*r(e.y)}const d=c.width+u.x,g=c.height+u.y;h.width=Math.ceil(d),h.height=Math.ceil(g);const f=a(h);\"jpeg\"===t.format&&(f.backgroundColor=\"#fff\"),this.setPositionByOrigin(new ot(f.width/2,f.height/2),D,D);const p=this.canvas;f._objects=[this],this.set(\"canvas\",f),this.setCoords();const m=f.toCanvasElement(o||1,t);return this.set(\"canvas\",p),this.shadow=i,s&&(this.group=s),this.set(e),this.setCoords(),f._objects=[],f.destroy(),m}toDataURL(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return yt(this.toCanvasElement(t),t.format||\"png\",t.quality||1)}isType(){for(var t=arguments.length,e=new Array(t),s=0;s<t;s++)e[s]=arguments[s];return e.includes(this.constructor.type)||e.includes(this.type)}complexity(){return 1}toJSON(){return this.toObject()}rotate(t){const{centeredRotation:e,originX:s,originY:i}=this;if(e){const{x:t,y:e}=this.getRelativeCenterPoint();this.originX=D,this.originY=D,this.left=t,this.top=e}if(this.set(\"angle\",t),e){const{x:t,y:e}=this.translateToOriginPoint(this.getRelativeCenterPoint(),s,i);this.left=t,this.top=e,this.originX=s,this.originY=i}}setOnGroup(){}_setupCompositeOperation(t){this.globalCompositeOperation&&(t.globalCompositeOperation=this.globalCompositeOperation)}dispose(){et.cancelByTarget(this),this.off(),this._set(\"canvas\",void 0),this._cacheCanvas&&p().dispose(this._cacheCanvas),this._cacheCanvas=void 0,this._cacheContext=null}animate(t,e){return Object.entries(t).reduce(((t,s)=>{let[i,r]=s;return t[i]=this._animate(i,r,e),t}),{})}_animate(t,e){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=t.split(\".\"),n=this.constructor.colorProperties.includes(r[r.length-1]),{abort:o,startValue:a,onChange:h,onComplete:c}=i,l=s(s({},i),{},{target:this,startValue:null!=a?a:r.reduce(((t,e)=>t[e]),this),endValue:e,abort:null==o?void 0:o.bind(this),onChange:(t,e,s)=>{r.reduce(((e,s,i)=>(i===r.length-1&&(e[s]=t),e[s])),this),h&&h(t,e,s)},onComplete:(t,e,s)=>{this.setCoords(),c&&c(t,e,s)}});return n?js(l):As(l)}isDescendantOf(t){const{parent:e,group:s}=this;return e===t||s===t||!!e&&e.isDescendantOf(t)||!!s&&s!==e&&s.isDescendantOf(t)}getAncestors(){const t=[];let e=this;do{e=e.parent,e&&t.push(e)}while(e);return t}findCommonAncestors(t){if(this===t)return{fork:[],otherFork:[],common:[this,...this.getAncestors()]};const e=this.getAncestors(),s=t.getAncestors();if(0===e.length&&s.length>0&&this===s[s.length-1])return{fork:[],otherFork:[t,...s.slice(0,s.length-1)],common:[this]};for(let i,r=0;r<e.length;r++){if(i=e[r],i===t)return{fork:[this,...e.slice(0,r)],otherFork:[],common:e.slice(r)};for(let n=0;n<s.length;n++){if(this===s[n])return{fork:[],otherFork:[t,...s.slice(0,n)],common:[this,...e]};if(i===s[n])return{fork:[this,...e.slice(0,r)],otherFork:[t,...s.slice(0,n)],common:e.slice(r)}}}return{fork:[this,...e],otherFork:[t,...s],common:[]}}hasCommonAncestors(t){const e=this.findCommonAncestors(t);return e&&!!e.common.length}isInFrontOf(t){if(this===t)return;const e=this.findCommonAncestors(t);if(e.fork.includes(t))return!0;if(e.otherFork.includes(this))return!1;const s=e.common[0]||this.canvas;if(!s)return;const i=e.fork.pop(),r=e.otherFork.pop(),n=s._objects.indexOf(i),o=s._objects.indexOf(r);return n>-1&&n>o}toObject(){const t=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:[]).concat(e.customProperties,this.constructor.customProperties||[]);let i;const r=o.NUM_FRACTION_DIGITS,{clipPath:n,fill:a,stroke:h,shadow:c,strokeDashArray:l,left:u,top:d,originX:g,originY:f,width:p,height:m,strokeWidth:v,strokeLineCap:y,strokeDashOffset:_,strokeLineJoin:C,strokeUniform:b,strokeMiterLimit:w,scaleX:S,scaleY:T,angle:O,flipX:k,flipY:D,opacity:M,visible:P,backgroundColor:E,fillRule:A,paintFirst:j,globalCompositeOperation:F,skewX:L,skewY:R}=this;n&&!n.excludeFromExport&&(i=n.toObject(t.concat(\"inverted\",\"absolutePositioned\")));const I=t=>qt(t,r),B=s(s({},Xt(this,t)),{},{type:this.constructor.type,version:x,originX:g,originY:f,left:I(u),top:I(d),width:I(p),height:I(m),fill:te(a)?a.toObject():a,stroke:te(h)?h.toObject():h,strokeWidth:I(v),strokeDashArray:l?l.concat():l,strokeLineCap:y,strokeDashOffset:_,strokeLineJoin:C,strokeUniform:b,strokeMiterLimit:I(w),scaleX:I(S),scaleY:I(T),angle:I(O),flipX:k,flipY:D,opacity:I(M),shadow:c?c.toObject():c,visible:P,backgroundColor:E,fillRule:A,paintFirst:j,globalCompositeOperation:F,skewX:I(L),skewY:I(R)},i?{clipPath:i}:null);return this.includeDefaultValues?B:this._removeDefaultValues(B)}toDatalessObject(t){return this.toObject(t)}_removeDefaultValues(t){const e=this.constructor.getDefaults(),s=Object.keys(e).length>0?e:Object.getPrototypeOf(this);return Yt(t,((t,e)=>{if(e===M||e===P||\"type\"===e)return!0;const i=s[e];return t!==i&&!(Array.isArray(t)&&Array.isArray(i)&&0===t.length&&0===i.length)}))}toString(){return\"#<\".concat(this.constructor.type,\">\")}static _fromObject(t){let e=i(t,Rs),s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{extraParam:r}=s,n=i(s,Is);return Bt(e,n).then((t=>r?(delete t[r],new this(e[r],t)):new this(t)))}static fromObject(t,e){return this._fromObject(t,e)}};t(Bs,\"stateProperties\",gs),t(Bs,\"cacheProperties\",fs),t(Bs,\"ownDefaults\",ps),t(Bs,\"type\",\"FabricObject\"),t(Bs,\"colorProperties\",[K,J,\"backgroundColor\"]),t(Bs,\"customProperties\",[]),tt.setClass(Bs),tt.setClass(Bs,\"object\");const Xs=(t,e,i)=>(r,n,o,a)=>{const h=e(r,n,o,a);return h&&ke(t,s(s({},Fe(r,n,o,a)),i)),h};function Ys(t){return(e,s,i,r)=>{const{target:n,originX:o,originY:a}=s,h=n.getRelativeCenterPoint(),c=n.translateToOriginPoint(h,o,a),l=t(e,s,i,r);return n.setPositionByOrigin(c,s.originX,s.originY),l}}const Ws=Xs(Y,Ys(((t,e,s,i)=>{const r=Re(e,e.originX,e.originY,s,i);if(Me(e.originX)===Me(D)||Me(e.originX)===Me(A)&&r.x<0||Me(e.originX)===Me(M)&&r.x>0){const{target:t}=e,s=t.strokeWidth/(t.strokeUniform?t.scaleX:1),i=Ee(e)?2:1,n=t.width,o=Math.abs(r.x*i/t.scaleX)-s;return t.set(\"width\",Math.max(o,1)),n!==t.width}return!1})));function Vs(t,e,s,i,r){i=i||{};const n=this.sizeX||i.cornerSize||r.cornerSize,o=this.sizeY||i.cornerSize||r.cornerSize,a=void 0!==i.transparentCorners?i.transparentCorners:r.transparentCorners,h=a?J:K,c=!a&&(i.cornerStrokeColor||r.cornerStrokeColor);let l,u=e,d=s;t.save(),t.fillStyle=i.cornerColor||r.cornerColor||\"\",t.strokeStyle=i.cornerStrokeColor||r.cornerStrokeColor||\"\",n>o?(l=n,t.scale(1,o/n),d=s*n/o):o>n?(l=o,t.scale(n/o,1),u=e*o/n):l=n,t.beginPath(),t.arc(u,d,l/2,0,w,!1),t[h](),c&&t.stroke(),t.restore()}function zs(t,e,s,i,r){i=i||{};const n=this.sizeX||i.cornerSize||r.cornerSize,o=this.sizeY||i.cornerSize||r.cornerSize,a=void 0!==i.transparentCorners?i.transparentCorners:r.transparentCorners,h=a?J:K,c=!a&&(i.cornerStrokeColor||r.cornerStrokeColor),l=n/2,u=o/2;t.save(),t.fillStyle=i.cornerColor||r.cornerColor||\"\",t.strokeStyle=i.cornerStrokeColor||r.cornerStrokeColor||\"\",t.translate(e,s);const d=r.getTotalAngle();t.rotate(_t(d)),t[\"\".concat(h,\"Rect\")](-l,-u,n,o),c&&t.strokeRect(-l,-u,n,o),t.restore()}class Hs{constructor(e){t(this,\"visible\",!0),t(this,\"actionName\",H),t(this,\"angle\",0),t(this,\"x\",0),t(this,\"y\",0),t(this,\"offsetX\",0),t(this,\"offsetY\",0),t(this,\"sizeX\",0),t(this,\"sizeY\",0),t(this,\"touchSizeX\",0),t(this,\"touchSizeY\",0),t(this,\"cursorStyle\",\"crosshair\"),t(this,\"withConnection\",!1),Object.assign(this,e)}shouldActivate(t,e,s,i){var r;let{tl:n,tr:o,br:a,bl:h}=i;return(null===(r=e.canvas)||void 0===r?void 0:r.getActiveObject())===e&&e.isControlVisible(t)&&Fs.isPointInPolygon(s,[n,o,a,h])}getActionHandler(t,e,s){return this.actionHandler}getMouseDownHandler(t,e,s){return this.mouseDownHandler}getMouseUpHandler(t,e,s){return this.mouseUpHandler}cursorStyleHandler(t,e,s){return e.cursorStyle}getActionName(t,e,s){return e.actionName}getVisibility(t,e){var s,i;return null!==(s=null===(i=t._controlsVisibility)||void 0===i?void 0:i[e])&&void 0!==s?s:this.visible}setVisibility(t,e,s){this.visible=t}positionHandler(t,e,s,i){return new ot(this.x*t.x+this.offsetX,this.y*t.y+this.offsetY).transform(e)}calcCornerCoords(t,e,s,i,r,n){const o=Tt([Dt(s,i),Mt({angle:t}),Pt((r?this.touchSizeX:this.sizeX)||e,(r?this.touchSizeY:this.sizeY)||e)]);return{tl:new ot(-.5,-.5).transform(o),tr:new ot(.5,-.5).transform(o),br:new ot(.5,.5).transform(o),bl:new ot(-.5,.5).transform(o)}}render(t,e,s,i,r){if(\"circle\"===((i=i||{}).cornerStyle||r.cornerStyle))Vs.call(this,t,e,s,i,r);else zs.call(this,t,e,s,i,r)}}const Gs=(t,e,s)=>s.lockRotation?Pe:e.cursorStyle,Ns=Xs(I,Ys(((t,e,s,i)=>{let{target:r,ex:n,ey:o,theta:a,originX:h,originY:c}=e;const l=r.translateToOriginPoint(r.getRelativeCenterPoint(),h,c);if(je(r,\"lockRotation\"))return!1;const u=Math.atan2(o-l.y,n-l.x),d=Math.atan2(i-l.y,s-l.x);let g=xt(d-u+a);if(r.snapAngle&&r.snapAngle>0){const t=r.snapAngle,e=r.snapThreshold||t,s=Math.ceil(g/t)*t,i=Math.floor(g/t)*t;Math.abs(g-i)<e?g=i:Math.abs(g-s)<e&&(g=s)}g<0&&(g=360+g),g%=360;const f=r.angle!==g;return r.angle=g,f})));function Us(t,e){const s=e.canvas,i=t[s.uniScaleKey];return s.uniformScaling&&!i||!s.uniformScaling&&i}function qs(t,e,s){const i=je(t,\"lockScalingX\"),r=je(t,\"lockScalingY\");if(i&&r)return!0;if(!e&&(i||r)&&s)return!0;if(i&&\"x\"===e)return!0;if(r&&\"y\"===e)return!0;const{width:n,height:o,strokeWidth:a}=t;return 0===n&&0===a&&\"y\"!==e||0===o&&0===a&&\"x\"!==e}const Ks=[\"e\",\"se\",\"s\",\"sw\",\"w\",\"nw\",\"n\",\"ne\",\"e\"],Js=(t,e,s)=>{const i=Us(t,s);if(qs(s,0!==e.x&&0===e.y?\"x\":0===e.x&&0!==e.y?\"y\":\"\",i))return Pe;const r=Le(s,e);return\"\".concat(Ks[r],\"-resize\")};function Qs(t,e,s,i){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};const n=e.target,o=r.by,a=Us(t,n);let h,c,l,u,d,g;if(qs(n,o,a))return!1;if(e.gestureScale)c=e.scaleX*e.gestureScale,l=e.scaleY*e.gestureScale;else{if(h=Re(e,e.originX,e.originY,s,i),d=\"y\"!==o?Math.sign(h.x||e.signX||1):1,g=\"x\"!==o?Math.sign(h.y||e.signY||1):1,e.signX||(e.signX=d),e.signY||(e.signY=g),je(n,\"lockScalingFlip\")&&(e.signX!==d||e.signY!==g))return!1;if(u=n._getTransformedDimensions(),a&&!o){const t=Math.abs(h.x)+Math.abs(h.y),{original:s}=e,i=t/(Math.abs(u.x*s.scaleX/n.scaleX)+Math.abs(u.y*s.scaleY/n.scaleY));c=s.scaleX*i,l=s.scaleY*i}else c=Math.abs(h.x*n.scaleX/u.x),l=Math.abs(h.y*n.scaleY/u.y);Ee(e)&&(c*=2,l*=2),e.signX!==d&&\"y\"!==o&&(e.originX=Ae(e.originX),c*=-1,e.signX=d),e.signY!==g&&\"x\"!==o&&(e.originY=Ae(e.originY),l*=-1,e.signY=g)}const f=n.scaleX,p=n.scaleY;return o?(\"x\"===o&&n.set(G,c),\"y\"===o&&n.set(N,l)):(!je(n,\"lockScalingX\")&&n.set(G,c),!je(n,\"lockScalingY\")&&n.set(N,l)),f!==n.scaleX||p!==n.scaleY}const Zs=Xs(R,Ys(((t,e,s,i)=>Qs(t,e,s,i)))),$s=Xs(R,Ys(((t,e,s,i)=>Qs(t,e,s,i,{by:\"x\"})))),ti=Xs(R,Ys(((t,e,s,i)=>Qs(t,e,s,i,{by:\"y\"})))),ei=[\"target\",\"ex\",\"ey\",\"skewingSide\"],si={x:{counterAxis:\"y\",scale:G,skew:U,lockSkewing:\"lockSkewingX\",origin:\"originX\",flip:\"flipX\"},y:{counterAxis:\"x\",scale:N,skew:q,lockSkewing:\"lockSkewingY\",origin:\"originY\",flip:\"flipY\"}},ii=[\"ns\",\"nesw\",\"ew\",\"nwse\"],ri=(t,e,s)=>{if(0!==e.x&&je(s,\"lockSkewingY\"))return Pe;if(0!==e.y&&je(s,\"lockSkewingX\"))return Pe;const i=Le(s,e)%4;return\"\".concat(ii[i],\"-resize\")};function ni(t,e,r,n,o){const{target:a}=r,{counterAxis:h,origin:c,lockSkewing:l,skew:u,flip:d}=si[t];if(je(a,l))return!1;const{origin:g,flip:f}=si[h],p=Me(r[g])*(a[f]?-1:1),m=-Math.sign(p)*(a[d]?-1:1),v=.5*-((0===a[u]&&Re(r,D,D,n,o)[t]>0||a[u]>0?1:-1)*m)+.5,y=Xs(X,Ys(((e,s,r,n)=>function(t,e,s){let{target:r,ex:n,ey:o,skewingSide:a}=e,h=i(e,ei);const{skew:c}=si[t],l=s.subtract(new ot(n,o)).divide(new ot(r.scaleX,r.scaleY))[t],u=r[c],d=h[c],g=Math.tan(_t(d)),f=\"y\"===t?r._getTransformedDimensions({scaleX:1,scaleY:1,skewX:0}).x:r._getTransformedDimensions({scaleX:1,scaleY:1}).y,p=2*l*a/Math.max(f,1)+g,m=xt(Math.atan(p));r.set(c,m);const v=u!==r[c];if(v&&\"y\"===t){const{skewX:t,scaleX:e}=r,s=r._getTransformedDimensions({skewY:u}),i=r._getTransformedDimensions(),n=0!==t?s.x/i.x:1;1!==n&&r.set(G,n*e)}return v}(t,s,new ot(r,n)))));return y(e,s(s({},r),{},{[c]:v,skewingSide:m}),n,o)}const oi=(t,e,s,i)=>ni(\"x\",t,e,s,i),ai=(t,e,s,i)=>ni(\"y\",t,e,s,i);function hi(t,e){return t[e.canvas.altActionKey]}const ci=(t,e,s)=>{const i=hi(t,s);return 0===e.x?i?U:N:0===e.y?i?q:G:\"\"},li=(t,e,s)=>hi(t,s)?ri(0,e,s):Js(t,e,s),ui=(t,e,s,i)=>hi(t,e.target)?ai(t,e,s,i):$s(t,e,s,i),di=(t,e,s,i)=>hi(t,e.target)?oi(t,e,s,i):ti(t,e,s,i),gi=()=>({ml:new Hs({x:-.5,y:0,cursorStyleHandler:li,actionHandler:ui,getActionName:ci}),mr:new Hs({x:.5,y:0,cursorStyleHandler:li,actionHandler:ui,getActionName:ci}),mb:new Hs({x:0,y:.5,cursorStyleHandler:li,actionHandler:di,getActionName:ci}),mt:new Hs({x:0,y:-.5,cursorStyleHandler:li,actionHandler:di,getActionName:ci}),tl:new Hs({x:-.5,y:-.5,cursorStyleHandler:Js,actionHandler:Zs}),tr:new Hs({x:.5,y:-.5,cursorStyleHandler:Js,actionHandler:Zs}),bl:new Hs({x:-.5,y:.5,cursorStyleHandler:Js,actionHandler:Zs}),br:new Hs({x:.5,y:.5,cursorStyleHandler:Js,actionHandler:Zs}),mtr:new Hs({x:0,y:-.5,actionHandler:Ns,cursorStyleHandler:Gs,offsetY:-40,withConnection:!0,actionName:B})}),fi=()=>({mr:new Hs({x:.5,y:0,actionHandler:Ws,cursorStyleHandler:li,actionName:Y}),ml:new Hs({x:-.5,y:0,actionHandler:Ws,cursorStyleHandler:li,actionName:Y})}),pi=()=>s(s({},gi()),fi());class mi extends Bs{static getDefaults(){return s(s({},super.getDefaults()),mi.ownDefaults)}constructor(t){super(),Object.assign(this,this.constructor.createControls(),mi.ownDefaults),this.setOptions(t)}static createControls(){return{controls:gi()}}_updateCacheCanvas(){const t=this.canvas;if(this.noScaleCache&&t&&t._currentTransform){const e=t._currentTransform,s=e.target,i=e.action;if(this===s&&i&&i.startsWith(H))return!1}return super._updateCacheCanvas()}getActiveControl(){const t=this.__corner;return t?{key:t,control:this.controls[t],coord:this.oCoords[t]}:void 0}findControl(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this.hasControls||!this.canvas)return;this.__corner=void 0;const s=Object.entries(this.oCoords);for(let i=s.length-1;i>=0;i--){const[r,n]=s[i],o=this.controls[r];if(o.shouldActivate(r,this,t,e?n.touchCorner:n.corner))return this.__corner=r,{key:r,control:o,coord:this.oCoords[r]}}}calcOCoords(){const t=this.getViewportTransform(),e=this.getCenterPoint(),s=Dt(e.x,e.y),i=Mt({angle:this.getTotalAngle()-(this.group&&this.flipX?180:0)}),r=St(s,i),n=St(t,r),o=St(n,[1/t[0],0,0,1/t[3],0,0]),a=this.group?kt(this.calcTransformMatrix()):void 0;a&&(a.scaleX=Math.abs(a.scaleX),a.scaleY=Math.abs(a.scaleY));const h=this._calculateCurrentDimensions(a),c={};return this.forEachControl(((t,e)=>{const s=t.positionHandler(h,o,this,t);c[e]=Object.assign(s,this._calcCornerCoords(t,s))})),c}_calcCornerCoords(t,e){const s=this.getTotalAngle();return{corner:t.calcCornerCoords(s,this.cornerSize,e.x,e.y,!1,this),touchCorner:t.calcCornerCoords(s,this.touchCornerSize,e.x,e.y,!0,this)}}setCoords(){super.setCoords(),this.canvas&&(this.oCoords=this.calcOCoords())}forEachControl(t){for(const e in this.controls)t(this.controls[e],e,this)}drawSelectionBackground(t){if(!this.selectionBackgroundColor||this.canvas&&this.canvas._activeObject!==this)return;t.save();const e=this.getRelativeCenterPoint(),s=this._calculateCurrentDimensions(),i=this.getViewportTransform();t.translate(e.x,e.y),t.scale(1/i[0],1/i[3]),t.rotate(_t(this.angle)),t.fillStyle=this.selectionBackgroundColor,t.fillRect(-s.x/2,-s.y/2,s.x,s.y),t.restore()}strokeBorders(t,e){t.strokeRect(-e.x/2,-e.y/2,e.x,e.y)}_drawBorders(t,e){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=s({hasControls:this.hasControls,borderColor:this.borderColor,borderDashArray:this.borderDashArray},i);t.save(),t.strokeStyle=r.borderColor,this._setLineDash(t,r.borderDashArray),this.strokeBorders(t,e),r.hasControls&&this.drawControlsConnectingLines(t,e),t.restore()}_renderControls(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{hasBorders:i,hasControls:r}=this,n=s({hasBorders:i,hasControls:r},e),o=this.getViewportTransform(),a=n.hasBorders,h=n.hasControls,c=St(o,this.calcTransformMatrix()),l=kt(c);t.save(),t.translate(l.translateX,l.translateY),t.lineWidth=this.borderScaleFactor,this.group===this.parent&&(t.globalAlpha=this.isMoving?this.borderOpacityWhenMoving:1),this.flipX&&(l.angle-=180),t.rotate(_t(this.group?l.angle:this.angle)),a&&this.drawBorders(t,l,e),h&&this.drawControls(t,e),t.restore()}drawBorders(t,e,s){let i;if(s&&s.forActiveSelection||this.group){const t=be(this.width,this.height,Ft(e)),s=this.isStrokeAccountedForInDimensions()?at:(this.strokeUniform?(new ot).scalarAdd(this.canvas?this.canvas.getZoom():1):new ot(e.scaleX,e.scaleY)).scalarMultiply(this.strokeWidth);i=t.add(s).scalarAdd(this.borderScaleFactor).scalarAdd(2*this.padding)}else i=this._calculateCurrentDimensions().scalarAdd(this.borderScaleFactor);this._drawBorders(t,i,s)}drawControlsConnectingLines(t,e){let s=!1;t.beginPath(),this.forEachControl(((i,r)=>{i.withConnection&&i.getVisibility(this,r)&&(s=!0,t.moveTo(i.x*e.x,i.y*e.y),t.lineTo(i.x*e.x+i.offsetX,i.y*e.y+i.offsetY))})),s&&t.stroke()}drawControls(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};t.save();const i=this.getCanvasRetinaScaling(),{cornerStrokeColor:r,cornerDashArray:n,cornerColor:o}=this,a=s({cornerStrokeColor:r,cornerDashArray:n,cornerColor:o},e);t.setTransform(i,0,0,i,0,0),t.strokeStyle=t.fillStyle=a.cornerColor,this.transparentCorners||(t.strokeStyle=a.cornerStrokeColor),this._setLineDash(t,a.cornerDashArray),this.forEachControl(((e,s)=>{if(e.getVisibility(this,s)){const i=this.oCoords[s];e.render(t,i.x,i.y,a,this)}})),t.restore()}isControlVisible(t){return this.controls[t]&&this.controls[t].getVisibility(this,t)}setControlVisible(t,e){this._controlsVisibility||(this._controlsVisibility={}),this._controlsVisibility[t]=e}setControlsVisibility(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};Object.entries(t).forEach((t=>{let[e,s]=t;return this.setControlVisible(e,s)}))}clearContextTop(t){if(!this.canvas)return;const e=this.canvas.contextTop;if(!e)return;const s=this.canvas.viewportTransform;e.save(),e.transform(s[0],s[1],s[2],s[3],s[4],s[5]),this.transform(e);const i=this.width+4,r=this.height+4;return e.clearRect(-i/2,-r/2,i,r),t||e.restore(),e}onDeselect(t){return!1}onSelect(t){return!1}shouldStartDragging(t){return!1}onDragStart(t){return!1}canDrop(t){return!1}renderDragSourceEffect(t){}renderDropTargetEffect(t){}}function vi(t,e){return e.forEach((e=>{Object.getOwnPropertyNames(e.prototype).forEach((s=>{\"constructor\"!==s&&Object.defineProperty(t.prototype,s,Object.getOwnPropertyDescriptor(e.prototype,s)||Object.create(null))}))})),t}t(mi,\"ownDefaults\",{noScaleCache:!0,lockMovementX:!1,lockMovementY:!1,lockRotation:!1,lockScalingX:!1,lockScalingY:!1,lockSkewingX:!1,lockSkewingY:!1,lockScalingFlip:!1,cornerSize:13,touchCornerSize:24,transparentCorners:!0,cornerColor:\"rgb(178,204,255)\",cornerStrokeColor:\"\",cornerStyle:\"rect\",cornerDashArray:null,hasControls:!0,borderColor:\"rgb(178,204,255)\",borderDashArray:null,borderOpacityWhenMoving:.4,borderScaleFactor:1,hasBorders:!0,selectionBackgroundColor:\"\",selectable:!0,evented:!0,perPixelTargetFind:!1,activeOn:\"down\",hoverCursor:null,moveCursor:null});class yi extends mi{}vi(yi,[Be]),tt.setClass(yi),tt.setClass(yi,\"object\");const _i=(t,e,s,i)=>{const r=2*(i=Math.round(i))+1,{data:n}=t.getImageData(e-i,s-i,r,r);for(let t=3;t<n.length;t+=4){if(n[t]>0)return!1}return!0};class xi{constructor(t){this.options=t,this.strokeProjectionMagnitude=this.options.strokeWidth/2,this.scale=new ot(this.options.scaleX,this.options.scaleY),this.strokeUniformScalar=this.options.strokeUniform?new ot(1/this.options.scaleX,1/this.options.scaleY):new ot(1,1)}createSideVector(t,e){const s=ts(t,e);return this.options.strokeUniform?s.multiply(this.scale):s}projectOrthogonally(t,e,s){return this.applySkew(t.add(this.calcOrthogonalProjection(t,e,s)))}isSkewed(){return 0!==this.options.skewX||0!==this.options.skewY}applySkew(t){const e=new ot(t);return e.y+=e.x*Math.tan(_t(this.options.skewY)),e.x+=e.y*Math.tan(_t(this.options.skewX)),e}scaleUnitVector(t,e){return t.multiply(this.strokeUniformScalar).scalarMultiply(e)}}const Ci=new ot;class bi extends xi{static getOrthogonalRotationFactor(t,e){const s=e?ss(t,e):is(t);return Math.abs(s)<b?-1:1}constructor(e,s,i,r){super(r),t(this,\"AB\",void 0),t(this,\"AC\",void 0),t(this,\"alpha\",void 0),t(this,\"bisector\",void 0),this.A=new ot(e),this.B=new ot(s),this.C=new ot(i),this.AB=this.createSideVector(this.A,this.B),this.AC=this.createSideVector(this.A,this.C),this.alpha=ss(this.AB,this.AC),this.bisector=rs($e(this.AB.eq(Ci)?this.AC:this.AB,this.alpha/2))}calcOrthogonalProjection(t,e){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.strokeProjectionMagnitude;const i=this.createSideVector(t,e),r=ns(i),n=bi.getOrthogonalRotationFactor(r,this.bisector);return this.scaleUnitVector(r,s*n)}projectBevel(){const t=[];return(this.alpha%w==0?[this.B]:[this.B,this.C]).forEach((e=>{t.push(this.projectOrthogonally(this.A,e)),t.push(this.projectOrthogonally(this.A,e,-this.strokeProjectionMagnitude))})),t}projectMiter(){const t=[],e=Math.abs(this.alpha),s=1/Math.sin(e/2),i=this.scaleUnitVector(this.bisector,-this.strokeProjectionMagnitude*s),r=this.options.strokeUniform?es(this.scaleUnitVector(this.bisector,this.options.strokeMiterLimit)):this.options.strokeMiterLimit;return es(i)/this.strokeProjectionMagnitude<=r&&t.push(this.applySkew(this.A.add(i))),t.push(...this.projectBevel()),t}projectRoundNoSkew(t,e){const s=[],i=new ot(bi.getOrthogonalRotationFactor(this.bisector),bi.getOrthogonalRotationFactor(new ot(this.bisector.y,this.bisector.x)));return[new ot(1,0).scalarMultiply(this.strokeProjectionMagnitude).multiply(this.strokeUniformScalar).multiply(i),new ot(0,1).scalarMultiply(this.strokeProjectionMagnitude).multiply(this.strokeUniformScalar).multiply(i)].forEach((i=>{hs(i,t,e)&&s.push(this.A.add(i))})),s}projectRoundWithSkew(t,e){const s=[],{skewX:i,skewY:r,scaleX:n,scaleY:o,strokeUniform:a}=this.options,h=new ot(Math.tan(_t(i)),Math.tan(_t(r))),c=this.strokeProjectionMagnitude,l=a?c/o/Math.sqrt(1/o**2+1/n**2*h.y**2):c/Math.sqrt(1+h.y**2),u=new ot(Math.sqrt(Math.max(c**2-l**2,0)),l),d=a?c/Math.sqrt(1+h.x**2*(1/o)**2/(1/n+1/n*h.x*h.y)**2):c/Math.sqrt(1+h.x**2/(1+h.x*h.y)**2),g=new ot(d,Math.sqrt(Math.max(c**2-d**2,0)));return[g,g.scalarMultiply(-1),u,u.scalarMultiply(-1)].map((t=>this.applySkew(a?t.multiply(this.strokeUniformScalar):t))).forEach((i=>{hs(i,t,e)&&s.push(this.applySkew(this.A).add(i))})),s}projectRound(){const t=[];t.push(...this.projectBevel());const e=this.alpha%w==0,s=this.applySkew(this.A),i=t[e?0:2].subtract(s),r=t[e?1:0].subtract(s),n=e?this.applySkew(this.AB.scalarMultiply(-1)):this.applySkew(this.bisector.multiply(this.strokeUniformScalar).scalarMultiply(-1)),o=os(i,n)>0,a=o?i:r,h=o?r:i;return this.isSkewed()?t.push(...this.projectRoundWithSkew(a,h)):t.push(...this.projectRoundNoSkew(a,h)),t}projectPoints(){switch(this.options.strokeLineJoin){case\"miter\":return this.projectMiter();case\"round\":return this.projectRound();default:return this.projectBevel()}}project(){return this.projectPoints().map((t=>({originPoint:this.A,projectedPoint:t,angle:this.alpha,bisector:this.bisector})))}}class wi extends xi{constructor(t,e,s){super(s),this.A=new ot(t),this.T=new ot(e)}calcOrthogonalProjection(t,e){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.strokeProjectionMagnitude;const i=this.createSideVector(t,e);return this.scaleUnitVector(ns(i),s)}projectButt(){return[this.projectOrthogonally(this.A,this.T,this.strokeProjectionMagnitude),this.projectOrthogonally(this.A,this.T,-this.strokeProjectionMagnitude)]}projectRound(){const t=[];if(!this.isSkewed()&&this.A.eq(this.T)){const e=new ot(1,1).scalarMultiply(this.strokeProjectionMagnitude).multiply(this.strokeUniformScalar);t.push(this.applySkew(this.A.add(e)),this.applySkew(this.A.subtract(e)))}else t.push(...new bi(this.A,this.T,this.T,this.options).projectRound());return t}projectSquare(){const t=[];if(this.A.eq(this.T)){const e=new ot(1,1).scalarMultiply(this.strokeProjectionMagnitude).multiply(this.strokeUniformScalar);t.push(this.A.add(e),this.A.subtract(e))}else{const e=this.calcOrthogonalProjection(this.A,this.T,this.strokeProjectionMagnitude),s=this.scaleUnitVector(rs(this.createSideVector(this.A,this.T)),-this.strokeProjectionMagnitude),i=this.A.add(s);t.push(i.add(e),i.subtract(e))}return t.map((t=>this.applySkew(t)))}projectPoints(){switch(this.options.strokeLineCap){case\"round\":return this.projectRound();case\"square\":return this.projectSquare();default:return this.projectButt()}}project(){return this.projectPoints().map((t=>({originPoint:this.A,projectedPoint:t})))}}const Si=function(t,e){let s=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const i=[];if(0===t.length)return i;const r=t.reduce(((t,e)=>(t[t.length-1].eq(e)||t.push(new ot(e)),t)),[new ot(t[0])]);if(1===r.length)s=!0;else if(!s){const t=r[0],e=((t,e)=>{for(let s=t.length-1;s>=0;s--)if(e(t[s],s,t))return s;return-1})(r,(e=>!e.eq(t)));r.splice(e+1)}return r.forEach(((t,r,n)=>{let o,a;0===r?(a=n[1],o=s?t:n[n.length-1]):r===n.length-1?(o=n[r-1],a=s?t:n[0]):(o=n[r-1],a=n[r+1]),s&&1===n.length?i.push(...new wi(t,t,e).project()):!s||0!==r&&r!==n.length-1?i.push(...new bi(t,o,a,e).project()):i.push(...new wi(t,0===r?a:o,e).project())})),i},Ti=t=>{const e={};return Object.keys(t).forEach((i=>{e[i]={},Object.keys(t[i]).forEach((r=>{e[i][r]=s({},t[i][r])}))})),e},Oi=t=>t.replace(/&/g,\"&amp;\").replace(/\"/g,\"&quot;\").replace(/'/g,\"&apos;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\"),ki=t=>{const e=[];for(let s,i=0;i<t.length;i++)!1!==(s=Di(t,i))&&e.push(s);return e},Di=(t,e)=>{const s=t.charCodeAt(e);if(isNaN(s))return\"\";if(s<55296||s>57343)return t.charAt(e);if(55296<=s&&s<=56319){if(t.length<=e+1)throw\"High surrogate without following low surrogate\";const s=t.charCodeAt(e+1);if(56320>s||s>57343)throw\"High surrogate without following low surrogate\";return t.charAt(e)+t.charAt(e+1)}if(0===e)throw\"Low surrogate without preceding high surrogate\";const i=t.charCodeAt(e-1);if(55296>i||i>56319)throw\"Low surrogate without preceding high surrogate\";return!1};var Mi=Object.freeze({__proto__:null,capitalize:function(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return\"\".concat(t.charAt(0).toUpperCase()).concat(e?t.slice(1):t.slice(1).toLowerCase())},escapeXml:Oi,graphemeSplit:ki});const Pi=function(t,e){let s=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return t.fill!==e.fill||t.stroke!==e.stroke||t.strokeWidth!==e.strokeWidth||t.fontSize!==e.fontSize||t.fontFamily!==e.fontFamily||t.fontWeight!==e.fontWeight||t.fontStyle!==e.fontStyle||t.textBackgroundColor!==e.textBackgroundColor||t.deltaY!==e.deltaY||s&&(t.overline!==e.overline||t.underline!==e.underline||t.linethrough!==e.linethrough)},Ei=(t,e)=>{const s=e.split(\"\\n\"),i=[];let r=-1,n={};t=Ti(t);for(let e=0;e<s.length;e++){const o=ki(s[e]);if(t[e])for(let s=0;s<o.length;s++){r++;const o=t[e][s];o&&Object.keys(o).length>0&&(Pi(n,o,!0)?i.push({start:r,end:r+1,style:o}):i[i.length-1].end++),n=o||{}}else r+=o.length,n={}}return i},Ai=(t,e)=>{if(!Array.isArray(t))return Ti(t);const i=e.split(F),r={};let n=-1,o=0;for(let e=0;e<i.length;e++){const a=ki(i[e]);for(let i=0;i<a.length;i++)n++,t[o]&&t[o].start<=n&&n<t[o].end&&(r[e]=r[e]||{},r[e][i]=s({},t[o].style),n===t[o].end-1&&o++)}return r},ji=[\"display\",\"transform\",K,\"fill-opacity\",\"fill-rule\",\"opacity\",J,\"stroke-dasharray\",\"stroke-linecap\",\"stroke-dashoffset\",\"stroke-linejoin\",\"stroke-miterlimit\",\"stroke-opacity\",\"stroke-width\",\"id\",\"paint-order\",\"vector-effect\",\"instantiated_by_use\",\"clip-path\"];function Fi(t,e){const s=t.nodeName,i=t.getAttribute(\"class\"),r=t.getAttribute(\"id\"),n=\"(?![a-zA-Z\\\\-]+)\";let o;if(o=new RegExp(\"^\"+s,\"i\"),e=e.replace(o,\"\"),r&&e.length&&(o=new RegExp(\"#\"+r+n,\"i\"),e=e.replace(o,\"\")),i&&e.length){const t=i.split(\" \");for(let s=t.length;s--;)o=new RegExp(\"\\\\.\"+t[s]+n,\"i\"),e=e.replace(o,\"\")}return 0===e.length}function Li(t,e){let s=!0;const i=Fi(t,e.pop());return i&&e.length&&(s=function(t,e){let s,i=!0;for(;t.parentElement&&1===t.parentElement.nodeType&&e.length;)i&&(s=e.pop()),i=Fi(t=t.parentElement,s);return 0===e.length}(t,e)),i&&s&&0===e.length}const Ri=t=>{var e;return null!==(e=He[t])&&void 0!==e?e:t},Ii=new RegExp(\"(\".concat(We,\")\"),\"gi\"),Bi=t=>t.replace(Ii,\" $1 \").replace(/,/gi,\" \").replace(/\\s+/gi,\" \");var Xi,Yi,Wi,Vi,zi,Hi,Gi;const Ni=\"(\".concat(We,\")\"),Ui=String.raw(Xi||(Xi=r([\"(skewX)(\",\")\"],[\"(skewX)\\\\(\",\"\\\\)\"])),Ni),qi=String.raw(Yi||(Yi=r([\"(skewY)(\",\")\"],[\"(skewY)\\\\(\",\"\\\\)\"])),Ni),Ki=String.raw(Wi||(Wi=r([\"(rotate)(\",\"(?: \",\" \",\")?)\"],[\"(rotate)\\\\(\",\"(?: \",\" \",\")?\\\\)\"])),Ni,Ni,Ni),Ji=String.raw(Vi||(Vi=r([\"(scale)(\",\"(?: \",\")?)\"],[\"(scale)\\\\(\",\"(?: \",\")?\\\\)\"])),Ni,Ni),Qi=String.raw(zi||(zi=r([\"(translate)(\",\"(?: \",\")?)\"],[\"(translate)\\\\(\",\"(?: \",\")?\\\\)\"])),Ni,Ni),Zi=String.raw(Hi||(Hi=r([\"(matrix)(\",\" \",\" \",\" \",\" \",\" \",\")\"],[\"(matrix)\\\\(\",\" \",\" \",\" \",\" \",\" \",\"\\\\)\"])),Ni,Ni,Ni,Ni,Ni,Ni),$i=\"(?:\".concat(Zi,\"|\").concat(Qi,\"|\").concat(Ki,\"|\").concat(Ji,\"|\").concat(Ui,\"|\").concat(qi,\")\"),tr=\"(?:\".concat($i,\"*)\"),er=String.raw(Gi||(Gi=r([\"^s*(?:\",\"?)s*$\"],[\"^\\\\s*(?:\",\"?)\\\\s*$\"])),tr),sr=new RegExp(er),ir=new RegExp($i),rr=new RegExp($i,\"g\");function nr(t){const e=[];if(!(t=Bi(t).replace(/\\s*([()])\\s*/gi,\"$1\"))||t&&!sr.test(t))return[...T];for(const s of t.matchAll(rr)){const t=ir.exec(s[0]);if(!t)continue;let i=T;const r=t.filter((t=>!!t)),[,n,...o]=r,[a,h,c,l,u,d]=o.map((t=>parseFloat(t)));switch(n){case\"translate\":i=Dt(a,h);break;case B:i=Mt({angle:a},{x:h,y:c});break;case H:i=Pt(a,h);break;case U:i=At(a);break;case q:i=jt(a);break;case\"matrix\":i=[a,h,c,l,u,d]}e.push(i)}return Tt(e)}function or(t,e,s,i){const r=Array.isArray(e);let n,o=e;if(t!==K&&t!==J||e!==j){if(\"strokeUniform\"===t)return\"non-scaling-stroke\"===e;if(\"strokeDashArray\"===t)o=e===j?null:e.replace(/,/g,\" \").split(/\\s+/).map(parseFloat);else if(\"transformMatrix\"===t)o=s&&s.transformMatrix?St(s.transformMatrix,nr(e)):nr(e);else if(\"visible\"===t)o=e!==j&&\"hidden\"!==e,s&&!1===s.visible&&(o=!1);else if(\"opacity\"===t)o=parseFloat(e),s&&void 0!==s.opacity&&(o*=s.opacity);else if(\"textAnchor\"===t)o=\"start\"===e?M:\"end\"===e?A:D;else if(\"charSpacing\"===t)n=Kt(e,i)/i*1e3;else if(\"paintFirst\"===t){const t=e.indexOf(K),s=e.indexOf(J);o=K,(t>-1&&s>-1&&s<t||-1===t&&s>-1)&&(o=J)}else{if(\"href\"===t||\"xlink:href\"===t||\"font\"===t||\"id\"===t)return e;if(\"imageSmoothing\"===t)return\"optimizeQuality\"===e;n=r?e.map(Kt):Kt(e,i)}}else o=\"\";return!r&&isNaN(n)?o:n}function ar(t,e){const s=t.match(ze);if(!s)return;const i=s[1],r=s[3],n=s[4],o=s[5],a=s[6];i&&(e.fontStyle=i),r&&(e.fontWeight=isNaN(parseFloat(r))?r:parseFloat(r)),n&&(e.fontSize=Kt(n)),a&&(e.fontFamily=a),o&&(e.lineHeight=\"normal\"===o?1:o)}function hr(t,e){t.replace(/;\\s*$/,\"\").split(\";\").forEach((t=>{if(!t)return;const[s,i]=t.split(\":\");e[s.trim().toLowerCase()]=i.trim()}))}function cr(t){const e={},s=t.getAttribute(\"style\");return s?(\"string\"==typeof s?hr(s,e):function(t,e){Object.entries(t).forEach((t=>{let[s,i]=t;void 0!==i&&(e[s.toLowerCase()]=i)}))}(s,e),e):e}const lr={stroke:\"strokeOpacity\",fill:\"fillOpacity\"};function ur(t,e,i){if(!t)return{};let r,n={},o=O;t.parentNode&&Ke.test(t.parentNode.nodeName)&&(n=ur(t.parentElement,e,i),n.fontSize&&(r=o=Kt(n.fontSize)));const a=s(s(s({},e.reduce(((e,s)=>{const i=t.getAttribute(s);return i&&(e[s]=i),e}),{})),function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i={};for(const r in e)Li(t,r.split(\" \"))&&(i=s(s({},i),e[r]));return i}(t,i)),cr(t));a[Ne]&&t.setAttribute(Ne,a[Ne]),a[Ge]&&(r=Kt(a[Ge],o),a[Ge]=\"\".concat(r));const h={};for(const t in a){const e=Ri(t),s=or(e,a[t],n,r);h[e]=s}h&&h.font&&ar(h.font,h);const c=s(s({},n),h);return Ke.test(t.nodeName)?c:function(t){const e=yi.getDefaults();return Object.entries(lr).forEach((s=>{let[i,r]=s;if(void 0===t[r]||\"\"===t[i])return;if(void 0===t[i]){if(!e[i])return;t[i]=e[i]}if(0===t[i].indexOf(\"url(\"))return;const n=new Ut(t[i]);t[i]=n.setAlpha(qt(n.getAlpha()*t[r],2)).toRgba()})),t}(c)}const dr=[\"left\",\"top\",\"width\",\"height\",\"visible\"],gr=[\"rx\",\"ry\"];class fr extends yi{static getDefaults(){return s(s({},super.getDefaults()),fr.ownDefaults)}constructor(t){super(),Object.assign(this,fr.ownDefaults),this.setOptions(t),this._initRxRy()}_initRxRy(){const{rx:t,ry:e}=this;t&&!e?this.ry=t:e&&!t&&(this.rx=e)}_render(t){const{width:e,height:s}=this,i=-e/2,r=-s/2,n=this.rx?Math.min(this.rx,e/2):0,o=this.ry?Math.min(this.ry,s/2):0,a=0!==n||0!==o;t.beginPath(),t.moveTo(i+n,r),t.lineTo(i+e-n,r),a&&t.bezierCurveTo(i+e-k*n,r,i+e,r+k*o,i+e,r+o),t.lineTo(i+e,r+s-o),a&&t.bezierCurveTo(i+e,r+s-k*o,i+e-k*n,r+s,i+e-n,r+s),t.lineTo(i+n,r+s),a&&t.bezierCurveTo(i+k*n,r+s,i,r+s-k*o,i,r+s-o),t.lineTo(i,r+o),a&&t.bezierCurveTo(i,r+k*o,i+k*n,r,i+n,r),t.closePath(),this._renderPaintInOrder(t)}toObject(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return super.toObject([...gr,...t])}_toSVG(){const{width:t,height:e,rx:s,ry:i}=this;return[\"<rect \",\"COMMON_PARTS\",'x=\"'.concat(-t/2,'\" y=\"').concat(-e/2,'\" rx=\"').concat(s,'\" ry=\"').concat(i,'\" width=\"').concat(t,'\" height=\"').concat(e,'\" />\\n')]}static async fromElement(t,e,r){const n=ur(t,this.ATTRIBUTE_NAMES,r),{left:o=0,top:a=0,width:h=0,height:c=0,visible:l=!0}=n,u=i(n,dr);return new this(s(s(s({},e),u),{},{left:o,top:a,width:h,height:c,visible:Boolean(l&&h&&c)}))}}t(fr,\"type\",\"Rect\"),t(fr,\"cacheProperties\",[...fs,...gr]),t(fr,\"ownDefaults\",{rx:0,ry:0}),t(fr,\"ATTRIBUTE_NAMES\",[...ji,\"x\",\"y\",\"rx\",\"ry\",\"width\",\"height\"]),tt.setClass(fr),tt.setSVGClass(fr);const pr=\"initialization\",mr=\"added\",vr=\"removed\",yr=\"imperative\",_r=(t,e)=>{const{strokeUniform:s,strokeWidth:i,width:r,height:n,group:o}=e,a=o&&o!==t?we(o.calcTransformMatrix(),t.calcTransformMatrix()):null,h=a?e.getRelativeCenterPoint().transform(a):e.getRelativeCenterPoint(),c=!e.isStrokeAccountedForInDimensions(),l=s&&c?Te(new ot(i,i),void 0,t.calcTransformMatrix()):at,u=!s&&c?i:0,d=be(r+u,n+u,Tt([a,e.calcOwnMatrix()],!0)).add(l).scalarDivide(2);return[h.subtract(d),h.add(d)]};class xr{calcLayoutResult(t,e){if(this.shouldPerformLayout(t))return this.calcBoundingBox(e,t)}shouldPerformLayout(t){let{type:e,prevStrategy:s,strategy:i}=t;return e===pr||e===yr||!!s&&i!==s}shouldLayoutClipPath(t){let{type:e,target:{clipPath:s}}=t;return e!==pr&&s&&!s.absolutePositioned}getInitialSize(t,e){return e.size}calcBoundingBox(t,e){const{type:s,target:i}=e;if(s===yr&&e.overrides)return e.overrides;if(0===t.length)return;const{left:r,top:n,width:o,height:a}=me(t.map((t=>_r(i,t))).reduce(((t,e)=>t.concat(e)),[])),h=new ot(o,a),c=new ot(r,n).add(h.scalarDivide(2));if(s===pr){const t=this.getInitialSize(e,{size:h,center:c});return{center:c,relativeCorrection:new ot(0,0),size:t}}return{center:c.transform(i.calcOwnMatrix()),size:h}}}t(xr,\"type\",\"strategy\");class Cr extends xr{shouldPerformLayout(t){return!0}}t(Cr,\"type\",\"fit-content\"),tt.setClass(Cr);const br=[\"strategy\"],wr=[\"target\",\"strategy\",\"bubbles\",\"prevStrategy\"],Sr=\"layoutManager\";class Tr{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Cr;t(this,\"strategy\",void 0),this.strategy=e,this._subscriptions=new Map}performLayout(t){const e=s(s({bubbles:!0,strategy:this.strategy},t),{},{prevStrategy:this._prevLayoutStrategy,stopPropagation(){this.bubbles=!1}});this.onBeforeLayout(e);const i=this.getLayoutResult(e);i&&this.commitLayout(e,i),this.onAfterLayout(e,i),this._prevLayoutStrategy=e.strategy}attachHandlers(t,e){const{target:s}=e;return[Q,L,Y,I,R,X,z,W,V].map((e=>t.on(e,(t=>this.performLayout(e===Q?{type:\"object_modified\",trigger:e,e:t,target:s}:{type:\"object_modifying\",trigger:e,e:t,target:s})))))}subscribe(t,e){this.unsubscribe(t,e);const s=this.attachHandlers(t,e);this._subscriptions.set(t,s)}unsubscribe(t,e){(this._subscriptions.get(t)||[]).forEach((t=>t())),this._subscriptions.delete(t)}unsubscribeTargets(t){t.targets.forEach((e=>this.unsubscribe(e,t)))}subscribeTargets(t){t.targets.forEach((e=>this.subscribe(e,t)))}onBeforeLayout(t){const{target:e,type:r}=t,{canvas:n}=e;if(r===pr||r===mr?this.subscribeTargets(t):r===vr&&this.unsubscribeTargets(t),e.fire(\"layout:before\",{context:t}),n&&n.fire(\"object:layout:before\",{target:e,context:t}),r===yr&&t.deep){const r=i(t,br);e.forEachObject((t=>t.layoutManager&&t.layoutManager.performLayout(s(s({},r),{},{bubbles:!1,target:t}))))}}getLayoutResult(t){const{target:e,strategy:s,type:i}=t,r=s.calcLayoutResult(t,e.getObjects());if(!r)return;const n=i===pr?new ot:e.getRelativeCenterPoint(),{center:o,correction:a=new ot,relativeCorrection:h=new ot}=r,c=n.subtract(o).add(a).transform(i===pr?T:wt(e.calcOwnMatrix()),!0).add(h);return{result:r,prevCenter:n,nextCenter:o,offset:c}}commitLayout(t,e){const{target:s}=t,{result:{size:i},nextCenter:r}=e;var n,o;(s.set({width:i.x,height:i.y}),this.layoutObjects(t,e),t.type===pr)?s.set({left:null!==(n=t.x)&&void 0!==n?n:r.x+i.x*Me(s.originX),top:null!==(o=t.y)&&void 0!==o?o:r.y+i.y*Me(s.originY)}):(s.setPositionByOrigin(r,D,D),s.setCoords(),s.set(\"dirty\",!0))}layoutObjects(t,e){const{target:s}=t;s.forEachObject((i=>{i.group===s&&this.layoutObject(t,e,i)})),t.strategy.shouldLayoutClipPath(t)&&this.layoutObject(t,e,s.clipPath)}layoutObject(t,e,s){let{offset:i}=e;s.set({left:s.left+i.x,top:s.top+i.y})}onAfterLayout(t,e){const{target:r,strategy:n,bubbles:o,prevStrategy:a}=t,h=i(t,wr),{canvas:c}=r;r.fire(\"layout:after\",{context:t,result:e}),c&&c.fire(\"object:layout:after\",{context:t,result:e,target:r});const l=r.parent;o&&null!=l&&l.layoutManager&&((h.path||(h.path=[])).push(r),l.layoutManager.performLayout(s(s({},h),{},{target:l}))),r.set(\"dirty\",!0)}dispose(){const{_subscriptions:t}=this;t.forEach((t=>t.forEach((t=>t())))),t.clear()}toObject(){return{type:Sr,strategy:this.strategy.constructor.type}}toJSON(){return this.toObject()}}tt.setClass(Tr,Sr);const Or=[\"type\",\"objects\",\"layoutManager\"];class kr extends Tr{performLayout(){}}class Dr extends(ct(yi)){static getDefaults(){return s(s({},super.getDefaults()),Dr.ownDefaults)}constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};super(),t(this,\"_activeObjects\",[]),t(this,\"__objectSelectionTracker\",void 0),t(this,\"__objectSelectionDisposer\",void 0),Object.assign(this,Dr.ownDefaults),this.setOptions(s),this.groupInit(e,s)}groupInit(t,e){var s;this._objects=[...t],this.__objectSelectionTracker=this.__objectSelectionMonitor.bind(this,!0),this.__objectSelectionDisposer=this.__objectSelectionMonitor.bind(this,!1),this.forEachObject((t=>{this.enterGroup(t,!1)})),this.layoutManager=null!==(s=e.layoutManager)&&void 0!==s?s:new Tr,this.layoutManager.performLayout({type:pr,target:this,targets:[...t],x:e.left,y:e.top})}canEnterGroup(t){return t===this||this.isDescendantOf(t)?(a(\"error\",\"Group: circular object trees are not supported, this call has no effect\"),!1):-1===this._objects.indexOf(t)||(a(\"error\",\"Group: duplicate objects are not supported inside group, this call has no effect\"),!1)}_filterObjectsBeforeEnteringGroup(t){return t.filter(((t,e,s)=>this.canEnterGroup(t)&&s.indexOf(t)===e))}add(){for(var t=arguments.length,e=new Array(t),s=0;s<t;s++)e[s]=arguments[s];const i=this._filterObjectsBeforeEnteringGroup(e),r=super.add(...i);return this._onAfterObjectsChange(mr,i),r}insertAt(t){for(var e=arguments.length,s=new Array(e>1?e-1:0),i=1;i<e;i++)s[i-1]=arguments[i];const r=this._filterObjectsBeforeEnteringGroup(s),n=super.insertAt(t,...r);return this._onAfterObjectsChange(mr,r),n}remove(){const t=super.remove(...arguments);return this._onAfterObjectsChange(vr,t),t}_onObjectAdded(t){this.enterGroup(t,!0),this.fire(\"object:added\",{target:t}),t.fire(\"added\",{target:this})}_onObjectRemoved(t,e){this.exitGroup(t,e),this.fire(\"object:removed\",{target:t}),t.fire(\"removed\",{target:this})}_onAfterObjectsChange(t,e){this.layoutManager.performLayout({type:t,targets:e,target:this})}_onStackOrderChanged(){this._set(\"dirty\",!0)}_set(t,e){const s=this[t];return super._set(t,e),\"canvas\"===t&&s!==e&&(this._objects||[]).forEach((s=>{s._set(t,e)})),this}_shouldSetNestedCoords(){return this.subTargetCheck}removeAll(){return this._activeObjects=[],this.remove(...this._objects)}__objectSelectionMonitor(t,e){let{target:s}=e;const i=this._activeObjects;if(t)i.push(s),this._set(\"dirty\",!0);else if(i.length>0){const t=i.indexOf(s);t>-1&&(i.splice(t,1),this._set(\"dirty\",!0))}}_watchObject(t,e){t&&this._watchObject(!1,e),t?(e.on(\"selected\",this.__objectSelectionTracker),e.on(\"deselected\",this.__objectSelectionDisposer)):(e.off(\"selected\",this.__objectSelectionTracker),e.off(\"deselected\",this.__objectSelectionDisposer))}enterGroup(t,e){t.group&&t.group.remove(t),t._set(\"parent\",this),this._enterGroup(t,e)}_enterGroup(t,e){e&&_e(t,St(wt(this.calcTransformMatrix()),t.calcTransformMatrix())),this._shouldSetNestedCoords()&&t.setCoords(),t._set(\"group\",this),t._set(\"canvas\",this.canvas),this._watchObject(!0,t);const s=this.canvas&&this.canvas.getActiveObject&&this.canvas.getActiveObject();s&&(s===t||t.isDescendantOf(s))&&this._activeObjects.push(t)}exitGroup(t,e){this._exitGroup(t,e),t._set(\"parent\",void 0),t._set(\"canvas\",void 0)}_exitGroup(t,e){t._set(\"group\",void 0),e||(_e(t,St(this.calcTransformMatrix(),t.calcTransformMatrix())),t.setCoords()),this._watchObject(!1,t);const s=this._activeObjects.length>0?this._activeObjects.indexOf(t):-1;s>-1&&this._activeObjects.splice(s,1)}shouldCache(){const t=yi.prototype.shouldCache.call(this);if(t)for(let t=0;t<this._objects.length;t++)if(this._objects[t].willDrawShadow())return this.ownCaching=!1,!1;return t}willDrawShadow(){if(super.willDrawShadow())return!0;for(let t=0;t<this._objects.length;t++)if(this._objects[t].willDrawShadow())return!0;return!1}isOnACache(){return this.ownCaching||!!this.parent&&this.parent.isOnACache()}drawObject(t,e,s){this._renderBackground(t);for(let e=0;e<this._objects.length;e++){var i;const s=this._objects[e];null!==(i=this.canvas)&&void 0!==i&&i.preserveObjectStacking&&s.group!==this?(t.save(),t.transform(...wt(this.calcTransformMatrix())),s.render(t),t.restore()):s.group===this&&s.render(t)}this._drawClipPath(t,this.clipPath,s)}setCoords(){super.setCoords(),this._shouldSetNestedCoords()&&this.forEachObject((t=>t.setCoords()))}triggerLayout(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.layoutManager.performLayout(s({target:this,type:yr},t))}render(t){this._transformDone=!0,super.render(t),this._transformDone=!1}__serializeObjects(t,e){const s=this.includeDefaultValues;return this._objects.filter((function(t){return!t.excludeFromExport})).map((function(i){const r=i.includeDefaultValues;i.includeDefaultValues=s;const n=i[t||\"toObject\"](e);return i.includeDefaultValues=r,n}))}toObject(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];const e=this.layoutManager.toObject();return s(s(s({},super.toObject([\"subTargetCheck\",\"interactive\",...t])),\"fit-content\"!==e.strategy||this.includeDefaultValues?{layoutManager:e}:{}),{},{objects:this.__serializeObjects(\"toObject\",t)})}toString(){return\"#<Group: (\".concat(this.complexity(),\")>\")}dispose(){this.layoutManager.unsubscribeTargets({targets:this.getObjects(),target:this}),this._activeObjects=[],this.forEachObject((t=>{this._watchObject(!1,t),t.dispose()})),super.dispose()}_createSVGBgRect(t){if(!this.backgroundColor)return\"\";const e=fr.prototype._toSVG.call(this),s=e.indexOf(\"COMMON_PARTS\");e[s]='for=\"group\" ';const i=e.join(\"\");return t?t(i):i}_toSVG(t){const e=[\"<g \",\"COMMON_PARTS\",\" >\\n\"],s=this._createSVGBgRect(t);s&&e.push(\"\\t\\t\",s);for(let s=0;s<this._objects.length;s++)e.push(\"\\t\\t\",this._objects[s].toSVG(t));return e.push(\"</g>\\n\"),e}getSvgStyles(){const t=void 0!==this.opacity&&1!==this.opacity?\"opacity: \".concat(this.opacity,\";\"):\"\",e=this.visible?\"\":\" visibility: hidden;\";return[t,this.getSvgFilter(),e].join(\"\")}toClipPathSVG(t){const e=[],s=this._createSVGBgRect(t);s&&e.push(\"\\t\",s);for(let s=0;s<this._objects.length;s++)e.push(\"\\t\",this._objects[s].toClipPathSVG(t));return this._createBaseClipPathSVGMarkup(e,{reviver:t})}static fromObject(t,e){let{type:r,objects:n=[],layoutManager:o}=t,a=i(t,Or);return Promise.all([It(n,e),Bt(a,e)]).then((t=>{let[e,i]=t;const r=new this(e,s(s(s({},a),i),{},{layoutManager:new kr}));if(o){const t=tt.getClass(o.type),e=tt.getClass(o.strategy);r.layoutManager=new t(new e)}else r.layoutManager=new Tr;return r.layoutManager.subscribeTargets({type:pr,target:r,targets:r.getObjects()}),r.setCoords(),r}))}}t(Dr,\"type\",\"Group\"),t(Dr,\"ownDefaults\",{strokeWidth:0,subTargetCheck:!1,interactive:!1}),tt.setClass(Dr);const Mr=(t,e)=>Math.min(e.width/t.width,e.height/t.height),Pr=(t,e)=>Math.max(e.width/t.width,e.height/t.height),Er=\"\\\\s*,?\\\\s*\",Ar=\"\".concat(Er,\"(\").concat(We,\")\"),jr=\"\".concat(Ar).concat(Ar).concat(Ar).concat(Er,\"([01])\").concat(Er,\"([01])\").concat(Ar).concat(Ar),Fr={m:\"l\",M:\"L\"},Lr=(t,e,s,i,r,n,o,a,h,c,l)=>{const u=rt(t),d=nt(t),g=rt(e),f=nt(e),p=s*r*g-i*n*f+o,m=i*r*g+s*n*f+a;return[\"C\",c+h*(-s*r*d-i*n*u),l+h*(-i*r*d+s*n*u),p+h*(s*r*f+i*n*g),m+h*(i*r*f-s*n*g),p,m]},Rr=(t,e,s,i)=>{const r=Math.atan2(e,t),n=Math.atan2(i,s);return n>=r?n-r:2*Math.PI-(r-n)};function Ir(t,e,s,i,r,n,a,h){let c;if(o.cachesBoundsOfCurve&&(c=[...arguments].join(),_.boundsOfCurveCache[c]))return _.boundsOfCurveCache[c];const l=Math.sqrt,u=Math.abs,d=[],g=[[0,0],[0,0]];let f=6*t-12*s+6*r,p=-3*t+9*s-9*r+3*a,m=3*s-3*t;for(let t=0;t<2;++t){if(t>0&&(f=6*e-12*i+6*n,p=-3*e+9*i-9*n+3*h,m=3*i-3*e),u(p)<1e-12){if(u(f)<1e-12)continue;const t=-m/f;0<t&&t<1&&d.push(t);continue}const s=f*f-4*m*p;if(s<0)continue;const r=l(s),o=(-f+r)/(2*p);0<o&&o<1&&d.push(o);const a=(-f-r)/(2*p);0<a&&a<1&&d.push(a)}let v=d.length;const y=v,x=Wr(t,e,s,i,r,n,a,h);for(;v--;){const{x:t,y:e}=x(d[v]);g[0][v]=t,g[1][v]=e}g[0][y]=t,g[1][y]=e,g[0][y+1]=a,g[1][y+1]=h;const C=[new ot(Math.min(...g[0]),Math.min(...g[1])),new ot(Math.max(...g[0]),Math.max(...g[1]))];return o.cachesBoundsOfCurve&&(_.boundsOfCurveCache[c]=C),C}const Br=(t,e,s)=>{let[i,r,n,o,a,h,c,l]=s;const u=((t,e,s,i,r,n,o)=>{if(0===s||0===i)return[];let a=0,h=0,c=0;const l=Math.PI,u=o*S,d=nt(u),g=rt(u),f=.5*(-g*t-d*e),p=.5*(-g*e+d*t),m=s**2,v=i**2,y=p**2,_=f**2,x=m*v-m*y-v*_;let C=Math.abs(s),b=Math.abs(i);if(x<0){const t=Math.sqrt(1-x/(m*v));C*=t,b*=t}else c=(r===n?-1:1)*Math.sqrt(x/(m*y+v*_));const w=c*C*p/b,T=-c*b*f/C,O=g*w-d*T+.5*t,k=d*w+g*T+.5*e;let D=Rr(1,0,(f-w)/C,(p-T)/b),M=Rr((f-w)/C,(p-T)/b,(-f-w)/C,(-p-T)/b);0===n&&M>0?M-=2*l:1===n&&M<0&&(M+=2*l);const P=Math.ceil(Math.abs(M/l*2)),E=[],A=M/P,j=8/3*Math.sin(A/4)*Math.sin(A/4)/Math.sin(A/2);let F=D+A;for(let t=0;t<P;t++)E[t]=Lr(D,F,g,d,C,b,O,k,j,a,h),a=E[t][5],h=E[t][6],D=F,F+=A;return E})(c-t,l-e,r,n,a,h,o);for(let s=0,i=u.length;s<i;s++)u[s][1]+=t,u[s][2]+=e,u[s][3]+=t,u[s][4]+=e,u[s][5]+=t,u[s][6]+=e;return u},Xr=t=>{let e=0,s=0,i=0,r=0;const n=[];let o,a=0,h=0;for(const c of t){const t=[...c];let l;switch(t[0]){case\"l\":t[1]+=e,t[2]+=s;case\"L\":e=t[1],s=t[2],l=[\"L\",e,s];break;case\"h\":t[1]+=e;case\"H\":e=t[1],l=[\"L\",e,s];break;case\"v\":t[1]+=s;case\"V\":s=t[1],l=[\"L\",e,s];break;case\"m\":t[1]+=e,t[2]+=s;case\"M\":e=t[1],s=t[2],i=t[1],r=t[2],l=[\"M\",e,s];break;case\"c\":t[1]+=e,t[2]+=s,t[3]+=e,t[4]+=s,t[5]+=e,t[6]+=s;case\"C\":a=t[3],h=t[4],e=t[5],s=t[6],l=[\"C\",t[1],t[2],a,h,e,s];break;case\"s\":t[1]+=e,t[2]+=s,t[3]+=e,t[4]+=s;case\"S\":\"C\"===o?(a=2*e-a,h=2*s-h):(a=e,h=s),e=t[3],s=t[4],l=[\"C\",a,h,t[1],t[2],e,s],a=l[3],h=l[4];break;case\"q\":t[1]+=e,t[2]+=s,t[3]+=e,t[4]+=s;case\"Q\":a=t[1],h=t[2],e=t[3],s=t[4],l=[\"Q\",a,h,e,s];break;case\"t\":t[1]+=e,t[2]+=s;case\"T\":\"Q\"===o?(a=2*e-a,h=2*s-h):(a=e,h=s),e=t[1],s=t[2],l=[\"Q\",a,h,e,s];break;case\"a\":t[6]+=e,t[7]+=s;case\"A\":Br(e,s,t).forEach((t=>n.push(t))),e=t[6],s=t[7];break;case\"z\":case\"Z\":e=i,s=r,l=[\"Z\"]}l?(n.push(l),o=l[0]):o=\"\"}return n},Yr=(t,e,s,i)=>Math.sqrt((s-t)**2+(i-e)**2),Wr=(t,e,s,i,r,n,o,a)=>h=>{const c=h**3,l=(t=>3*t**2*(1-t))(h),u=(t=>3*t*(1-t)**2)(h),d=(t=>(1-t)**3)(h);return new ot(o*c+r*l+s*u+t*d,a*c+n*l+i*u+e*d)},Vr=t=>t**2,zr=t=>2*t*(1-t),Hr=t=>(1-t)**2,Gr=(t,e,s,i,r,n,o,a)=>h=>{const c=Vr(h),l=zr(h),u=Hr(h),d=3*(u*(s-t)+l*(r-s)+c*(o-r)),g=3*(u*(i-e)+l*(n-i)+c*(a-n));return Math.atan2(g,d)},Nr=(t,e,s,i,r,n)=>o=>{const a=Vr(o),h=zr(o),c=Hr(o);return new ot(r*a+s*h+t*c,n*a+i*h+e*c)},Ur=(t,e,s,i,r,n)=>o=>{const a=1-o,h=2*(a*(s-t)+o*(r-s)),c=2*(a*(i-e)+o*(n-i));return Math.atan2(c,h)},qr=(t,e,s)=>{let i=new ot(e,s),r=0;for(let e=1;e<=100;e+=1){const s=t(e/100);r+=Yr(i.x,i.y,s.x,s.y),i=s}return r},Kr=(t,e)=>{let i,r=0,n=0,o={x:t.x,y:t.y},a=s({},o),h=.01,c=0;const l=t.iterator,u=t.angleFinder;for(;n<e&&h>1e-4;)a=l(r),c=r,i=Yr(o.x,o.y,a.x,a.y),i+n>e?(r-=h,h/=2):(o=a,r+=h,n+=i);return s(s({},a),{},{angle:u(c)})},Jr=t=>{let e,s,i=0,r=0,n=0,o=0,a=0;const h=[];for(const c of t){const t={x:r,y:n,command:c[0],length:0};switch(c[0]){case\"M\":s=t,s.x=o=r=c[1],s.y=a=n=c[2];break;case\"L\":s=t,s.length=Yr(r,n,c[1],c[2]),r=c[1],n=c[2];break;case\"C\":e=Wr(r,n,c[1],c[2],c[3],c[4],c[5],c[6]),s=t,s.iterator=e,s.angleFinder=Gr(r,n,c[1],c[2],c[3],c[4],c[5],c[6]),s.length=qr(e,r,n),r=c[5],n=c[6];break;case\"Q\":e=Nr(r,n,c[1],c[2],c[3],c[4]),s=t,s.iterator=e,s.angleFinder=Ur(r,n,c[1],c[2],c[3],c[4]),s.length=qr(e,r,n),r=c[3],n=c[4];break;case\"Z\":s=t,s.destX=o,s.destY=a,s.length=Yr(r,n,o,a),r=o,n=a}i+=s.length,h.push(s)}return h.push({length:i,x:r,y:n}),h},Qr=function(t,e){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Jr(t),r=0;for(;e-i[r].length>0&&r<i.length-2;)e-=i[r].length,r++;const n=i[r],o=e/n.length,a=t[r];switch(n.command){case\"M\":return{x:n.x,y:n.y,angle:0};case\"Z\":return s(s({},new ot(n.x,n.y).lerp(new ot(n.destX,n.destY),o)),{},{angle:Math.atan2(n.destY-n.y,n.destX-n.x)});case\"L\":return s(s({},new ot(n.x,n.y).lerp(new ot(a[1],a[2]),o)),{},{angle:Math.atan2(a[2]-n.y,a[1]-n.x)});case\"C\":case\"Q\":return Kr(n,e)}},Zr=new RegExp(\"[mzlhvcsqta][^mzlhvcsqta]*\",\"gi\"),$r=new RegExp(jr,\"g\"),tn=new RegExp(We,\"gi\"),en={m:2,l:2,h:1,v:1,c:6,s:4,q:4,t:2,a:7},sn=t=>{var e;const s=[],i=null!==(e=t.match(Zr))&&void 0!==e?e:[];for(const t of i){const e=t[0];if(\"z\"===e||\"Z\"===e){s.push([e]);continue}const i=en[e.toLowerCase()];let r=[];if(\"a\"===e||\"A\"===e){$r.lastIndex=0;for(let e=null;e=$r.exec(t);)r.push(...e.slice(1))}else r=t.match(tn)||[];for(let t=0;t<r.length;t+=i){const n=new Array(i),o=Fr[e];n[0]=t>0&&o?o:e;for(let e=0;e<i;e++)n[e+1]=parseFloat(r[t+e]);s.push(n)}}return s},rn=function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,s=new ot(t[0]),i=new ot(t[1]),r=1,n=0;const o=[],a=t.length,h=a>2;let c;for(h&&(r=t[2].x<i.x?-1:t[2].x===i.x?0:1,n=t[2].y<i.y?-1:t[2].y===i.y?0:1),o.push([\"M\",s.x-r*e,s.y-n*e]),c=1;c<a;c++){if(!s.eq(i)){const t=s.midPointFrom(i);o.push([\"Q\",s.x,s.y,t.x,t.y])}s=t[c],c+1<t.length&&(i=t[c+1])}return h&&(r=s.x>t[c-2].x?1:s.x===t[c-2].x?0:-1,n=s.y>t[c-2].y?1:s.y===t[c-2].y?0:-1),o.push([\"L\",s.x+r*e,s.y+n*e]),o},nn=(t,e)=>t.map((t=>t.map(((t,s)=>0===s||void 0===e?t:qt(t,e))).join(\" \"))).join(\" \");function on(t,e){const s=t.style;s&&e&&(\"string\"==typeof e?s.cssText+=\";\"+e:Object.entries(e).forEach((t=>{let[e,i]=t;return s.setProperty(e,i)})))}const an=(t,e)=>Math.floor(Math.random()*(e-t+1))+t;function hn(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const s=e.onComplete||C,i=new(v().XMLHttpRequest),r=e.signal,n=function(){i.abort()},o=function(){r&&r.removeEventListener(\"abort\",n),i.onerror=i.ontimeout=C};if(r&&r.aborted)throw new c(\"request\");return r&&r.addEventListener(\"abort\",n,{once:!0}),i.onreadystatechange=function(){4===i.readyState&&(o(),s(i),i.onreadystatechange=C)},i.onerror=i.ontimeout=o,i.open(\"get\",t,!0),i.send(),i}const cn=(t,e)=>{let s=t._findCenterFromElement();t.transformMatrix&&((t=>{if(t.transformMatrix){const{scaleX:e,scaleY:s,angle:i,skewX:r}=kt(t.transformMatrix);t.flipX=!1,t.flipY=!1,t.set(G,e),t.set(N,s),t.angle=i,t.skewX=r,t.skewY=0}})(t),s=s.transform(t.transformMatrix)),delete t.transformMatrix,e&&(t.scaleX*=e.scaleX,t.scaleY*=e.scaleY,t.cropX=e.cropX,t.cropY=e.cropY,s.x+=e.offsetLeft,s.y+=e.offsetTop,t.width=e.width,t.height=e.height),t.setPositionByOrigin(s,D,D)};var ln=Object.freeze({__proto__:null,addTransformToObject:ye,animate:As,animateColor:js,applyTransformToObject:_e,calcAngleBetweenVectors:ss,calcDimensionsMatrix:Ft,calcPlaneChangeMatrix:we,calcVectorRotation:is,cancelAnimFrame:dt,capValue:ds,composeMatrix:Lt,copyCanvasElement:t=>{var e;const s=vt(t);return null===(e=s.getContext(\"2d\"))||void 0===e||e.drawImage(t,0,0),s},cos:rt,createCanvasElement:pt,createImage:mt,createRotateMatrix:Mt,createScaleMatrix:Pt,createSkewXMatrix:At,createSkewYMatrix:jt,createTranslateMatrix:Dt,createVector:ts,crossProduct:os,degreesToRadians:_t,dotProduct:as,ease:Cs,enlivenObjectEnlivables:Bt,enlivenObjects:It,findScaleToCover:Pr,findScaleToFit:Mr,getBoundsOfCurve:Ir,getOrthonormalVector:ns,getPathSegmentsInfo:Jr,getPointOnPath:Qr,getPointer:ge,getRandomInt:an,getRegularPolygonPath:(t,e)=>{const s=2*Math.PI/t;let i=-b;t%2==0&&(i+=s/2);const r=new Array(t+1);for(let n=0;n<t;n++){const t=n*s+i,{x:o,y:a}=new ot(rt(t),nt(t)).scalarMultiply(e);r[n]=[0===n?\"M\":\"L\",o,a]}return r[t]=[\"Z\"],r},getSmoothPathFromPoints:rn,getSvgAttributes:t=>{const e=[\"instantiated_by_use\",\"style\",\"id\",\"class\"];switch(t){case\"linearGradient\":return e.concat([\"x1\",\"y1\",\"x2\",\"y2\",\"gradientUnits\",\"gradientTransform\"]);case\"radialGradient\":return e.concat([\"gradientUnits\",\"gradientTransform\",\"cx\",\"cy\",\"r\",\"fx\",\"fy\",\"fr\"]);case\"stop\":return e.concat([\"offset\",\"stop-color\",\"stop-opacity\"])}return e},getUnitVector:rs,groupSVGElements:(t,e)=>t&&1===t.length?t[0]:new Dr(t,e),hasStyleChanged:Pi,invertTransform:wt,isBetweenVectors:hs,isIdentityMatrix:Ct,isTouchEvent:fe,isTransparent:_i,joinPath:nn,loadImage:Rt,magnitude:es,makeBoundingBoxFromPoints:me,makePathSimpler:Xr,matrixToSVG:Qt,mergeClipPaths:(t,e)=>{var s;let i=t,r=e;i.inverted&&!r.inverted&&(i=e,r=t),Oe(r,null===(s=r.group)||void 0===s?void 0:s.calcTransformMatrix(),i.calcTransformMatrix());const n=i.inverted&&r.inverted;return n&&(i.inverted=r.inverted=!1),new Dr([i],{clipPath:r,inverted:n})},multiplyTransformMatrices:St,multiplyTransformMatrixArray:Tt,parsePath:sn,parsePreserveAspectRatioAttribute:Jt,parseUnit:Kt,pick:Xt,projectStrokeOnPoints:Si,qrDecompose:kt,radiansToDegrees:xt,removeFromArray:it,removeTransformFromObject:(t,e)=>{const s=wt(e),i=St(s,t.calcOwnMatrix());_e(t,i)},removeTransformMatrixForSvgParsing:cn,request:hn,requestAnimFrame:ut,resetObjectTransform:xe,rotatePoint:(t,e,s)=>t.rotate(s,e),rotateVector:$e,saveObjectTransform:Ce,sendObjectToPlane:Oe,sendPointToPlane:Se,sendVectorToPlane:Te,setStyle:on,sin:nt,sizeAfterTransform:be,string:Mi,stylesFromArray:Ai,stylesToArray:Ei,toDataURL:yt,toFixed:qt,transformPath:(t,e,s)=>(s&&(e=St(e,[1,0,0,1,-s.x,-s.y])),t.map((t=>{const s=[...t];for(let i=1;i<t.length-1;i+=2){const{x:r,y:n}=bt({x:t[i],y:t[i+1]},e);s[i]=r,s[i+1]=n}return s}))),transformPoint:bt});class un extends ce{constructor(e){let{allowTouchScrolling:s=!1,containerClass:i=\"\"}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};super(e),t(this,\"upper\",void 0),t(this,\"container\",void 0);const{el:r}=this.lower,n=this.createUpperCanvas();this.upper={el:n,ctx:n.getContext(\"2d\")},this.applyCanvasStyle(r,{allowTouchScrolling:s}),this.applyCanvasStyle(n,{allowTouchScrolling:s,styles:{position:\"absolute\",left:\"0\",top:\"0\"}});const o=this.createContainerElement();o.classList.add(i),r.parentNode&&r.parentNode.replaceChild(o,r),o.append(r,n),this.container=o}createUpperCanvas(){const{el:t}=this.lower,e=pt();return e.className=t.className,e.classList.remove(\"lower-canvas\"),e.classList.add(\"upper-canvas\"),e.setAttribute(\"data-fabric\",\"top\"),e.style.cssText=t.style.cssText,e.setAttribute(\"draggable\",\"true\"),e}createContainerElement(){const t=m().createElement(\"div\");return t.setAttribute(\"data-fabric\",\"wrapper\"),on(t,{position:\"relative\"}),he(t),t}applyCanvasStyle(t,e){const{styles:i,allowTouchScrolling:r}=e;on(t,s(s({},i),{},{\"touch-action\":r?\"manipulation\":j})),he(t)}setDimensions(t,e){super.setDimensions(t,e);const{el:s,ctx:i}=this.upper;oe(s,i,t,e)}setCSSDimensions(t){super.setCSSDimensions(t),ae(this.upper.el,t),ae(this.container,t)}cleanupDOM(t){const e=this.container,{el:s}=this.lower,{el:i}=this.upper;super.cleanupDOM(t),e.removeChild(i),e.removeChild(s),e.parentNode&&e.parentNode.replaceChild(s,e)}dispose(){super.dispose(),p().dispose(this.upper.el),delete this.upper,delete this.container}}class dn extends ue{constructor(){super(...arguments),t(this,\"targets\",[]),t(this,\"_hoveredTargets\",[]),t(this,\"_objectsToRender\",void 0),t(this,\"_currentTransform\",null),t(this,\"_groupSelector\",null),t(this,\"contextTopDirty\",!1)}static getDefaults(){return s(s({},super.getDefaults()),dn.ownDefaults)}get upperCanvasEl(){var t;return null===(t=this.elements.upper)||void 0===t?void 0:t.el}get contextTop(){var t;return null===(t=this.elements.upper)||void 0===t?void 0:t.ctx}get wrapperEl(){return this.elements.container}initElements(t){this.elements=new un(t,{allowTouchScrolling:this.allowTouchScrolling,containerClass:this.containerClass}),this._createCacheCanvas()}_onObjectAdded(t){this._objectsToRender=void 0,super._onObjectAdded(t)}_onObjectRemoved(t){this._objectsToRender=void 0,t===this._activeObject&&(this.fire(\"before:selection:cleared\",{deselected:[t]}),this._discardActiveObject(),this.fire(\"selection:cleared\",{deselected:[t]}),t.fire(\"deselected\",{target:t})),t===this._hoveredTarget&&(this._hoveredTarget=void 0,this._hoveredTargets=[]),super._onObjectRemoved(t)}_onStackOrderChanged(){this._objectsToRender=void 0,super._onStackOrderChanged()}_chooseObjectsToRender(){const t=this._activeObject;return!this.preserveObjectStacking&&t?this._objects.filter((e=>!e.group&&e!==t)).concat(t):this._objects}renderAll(){this.cancelRequestedRender(),this.destroyed||(!this.contextTopDirty||this._groupSelector||this.isDrawingMode||(this.clearContext(this.contextTop),this.contextTopDirty=!1),this.hasLostContext&&(this.renderTopLayer(this.contextTop),this.hasLostContext=!1),!this._objectsToRender&&(this._objectsToRender=this._chooseObjectsToRender()),this.renderCanvas(this.getContext(),this._objectsToRender))}renderTopLayer(t){t.save(),this.isDrawingMode&&this._isCurrentlyDrawing&&(this.freeDrawingBrush&&this.freeDrawingBrush._render(),this.contextTopDirty=!0),this.selection&&this._groupSelector&&(this._drawSelection(t),this.contextTopDirty=!0),t.restore()}renderTop(){const t=this.contextTop;this.clearContext(t),this.renderTopLayer(t),this.fire(\"after:render\",{ctx:t})}setTargetFindTolerance(t){t=Math.round(t),this.targetFindTolerance=t;const e=this.getRetinaScaling(),s=Math.ceil((2*t+1)*e);this.pixelFindCanvasEl.width=this.pixelFindCanvasEl.height=s,this.pixelFindContext.scale(e,e)}isTargetTransparent(t,e,s){const i=this.targetFindTolerance,r=this.pixelFindContext;this.clearContext(r),r.save(),r.translate(-e+i,-s+i),r.transform(...this.viewportTransform);const n=t.selectionBackgroundColor;t.selectionBackgroundColor=\"\",t.render(r),t.selectionBackgroundColor=n,r.restore();const o=Math.round(i*this.getRetinaScaling());return _i(r,o,o,o)}_isSelectionKeyPressed(t){const e=this.selectionKey;return!!e&&(Array.isArray(e)?!!e.find((e=>!!e&&!0===t[e])):t[e])}_shouldClearSelection(t,e){const s=this.getActiveObjects(),i=this._activeObject;return!!(!e||e&&i&&s.length>1&&-1===s.indexOf(e)&&i!==e&&!this._isSelectionKeyPressed(t)||e&&!e.evented||e&&!e.selectable&&i&&i!==e)}_shouldCenterTransform(t,e,s){if(!t)return;let i;return e===H||e===G||e===N||e===Y?i=this.centeredScaling||t.centeredScaling:e===B&&(i=this.centeredRotation||t.centeredRotation),i?!s:s}_getOriginFromCorner(t,e){const s={x:t.originX,y:t.originY};return e?([\"ml\",\"tl\",\"bl\"].includes(e)?s.x=A:[\"mr\",\"tr\",\"br\"].includes(e)&&(s.x=M),[\"tl\",\"mt\",\"tr\"].includes(e)?s.y=E:[\"bl\",\"mb\",\"br\"].includes(e)&&(s.y=P),s):s}_setupCurrentTransform(t,e,i){var r;const n=e.group?Se(this.getScenePoint(t),void 0,e.group.calcTransformMatrix()):this.getScenePoint(t),{key:o=\"\",control:a}=e.getActiveControl()||{},h=i&&a?null===(r=a.getActionHandler(t,e,a))||void 0===r?void 0:r.bind(a):Ie,c=((t,e,s,i)=>{if(!e||!t)return\"drag\";const r=i.controls[e];return r.getActionName(s,r,i)})(i,o,t,e),l=t[this.centeredKey],u=this._shouldCenterTransform(e,c,l)?{x:D,y:D}:this._getOriginFromCorner(e,o),d={target:e,action:c,actionHandler:h,actionPerformed:!1,corner:o,scaleX:e.scaleX,scaleY:e.scaleY,skewX:e.skewX,skewY:e.skewY,offsetX:n.x-e.left,offsetY:n.y-e.top,originX:u.x,originY:u.y,ex:n.x,ey:n.y,lastX:n.x,lastY:n.y,theta:_t(e.angle),width:e.width,height:e.height,shiftKey:t.shiftKey,altKey:l,original:s(s({},Ce(e)),{},{originX:u.x,originY:u.y})};this._currentTransform=d,this.fire(\"before:transform\",{e:t,transform:d})}setCursor(t){this.upperCanvasEl.style.cursor=t}_drawSelection(t){const{x:e,y:s,deltaX:i,deltaY:r}=this._groupSelector,n=new ot(e,s).transform(this.viewportTransform),o=new ot(e+i,s+r).transform(this.viewportTransform),a=this.selectionLineWidth/2;let h=Math.min(n.x,o.x),c=Math.min(n.y,o.y),l=Math.max(n.x,o.x),u=Math.max(n.y,o.y);this.selectionColor&&(t.fillStyle=this.selectionColor,t.fillRect(h,c,l-h,u-c)),this.selectionLineWidth&&this.selectionBorderColor&&(t.lineWidth=this.selectionLineWidth,t.strokeStyle=this.selectionBorderColor,h+=a,c+=a,l-=a,u-=a,yi.prototype._setLineDash.call(this,t,this.selectionDashArray),t.strokeRect(h,c,l-h,u-c))}findTarget(t){if(this.skipTargetFind)return;const e=this.getViewportPoint(t),s=this._activeObject,i=this.getActiveObjects();if(this.targets=[],s&&i.length>=1){if(s.findControl(e,fe(t)))return s;if(i.length>1&&this.searchPossibleTargets([s],e))return s;if(s===this.searchPossibleTargets([s],e)){if(this.preserveObjectStacking){const i=this.targets;this.targets=[];const r=this.searchPossibleTargets(this._objects,e);return t[this.altSelectionKey]&&r&&r!==s?(this.targets=i,s):r}return s}}return this.searchPossibleTargets(this._objects,e)}_pointIsInObjectSelectionArea(t,e){let s=t.getCoords();const i=this.getZoom(),r=t.padding/i;if(r){const[t,e,i,n]=s,o=Math.atan2(e.y-t.y,e.x-t.x),a=rt(o)*r,h=nt(o)*r,c=a+h,l=a-h;s=[new ot(t.x-l,t.y-c),new ot(e.x+c,e.y-l),new ot(i.x+l,i.y+c),new ot(n.x-c,n.y+l)]}return Fs.isPointInPolygon(e,s)}_checkTarget(t,e){if(t&&t.visible&&t.evented&&this._pointIsInObjectSelectionArea(t,Se(e,void 0,this.viewportTransform))){if(!this.perPixelTargetFind&&!t.perPixelTargetFind||t.isEditing)return!0;if(!this.isTargetTransparent(t,e.x,e.y))return!0}return!1}_searchPossibleTargets(t,e){let s=t.length;for(;s--;){const i=t[s];if(this._checkTarget(i,e)){if(ht(i)&&i.subTargetCheck){const t=this._searchPossibleTargets(i._objects,e);t&&this.targets.push(t)}return i}}}searchPossibleTargets(t,e){const s=this._searchPossibleTargets(t,e);if(s&&ht(s)&&s.interactive&&this.targets[0]){const t=this.targets;for(let e=t.length-1;e>0;e--){const s=t[e];if(!ht(s)||!s.interactive)return s}return t[0]}return s}getViewportPoint(t){return this._pointer?this._pointer:this.getPointer(t,!0)}getScenePoint(t){return this._absolutePointer?this._absolutePointer:this.getPointer(t)}getPointer(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const s=this.upperCanvasEl,i=s.getBoundingClientRect();let r=ge(t),n=i.width||0,o=i.height||0;n&&o||(P in i&&E in i&&(o=Math.abs(i.top-i.bottom)),A in i&&M in i&&(n=Math.abs(i.right-i.left))),this.calcOffset(),r.x=r.x-this._offset.left,r.y=r.y-this._offset.top,e||(r=Se(r,void 0,this.viewportTransform));const a=this.getRetinaScaling();1!==a&&(r.x/=a,r.y/=a);const h=0===n||0===o?new ot(1,1):new ot(s.width/n,s.height/o);return r.multiply(h)}_setDimensionsImpl(t,e){this._resetTransformEventData(),super._setDimensionsImpl(t,e),this._isCurrentlyDrawing&&this.freeDrawingBrush&&this.freeDrawingBrush._setBrushStyles(this.contextTop)}_createCacheCanvas(){this.pixelFindCanvasEl=pt(),this.pixelFindContext=this.pixelFindCanvasEl.getContext(\"2d\",{willReadFrequently:!0}),this.setTargetFindTolerance(this.targetFindTolerance)}getTopContext(){return this.elements.upper.ctx}getSelectionContext(){return this.elements.upper.ctx}getSelectionElement(){return this.elements.upper.el}getActiveObject(){return this._activeObject}getActiveObjects(){const t=this._activeObject;return se(t)?t.getObjects():t?[t]:[]}_fireSelectionEvents(t,e){let s=!1,i=!1;const r=this.getActiveObjects(),n=[],o=[];t.forEach((t=>{r.includes(t)||(s=!0,t.fire(\"deselected\",{e:e,target:t}),o.push(t))})),r.forEach((i=>{t.includes(i)||(s=!0,i.fire(\"selected\",{e:e,target:i}),n.push(i))})),t.length>0&&r.length>0?(i=!0,s&&this.fire(\"selection:updated\",{e:e,selected:n,deselected:o})):r.length>0?(i=!0,this.fire(\"selection:created\",{e:e,selected:n})):t.length>0&&(i=!0,this.fire(\"selection:cleared\",{e:e,deselected:o})),i&&(this._objectsToRender=void 0)}setActiveObject(t,e){const s=this.getActiveObjects(),i=this._setActiveObject(t,e);return this._fireSelectionEvents(s,e),i}_setActiveObject(t,e){const s=this._activeObject;return s!==t&&(!(!this._discardActiveObject(e,t)&&this._activeObject)&&(!t.onSelect({e:e})&&(this._activeObject=t,se(t)&&s!==t&&t.set(\"canvas\",this),t.setCoords(),!0)))}_discardActiveObject(t,e){const s=this._activeObject;return!!s&&(!s.onDeselect({e:t,object:e})&&(this._currentTransform&&this._currentTransform.target===s&&this.endCurrentTransform(t),se(s)&&s===this._hoveredTarget&&(this._hoveredTarget=void 0),this._activeObject=void 0,!0))}discardActiveObject(t){const e=this.getActiveObjects(),s=this.getActiveObject();e.length&&this.fire(\"before:selection:cleared\",{e:t,deselected:[s]});const i=this._discardActiveObject(t);return this._fireSelectionEvents(e,t),i}endCurrentTransform(t){const e=this._currentTransform;this._finalizeCurrentTransform(t),e&&e.target&&(e.target.isMoving=!1),this._currentTransform=null}_finalizeCurrentTransform(t){const e=this._currentTransform,s=e.target,i={e:t,target:s,transform:e,action:e.action};s._scaling&&(s._scaling=!1),s.setCoords(),e.actionPerformed&&(this.fire(\"object:modified\",i),s.fire(Q,i))}setViewportTransform(t){super.setViewportTransform(t);const e=this._activeObject;e&&e.setCoords()}destroy(){const t=this._activeObject;se(t)&&(t.removeAll(),t.dispose()),delete this._activeObject,super.destroy(),this.pixelFindContext=null,this.pixelFindCanvasEl=void 0}clear(){this.discardActiveObject(),this._activeObject=void 0,this.clearContext(this.contextTop),super.clear()}drawControls(t){const e=this._activeObject;e&&e._renderControls(t)}_toObject(t,e,s){const i=this._realizeGroupTransformOnObject(t),r=super._toObject(t,e,s);return t.set(i),r}_realizeGroupTransformOnObject(t){const{group:e}=t;if(e&&se(e)&&this._activeObject===e){const s=Xt(t,[\"angle\",\"flipX\",\"flipY\",M,G,N,U,q,P]);return ye(t,e.calcOwnMatrix()),s}return{}}_setSVGObject(t,e,s){const i=this._realizeGroupTransformOnObject(e);super._setSVGObject(t,e,s),e.set(i)}}t(dn,\"ownDefaults\",{uniformScaling:!0,uniScaleKey:\"shiftKey\",centeredScaling:!1,centeredRotation:!1,centeredKey:\"altKey\",altActionKey:\"shiftKey\",selection:!0,selectionKey:\"shiftKey\",selectionColor:\"rgba(100, 100, 255, 0.3)\",selectionDashArray:[],selectionBorderColor:\"rgba(255, 255, 255, 0.3)\",selectionLineWidth:1,selectionFullyContained:!1,hoverCursor:\"move\",moveCursor:\"move\",defaultCursor:\"default\",freeDrawingCursor:\"crosshair\",notAllowedCursor:\"not-allowed\",perPixelTargetFind:!1,targetFindTolerance:0,skipTargetFind:!1,stopContextMenu:!1,fireRightClick:!1,fireMiddleClick:!1,enablePointerEvents:!1,containerClass:\"canvas-container\",preserveObjectStacking:!1});class gn{constructor(e){t(this,\"targets\",[]),t(this,\"__disposer\",void 0);const s=()=>{const{hiddenTextarea:t}=e.getActiveObject()||{};t&&t.focus()},i=e.upperCanvasEl;i.addEventListener(\"click\",s),this.__disposer=()=>i.removeEventListener(\"click\",s)}exitTextEditing(){this.target=void 0,this.targets.forEach((t=>{t.isEditing&&t.exitEditing()}))}add(t){this.targets.push(t)}remove(t){this.unregister(t),it(this.targets,t)}register(t){this.target=t}unregister(t){t===this.target&&(this.target=void 0)}onMouseMove(t){var e;(null===(e=this.target)||void 0===e?void 0:e.isEditing)&&this.target.updateSelectionOnMouseMove(t)}clear(){this.targets=[],this.target=void 0}dispose(){this.clear(),this.__disposer(),delete this.__disposer}}const fn=[\"target\",\"oldTarget\",\"fireCanvas\",\"e\"],pn={passive:!1},mn=(t,e)=>{const s=t.getViewportPoint(e),i=t.getScenePoint(e);return{viewportPoint:s,scenePoint:i,pointer:s,absolutePointer:i}},vn=function(t){for(var e=arguments.length,s=new Array(e>1?e-1:0),i=1;i<e;i++)s[i-1]=arguments[i];return t.addEventListener(...s)},yn=function(t){for(var e=arguments.length,s=new Array(e>1?e-1:0),i=1;i<e;i++)s[i-1]=arguments[i];return t.removeEventListener(...s)},_n={mouse:{in:\"over\",out:\"out\",targetIn:\"mouseover\",targetOut:\"mouseout\",canvasIn:\"mouse:over\",canvasOut:\"mouse:out\"},drag:{in:\"enter\",out:\"leave\",targetIn:\"dragenter\",targetOut:\"dragleave\",canvasIn:\"drag:enter\",canvasOut:\"drag:leave\"}};class xn extends dn{constructor(e){super(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:{}),t(this,\"_isClick\",void 0),t(this,\"textEditingManager\",new gn(this)),[\"_onMouseDown\",\"_onTouchStart\",\"_onMouseMove\",\"_onMouseUp\",\"_onTouchEnd\",\"_onResize\",\"_onMouseWheel\",\"_onMouseOut\",\"_onMouseEnter\",\"_onContextMenu\",\"_onDoubleClick\",\"_onDragStart\",\"_onDragEnd\",\"_onDragProgress\",\"_onDragOver\",\"_onDragEnter\",\"_onDragLeave\",\"_onDrop\"].forEach((t=>{this[t]=this[t].bind(this)})),this.addOrRemove(vn,\"add\")}_getEventPrefix(){return this.enablePointerEvents?\"pointer\":\"mouse\"}addOrRemove(t,e){const s=this.upperCanvasEl,i=this._getEventPrefix();t(ne(s),\"resize\",this._onResize),t(s,i+\"down\",this._onMouseDown),t(s,\"\".concat(i,\"move\"),this._onMouseMove,pn),t(s,\"\".concat(i,\"out\"),this._onMouseOut),t(s,\"\".concat(i,\"enter\"),this._onMouseEnter),t(s,\"wheel\",this._onMouseWheel),t(s,\"contextmenu\",this._onContextMenu),t(s,\"dblclick\",this._onDoubleClick),t(s,\"dragstart\",this._onDragStart),t(s,\"dragend\",this._onDragEnd),t(s,\"dragover\",this._onDragOver),t(s,\"dragenter\",this._onDragEnter),t(s,\"dragleave\",this._onDragLeave),t(s,\"drop\",this._onDrop),this.enablePointerEvents||t(s,\"touchstart\",this._onTouchStart,pn)}removeListeners(){this.addOrRemove(yn,\"remove\");const t=this._getEventPrefix(),e=re(this.upperCanvasEl);yn(e,\"\".concat(t,\"up\"),this._onMouseUp),yn(e,\"touchend\",this._onTouchEnd,pn),yn(e,\"\".concat(t,\"move\"),this._onMouseMove,pn),yn(e,\"touchmove\",this._onMouseMove,pn),clearTimeout(this._willAddMouseDown)}_onMouseWheel(t){this.__onMouseWheel(t)}_onMouseOut(t){const e=this._hoveredTarget,i=s({e:t},mn(this,t));this.fire(\"mouse:out\",s(s({},i),{},{target:e})),this._hoveredTarget=void 0,e&&e.fire(\"mouseout\",s({},i)),this._hoveredTargets.forEach((t=>{this.fire(\"mouse:out\",s(s({},i),{},{target:t})),t&&t.fire(\"mouseout\",s({},i))})),this._hoveredTargets=[]}_onMouseEnter(t){this._currentTransform||this.findTarget(t)||(this.fire(\"mouse:over\",s({e:t},mn(this,t))),this._hoveredTarget=void 0,this._hoveredTargets=[])}_onDragStart(t){this._isClick=!1;const e=this.getActiveObject();if(e&&e.onDragStart(t)){this._dragSource=e;const s={e:t,target:e};return this.fire(\"dragstart\",s),e.fire(\"dragstart\",s),void vn(this.upperCanvasEl,\"drag\",this._onDragProgress)}pe(t)}_renderDragEffects(t,e,s){let i=!1;const r=this._dropTarget;r&&r!==e&&r!==s&&(r.clearContextTop(),i=!0),null==e||e.clearContextTop(),s!==e&&(null==s||s.clearContextTop());const n=this.contextTop;n.save(),n.transform(...this.viewportTransform),e&&(n.save(),e.transform(n),e.renderDragSourceEffect(t),n.restore(),i=!0),s&&(n.save(),s.transform(n),s.renderDropTargetEffect(t),n.restore(),i=!0),n.restore(),i&&(this.contextTopDirty=!0)}_onDragEnd(t){const e=!!t.dataTransfer&&t.dataTransfer.dropEffect!==j,s=e?this._activeObject:void 0,i={e:t,target:this._dragSource,subTargets:this.targets,dragSource:this._dragSource,didDrop:e,dropTarget:s};yn(this.upperCanvasEl,\"drag\",this._onDragProgress),this.fire(\"dragend\",i),this._dragSource&&this._dragSource.fire(\"dragend\",i),delete this._dragSource,this._onMouseUp(t)}_onDragProgress(t){const e={e:t,target:this._dragSource,dragSource:this._dragSource,dropTarget:this._draggedoverTarget};this.fire(\"drag\",e),this._dragSource&&this._dragSource.fire(\"drag\",e)}findDragTargets(t){this.targets=[];return{target:this._searchPossibleTargets(this._objects,this.getViewportPoint(t)),targets:[...this.targets]}}_onDragOver(t){const e=\"dragover\",{target:s,targets:i}=this.findDragTargets(t),r=this._dragSource,n={e:t,target:s,subTargets:i,dragSource:r,canDrop:!1,dropTarget:void 0};let o;this.fire(e,n),this._fireEnterLeaveEvents(s,n),s&&(s.canDrop(t)&&(o=s),s.fire(e,n));for(let s=0;s<i.length;s++){const r=i[s];r.canDrop(t)&&(o=r),r.fire(e,n)}this._renderDragEffects(t,r,o),this._dropTarget=o}_onDragEnter(t){const{target:e,targets:s}=this.findDragTargets(t),i={e:t,target:e,subTargets:s,dragSource:this._dragSource};this.fire(\"dragenter\",i),this._fireEnterLeaveEvents(e,i)}_onDragLeave(t){const e={e:t,target:this._draggedoverTarget,subTargets:this.targets,dragSource:this._dragSource};this.fire(\"dragleave\",e),this._fireEnterLeaveEvents(void 0,e),this._renderDragEffects(t,this._dragSource),this._dropTarget=void 0,this.targets=[],this._hoveredTargets=[]}_onDrop(t){const{target:e,targets:i}=this.findDragTargets(t),r=this._basicEventHandler(\"drop:before\",s({e:t,target:e,subTargets:i,dragSource:this._dragSource},mn(this,t)));r.didDrop=!1,r.dropTarget=void 0,this._basicEventHandler(\"drop\",r),this.fire(\"drop:after\",r)}_onContextMenu(t){const e=this.findTarget(t),s=this.targets||[],i=this._basicEventHandler(\"contextmenu:before\",{e:t,target:e,subTargets:s});return this.stopContextMenu&&pe(t),this._basicEventHandler(\"contextmenu\",i),!1}_onDoubleClick(t){this._cacheTransformEventData(t),this._handleEvent(t,\"dblclick\"),this._resetTransformEventData()}getPointerId(t){const e=t.changedTouches;return e?e[0]&&e[0].identifier:this.enablePointerEvents?t.pointerId:-1}_isMainEvent(t){return!0===t.isPrimary||!1!==t.isPrimary&&(\"touchend\"===t.type&&0===t.touches.length||(!t.changedTouches||t.changedTouches[0].identifier===this.mainTouchId))}_onTouchStart(t){let e=!this.allowTouchScrolling;const s=this._activeObject;void 0===this.mainTouchId&&(this.mainTouchId=this.getPointerId(t)),this.__onMouseDown(t),(this.isDrawingMode||s&&this._target===s)&&(e=!0),e&&t.preventDefault(),this._resetTransformEventData();const i=this.upperCanvasEl,r=this._getEventPrefix(),n=re(i);vn(n,\"touchend\",this._onTouchEnd,pn),e&&vn(n,\"touchmove\",this._onMouseMove,pn),yn(i,\"\".concat(r,\"down\"),this._onMouseDown)}_onMouseDown(t){this.__onMouseDown(t),this._resetTransformEventData();const e=this.upperCanvasEl,s=this._getEventPrefix();yn(e,\"\".concat(s,\"move\"),this._onMouseMove,pn);const i=re(e);vn(i,\"\".concat(s,\"up\"),this._onMouseUp),vn(i,\"\".concat(s,\"move\"),this._onMouseMove,pn)}_onTouchEnd(t){if(t.touches.length>0)return;this.__onMouseUp(t),this._resetTransformEventData(),delete this.mainTouchId;const e=this._getEventPrefix(),s=re(this.upperCanvasEl);yn(s,\"touchend\",this._onTouchEnd,pn),yn(s,\"touchmove\",this._onMouseMove,pn),this._willAddMouseDown&&clearTimeout(this._willAddMouseDown),this._willAddMouseDown=setTimeout((()=>{vn(this.upperCanvasEl,\"\".concat(e,\"down\"),this._onMouseDown),this._willAddMouseDown=0}),400)}_onMouseUp(t){this.__onMouseUp(t),this._resetTransformEventData();const e=this.upperCanvasEl,s=this._getEventPrefix();if(this._isMainEvent(t)){const t=re(this.upperCanvasEl);yn(t,\"\".concat(s,\"up\"),this._onMouseUp),yn(t,\"\".concat(s,\"move\"),this._onMouseMove,pn),vn(e,\"\".concat(s,\"move\"),this._onMouseMove,pn)}}_onMouseMove(t){const e=this.getActiveObject();!this.allowTouchScrolling&&(!e||!e.shouldStartDragging(t))&&t.preventDefault&&t.preventDefault(),this.__onMouseMove(t)}_onResize(){this.calcOffset(),this._resetTransformEventData()}_shouldRender(t){const e=this.getActiveObject();return!!e!=!!t||e&&t&&e!==t}__onMouseUp(t){var e;this._cacheTransformEventData(t),this._handleEvent(t,\"up:before\");const s=this._currentTransform,i=this._isClick,r=this._target,{button:n}=t;if(n)return(this.fireMiddleClick&&1===n||this.fireRightClick&&2===n)&&this._handleEvent(t,\"up\"),void this._resetTransformEventData();if(this.isDrawingMode&&this._isCurrentlyDrawing)return void this._onMouseUpInDrawingMode(t);if(!this._isMainEvent(t))return;let o,a,h=!1;if(s&&(this._finalizeCurrentTransform(t),h=s.actionPerformed),!i){const e=r===this._activeObject;this.handleSelection(t),h||(h=this._shouldRender(r)||!e&&r===this._activeObject)}if(r){const e=r.findControl(this.getViewportPoint(t),fe(t)),{key:i,control:n}=e||{};if(a=i,r.selectable&&r!==this._activeObject&&\"up\"===r.activeOn)this.setActiveObject(r,t),h=!0;else if(n){const e=n.getMouseUpHandler(t,r,n);e&&(o=this.getScenePoint(t),e.call(n,t,s,o.x,o.y))}r.isMoving=!1}if(s&&(s.target!==r||s.corner!==a)){const e=s.target&&s.target.controls[s.corner],i=e&&e.getMouseUpHandler(t,s.target,e);o=o||this.getScenePoint(t),i&&i.call(e,t,s,o.x,o.y)}this._setCursorFromEvent(t,r),this._handleEvent(t,\"up\"),this._groupSelector=null,this._currentTransform=null,r&&(r.__corner=void 0),h?this.requestRenderAll():i||null!==(e=this._activeObject)&&void 0!==e&&e.isEditing||this.renderTop()}_basicEventHandler(t,e){const{target:s,subTargets:i=[]}=e;this.fire(t,e),s&&s.fire(t,e);for(let r=0;r<i.length;r++)i[r]!==s&&i[r].fire(t,e);return e}_handleEvent(t,e){const i=this._target,r=this.targets||[],n=s(s({e:t,target:i,subTargets:r},mn(this,t)),{},{transform:this._currentTransform},\"up:before\"===e||\"up\"===e?{isClick:this._isClick,currentTarget:this.findTarget(t),currentSubTargets:this.targets}:{});this.fire(\"mouse:\".concat(e),n),i&&i.fire(\"mouse\".concat(e),n);for(let t=0;t<r.length;t++)r[t]!==i&&r[t].fire(\"mouse\".concat(e),n)}_onMouseDownInDrawingMode(t){this._isCurrentlyDrawing=!0,this.getActiveObject()&&(this.discardActiveObject(t),this.requestRenderAll());const e=this.getScenePoint(t);this.freeDrawingBrush&&this.freeDrawingBrush.onMouseDown(e,{e:t,pointer:e}),this._handleEvent(t,\"down\")}_onMouseMoveInDrawingMode(t){if(this._isCurrentlyDrawing){const e=this.getScenePoint(t);this.freeDrawingBrush&&this.freeDrawingBrush.onMouseMove(e,{e:t,pointer:e})}this.setCursor(this.freeDrawingCursor),this._handleEvent(t,\"move\")}_onMouseUpInDrawingMode(t){const e=this.getScenePoint(t);this.freeDrawingBrush?this._isCurrentlyDrawing=!!this.freeDrawingBrush.onMouseUp({e:t,pointer:e}):this._isCurrentlyDrawing=!1,this._handleEvent(t,\"up\")}__onMouseDown(t){this._isClick=!0,this._cacheTransformEventData(t),this._handleEvent(t,\"down:before\");let e=this._target;const{button:s}=t;if(s)return(this.fireMiddleClick&&1===s||this.fireRightClick&&2===s)&&this._handleEvent(t,\"down\"),void this._resetTransformEventData();if(this.isDrawingMode)return void this._onMouseDownInDrawingMode(t);if(!this._isMainEvent(t))return;if(this._currentTransform)return;let i=this._shouldRender(e),r=!1;if(this.handleMultiSelection(t,e)?(e=this._activeObject,r=!0,i=!0):this._shouldClearSelection(t,e)&&this.discardActiveObject(t),this.selection&&(!e||!e.selectable&&!e.isEditing&&e!==this._activeObject)){const e=this.getScenePoint(t);this._groupSelector={x:e.x,y:e.y,deltaY:0,deltaX:0}}if(e){const s=e===this._activeObject;e.selectable&&\"down\"===e.activeOn&&this.setActiveObject(e,t);const i=e.findControl(this.getViewportPoint(t),fe(t));if(e===this._activeObject&&(i||!r)){this._setupCurrentTransform(t,e,s);const r=i?i.control:void 0,n=this.getScenePoint(t),o=r&&r.getMouseDownHandler(t,e,r);o&&o.call(r,t,this._currentTransform,n.x,n.y)}}i&&(this._objectsToRender=void 0),this._handleEvent(t,\"down\"),i&&this.requestRenderAll()}_resetTransformEventData(){this._target=this._pointer=this._absolutePointer=void 0}_cacheTransformEventData(t){this._resetTransformEventData(),this._pointer=this.getViewportPoint(t),this._absolutePointer=Se(this._pointer,void 0,this.viewportTransform),this._target=this._currentTransform?this._currentTransform.target:this.findTarget(t)}__onMouseMove(t){if(this._isClick=!1,this._cacheTransformEventData(t),this._handleEvent(t,\"move:before\"),this.isDrawingMode)return void this._onMouseMoveInDrawingMode(t);if(!this._isMainEvent(t))return;const e=this._groupSelector;if(e){const s=this.getScenePoint(t);e.deltaX=s.x-e.x,e.deltaY=s.y-e.y,this.renderTop()}else if(this._currentTransform)this._transformObject(t);else{const e=this.findTarget(t);this._setCursorFromEvent(t,e),this._fireOverOutEvents(t,e)}this.textEditingManager.onMouseMove(t),this._handleEvent(t,\"move\"),this._resetTransformEventData()}_fireOverOutEvents(t,e){const s=this._hoveredTarget,i=this._hoveredTargets,r=this.targets,n=Math.max(i.length,r.length);this.fireSyntheticInOutEvents(\"mouse\",{e:t,target:e,oldTarget:s,fireCanvas:!0});for(let e=0;e<n;e++)this.fireSyntheticInOutEvents(\"mouse\",{e:t,target:r[e],oldTarget:i[e]});this._hoveredTarget=e,this._hoveredTargets=this.targets.concat()}_fireEnterLeaveEvents(t,e){const i=this._draggedoverTarget,r=this._hoveredTargets,n=this.targets,o=Math.max(r.length,n.length);this.fireSyntheticInOutEvents(\"drag\",s(s({},e),{},{target:t,oldTarget:i,fireCanvas:!0}));for(let t=0;t<o;t++)this.fireSyntheticInOutEvents(\"drag\",s(s({},e),{},{target:n[t],oldTarget:r[t]}));this._draggedoverTarget=t}fireSyntheticInOutEvents(t,e){let{target:r,oldTarget:n,fireCanvas:o,e:a}=e,h=i(e,fn);const{targetIn:c,targetOut:l,canvasIn:u,canvasOut:d}=_n[t],g=n!==r;if(n&&g){const t=s(s({},h),{},{e:a,target:n,nextTarget:r},mn(this,a));o&&this.fire(d,t),n.fire(l,t)}if(r&&g){const t=s(s({},h),{},{e:a,target:r,previousTarget:n},mn(this,a));o&&this.fire(u,t),r.fire(c,t)}}__onMouseWheel(t){this._cacheTransformEventData(t),this._handleEvent(t,\"wheel\"),this._resetTransformEventData()}_transformObject(t){const e=this.getScenePoint(t),s=this._currentTransform,i=s.target,r=i.group?Se(e,void 0,i.group.calcTransformMatrix()):e;s.shiftKey=t.shiftKey,s.altKey=!!this.centeredKey&&t[this.centeredKey],this._performTransformAction(t,s,r),s.actionPerformed&&this.requestRenderAll()}_performTransformAction(t,e,s){const{action:i,actionHandler:r,target:n}=e,o=!!r&&r(t,e,s.x,s.y);o&&n.setCoords(),\"drag\"===i&&o&&(e.target.isMoving=!0,this.setCursor(e.target.moveCursor||this.moveCursor)),e.actionPerformed=e.actionPerformed||o}_setCursorFromEvent(t,e){if(!e)return void this.setCursor(this.defaultCursor);let s=e.hoverCursor||this.hoverCursor;const i=se(this._activeObject)?this._activeObject:null,r=(!i||e.group!==i)&&e.findControl(this.getViewportPoint(t));if(r){const s=r.control;this.setCursor(s.cursorStyleHandler(t,s,e))}else e.subTargetCheck&&this.targets.concat().reverse().map((t=>{s=t.hoverCursor||s})),this.setCursor(s)}handleMultiSelection(t,e){const s=this._activeObject,i=se(s);if(s&&this._isSelectionKeyPressed(t)&&this.selection&&e&&e.selectable&&(s!==e||i)&&(i||!e.isDescendantOf(s)&&!s.isDescendantOf(e))&&!e.onSelect({e:t})&&!s.getActiveControl()){if(i){const i=s.getObjects();if(e===s){const s=this.getViewportPoint(t);if(!(e=this.searchPossibleTargets(i,s)||this.searchPossibleTargets(this._objects,s))||!e.selectable)return!1}e.group===s?(s.remove(e),this._hoveredTarget=e,this._hoveredTargets=[...this.targets],1===s.size()&&this._setActiveObject(s.item(0),t)):(s.multiSelectAdd(e),this._hoveredTarget=s,this._hoveredTargets=[...this.targets]),this._fireSelectionEvents(i,t)}else{s.isEditing&&s.exitEditing();const i=new(tt.getClass(\"ActiveSelection\"))([],{canvas:this});i.multiSelectAdd(s,e),this._hoveredTarget=i,this._setActiveObject(i,t),this._fireSelectionEvents([s],t)}return!0}return!1}handleSelection(t){if(!this.selection||!this._groupSelector)return!1;const{x:e,y:s,deltaX:i,deltaY:r}=this._groupSelector,n=new ot(e,s),o=n.add(new ot(i,r)),a=n.min(o),h=n.max(o).subtract(a),c=this.collectObjects({left:a.x,top:a.y,width:h.x,height:h.y},{includeIntersecting:!this.selectionFullyContained}),l=n.eq(o)?c[0]?[c[0]]:[]:c.length>1?c.filter((e=>!e.onSelect({e:t}))).reverse():c;if(1===l.length)this.setActiveObject(l[0],t);else if(l.length>1){const e=tt.getClass(\"ActiveSelection\");this.setActiveObject(new e(l,{canvas:this}),t)}return this._groupSelector=null,!0}clear(){this.textEditingManager.clear(),super.clear()}destroy(){this.removeListeners(),this.textEditingManager.dispose(),super.destroy()}}const Cn={x1:0,y1:0,x2:0,y2:0},bn=s(s({},Cn),{},{r1:0,r2:0}),wn=(t,e)=>isNaN(t)&&\"number\"==typeof e?e:t,Sn=/^(\\d+\\.\\d+)%|(\\d+)%$/;function Tn(t){return t&&Sn.test(t)}function On(t,e){const s=\"number\"==typeof t?t:\"string\"==typeof t?parseFloat(t)/(Tn(t)?100:1):NaN;return ds(0,wn(s,e),1)}const kn=/\\s*;\\s*/,Dn=/\\s*:\\s*/;function Mn(t,e){let s,i;const r=t.getAttribute(\"style\");if(r){const t=r.split(kn);\"\"===t[t.length-1]&&t.pop();for(let e=t.length;e--;){const[r,n]=t[e].split(Dn).map((t=>t.trim()));\"stop-color\"===r?s=n:\"stop-opacity\"===r&&(i=n)}}const n=new Ut(s||t.getAttribute(\"stop-color\")||\"rgb(0,0,0)\");return{offset:On(t.getAttribute(\"offset\"),0),color:n.toRgb(),opacity:wn(parseFloat(i||t.getAttribute(\"stop-opacity\")||\"\"),1)*n.getAlpha()*e}}function Pn(t,e){const s=[],i=t.getElementsByTagName(\"stop\"),r=On(e,1);for(let t=i.length;t--;)s.push(Mn(i[t],r));return s}function En(t){return\"linearGradient\"===t.nodeName||\"LINEARGRADIENT\"===t.nodeName?\"linear\":\"radial\"}function An(t){return\"userSpaceOnUse\"===t.getAttribute(\"gradientUnits\")?\"pixels\":\"percentage\"}function jn(t,e){return t.getAttribute(e)}function Fn(t,e){return function(t,e){let s,{width:i,height:r,gradientUnits:n}=e;return Object.keys(t).reduce(((e,o)=>{const a=t[o];return\"Infinity\"===a?s=1:\"-Infinity\"===a?s=0:(s=\"string\"==typeof a?parseFloat(a):a,\"string\"==typeof a&&Tn(a)&&(s*=.01,\"pixels\"===n&&(\"x1\"!==o&&\"x2\"!==o&&\"r2\"!==o||(s*=i),\"y1\"!==o&&\"y2\"!==o||(s*=r)))),e[o]=s,e}),{})}(\"linear\"===En(t)?function(t){return{x1:jn(t,\"x1\")||0,y1:jn(t,\"y1\")||0,x2:jn(t,\"x2\")||\"100%\",y2:jn(t,\"y2\")||0}}(t):function(t){return{x1:jn(t,\"fx\")||jn(t,\"cx\")||\"50%\",y1:jn(t,\"fy\")||jn(t,\"cy\")||\"50%\",r1:0,x2:jn(t,\"cx\")||\"50%\",y2:jn(t,\"cy\")||\"50%\",r2:jn(t,\"r\")||\"50%\"}}(t),s(s({},e),{},{gradientUnits:An(t)}))}class Ln{constructor(t){const{type:e=\"linear\",gradientUnits:i=\"pixels\",coords:r={},colorStops:n=[],offsetX:o=0,offsetY:a=0,gradientTransform:h,id:c}=t||{};Object.assign(this,{type:e,gradientUnits:i,coords:s(s({},\"radial\"===e?bn:Cn),r),colorStops:n,offsetX:o,offsetY:a,gradientTransform:h,id:c?\"\".concat(c,\"_\").concat(ft()):ft()})}addColorStop(t){for(const e in t){const s=new Ut(t[e]);this.colorStops.push({offset:parseFloat(e),color:s.toRgb(),opacity:s.getAlpha()})}return this}toObject(t){return s(s({},Xt(this,t)),{},{type:this.type,coords:s({},this.coords),colorStops:this.colorStops.map((t=>s({},t))),offsetX:this.offsetX,offsetY:this.offsetY,gradientUnits:this.gradientUnits,gradientTransform:this.gradientTransform?[...this.gradientTransform]:void 0})}toSVG(t){let{additionalTransform:e}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const i=[],r=this.gradientTransform?this.gradientTransform.concat():T.concat(),n=\"pixels\"===this.gradientUnits?\"userSpaceOnUse\":\"objectBoundingBox\",o=this.colorStops.map((t=>s({},t))).sort(((t,e)=>t.offset-e.offset));let a=-this.offsetX,h=-this.offsetY;var c;\"objectBoundingBox\"===n?(a/=t.width,h/=t.height):(a+=t.width/2,h+=t.height/2),(c=t)&&\"function\"==typeof c._renderPathCommands&&\"percentage\"!==this.gradientUnits&&(a-=t.pathOffset.x,h-=t.pathOffset.y),r[4]-=a,r[5]-=h;const l=['id=\"SVGID_'.concat(this.id,'\"'),'gradientUnits=\"'.concat(n,'\"'),'gradientTransform=\"'.concat(e?e+\" \":\"\").concat(Qt(r),'\"'),\"\"].join(\" \");if(\"linear\"===this.type){const{x1:t,y1:e,x2:s,y2:r}=this.coords;i.push(\"<linearGradient \",l,' x1=\"',t,'\" y1=\"',e,'\" x2=\"',s,'\" y2=\"',r,'\">\\n')}else if(\"radial\"===this.type){const{x1:t,y1:e,x2:s,y2:r,r1:n,r2:a}=this.coords,h=n>a;i.push(\"<radialGradient \",l,' cx=\"',h?t:s,'\" cy=\"',h?e:r,'\" r=\"',h?n:a,'\" fx=\"',h?s:t,'\" fy=\"',h?r:e,'\">\\n'),h&&(o.reverse(),o.forEach((t=>{t.offset=1-t.offset})));const c=Math.min(n,a);if(c>0){const t=c/Math.max(n,a);o.forEach((e=>{e.offset+=t*(1-e.offset)}))}}return o.forEach((t=>{let{color:e,offset:s,opacity:r}=t;i.push(\"<stop \",'offset=\"',100*s+\"%\",'\" style=\"stop-color:',e,void 0!==r?\";stop-opacity: \"+r:\";\",'\"/>\\n')})),i.push(\"linear\"===this.type?\"</linearGradient>\":\"</radialGradient>\",\"\\n\"),i.join(\"\")}toLive(t){const{x1:e,y1:s,x2:i,y2:r,r1:n,r2:o}=this.coords,a=\"linear\"===this.type?t.createLinearGradient(e,s,i,r):t.createRadialGradient(e,s,n,i,r,o);return this.colorStops.forEach((t=>{let{color:e,opacity:s,offset:i}=t;a.addColorStop(i,void 0!==s?new Ut(e).setAlpha(s).toRgba():e)})),a}static async fromObject(t){const{colorStops:e,gradientTransform:i}=t;return new this(s(s({},t),{},{colorStops:e?e.map((t=>s({},t))):void 0,gradientTransform:i?[...i]:void 0}))}static fromElement(t,e,i){const r=An(t),n=e._findCenterFromElement();return new this(s({id:t.getAttribute(\"id\")||void 0,type:En(t),coords:Fn(t,{width:i.viewBoxWidth||i.width,height:i.viewBoxHeight||i.height}),colorStops:Pn(t,i.opacity),gradientUnits:r,gradientTransform:nr(t.getAttribute(\"gradientTransform\")||\"\")},\"pixels\"===r?{offsetX:e.width/2-n.x,offsetY:e.height/2-n.y}:{offsetX:0,offsetY:0}))}}t(Ln,\"type\",\"Gradient\"),tt.setClass(Ln,\"gradient\"),tt.setClass(Ln,\"linear\"),tt.setClass(Ln,\"radial\");const Rn=[\"type\",\"source\",\"patternTransform\"];class In{get type(){return\"pattern\"}set type(t){a(\"warn\",\"Setting type has no effect\",t)}constructor(e){t(this,\"repeat\",\"repeat\"),t(this,\"offsetX\",0),t(this,\"offsetY\",0),t(this,\"crossOrigin\",\"\"),this.id=ft(),Object.assign(this,e)}isImageSource(){return!!this.source&&\"string\"==typeof this.source.src}isCanvasSource(){return!!this.source&&!!this.source.toDataURL}sourceToString(){return this.isImageSource()?this.source.src:this.isCanvasSource()?this.source.toDataURL():\"\"}toLive(t){return this.source&&(!this.isImageSource()||this.source.complete&&0!==this.source.naturalWidth&&0!==this.source.naturalHeight)?t.createPattern(this.source,this.repeat):null}toObject(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];const{repeat:e,crossOrigin:i}=this;return s(s({},Xt(this,t)),{},{type:\"pattern\",source:this.sourceToString(),repeat:e,crossOrigin:i,offsetX:qt(this.offsetX,o.NUM_FRACTION_DIGITS),offsetY:qt(this.offsetY,o.NUM_FRACTION_DIGITS),patternTransform:this.patternTransform?[...this.patternTransform]:null})}toSVG(t){let{width:e,height:s}=t;const{source:i,repeat:r,id:n}=this,o=wn(this.offsetX/e,0),a=wn(this.offsetY/s,0),h=\"repeat-y\"===r||\"no-repeat\"===r?1+Math.abs(o||0):wn(i.width/e,0),c=\"repeat-x\"===r||\"no-repeat\"===r?1+Math.abs(a||0):wn(i.height/s,0);return['<pattern id=\"SVGID_'.concat(n,'\" x=\"').concat(o,'\" y=\"').concat(a,'\" width=\"').concat(h,'\" height=\"').concat(c,'\">'),'<image x=\"0\" y=\"0\" width=\"'.concat(i.width,'\" height=\"').concat(i.height,'\" xlink:href=\"').concat(this.sourceToString(),'\"></image>'),\"</pattern>\",\"\"].join(\"\\n\")}static async fromObject(t,e){let{type:r,source:n,patternTransform:o}=t,a=i(t,Rn);const h=await Rt(n,s(s({},e),{},{crossOrigin:a.crossOrigin}));return new this(s(s({},a),{},{patternTransform:o&&o.slice(0),source:h}))}}t(In,\"type\",\"Pattern\"),tt.setClass(In),tt.setClass(In,\"pattern\");class Bn{constructor(e){t(this,\"color\",\"rgb(0, 0, 0)\"),t(this,\"width\",1),t(this,\"shadow\",null),t(this,\"strokeLineCap\",\"round\"),t(this,\"strokeLineJoin\",\"round\"),t(this,\"strokeMiterLimit\",10),t(this,\"strokeDashArray\",null),t(this,\"limitedToCanvasSize\",!1),this.canvas=e}_setBrushStyles(t){t.strokeStyle=this.color,t.lineWidth=this.width,t.lineCap=this.strokeLineCap,t.miterLimit=this.strokeMiterLimit,t.lineJoin=this.strokeLineJoin,t.setLineDash(this.strokeDashArray||[])}_saveAndTransform(t){const e=this.canvas.viewportTransform;t.save(),t.transform(e[0],e[1],e[2],e[3],e[4],e[5])}needsFullRender(){return new Ut(this.color).getAlpha()<1||!!this.shadow}_setShadow(){if(!this.shadow||!this.canvas)return;const t=this.canvas,e=this.shadow,s=t.contextTop,i=t.getZoom()*t.getRetinaScaling();s.shadowColor=e.color,s.shadowBlur=e.blur*i,s.shadowOffsetX=e.offsetX*i,s.shadowOffsetY=e.offsetY*i}_resetShadow(){const t=this.canvas.contextTop;t.shadowColor=\"\",t.shadowBlur=t.shadowOffsetX=t.shadowOffsetY=0}_isOutSideCanvas(t){return t.x<0||t.x>this.canvas.getWidth()||t.y<0||t.y>this.canvas.getHeight()}}const Xn=[\"path\",\"left\",\"top\"],Yn=[\"d\"];class Wn extends yi{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{path:s,left:r,top:n}=e,o=i(e,Xn);super(),Object.assign(this,Wn.ownDefaults),this.setOptions(o),this._setPath(t||[],!0),\"number\"==typeof r&&this.set(M,r),\"number\"==typeof n&&this.set(P,n)}_setPath(t,e){this.path=Xr(Array.isArray(t)?t:sn(t)),this.setBoundingBox(e)}_findCenterFromElement(){const t=this._calcBoundsFromPath();return new ot(t.left+t.width/2,t.top+t.height/2)}_renderPathCommands(t){const e=-this.pathOffset.x,s=-this.pathOffset.y;t.beginPath();for(const i of this.path)switch(i[0]){case\"L\":t.lineTo(i[1]+e,i[2]+s);break;case\"M\":t.moveTo(i[1]+e,i[2]+s);break;case\"C\":t.bezierCurveTo(i[1]+e,i[2]+s,i[3]+e,i[4]+s,i[5]+e,i[6]+s);break;case\"Q\":t.quadraticCurveTo(i[1]+e,i[2]+s,i[3]+e,i[4]+s);break;case\"Z\":t.closePath()}}_render(t){this._renderPathCommands(t),this._renderPaintInOrder(t)}toString(){return\"#<Path (\".concat(this.complexity(),'): { \"top\": ').concat(this.top,', \"left\": ').concat(this.left,\" }>\")}toObject(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return s(s({},super.toObject(t)),{},{path:this.path.map((t=>t.slice()))})}toDatalessObject(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];const e=this.toObject(t);return this.sourcePath&&(delete e.path,e.sourcePath=this.sourcePath),e}_toSVG(){const t=nn(this.path,o.NUM_FRACTION_DIGITS);return[\"<path \",\"COMMON_PARTS\",'d=\"'.concat(t,'\" stroke-linecap=\"round\" />\\n')]}_getOffsetTransform(){const t=o.NUM_FRACTION_DIGITS;return\" translate(\".concat(qt(-this.pathOffset.x,t),\", \").concat(qt(-this.pathOffset.y,t),\")\")}toClipPathSVG(t){const e=this._getOffsetTransform();return\"\\t\"+this._createBaseClipPathSVGMarkup(this._toSVG(),{reviver:t,additionalTransform:e})}toSVG(t){const e=this._getOffsetTransform();return this._createBaseSVGMarkup(this._toSVG(),{reviver:t,additionalTransform:e})}complexity(){return this.path.length}setDimensions(){this.setBoundingBox()}setBoundingBox(t){const{width:e,height:s,pathOffset:i}=this._calcDimensions();this.set({width:e,height:s,pathOffset:i}),t&&this.setPositionByOrigin(i,D,D)}_calcBoundsFromPath(){const t=[];let e=0,s=0,i=0,r=0;for(const n of this.path)switch(n[0]){case\"L\":i=n[1],r=n[2],t.push({x:e,y:s},{x:i,y:r});break;case\"M\":i=n[1],r=n[2],e=i,s=r;break;case\"C\":t.push(...Ir(i,r,n[1],n[2],n[3],n[4],n[5],n[6])),i=n[5],r=n[6];break;case\"Q\":t.push(...Ir(i,r,n[1],n[2],n[1],n[2],n[3],n[4])),i=n[3],r=n[4];break;case\"Z\":i=e,r=s}return me(t)}_calcDimensions(){const t=this._calcBoundsFromPath();return s(s({},t),{},{pathOffset:new ot(t.left+t.width/2,t.top+t.height/2)})}static fromObject(t){return this._fromObject(t,{extraParam:\"path\"})}static async fromElement(t,e,r){const n=ur(t,this.ATTRIBUTE_NAMES,r),{d:o}=n;return new this(o,s(s(s({},i(n,Yn)),e),{},{left:void 0,top:void 0}))}}t(Wn,\"type\",\"Path\"),t(Wn,\"cacheProperties\",[...fs,\"path\",\"fillRule\"]),t(Wn,\"ATTRIBUTE_NAMES\",[...ji,\"d\"]),tt.setClass(Wn),tt.setSVGClass(Wn);class Vn extends Bn{constructor(e){super(e),t(this,\"decimate\",.4),t(this,\"drawStraightLine\",!1),t(this,\"straightLineKey\",\"shiftKey\"),this._points=[],this._hasStraightLine=!1}needsFullRender(){return super.needsFullRender()||this._hasStraightLine}static drawSegment(t,e,s){const i=e.midPointFrom(s);return t.quadraticCurveTo(e.x,e.y,i.x,i.y),i}onMouseDown(t,e){let{e:s}=e;this.canvas._isMainEvent(s)&&(this.drawStraightLine=!!this.straightLineKey&&s[this.straightLineKey],this._prepareForDrawing(t),this._addPoint(t),this._render())}onMouseMove(t,e){let{e:s}=e;if(this.canvas._isMainEvent(s)&&(this.drawStraightLine=!!this.straightLineKey&&s[this.straightLineKey],(!0!==this.limitedToCanvasSize||!this._isOutSideCanvas(t))&&this._addPoint(t)&&this._points.length>1))if(this.needsFullRender())this.canvas.clearContext(this.canvas.contextTop),this._render();else{const t=this._points,e=t.length,s=this.canvas.contextTop;this._saveAndTransform(s),this.oldEnd&&(s.beginPath(),s.moveTo(this.oldEnd.x,this.oldEnd.y)),this.oldEnd=Vn.drawSegment(s,t[e-2],t[e-1]),s.stroke(),s.restore()}}onMouseUp(t){let{e:e}=t;return!this.canvas._isMainEvent(e)||(this.drawStraightLine=!1,this.oldEnd=void 0,this._finalizeAndAddPath(),!1)}_prepareForDrawing(t){this._reset(),this._addPoint(t),this.canvas.contextTop.moveTo(t.x,t.y)}_addPoint(t){return!(this._points.length>1&&t.eq(this._points[this._points.length-1]))&&(this.drawStraightLine&&this._points.length>1&&(this._hasStraightLine=!0,this._points.pop()),this._points.push(t),!0)}_reset(){this._points=[],this._setBrushStyles(this.canvas.contextTop),this._setShadow(),this._hasStraightLine=!1}_render(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.canvas.contextTop,e=this._points[0],s=this._points[1];if(this._saveAndTransform(t),t.beginPath(),2===this._points.length&&e.x===s.x&&e.y===s.y){const t=this.width/1e3;e.x-=t,s.x+=t}t.moveTo(e.x,e.y);for(let i=1;i<this._points.length;i++)Vn.drawSegment(t,e,s),e=this._points[i],s=this._points[i+1];t.lineTo(e.x,e.y),t.stroke(),t.restore()}convertPointsToSVGPath(t){const e=this.width/1e3;return rn(t,e)}createPath(t){const e=new Wn(t,{fill:null,stroke:this.color,strokeWidth:this.width,strokeLineCap:this.strokeLineCap,strokeMiterLimit:this.strokeMiterLimit,strokeLineJoin:this.strokeLineJoin,strokeDashArray:this.strokeDashArray});return this.shadow&&(this.shadow.affectStroke=!0,e.shadow=new us(this.shadow)),e}decimatePoints(t,e){if(t.length<=2)return t;let s,i=t[0];const r=this.canvas.getZoom(),n=Math.pow(e/r,2),o=t.length-1,a=[i];for(let e=1;e<o-1;e++)s=Math.pow(i.x-t[e].x,2)+Math.pow(i.y-t[e].y,2),s>=n&&(i=t[e],a.push(i));return a.push(t[o]),a}_finalizeAndAddPath(){this.canvas.contextTop.closePath(),this.decimate&&(this._points=this.decimatePoints(this._points,this.decimate));const t=this.convertPointsToSVGPath(this._points);if(function(t){return\"M 0 0 Q 0 0 0 0 L 0 0\"===nn(t)}(t))return void this.canvas.requestRenderAll();const e=this.createPath(t);this.canvas.clearContext(this.canvas.contextTop),this.canvas.fire(\"before:path:created\",{path:e}),this.canvas.add(e),this.canvas.requestRenderAll(),e.setCoords(),this._resetShadow(),this.canvas.fire(\"path:created\",{path:e})}}const zn=[\"left\",\"top\",\"radius\"],Hn=[\"radius\",\"startAngle\",\"endAngle\",\"counterClockwise\"];class Gn extends yi{static getDefaults(){return s(s({},super.getDefaults()),Gn.ownDefaults)}constructor(t){super(),Object.assign(this,Gn.ownDefaults),this.setOptions(t)}_set(t,e){return super._set(t,e),\"radius\"===t&&this.setRadius(e),this}_render(t){t.beginPath(),t.arc(0,0,this.radius,_t(this.startAngle),_t(this.endAngle),this.counterClockwise),this._renderPaintInOrder(t)}getRadiusX(){return this.get(\"radius\")*this.get(G)}getRadiusY(){return this.get(\"radius\")*this.get(N)}setRadius(t){this.radius=t,this.set({width:2*t,height:2*t})}toObject(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return super.toObject([...Hn,...t])}_toSVG(){const t=(this.endAngle-this.startAngle)%360;if(0===t)return[\"<circle \",\"COMMON_PARTS\",'cx=\"0\" cy=\"0\" ','r=\"',\"\".concat(this.radius),'\" />\\n'];{const{radius:e}=this,s=_t(this.startAngle),i=_t(this.endAngle),r=rt(s)*e,n=nt(s)*e,o=rt(i)*e,a=nt(i)*e,h=t>180?1:0,c=this.counterClockwise?0:1;return['<path d=\"M '.concat(r,\" \").concat(n,\" A \").concat(e,\" \").concat(e,\" 0 \").concat(h,\" \").concat(c,\" \").concat(o,\" \").concat(a,'\" '),\"COMMON_PARTS\",\" />\\n\"]}}static async fromElement(t,e,r){const n=ur(t,this.ATTRIBUTE_NAMES,r),{left:o=0,top:a=0,radius:h=0}=n;return new this(s(s({},i(n,zn)),{},{radius:h,left:o-h,top:a-h}))}static fromObject(t){return super._fromObject(t)}}t(Gn,\"type\",\"Circle\"),t(Gn,\"cacheProperties\",[...fs,...Hn]),t(Gn,\"ownDefaults\",{radius:0,startAngle:0,endAngle:360,counterClockwise:!1}),t(Gn,\"ATTRIBUTE_NAMES\",[\"cx\",\"cy\",\"r\",...ji]),tt.setClass(Gn),tt.setSVGClass(Gn);class Nn extends Bn{constructor(e){super(e),t(this,\"width\",10),this.points=[]}drawDot(t){const e=this.addPoint(t),s=this.canvas.contextTop;this._saveAndTransform(s),this.dot(s,e),s.restore()}dot(t,e){t.fillStyle=e.fill,t.beginPath(),t.arc(e.x,e.y,e.radius,0,2*Math.PI,!1),t.closePath(),t.fill()}onMouseDown(t){this.points=[],this.canvas.clearContext(this.canvas.contextTop),this._setShadow(),this.drawDot(t)}_render(){const t=this.canvas.contextTop,e=this.points;this._saveAndTransform(t);for(let s=0;s<e.length;s++)this.dot(t,e[s]);t.restore()}onMouseMove(t){!0===this.limitedToCanvasSize&&this._isOutSideCanvas(t)||(this.needsFullRender()?(this.canvas.clearContext(this.canvas.contextTop),this.addPoint(t),this._render()):this.drawDot(t))}onMouseUp(){const t=this.canvas.renderOnAddRemove;this.canvas.renderOnAddRemove=!1;const e=[];for(let t=0;t<this.points.length;t++){const s=this.points[t],i=new Gn({radius:s.radius,left:s.x,top:s.y,originX:D,originY:D,fill:s.fill});this.shadow&&(i.shadow=new us(this.shadow)),e.push(i)}const s=new Dr(e,{canvas:this.canvas});this.canvas.fire(\"before:path:created\",{path:s}),this.canvas.add(s),this.canvas.fire(\"path:created\",{path:s}),this.canvas.clearContext(this.canvas.contextTop),this._resetShadow(),this.canvas.renderOnAddRemove=t,this.canvas.requestRenderAll()}addPoint(t){let{x:e,y:s}=t;const i={x:e,y:s,radius:an(Math.max(0,this.width-20),this.width+20)/2,fill:new Ut(this.color).setAlpha(an(0,100)/100).toRgba()};return this.points.push(i),i}}class Un extends Bn{constructor(e){super(e),t(this,\"width\",10),t(this,\"density\",20),t(this,\"dotWidth\",1),t(this,\"dotWidthVariance\",1),t(this,\"randomOpacity\",!1),t(this,\"optimizeOverlapping\",!0),this.sprayChunks=[],this.sprayChunk=[]}onMouseDown(t){this.sprayChunks=[],this.canvas.clearContext(this.canvas.contextTop),this._setShadow(),this.addSprayChunk(t),this.renderChunck(this.sprayChunk)}onMouseMove(t){!0===this.limitedToCanvasSize&&this._isOutSideCanvas(t)||(this.addSprayChunk(t),this.renderChunck(this.sprayChunk))}onMouseUp(){const t=this.canvas.renderOnAddRemove;this.canvas.renderOnAddRemove=!1;const e=[];for(let t=0;t<this.sprayChunks.length;t++){const s=this.sprayChunks[t];for(let t=0;t<s.length;t++){const i=s[t],r=new fr({width:i.width,height:i.width,left:i.x+1,top:i.y+1,originX:D,originY:D,fill:this.color});e.push(r)}}const s=new Dr(this.optimizeOverlapping?function(t){const e={},s=[];for(let i,r=0;r<t.length;r++)i=\"\".concat(t[r].left).concat(t[r].top),e[i]||(e[i]=!0,s.push(t[r]));return s}(e):e,{objectCaching:!0,subTargetCheck:!1,interactive:!1});this.shadow&&s.set(\"shadow\",new us(this.shadow)),this.canvas.fire(\"before:path:created\",{path:s}),this.canvas.add(s),this.canvas.fire(\"path:created\",{path:s}),this.canvas.clearContext(this.canvas.contextTop),this._resetShadow(),this.canvas.renderOnAddRemove=t,this.canvas.requestRenderAll()}renderChunck(t){const e=this.canvas.contextTop;e.fillStyle=this.color,this._saveAndTransform(e);for(let s=0;s<t.length;s++){const i=t[s];e.globalAlpha=i.opacity,e.fillRect(i.x,i.y,i.width,i.width)}e.restore()}_render(){const t=this.canvas.contextTop;t.fillStyle=this.color,this._saveAndTransform(t);for(let t=0;t<this.sprayChunks.length;t++)this.renderChunck(this.sprayChunks[t]);t.restore()}addSprayChunk(t){this.sprayChunk=[];const e=this.width/2;for(let s=0;s<this.density;s++)this.sprayChunk.push({x:an(t.x-e,t.x+e),y:an(t.y-e,t.y+e),width:this.dotWidthVariance?an(Math.max(1,this.dotWidth-this.dotWidthVariance),this.dotWidth+this.dotWidthVariance):this.dotWidth,opacity:this.randomOpacity?an(0,100)/100:1});this.sprayChunks.push(this.sprayChunk)}}class qn extends Vn{constructor(t){super(t)}getPatternSrc(){const t=pt(),e=t.getContext(\"2d\");return t.width=t.height=25,e&&(e.fillStyle=this.color,e.beginPath(),e.arc(10,10,10,0,2*Math.PI,!1),e.closePath(),e.fill()),t}getPattern(t){return t.createPattern(this.source||this.getPatternSrc(),\"repeat\")}_setBrushStyles(t){super._setBrushStyles(t);const e=this.getPattern(t);e&&(t.strokeStyle=e)}createPath(t){const e=super.createPath(t),s=e._getLeftTopCoords().scalarAdd(e.strokeWidth/2);return e.stroke=new In({source:this.source||this.getPatternSrc(),offsetX:-s.x,offsetY:-s.y}),e}}const Kn=[\"x1\",\"y1\",\"x2\",\"y2\"],Jn=[\"x1\",\"y1\",\"x2\",\"y2\"],Qn=[\"x1\",\"x2\",\"y1\",\"y2\"];class Zn extends yi{constructor(){let[t,e,s,i]=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[0,0,0,0],r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};super(),Object.assign(this,Zn.ownDefaults),this.setOptions(r),this.x1=t,this.x2=s,this.y1=e,this.y2=i,this._setWidthHeight();const{left:n,top:o}=r;\"number\"==typeof n&&this.set(M,n),\"number\"==typeof o&&this.set(P,o)}_setWidthHeight(){const{x1:t,y1:e,x2:s,y2:i}=this;this.width=Math.abs(s-t),this.height=Math.abs(i-e);const{left:r,top:n,width:o,height:a}=me([{x:t,y:e},{x:s,y:i}]),h=new ot(r+o/2,n+a/2);this.setPositionByOrigin(h,D,D)}_set(t,e){return super._set(t,e),Qn.includes(t)&&this._setWidthHeight(),this}_render(t){t.beginPath();const e=this.calcLinePoints();t.moveTo(e.x1,e.y1),t.lineTo(e.x2,e.y2),t.lineWidth=this.strokeWidth;const s=t.strokeStyle;var i;$t(this.stroke)?t.strokeStyle=this.stroke.toLive(t):t.strokeStyle=null!==(i=this.stroke)&&void 0!==i?i:t.fillStyle;this.stroke&&this._renderStroke(t),t.strokeStyle=s}_findCenterFromElement(){return new ot((this.x1+this.x2)/2,(this.y1+this.y2)/2)}toObject(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return s(s({},super.toObject(t)),this.calcLinePoints())}_getNonTransformedDimensions(){const t=super._getNonTransformedDimensions();return\"butt\"===this.strokeLineCap&&(0===this.width&&(t.y-=this.strokeWidth),0===this.height&&(t.x-=this.strokeWidth)),t}calcLinePoints(){const{x1:t,x2:e,y1:s,y2:i,width:r,height:n}=this,o=t<=e?-1:1,a=s<=i?-1:1;return{x1:o*r/2,x2:o*-r/2,y1:a*n/2,y2:a*-n/2}}_toSVG(){const{x1:t,x2:e,y1:s,y2:i}=this.calcLinePoints();return[\"<line \",\"COMMON_PARTS\",'x1=\"'.concat(t,'\" y1=\"').concat(s,'\" x2=\"').concat(e,'\" y2=\"').concat(i,'\" />\\n')]}static async fromElement(t,e,s){const r=ur(t,this.ATTRIBUTE_NAMES,s),{x1:n=0,y1:o=0,x2:a=0,y2:h=0}=r;return new this([n,o,a,h],i(r,Kn))}static fromObject(t){let{x1:e,y1:r,x2:n,y2:o}=t,a=i(t,Jn);return this._fromObject(s(s({},a),{},{points:[e,r,n,o]}),{extraParam:\"points\"})}}t(Zn,\"type\",\"Line\"),t(Zn,\"cacheProperties\",[...fs,...Qn]),t(Zn,\"ATTRIBUTE_NAMES\",ji.concat(Qn)),tt.setClass(Zn),tt.setSVGClass(Zn);class $n extends yi{static getDefaults(){return s(s({},super.getDefaults()),$n.ownDefaults)}constructor(t){super(),Object.assign(this,$n.ownDefaults),this.setOptions(t)}_render(t){const e=this.width/2,s=this.height/2;t.beginPath(),t.moveTo(-e,s),t.lineTo(0,-s),t.lineTo(e,s),t.closePath(),this._renderPaintInOrder(t)}_toSVG(){const t=this.width/2,e=this.height/2;return[\"<polygon \",\"COMMON_PARTS\",'points=\"',\"\".concat(-t,\" \").concat(e,\",0 \").concat(-e,\",\").concat(t,\" \").concat(e),'\" />']}}t($n,\"type\",\"Triangle\"),t($n,\"ownDefaults\",{width:100,height:100}),tt.setClass($n),tt.setSVGClass($n);const to=[\"rx\",\"ry\"];class eo extends yi{static getDefaults(){return s(s({},super.getDefaults()),eo.ownDefaults)}constructor(t){super(),Object.assign(this,eo.ownDefaults),this.setOptions(t)}_set(t,e){switch(super._set(t,e),t){case\"rx\":this.rx=e,this.set(\"width\",2*e);break;case\"ry\":this.ry=e,this.set(\"height\",2*e)}return this}getRx(){return this.get(\"rx\")*this.get(G)}getRy(){return this.get(\"ry\")*this.get(N)}toObject(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return super.toObject([...to,...t])}_toSVG(){return[\"<ellipse \",\"COMMON_PARTS\",'cx=\"0\" cy=\"0\" rx=\"'.concat(this.rx,'\" ry=\"').concat(this.ry,'\" />\\n')]}_render(t){t.beginPath(),t.save(),t.transform(1,0,0,this.ry/this.rx,0,0),t.arc(0,0,this.rx,0,w,!1),t.restore(),this._renderPaintInOrder(t)}static async fromElement(t,e,s){const i=ur(t,this.ATTRIBUTE_NAMES,s);return i.left=(i.left||0)-i.rx,i.top=(i.top||0)-i.ry,new this(i)}}function so(t){if(!t)return[];const e=t.replace(/,/g,\" \").trim().split(/\\s+/),s=[];for(let t=0;t<e.length;t+=2)s.push({x:parseFloat(e[t]),y:parseFloat(e[t+1])});return s}t(eo,\"type\",\"Ellipse\"),t(eo,\"cacheProperties\",[...fs,...to]),t(eo,\"ownDefaults\",{rx:0,ry:0}),t(eo,\"ATTRIBUTE_NAMES\",[...ji,\"cx\",\"cy\",\"rx\",\"ry\"]),tt.setClass(eo),tt.setSVGClass(eo);const io=[\"left\",\"top\"],ro={exactBoundingBox:!1};class no extends yi{static getDefaults(){return s(s({},super.getDefaults()),no.ownDefaults)}constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};super(),t(this,\"strokeDiff\",void 0),Object.assign(this,no.ownDefaults),this.setOptions(s),this.points=e;const{left:i,top:r}=s;this.initialized=!0,this.setBoundingBox(!0),\"number\"==typeof i&&this.set(M,i),\"number\"==typeof r&&this.set(P,r)}isOpen(){return!0}_projectStrokeOnPoints(t){return Si(this.points,t,this.isOpen())}_calcDimensions(t){t=s({scaleX:this.scaleX,scaleY:this.scaleY,skewX:this.skewX,skewY:this.skewY,strokeLineCap:this.strokeLineCap,strokeLineJoin:this.strokeLineJoin,strokeMiterLimit:this.strokeMiterLimit,strokeUniform:this.strokeUniform,strokeWidth:this.strokeWidth},t||{});const e=this.exactBoundingBox?this._projectStrokeOnPoints(t).map((t=>t.projectedPoint)):this.points;if(0===e.length)return{left:0,top:0,width:0,height:0,pathOffset:new ot,strokeOffset:new ot,strokeDiff:new ot};const i=me(e),r=Ft(s(s({},t),{},{scaleX:1,scaleY:1})),n=me(this.points.map((t=>bt(t,r,!0)))),o=new ot(this.scaleX,this.scaleY);let a=i.left+i.width/2,h=i.top+i.height/2;return this.exactBoundingBox&&(a-=h*Math.tan(_t(this.skewX)),h-=a*Math.tan(_t(this.skewY))),s(s({},i),{},{pathOffset:new ot(a,h),strokeOffset:new ot(n.left,n.top).subtract(new ot(i.left,i.top)).multiply(o),strokeDiff:new ot(i.width,i.height).subtract(new ot(n.width,n.height)).multiply(o)})}_findCenterFromElement(){const t=me(this.points);return new ot(t.left+t.width/2,t.top+t.height/2)}setDimensions(){this.setBoundingBox()}setBoundingBox(t){const{left:e,top:s,width:i,height:r,pathOffset:n,strokeOffset:o,strokeDiff:a}=this._calcDimensions();this.set({width:i,height:r,pathOffset:n,strokeOffset:o,strokeDiff:a}),t&&this.setPositionByOrigin(new ot(e+i/2,s+r/2),D,D)}isStrokeAccountedForInDimensions(){return this.exactBoundingBox}_getNonTransformedDimensions(){return this.exactBoundingBox?new ot(this.width,this.height):super._getNonTransformedDimensions()}_getTransformedDimensions(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(this.exactBoundingBox){let n;if(Object.keys(t).some((t=>this.strokeUniform||this.constructor.layoutProperties.includes(t)))){var e,s;const{width:i,height:r}=this._calcDimensions(t);n=new ot(null!==(e=t.width)&&void 0!==e?e:i,null!==(s=t.height)&&void 0!==s?s:r)}else{var i,r;n=new ot(null!==(i=t.width)&&void 0!==i?i:this.width,null!==(r=t.height)&&void 0!==r?r:this.height)}return n.multiply(new ot(t.scaleX||this.scaleX,t.scaleY||this.scaleY))}return super._getTransformedDimensions(t)}_set(t,e){const s=this.initialized&&this[t]!==e,i=super._set(t,e);return this.exactBoundingBox&&s&&((t===G||t===N)&&this.strokeUniform&&this.constructor.layoutProperties.includes(\"strokeUniform\")||this.constructor.layoutProperties.includes(t))&&this.setDimensions(),i}toObject(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return s(s({},super.toObject(t)),{},{points:this.points.map((t=>{let{x:e,y:s}=t;return{x:e,y:s}}))})}_toSVG(){const t=[],e=this.pathOffset.x,s=this.pathOffset.y,i=o.NUM_FRACTION_DIGITS;for(let r=0,n=this.points.length;r<n;r++)t.push(qt(this.points[r].x-e,i),\",\",qt(this.points[r].y-s,i),\" \");return[\"<\".concat(this.constructor.type.toLowerCase(),\" \"),\"COMMON_PARTS\",'points=\"'.concat(t.join(\"\"),'\" />\\n')]}_render(t){const e=this.points.length,s=this.pathOffset.x,i=this.pathOffset.y;if(e&&!isNaN(this.points[e-1].y)){t.beginPath(),t.moveTo(this.points[0].x-s,this.points[0].y-i);for(let r=0;r<e;r++){const e=this.points[r];t.lineTo(e.x-s,e.y-i)}!this.isOpen()&&t.closePath(),this._renderPaintInOrder(t)}}complexity(){return this.points.length}static async fromElement(t,e,r){return new this(so(t.getAttribute(\"points\")),s(s({},i(ur(t,this.ATTRIBUTE_NAMES,r),io)),e))}static fromObject(t){return this._fromObject(t,{extraParam:\"points\"})}}t(no,\"ownDefaults\",ro),t(no,\"type\",\"Polyline\"),t(no,\"layoutProperties\",[U,q,\"strokeLineCap\",\"strokeLineJoin\",\"strokeMiterLimit\",\"strokeWidth\",\"strokeUniform\",\"points\"]),t(no,\"cacheProperties\",[...fs,\"points\"]),t(no,\"ATTRIBUTE_NAMES\",[...ji]),tt.setClass(no),tt.setSVGClass(no);class oo extends no{isOpen(){return!1}}t(oo,\"ownDefaults\",ro),t(oo,\"type\",\"Polygon\"),tt.setClass(oo),tt.setSVGClass(oo);const ao=[\"fontSize\",\"fontWeight\",\"fontFamily\",\"fontStyle\"],ho=[\"underline\",\"overline\",\"linethrough\"],co=[...ao,\"lineHeight\",\"text\",\"charSpacing\",\"textAlign\",\"styles\",\"path\",\"pathStartOffset\",\"pathSide\",\"pathAlign\"],lo=[...co,...ho,\"textBackgroundColor\",\"direction\"],uo=[...ao,...ho,J,\"strokeWidth\",K,\"deltaY\",\"textBackgroundColor\"],go={_reNewline:F,_reSpacesAndTabs:/[ \\t\\r]/g,_reSpaceAndTab:/[ \\t\\r]/,_reWords:/\\S+/g,fontSize:40,fontWeight:\"normal\",fontFamily:\"Times New Roman\",underline:!1,overline:!1,linethrough:!1,textAlign:M,fontStyle:\"normal\",lineHeight:1.16,superscript:{size:.6,baseline:-.35},subscript:{size:.6,baseline:.11},textBackgroundColor:\"\",stroke:null,shadow:null,path:void 0,pathStartOffset:0,pathSide:M,pathAlign:\"baseline\",_fontSizeFraction:.222,offsets:{underline:.1,linethrough:-.315,overline:-.88},_fontSizeMult:1.13,charSpacing:0,deltaY:0,direction:\"ltr\",CACHE_FONT_SIZE:400,MIN_TEXT_WIDTH:2},fo=\"justify\",po=\"justify-left\",mo=\"justify-right\",vo=\"justify-center\";class yo extends yi{isEmptyStyles(t){if(!this.styles)return!0;if(void 0!==t&&!this.styles[t])return!0;const e=void 0===t?this.styles:{line:this.styles[t]};for(const t in e)for(const s in e[t])for(const i in e[t][s])return!1;return!0}styleHas(t,e){if(!this.styles)return!1;if(void 0!==e&&!this.styles[e])return!1;const s=void 0===e?this.styles:{0:this.styles[e]};for(const e in s)for(const i in s[e])if(void 0!==s[e][i][t])return!0;return!1}cleanStyle(t){if(!this.styles)return!1;const e=this.styles;let s,i,r=0,n=!0,o=0;for(const o in e){s=0;for(const a in e[o]){const h=e[o][a]||{};r++,void 0!==h[t]?(i?h[t]!==i&&(n=!1):i=h[t],h[t]===this[t]&&delete h[t]):n=!1,0!==Object.keys(h).length?s++:delete e[o][a]}0===s&&delete e[o]}for(let t=0;t<this._textLines.length;t++)o+=this._textLines[t].length;n&&r===o&&(this[t]=i,this.removeStyle(t))}removeStyle(t){if(!this.styles)return;const e=this.styles;let s,i,r;for(i in e){for(r in s=e[i],s)delete s[r][t],0===Object.keys(s[r]).length&&delete s[r];0===Object.keys(s).length&&delete e[i]}}_extendStyles(t,e){const{lineIndex:i,charIndex:r}=this.get2DCursorLocation(t);this._getLineStyle(i)||this._setLineStyle(i);const n=Yt(s(s({},this._getStyleDeclaration(i,r)),e),(t=>void 0!==t));this._setStyleDeclaration(i,r,n)}getSelectionStyles(t,e,s){const i=[];for(let r=t;r<(e||t);r++)i.push(this.getStyleAtPosition(r,s));return i}getStyleAtPosition(t,e){const{lineIndex:s,charIndex:i}=this.get2DCursorLocation(t);return e?this.getCompleteStyleDeclaration(s,i):this._getStyleDeclaration(s,i)}setSelectionStyles(t,e,s){for(let i=e;i<(s||e);i++)this._extendStyles(i,t);this._forceClearCache=!0}_getStyleDeclaration(t,e){var s;const i=this.styles&&this.styles[t];return i&&null!==(s=i[e])&&void 0!==s?s:{}}getCompleteStyleDeclaration(t,e){return s(s({},Xt(this,this.constructor._styleProperties)),this._getStyleDeclaration(t,e))}_setStyleDeclaration(t,e,s){this.styles[t][e]=s}_deleteStyleDeclaration(t,e){delete this.styles[t][e]}_getLineStyle(t){return!!this.styles[t]}_setLineStyle(t){this.styles[t]={}}_deleteLineStyle(t){delete this.styles[t]}}t(yo,\"_styleProperties\",uo);const _o=/  +/g,xo=/\"/g;function Co(t,e,s,i,r){return\"\\t\\t\".concat(function(t,e){let{left:s,top:i,width:r,height:n}=e,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:o.NUM_FRACTION_DIGITS;const h=Zt(K,t,!1),[c,l,u,d]=[s,i,r,n].map((t=>qt(t,a)));return\"<rect \".concat(h,' x=\"').concat(c,'\" y=\"').concat(l,'\" width=\"').concat(u,'\" height=\"').concat(d,'\"></rect>')}(t,{left:e,top:s,width:i,height:r}),\"\\n\")}const bo=[\"textAnchor\",\"textDecoration\",\"dx\",\"dy\",\"top\",\"left\",\"fontSize\",\"strokeWidth\"];let wo;class So extends yo{static getDefaults(){return s(s({},super.getDefaults()),So.ownDefaults)}constructor(e,s){super(),t(this,\"__charBounds\",[]),Object.assign(this,So.ownDefaults),this.setOptions(s),this.styles||(this.styles={}),this.text=e,this.initialized=!0,this.path&&this.setPathInfo(),this.initDimensions(),this.setCoords()}setPathInfo(){const t=this.path;t&&(t.segmentsInfo=Jr(t.path))}_splitText(){const t=this._splitTextIntoLines(this.text);return this.textLines=t.lines,this._textLines=t.graphemeLines,this._unwrappedTextLines=t._unwrappedLines,this._text=t.graphemeText,t}initDimensions(){this._splitText(),this._clearCache(),this.dirty=!0,this.path?(this.width=this.path.width,this.height=this.path.height):(this.width=this.calcTextWidth()||this.cursorWidth||this.MIN_TEXT_WIDTH,this.height=this.calcTextHeight()),this.textAlign.includes(fo)&&this.enlargeSpaces()}enlargeSpaces(){let t,e,s,i,r,n,o;for(let a=0,h=this._textLines.length;a<h;a++)if((this.textAlign===fo||a!==h-1&&!this.isEndOfWrapping(a))&&(i=0,r=this._textLines[a],e=this.getLineWidth(a),e<this.width&&(o=this.textLines[a].match(this._reSpacesAndTabs)))){s=o.length,t=(this.width-e)/s;for(let e=0;e<=r.length;e++)n=this.__charBounds[a][e],this._reSpaceAndTab.test(r[e])?(n.width+=t,n.kernedWidth+=t,n.left+=i,i+=t):n.left+=i}}isEndOfWrapping(t){return t===this._textLines.length-1}missingNewlineOffset(t){return 1}get2DCursorLocation(t,e){const s=e?this._unwrappedTextLines:this._textLines;let i;for(i=0;i<s.length;i++){if(t<=s[i].length)return{lineIndex:i,charIndex:t};t-=s[i].length+this.missingNewlineOffset(i,e)}return{lineIndex:i-1,charIndex:s[i-1].length<t?s[i-1].length:t}}toString(){return\"#<Text (\".concat(this.complexity(),'): { \"text\": \"').concat(this.text,'\", \"fontFamily\": \"').concat(this.fontFamily,'\" }>')}_getCacheCanvasDimensions(){const t=super._getCacheCanvasDimensions(),e=this.fontSize;return t.width+=e*t.zoomX,t.height+=e*t.zoomY,t}_render(t){const e=this.path;e&&!e.isNotVisible()&&e._render(t),this._setTextStyles(t),this._renderTextLinesBackground(t),this._renderTextDecoration(t,\"underline\"),this._renderText(t),this._renderTextDecoration(t,\"overline\"),this._renderTextDecoration(t,\"linethrough\")}_renderText(t){this.paintFirst===J?(this._renderTextStroke(t),this._renderTextFill(t)):(this._renderTextFill(t),this._renderTextStroke(t))}_setTextStyles(t,e,s){if(t.textBaseline=\"alphabetic\",this.path)switch(this.pathAlign){case D:t.textBaseline=\"middle\";break;case\"ascender\":t.textBaseline=P;break;case\"descender\":t.textBaseline=E}t.font=this._getFontDeclaration(e,s)}calcTextWidth(){let t=this.getLineWidth(0);for(let e=1,s=this._textLines.length;e<s;e++){const s=this.getLineWidth(e);s>t&&(t=s)}return t}_renderTextLine(t,e,s,i,r,n){this._renderChars(t,e,s,i,r,n)}_renderTextLinesBackground(t){if(!this.textBackgroundColor&&!this.styleHas(\"textBackgroundColor\"))return;const e=t.fillStyle,s=this._getLeftOffset();let i=this._getTopOffset();for(let e=0,r=this._textLines.length;e<r;e++){const r=this.getHeightOfLine(e);if(!this.textBackgroundColor&&!this.styleHas(\"textBackgroundColor\",e)){i+=r;continue}const n=this._textLines[e].length,o=this._getLineLeftOffset(e);let a,h,c=0,l=0,u=this.getValueOfPropertyAt(e,0,\"textBackgroundColor\");for(let d=0;d<n;d++){const n=this.__charBounds[e][d];h=this.getValueOfPropertyAt(e,d,\"textBackgroundColor\"),this.path?(t.save(),t.translate(n.renderLeft,n.renderTop),t.rotate(n.angle),t.fillStyle=h,h&&t.fillRect(-n.width/2,-r/this.lineHeight*(1-this._fontSizeFraction),n.width,r/this.lineHeight),t.restore()):h!==u?(a=s+o+l,\"rtl\"===this.direction&&(a=this.width-a-c),t.fillStyle=u,u&&t.fillRect(a,i,c,r/this.lineHeight),l=n.left,c=n.width,u=h):c+=n.kernedWidth}h&&!this.path&&(a=s+o+l,\"rtl\"===this.direction&&(a=this.width-a-c),t.fillStyle=h,t.fillRect(a,i,c,r/this.lineHeight)),i+=r}t.fillStyle=e,this._removeShadow(t)}_measureChar(t,e,s,i){const r=_.getFontCache(e),n=this._getFontDeclaration(e),o=s+t,a=s&&n===this._getFontDeclaration(i),h=e.fontSize/this.CACHE_FONT_SIZE;let c,l,u,d;if(s&&void 0!==r[s]&&(u=r[s]),void 0!==r[t]&&(d=c=r[t]),a&&void 0!==r[o]&&(l=r[o],d=l-u),void 0===c||void 0===u||void 0===l){const i=function(){if(!wo){const t=vt({width:0,height:0});wo=t.getContext(\"2d\")}return wo}();this._setTextStyles(i,e,!0),void 0===c&&(d=c=i.measureText(t).width,r[t]=c),void 0===u&&a&&s&&(u=i.measureText(s).width,r[s]=u),a&&void 0===l&&(l=i.measureText(o).width,r[o]=l,d=l-u)}return{width:c*h,kernedWidth:d*h}}getHeightOfChar(t,e){return this.getValueOfPropertyAt(t,e,\"fontSize\")}measureLine(t){const e=this._measureLine(t);return 0!==this.charSpacing&&(e.width-=this._getWidthOfCharSpacing()),e.width<0&&(e.width=0),e}_measureLine(t){let e,s,i=0;const r=this.pathSide===A,n=this.path,o=this._textLines[t],a=o.length,h=new Array(a);this.__charBounds[t]=h;for(let r=0;r<a;r++){const n=o[r];s=this._getGraphemeBox(n,t,r,e),h[r]=s,i+=s.kernedWidth,e=n}if(h[a]={left:s?s.left+s.width:0,width:0,kernedWidth:0,height:this.fontSize,deltaY:0},n&&n.segmentsInfo){let t=0;const e=n.segmentsInfo[n.segmentsInfo.length-1].length;switch(this.textAlign){case M:t=r?e-i:0;break;case D:t=(e-i)/2;break;case A:t=r?0:e-i}t+=this.pathStartOffset*(r?-1:1);for(let i=r?a-1:0;r?i>=0:i<a;r?i--:i++)s=h[i],t>e?t%=e:t<0&&(t+=e),this._setGraphemeOnPath(t,s),t+=s.kernedWidth}return{width:i,numOfSpaces:0}}_setGraphemeOnPath(t,e){const s=t+e.kernedWidth/2,i=this.path,r=Qr(i.path,s,i.segmentsInfo);e.renderLeft=r.x-i.pathOffset.x,e.renderTop=r.y-i.pathOffset.y,e.angle=r.angle+(this.pathSide===A?Math.PI:0)}_getGraphemeBox(t,e,s,i,r){const n=this.getCompleteStyleDeclaration(e,s),o=i?this.getCompleteStyleDeclaration(e,s-1):{},a=this._measureChar(t,n,i,o);let h,c=a.kernedWidth,l=a.width;0!==this.charSpacing&&(h=this._getWidthOfCharSpacing(),l+=h,c+=h);const u={width:l,left:0,height:n.fontSize,kernedWidth:c,deltaY:n.deltaY};if(s>0&&!r){const t=this.__charBounds[e][s-1];u.left=t.left+t.width+a.kernedWidth-a.width}return u}getHeightOfLine(t){if(this.__lineHeights[t])return this.__lineHeights[t];let e=this.getHeightOfChar(t,0);for(let s=1,i=this._textLines[t].length;s<i;s++)e=Math.max(this.getHeightOfChar(t,s),e);return this.__lineHeights[t]=e*this.lineHeight*this._fontSizeMult}calcTextHeight(){let t,e=0;for(let s=0,i=this._textLines.length;s<i;s++)t=this.getHeightOfLine(s),e+=s===i-1?t/this.lineHeight:t;return e}_getLeftOffset(){return\"ltr\"===this.direction?-this.width/2:this.width/2}_getTopOffset(){return-this.height/2}_renderTextCommon(t,e){t.save();let s=0;const i=this._getLeftOffset(),r=this._getTopOffset();for(let n=0,o=this._textLines.length;n<o;n++){const o=this.getHeightOfLine(n),a=o/this.lineHeight,h=this._getLineLeftOffset(n);this._renderTextLine(e,t,this._textLines[n],i+h,r+s+a,n),s+=o}t.restore()}_renderTextFill(t){(this.fill||this.styleHas(K))&&this._renderTextCommon(t,\"fillText\")}_renderTextStroke(t){(this.stroke&&0!==this.strokeWidth||!this.isEmptyStyles())&&(this.shadow&&!this.shadow.affectStroke&&this._removeShadow(t),t.save(),this._setLineDash(t,this.strokeDashArray),t.beginPath(),this._renderTextCommon(t,\"strokeText\"),t.closePath(),t.restore())}_renderChars(t,e,s,i,r,n){const o=this.getHeightOfLine(n),a=this.textAlign.includes(fo),h=this.path,c=!a&&0===this.charSpacing&&this.isEmptyStyles(n)&&!h,l=\"ltr\"===this.direction,u=\"ltr\"===this.direction?1:-1,d=e.direction;let g,f,p,m,v,y=\"\",_=0;if(e.save(),d!==this.direction&&(e.canvas.setAttribute(\"dir\",l?\"ltr\":\"rtl\"),e.direction=l?\"ltr\":\"rtl\",e.textAlign=l?M:A),r-=o*this._fontSizeFraction/this.lineHeight,c)return this._renderChar(t,e,n,0,s.join(\"\"),i,r),void e.restore();for(let o=0,c=s.length-1;o<=c;o++)m=o===c||this.charSpacing||h,y+=s[o],p=this.__charBounds[n][o],0===_?(i+=u*(p.kernedWidth-p.width),_+=p.width):_+=p.kernedWidth,a&&!m&&this._reSpaceAndTab.test(s[o])&&(m=!0),m||(g=g||this.getCompleteStyleDeclaration(n,o),f=this.getCompleteStyleDeclaration(n,o+1),m=Pi(g,f,!1)),m&&(h?(e.save(),e.translate(p.renderLeft,p.renderTop),e.rotate(p.angle),this._renderChar(t,e,n,o,y,-_/2,0),e.restore()):(v=i,this._renderChar(t,e,n,o,y,v,r)),y=\"\",g=f,i+=u*_,_=0);e.restore()}_applyPatternGradientTransformText(t){const e=this.width+this.strokeWidth,s=this.height+this.strokeWidth,i=vt({width:e,height:s}),r=i.getContext(\"2d\");return i.width=e,i.height=s,r.beginPath(),r.moveTo(0,0),r.lineTo(e,0),r.lineTo(e,s),r.lineTo(0,s),r.closePath(),r.translate(e/2,s/2),r.fillStyle=t.toLive(r),this._applyPatternGradientTransform(r,t),r.fill(),r.createPattern(i,\"no-repeat\")}handleFiller(t,e,s){let i,r;return $t(s)?\"percentage\"===s.gradientUnits||s.gradientTransform||s.patternTransform?(i=-this.width/2,r=-this.height/2,t.translate(i,r),t[e]=this._applyPatternGradientTransformText(s),{offsetX:i,offsetY:r}):(t[e]=s.toLive(t),this._applyPatternGradientTransform(t,s)):(t[e]=s,{offsetX:0,offsetY:0})}_setStrokeStyles(t,e){let{stroke:s,strokeWidth:i}=e;return t.lineWidth=i,t.lineCap=this.strokeLineCap,t.lineDashOffset=this.strokeDashOffset,t.lineJoin=this.strokeLineJoin,t.miterLimit=this.strokeMiterLimit,this.handleFiller(t,\"strokeStyle\",s)}_setFillStyles(t,e){let{fill:s}=e;return this.handleFiller(t,\"fillStyle\",s)}_renderChar(t,e,s,i,r,n,o){const a=this._getStyleDeclaration(s,i),h=this.getCompleteStyleDeclaration(s,i),c=\"fillText\"===t&&h.fill,l=\"strokeText\"===t&&h.stroke&&h.strokeWidth;if(l||c){if(e.save(),e.font=this._getFontDeclaration(h),a.textBackgroundColor&&this._removeShadow(e),a.deltaY&&(o+=a.deltaY),c){const t=this._setFillStyles(e,h);e.fillText(r,n-t.offsetX,o-t.offsetY)}if(l){const t=this._setStrokeStyles(e,h);e.strokeText(r,n-t.offsetX,o-t.offsetY)}e.restore()}}setSuperscript(t,e){this._setScript(t,e,this.superscript)}setSubscript(t,e){this._setScript(t,e,this.subscript)}_setScript(t,e,s){const i=this.get2DCursorLocation(t,!0),r=this.getValueOfPropertyAt(i.lineIndex,i.charIndex,\"fontSize\"),n=this.getValueOfPropertyAt(i.lineIndex,i.charIndex,\"deltaY\"),o={fontSize:r*s.size,deltaY:n+r*s.baseline};this.setSelectionStyles(o,t,e)}_getLineLeftOffset(t){const e=this.getLineWidth(t),s=this.width-e,i=this.textAlign,r=this.direction,n=this.isEndOfWrapping(t);let o=0;return i===fo||i===vo&&!n||i===mo&&!n||i===po&&!n?0:(i===D&&(o=s/2),i===A&&(o=s),i===vo&&(o=s/2),i===mo&&(o=s),\"rtl\"===r&&(i===A||i===fo||i===mo?o=0:i===M||i===po?o=-s:i!==D&&i!==vo||(o=-s/2)),o)}_clearCache(){this._forceClearCache=!1,this.__lineWidths=[],this.__lineHeights=[],this.__charBounds=[]}getLineWidth(t){if(void 0!==this.__lineWidths[t])return this.__lineWidths[t];const{width:e}=this.measureLine(t);return this.__lineWidths[t]=e,e}_getWidthOfCharSpacing(){return 0!==this.charSpacing?this.fontSize*this.charSpacing/1e3:0}getValueOfPropertyAt(t,e,s){var i;return null!==(i=this._getStyleDeclaration(t,e)[s])&&void 0!==i?i:this[s]}_renderTextDecoration(t,e){if(!this[e]&&!this.styleHas(e))return;let s=this._getTopOffset();const i=this._getLeftOffset(),r=this.path,n=this._getWidthOfCharSpacing(),o=this.offsets[e];for(let a=0,h=this._textLines.length;a<h;a++){const h=this.getHeightOfLine(a);if(!this[e]&&!this.styleHas(e,a)){s+=h;continue}const c=this._textLines[a],l=h/this.lineHeight,u=this._getLineLeftOffset(a);let d,g,f=0,p=0,m=this.getValueOfPropertyAt(a,0,e),v=this.getValueOfPropertyAt(a,0,K);const y=s+l*(1-this._fontSizeFraction);let _=this.getHeightOfChar(a,0),x=this.getValueOfPropertyAt(a,0,\"deltaY\");for(let s=0,n=c.length;s<n;s++){const n=this.__charBounds[a][s];d=this.getValueOfPropertyAt(a,s,e),g=this.getValueOfPropertyAt(a,s,K);const h=this.getHeightOfChar(a,s),c=this.getValueOfPropertyAt(a,s,\"deltaY\");if(r&&d&&g)t.save(),t.fillStyle=v,t.translate(n.renderLeft,n.renderTop),t.rotate(n.angle),t.fillRect(-n.kernedWidth/2,o*h+c,n.kernedWidth,this.fontSize/15),t.restore();else if((d!==m||g!==v||h!==_||c!==x)&&p>0){let e=i+u+f;\"rtl\"===this.direction&&(e=this.width-e-p),m&&v&&(t.fillStyle=v,t.fillRect(e,y+o*_+x,p,this.fontSize/15)),f=n.left,p=n.width,m=d,v=g,_=h,x=c}else p+=n.kernedWidth}let C=i+u+f;\"rtl\"===this.direction&&(C=this.width-C-p),t.fillStyle=g,d&&g&&t.fillRect(C,y+o*_+x,p-n,this.fontSize/15),s+=h}this._removeShadow(t)}_getFontDeclaration(){let{fontFamily:t=this.fontFamily,fontStyle:e=this.fontStyle,fontWeight:s=this.fontWeight,fontSize:i=this.fontSize}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=arguments.length>1?arguments[1]:void 0;const n=t.includes(\"'\")||t.includes('\"')||t.includes(\",\")||So.genericFonts.includes(t.toLowerCase())?t:'\"'.concat(t,'\"');return[e,s,\"\".concat(r?this.CACHE_FONT_SIZE:i,\"px\"),n].join(\" \")}render(t){this.visible&&(this.canvas&&this.canvas.skipOffscreen&&!this.group&&!this.isOnScreen()||(this._forceClearCache&&this.initDimensions(),super.render(t)))}graphemeSplit(t){return ki(t)}_splitTextIntoLines(t){const e=t.split(this._reNewline),s=new Array(e.length),i=[\"\\n\"];let r=[];for(let t=0;t<e.length;t++)s[t]=this.graphemeSplit(e[t]),r=r.concat(s[t],i);return r.pop(),{_unwrappedLines:s,lines:e,graphemeText:r,graphemeLines:s}}toObject(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return s(s({},super.toObject([...lo,...t])),{},{styles:Ei(this.styles,this.text)},this.path?{path:this.path.toObject()}:{})}set(t,e){const{textLayoutProperties:s}=this.constructor;super.set(t,e);let i=!1,r=!1;if(\"object\"==typeof t)for(const e in t)\"path\"===e&&this.setPathInfo(),i=i||s.includes(e),r=r||\"path\"===e;else i=s.includes(t),r=\"path\"===t;return r&&this.setPathInfo(),i&&this.initialized&&(this.initDimensions(),this.setCoords()),this}complexity(){return 1}static async fromElement(t,e,r){const n=ur(t,So.ATTRIBUTE_NAMES,r),o=s(s({},e),n),{textAnchor:a=M,textDecoration:h=\"\",dx:c=0,dy:l=0,top:u=0,left:d=0,fontSize:g=O,strokeWidth:f=1}=o,p=i(o,bo),m=new this((t.textContent||\"\").replace(/^\\s+|\\s+$|\\n+/g,\"\").replace(/\\s+/g,\" \"),s({left:d+c,top:u+l,underline:h.includes(\"underline\"),overline:h.includes(\"overline\"),linethrough:h.includes(\"line-through\"),strokeWidth:0,fontSize:g},p)),v=m.getScaledHeight()/m.height,y=((m.height+m.strokeWidth)*m.lineHeight-m.height)*v,_=m.getScaledHeight()+y;let x=0;return a===D&&(x=m.getScaledWidth()/2),a===A&&(x=m.getScaledWidth()),m.set({left:m.left-x,top:m.top-(_-m.fontSize*(.07+m._fontSizeFraction))/m.lineHeight,strokeWidth:f}),m}static fromObject(t){return this._fromObject(s(s({},t),{},{styles:Ai(t.styles||{},t.text)}),{extraParam:\"text\"})}}t(So,\"textLayoutProperties\",co),t(So,\"cacheProperties\",[...fs,...lo]),t(So,\"ownDefaults\",go),t(So,\"type\",\"Text\"),t(So,\"genericFonts\",[\"serif\",\"sans-serif\",\"monospace\",\"cursive\",\"fantasy\",\"system-ui\",\"ui-serif\",\"ui-sans-serif\",\"ui-monospace\",\"ui-rounded\",\"math\",\"emoji\",\"fangsong\"]),t(So,\"ATTRIBUTE_NAMES\",ji.concat(\"x\",\"y\",\"dx\",\"dy\",\"font-family\",\"font-style\",\"font-weight\",\"font-size\",\"letter-spacing\",\"text-decoration\",\"text-anchor\")),vi(So,[class extends Be{_toSVG(){const t=this._getSVGLeftTopOffsets(),e=this._getSVGTextAndBg(t.textTop,t.textLeft);return this._wrapSVGTextAndBg(e)}toSVG(t){return this._createBaseSVGMarkup(this._toSVG(),{reviver:t,noStyle:!0,withShadow:!0})}_getSVGLeftTopOffsets(){return{textLeft:-this.width/2,textTop:-this.height/2,lineTop:this.getHeightOfLine(0)}}_wrapSVGTextAndBg(t){let{textBgRects:e,textSpans:s}=t;const i=this.getSvgTextDecoration(this);return[e.join(\"\"),'\\t\\t<text xml:space=\"preserve\" ',this.fontFamily?'font-family=\"'.concat(this.fontFamily.replace(xo,\"'\"),'\" '):\"\",this.fontSize?'font-size=\"'.concat(this.fontSize,'\" '):\"\",this.fontStyle?'font-style=\"'.concat(this.fontStyle,'\" '):\"\",this.fontWeight?'font-weight=\"'.concat(this.fontWeight,'\" '):\"\",i?'text-decoration=\"'.concat(i,'\" '):\"\",\"rtl\"===this.direction?'direction=\"'.concat(this.direction,'\" '):\"\",'style=\"',this.getSvgStyles(!0),'\"',this.addPaintOrder(),\" >\",s.join(\"\"),\"</text>\\n\"]}_getSVGTextAndBg(t,e){const s=[],i=[];let r,n=t;this.backgroundColor&&i.push(...Co(this.backgroundColor,-this.width/2,-this.height/2,this.width,this.height));for(let t=0,o=this._textLines.length;t<o;t++)r=this._getLineLeftOffset(t),\"rtl\"===this.direction&&(r+=this.width),(this.textBackgroundColor||this.styleHas(\"textBackgroundColor\",t))&&this._setSVGTextLineBg(i,t,e+r,n),this._setSVGTextLineText(s,t,e+r,n),n+=this.getHeightOfLine(t);return{textSpans:s,textBgRects:i}}_createTextCharSpan(t,e,s,i){const r=this.getSvgSpanStyles(e,t!==t.trim()||!!t.match(_o)),n=r?'style=\"'.concat(r,'\"'):\"\",a=e.deltaY,h=a?' dy=\"'.concat(qt(a,o.NUM_FRACTION_DIGITS),'\" '):\"\";return'<tspan x=\"'.concat(qt(s,o.NUM_FRACTION_DIGITS),'\" y=\"').concat(qt(i,o.NUM_FRACTION_DIGITS),'\" ').concat(h).concat(n,\">\").concat(Oi(t),\"</tspan>\")}_setSVGTextLineText(t,e,s,i){const r=this.getHeightOfLine(e),n=this.textAlign.includes(fo),o=this._textLines[e];let a,h,c,l,u,d=\"\",g=0;i+=r*(1-this._fontSizeFraction)/this.lineHeight;for(let r=0,f=o.length-1;r<=f;r++)u=r===f||this.charSpacing,d+=o[r],c=this.__charBounds[e][r],0===g?(s+=c.kernedWidth-c.width,g+=c.width):g+=c.kernedWidth,n&&!u&&this._reSpaceAndTab.test(o[r])&&(u=!0),u||(a=a||this.getCompleteStyleDeclaration(e,r),h=this.getCompleteStyleDeclaration(e,r+1),u=Pi(a,h,!0)),u&&(l=this._getStyleDeclaration(e,r),t.push(this._createTextCharSpan(d,l,s,i)),d=\"\",a=h,\"rtl\"===this.direction?s-=g:s+=g,g=0)}_setSVGTextLineBg(t,e,s,i){const r=this._textLines[e],n=this.getHeightOfLine(e)/this.lineHeight;let o,a=0,h=0,c=this.getValueOfPropertyAt(e,0,\"textBackgroundColor\");for(let l=0;l<r.length;l++){const{left:r,width:u,kernedWidth:d}=this.__charBounds[e][l];o=this.getValueOfPropertyAt(e,l,\"textBackgroundColor\"),o!==c?(c&&t.push(...Co(c,s+h,i,a,n)),h=r,a=u,c=o):a+=d}o&&t.push(...Co(c,s+h,i,a,n))}_getSVGLineTopOffset(t){let e,s=0;for(e=0;e<t;e++)s+=this.getHeightOfLine(e);const i=this.getHeightOfLine(e);return{lineTop:s,offset:(this._fontSizeMult-this._fontSizeFraction)*i/(this.lineHeight*this._fontSizeMult)}}getSvgStyles(t){return\"\".concat(super.getSvgStyles(t),\" white-space: pre;\")}getSvgSpanStyles(t,e){const{fontFamily:s,strokeWidth:i,stroke:r,fill:n,fontSize:o,fontStyle:a,fontWeight:h,deltaY:c}=t,l=this.getSvgTextDecoration(t);return[r?Zt(J,r):\"\",i?\"stroke-width: \".concat(i,\"; \"):\"\",s?\"font-family: \".concat(s.includes(\"'\")||s.includes('\"')?s:\"'\".concat(s,\"'\"),\"; \"):\"\",o?\"font-size: \".concat(o,\"px; \"):\"\",a?\"font-style: \".concat(a,\"; \"):\"\",h?\"font-weight: \".concat(h,\"; \"):\"\",l?\"text-decoration: \".concat(l,\"; \"):l,n?Zt(K,n):\"\",c?\"baseline-shift: \".concat(-c,\"; \"):\"\",e?\"white-space: pre; \":\"\"].join(\"\")}getSvgTextDecoration(t){return[\"overline\",\"underline\",\"line-through\"].filter((e=>t[e.replace(\"-\",\"\")])).join(\" \")}}]),tt.setClass(So),tt.setSVGClass(So);class To{constructor(e){t(this,\"target\",void 0),t(this,\"__mouseDownInPlace\",!1),t(this,\"__dragStartFired\",!1),t(this,\"__isDraggingOver\",!1),t(this,\"__dragStartSelection\",void 0),t(this,\"__dragImageDisposer\",void 0),t(this,\"_dispose\",void 0),this.target=e;const s=[this.target.on(\"dragenter\",this.dragEnterHandler.bind(this)),this.target.on(\"dragover\",this.dragOverHandler.bind(this)),this.target.on(\"dragleave\",this.dragLeaveHandler.bind(this)),this.target.on(\"dragend\",this.dragEndHandler.bind(this)),this.target.on(\"drop\",this.dropHandler.bind(this))];this._dispose=()=>{s.forEach((t=>t())),this._dispose=void 0}}isPointerOverSelection(t){const e=this.target,s=e.getSelectionStartFromPointer(t);return e.isEditing&&s>=e.selectionStart&&s<=e.selectionEnd&&e.selectionStart<e.selectionEnd}start(t){return this.__mouseDownInPlace=this.isPointerOverSelection(t)}isActive(){return this.__mouseDownInPlace}end(t){const e=this.isActive();return e&&!this.__dragStartFired&&(this.target.setCursorByClick(t),this.target.initDelayedCursor(!0)),this.__mouseDownInPlace=!1,this.__dragStartFired=!1,this.__isDraggingOver=!1,e}getDragStartSelection(){return this.__dragStartSelection}setDragImage(t,e){var s;let{selectionStart:i,selectionEnd:r}=e;const n=this.target,o=n.canvas,a=new ot(n.flipX?-1:1,n.flipY?-1:1),h=n._getCursorBoundaries(i),c=new ot(h.left+h.leftOffset,h.top+h.topOffset).multiply(a).transform(n.calcTransformMatrix()),l=o.getScenePoint(t).subtract(c),u=n.getCanvasRetinaScaling(),d=n.getBoundingRect(),g=c.subtract(new ot(d.left,d.top)),f=o.viewportTransform,p=g.add(l).transform(f,!0),m=n.backgroundColor,v=Ti(n.styles);n.backgroundColor=\"\";const y={stroke:\"transparent\",fill:\"transparent\",textBackgroundColor:\"transparent\"};n.setSelectionStyles(y,0,i),n.setSelectionStyles(y,r,n.text.length),n.dirty=!0;const _=n.toCanvasElement({enableRetinaScaling:o.enableRetinaScaling,viewportTransform:!0});n.backgroundColor=m,n.styles=v,n.dirty=!0,on(_,{position:\"fixed\",left:\"\".concat(-_.width,\"px\"),border:j,width:\"\".concat(_.width/u,\"px\"),height:\"\".concat(_.height/u,\"px\")}),this.__dragImageDisposer&&this.__dragImageDisposer(),this.__dragImageDisposer=()=>{_.remove()},re(t.target||this.target.hiddenTextarea).body.appendChild(_),null===(s=t.dataTransfer)||void 0===s||s.setDragImage(_,p.x,p.y)}onDragStart(t){this.__dragStartFired=!0;const e=this.target,i=this.isActive();if(i&&t.dataTransfer){const i=this.__dragStartSelection={selectionStart:e.selectionStart,selectionEnd:e.selectionEnd},r=e._text.slice(i.selectionStart,i.selectionEnd).join(\"\"),n=s({text:e.text,value:r},i);t.dataTransfer.setData(\"text/plain\",r),t.dataTransfer.setData(\"application/fabric\",JSON.stringify({value:r,styles:e.getSelectionStyles(i.selectionStart,i.selectionEnd,!0)})),t.dataTransfer.effectAllowed=\"copyMove\",this.setDragImage(t,n)}return e.abortCursorAnimation(),i}canDrop(t){if(this.target.editable&&!this.target.getActiveControl()&&!t.defaultPrevented){if(this.isActive()&&this.__dragStartSelection){const e=this.target.getSelectionStartFromPointer(t),s=this.__dragStartSelection;return e<s.selectionStart||e>s.selectionEnd}return!0}return!1}targetCanDrop(t){return this.target.canDrop(t)}dragEnterHandler(t){let{e:e}=t;const s=this.targetCanDrop(e);!this.__isDraggingOver&&s&&(this.__isDraggingOver=!0)}dragOverHandler(t){const{e:e}=t,s=this.targetCanDrop(e);!this.__isDraggingOver&&s?this.__isDraggingOver=!0:this.__isDraggingOver&&!s&&(this.__isDraggingOver=!1),this.__isDraggingOver&&(e.preventDefault(),t.canDrop=!0,t.dropTarget=this.target)}dragLeaveHandler(){(this.__isDraggingOver||this.isActive())&&(this.__isDraggingOver=!1)}dropHandler(t){var e;const{e:s}=t,i=s.defaultPrevented;this.__isDraggingOver=!1,s.preventDefault();let r=null===(e=s.dataTransfer)||void 0===e?void 0:e.getData(\"text/plain\");if(r&&!i){const e=this.target,i=e.canvas;let n=e.getSelectionStartFromPointer(s);const{styles:o}=s.dataTransfer.types.includes(\"application/fabric\")?JSON.parse(s.dataTransfer.getData(\"application/fabric\")):{},a=r[Math.max(0,r.length-1)],h=0;if(this.__dragStartSelection){const t=this.__dragStartSelection.selectionStart,s=this.__dragStartSelection.selectionEnd;n>t&&n<=s?n=t:n>s&&(n-=s-t),e.removeChars(t,s),delete this.__dragStartSelection}e._reNewline.test(a)&&(e._reNewline.test(e._text[n])||n===e._text.length)&&(r=r.trimEnd()),t.didDrop=!0,t.dropTarget=e,e.insertChars(r,o,n),i.setActiveObject(e),e.enterEditing(s),e.selectionStart=Math.min(n+h,e._text.length),e.selectionEnd=Math.min(e.selectionStart+r.length,e._text.length),e.hiddenTextarea.value=e.text,e._updateTextarea(),e.hiddenTextarea.focus(),e.fire(z,{index:n+h,action:\"drop\"}),i.fire(\"text:changed\",{target:e}),i.contextTopDirty=!0,i.requestRenderAll()}}dragEndHandler(t){let{e:e}=t;if(this.isActive()&&this.__dragStartFired&&this.__dragStartSelection){var s;const t=this.target,i=this.target.canvas,{selectionStart:r,selectionEnd:n}=this.__dragStartSelection,o=(null===(s=e.dataTransfer)||void 0===s?void 0:s.dropEffect)||j;o===j?(t.selectionStart=r,t.selectionEnd=n,t._updateTextarea(),t.hiddenTextarea.focus()):(t.clearContextTop(),\"move\"===o&&(t.removeChars(r,n),t.selectionStart=t.selectionEnd=r,t.hiddenTextarea&&(t.hiddenTextarea.value=t.text),t._updateTextarea(),t.fire(z,{index:r,action:\"dragend\"}),i.fire(\"text:changed\",{target:t}),i.requestRenderAll()),t.exitEditing())}this.__dragImageDisposer&&this.__dragImageDisposer(),delete this.__dragImageDisposer,delete this.__dragStartSelection,this.__isDraggingOver=!1}dispose(){this._dispose&&this._dispose()}}const Oo=/[ \\n\\.,;!\\?\\-]/;class ko extends So{constructor(){super(...arguments),t(this,\"_currentCursorOpacity\",1)}initBehavior(){this._tick=this._tick.bind(this),this._onTickComplete=this._onTickComplete.bind(this),this.updateSelectionOnMouseMove=this.updateSelectionOnMouseMove.bind(this)}onDeselect(t){return this.isEditing&&this.exitEditing(),this.selected=!1,super.onDeselect(t)}_animateCursor(t){let{toValue:e,duration:s,delay:i,onComplete:r}=t;return As({startValue:this._currentCursorOpacity,endValue:e,duration:s,delay:i,onComplete:r,abort:()=>!this.canvas||this.selectionStart!==this.selectionEnd,onChange:t=>{this._currentCursorOpacity=t,this.renderCursorOrSelection()}})}_tick(t){this._currentTickState=this._animateCursor({toValue:0,duration:this.cursorDuration/2,delay:Math.max(t||0,100),onComplete:this._onTickComplete})}_onTickComplete(){var t;null===(t=this._currentTickCompleteState)||void 0===t||t.abort(),this._currentTickCompleteState=this._animateCursor({toValue:1,duration:this.cursorDuration,onComplete:this._tick})}initDelayedCursor(t){this.abortCursorAnimation(),this._tick(t?0:this.cursorDelay)}abortCursorAnimation(){let t=!1;[this._currentTickState,this._currentTickCompleteState].forEach((e=>{e&&!e.isDone()&&(t=!0,e.abort())})),this._currentCursorOpacity=1,t&&this.clearContextTop()}restartCursorIfNeeded(){[this._currentTickState,this._currentTickCompleteState].some((t=>!t||t.isDone()))&&this.initDelayedCursor()}selectAll(){return this.selectionStart=0,this.selectionEnd=this._text.length,this._fireSelectionChanged(),this._updateTextarea(),this}getSelectedText(){return this._text.slice(this.selectionStart,this.selectionEnd).join(\"\")}findWordBoundaryLeft(t){let e=0,s=t-1;if(this._reSpace.test(this._text[s]))for(;this._reSpace.test(this._text[s]);)e++,s--;for(;/\\S/.test(this._text[s])&&s>-1;)e++,s--;return t-e}findWordBoundaryRight(t){let e=0,s=t;if(this._reSpace.test(this._text[s]))for(;this._reSpace.test(this._text[s]);)e++,s++;for(;/\\S/.test(this._text[s])&&s<this._text.length;)e++,s++;return t+e}findLineBoundaryLeft(t){let e=0,s=t-1;for(;!/\\n/.test(this._text[s])&&s>-1;)e++,s--;return t-e}findLineBoundaryRight(t){let e=0,s=t;for(;!/\\n/.test(this._text[s])&&s<this._text.length;)e++,s++;return t+e}searchWordBoundary(t,e){const s=this._text;let i=t>0&&this._reSpace.test(s[t])&&(-1===e||!F.test(s[t-1]))?t-1:t,r=s[i];for(;i>0&&i<s.length&&!Oo.test(r);)i+=e,r=s[i];return-1===e&&Oo.test(r)&&i++,i}selectWord(t){t=t||this.selectionStart;const e=this.searchWordBoundary(t,-1),s=Math.max(e,this.searchWordBoundary(t,1));this.selectionStart=e,this.selectionEnd=s,this._fireSelectionChanged(),this._updateTextarea(),this.renderCursorOrSelection()}selectLine(t){t=t||this.selectionStart;const e=this.findLineBoundaryLeft(t),s=this.findLineBoundaryRight(t);return this.selectionStart=e,this.selectionEnd=s,this._fireSelectionChanged(),this._updateTextarea(),this}enterEditing(t){!this.isEditing&&this.editable&&(this.enterEditingImpl(),this.fire(\"editing:entered\",t?{e:t}:void 0),this._fireSelectionChanged(),this.canvas&&(this.canvas.fire(\"text:editing:entered\",{target:this,e:t}),this.canvas.requestRenderAll()))}enterEditingImpl(){this.canvas&&(this.canvas.calcOffset(),this.canvas.textEditingManager.exitTextEditing()),this.isEditing=!0,this.initHiddenTextarea(),this.hiddenTextarea.focus(),this.hiddenTextarea.value=this.text,this._updateTextarea(),this._saveEditingProps(),this._setEditingProps(),this._textBeforeEdit=this.text,this._tick()}updateSelectionOnMouseMove(t){if(this.getActiveControl())return;const e=this.hiddenTextarea;re(e).activeElement!==e&&e.focus();const s=this.getSelectionStartFromPointer(t),i=this.selectionStart,r=this.selectionEnd;(s===this.__selectionStartOnMouseDown&&i!==r||i!==s&&r!==s)&&(s>this.__selectionStartOnMouseDown?(this.selectionStart=this.__selectionStartOnMouseDown,this.selectionEnd=s):(this.selectionStart=s,this.selectionEnd=this.__selectionStartOnMouseDown),this.selectionStart===i&&this.selectionEnd===r||(this._fireSelectionChanged(),this._updateTextarea(),this.renderCursorOrSelection()))}_setEditingProps(){this.hoverCursor=\"text\",this.canvas&&(this.canvas.defaultCursor=this.canvas.moveCursor=\"text\"),this.borderColor=this.editingBorderColor,this.hasControls=this.selectable=!1,this.lockMovementX=this.lockMovementY=!0}fromStringToGraphemeSelection(t,e,s){const i=s.slice(0,t),r=this.graphemeSplit(i).length;if(t===e)return{selectionStart:r,selectionEnd:r};const n=s.slice(t,e);return{selectionStart:r,selectionEnd:r+this.graphemeSplit(n).length}}fromGraphemeToStringSelection(t,e,s){const i=s.slice(0,t).join(\"\").length;if(t===e)return{selectionStart:i,selectionEnd:i};return{selectionStart:i,selectionEnd:i+s.slice(t,e).join(\"\").length}}_updateTextarea(){if(this.cursorOffsetCache={},this.hiddenTextarea){if(!this.inCompositionMode){const t=this.fromGraphemeToStringSelection(this.selectionStart,this.selectionEnd,this._text);this.hiddenTextarea.selectionStart=t.selectionStart,this.hiddenTextarea.selectionEnd=t.selectionEnd}this.updateTextareaPosition()}}updateFromTextArea(){if(!this.hiddenTextarea)return;this.cursorOffsetCache={};const t=this.hiddenTextarea;this.text=t.value,this.set(\"dirty\",!0),this.initDimensions(),this.setCoords();const e=this.fromStringToGraphemeSelection(t.selectionStart,t.selectionEnd,t.value);this.selectionEnd=this.selectionStart=e.selectionEnd,this.inCompositionMode||(this.selectionStart=e.selectionStart),this.updateTextareaPosition()}updateTextareaPosition(){if(this.selectionStart===this.selectionEnd){const t=this._calcTextareaPosition();this.hiddenTextarea.style.left=t.left,this.hiddenTextarea.style.top=t.top}}_calcTextareaPosition(){if(!this.canvas)return{left:\"1px\",top:\"1px\"};const t=this.inCompositionMode?this.compositionStart:this.selectionStart,e=this._getCursorBoundaries(t),s=this.get2DCursorLocation(t),i=s.lineIndex,r=s.charIndex,n=this.getValueOfPropertyAt(i,r,\"fontSize\")*this.lineHeight,o=e.leftOffset,a=this.getCanvasRetinaScaling(),h=this.canvas.upperCanvasEl,c=h.width/a,l=h.height/a,u=c-n,d=l-n,g=new ot(e.left+o,e.top+e.topOffset+n).transform(this.calcTransformMatrix()).transform(this.canvas.viewportTransform).multiply(new ot(h.clientWidth/c,h.clientHeight/l));return g.x<0&&(g.x=0),g.x>u&&(g.x=u),g.y<0&&(g.y=0),g.y>d&&(g.y=d),g.x+=this.canvas._offset.left,g.y+=this.canvas._offset.top,{left:\"\".concat(g.x,\"px\"),top:\"\".concat(g.y,\"px\"),fontSize:\"\".concat(n,\"px\"),charHeight:n}}_saveEditingProps(){this._savedProps={hasControls:this.hasControls,borderColor:this.borderColor,lockMovementX:this.lockMovementX,lockMovementY:this.lockMovementY,hoverCursor:this.hoverCursor,selectable:this.selectable,defaultCursor:this.canvas&&this.canvas.defaultCursor,moveCursor:this.canvas&&this.canvas.moveCursor}}_restoreEditingProps(){this._savedProps&&(this.hoverCursor=this._savedProps.hoverCursor,this.hasControls=this._savedProps.hasControls,this.borderColor=this._savedProps.borderColor,this.selectable=this._savedProps.selectable,this.lockMovementX=this._savedProps.lockMovementX,this.lockMovementY=this._savedProps.lockMovementY,this.canvas&&(this.canvas.defaultCursor=this._savedProps.defaultCursor||this.canvas.defaultCursor,this.canvas.moveCursor=this._savedProps.moveCursor||this.canvas.moveCursor),delete this._savedProps)}_exitEditing(){const t=this.hiddenTextarea;this.selected=!1,this.isEditing=!1,t&&(t.blur&&t.blur(),t.parentNode&&t.parentNode.removeChild(t)),this.hiddenTextarea=null,this.abortCursorAnimation(),this.selectionStart!==this.selectionEnd&&this.clearContextTop()}exitEditingImpl(){this._exitEditing(),this.selectionEnd=this.selectionStart,this._restoreEditingProps(),this._forceClearCache&&(this.initDimensions(),this.setCoords())}exitEditing(){const t=this._textBeforeEdit!==this.text;return this.exitEditingImpl(),this.fire(\"editing:exited\"),t&&this.fire(Q),this.canvas&&(this.canvas.fire(\"text:editing:exited\",{target:this}),t&&this.canvas.fire(\"object:modified\",{target:this})),this}_removeExtraneousStyles(){for(const t in this.styles)this._textLines[t]||delete this.styles[t]}removeStyleFromTo(t,e){const{lineIndex:s,charIndex:i}=this.get2DCursorLocation(t,!0),{lineIndex:r,charIndex:n}=this.get2DCursorLocation(e,!0);if(s!==r){if(this.styles[s])for(let t=i;t<this._unwrappedTextLines[s].length;t++)delete this.styles[s][t];if(this.styles[r])for(let t=n;t<this._unwrappedTextLines[r].length;t++){const e=this.styles[r][t];e&&(this.styles[s]||(this.styles[s]={}),this.styles[s][i+t-n]=e)}for(let t=s+1;t<=r;t++)delete this.styles[t];this.shiftLineStyles(r,s-r)}else if(this.styles[s]){const t=this.styles[s],e=n-i;for(let e=i;e<n;e++)delete t[e];for(const i in this.styles[s]){const s=parseInt(i,10);s>=n&&(t[s-e]=t[i],delete t[i])}}}shiftLineStyles(t,e){const s=Object.assign({},this.styles);for(const i in this.styles){const r=parseInt(i,10);r>t&&(this.styles[r+e]=s[r],s[r-e]||delete this.styles[r])}}insertNewlineStyleObject(t,e,i,r){const n={},o=this._unwrappedTextLines[t].length,a=o===e;let h=!1;i||(i=1),this.shiftLineStyles(t,i);const c=this.styles[t]?this.styles[t][0===e?e:e-1]:void 0;for(const s in this.styles[t]){const i=parseInt(s,10);i>=e&&(h=!0,n[i-e]=this.styles[t][s],a&&0===e||delete this.styles[t][s])}let l=!1;for(h&&!a&&(this.styles[t+i]=n,l=!0),(l||o>e)&&i--;i>0;)r&&r[i-1]?this.styles[t+i]={0:s({},r[i-1])}:c?this.styles[t+i]={0:s({},c)}:delete this.styles[t+i],i--;this._forceClearCache=!0}insertCharStyleObject(t,e,i,r){this.styles||(this.styles={});const n=this.styles[t],o=n?s({},n):{};i||(i=1);for(const t in o){const s=parseInt(t,10);s>=e&&(n[s+i]=o[s],o[s-i]||delete n[s])}if(this._forceClearCache=!0,r){for(;i--;)Object.keys(r[i]).length&&(this.styles[t]||(this.styles[t]={}),this.styles[t][e+i]=s({},r[i]));return}if(!n)return;const a=n[e?e-1:1];for(;a&&i--;)this.styles[t][e+i]=s({},a)}insertNewStyleBlock(t,e,s){const i=this.get2DCursorLocation(e,!0),r=[0];let n,o=0;for(let e=0;e<t.length;e++)\"\\n\"===t[e]?(o++,r[o]=0):r[o]++;for(r[0]>0&&(this.insertCharStyleObject(i.lineIndex,i.charIndex,r[0],s),s=s&&s.slice(r[0]+1)),o&&this.insertNewlineStyleObject(i.lineIndex,i.charIndex+r[0],o),n=1;n<o;n++)r[n]>0?this.insertCharStyleObject(i.lineIndex+n,0,r[n],s):s&&this.styles[i.lineIndex+n]&&s[0]&&(this.styles[i.lineIndex+n][0]=s[0]),s=s&&s.slice(r[n]+1);r[n]>0&&this.insertCharStyleObject(i.lineIndex+n,0,r[n],s)}removeChars(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t+1;this.removeStyleFromTo(t,e),this._text.splice(t,e-t),this.text=this._text.join(\"\"),this.set(\"dirty\",!0),this.initDimensions(),this.setCoords(),this._removeExtraneousStyles()}insertChars(t,e,s){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:s;i>s&&this.removeStyleFromTo(s,i);const r=this.graphemeSplit(t);this.insertNewStyleBlock(r,s,e),this._text=[...this._text.slice(0,s),...r,...this._text.slice(i)],this.text=this._text.join(\"\"),this.set(\"dirty\",!0),this.initDimensions(),this.setCoords(),this._removeExtraneousStyles()}setSelectionStartEndWithShift(t,e,s){s<=t?(e===t?this._selectionDirection=M:this._selectionDirection===A&&(this._selectionDirection=M,this.selectionEnd=t),this.selectionStart=s):s>t&&s<e?this._selectionDirection===A?this.selectionEnd=s:this.selectionStart=s:(e===t?this._selectionDirection=A:this._selectionDirection===M&&(this._selectionDirection=A,this.selectionStart=e),this.selectionEnd=s)}}class Do extends ko{initHiddenTextarea(){const t=this.canvas&&re(this.canvas.getElement())||m(),e=t.createElement(\"textarea\");Object.entries({autocapitalize:\"off\",autocorrect:\"off\",autocomplete:\"off\",spellcheck:\"false\",\"data-fabric\":\"textarea\",wrap:\"off\"}).map((t=>{let[s,i]=t;return e.setAttribute(s,i)}));const{top:s,left:i,fontSize:r}=this._calcTextareaPosition();e.style.cssText=\"position: absolute; top: \".concat(s,\"; left: \").concat(i,\"; z-index: -999; opacity: 0; width: 1px; height: 1px; font-size: 1px; padding-top: \").concat(r,\";\"),(this.hiddenTextareaContainer||t.body).appendChild(e),Object.entries({blur:\"blur\",keydown:\"onKeyDown\",keyup:\"onKeyUp\",input:\"onInput\",copy:\"copy\",cut:\"copy\",paste:\"paste\",compositionstart:\"onCompositionStart\",compositionupdate:\"onCompositionUpdate\",compositionend:\"onCompositionEnd\"}).map((t=>{let[s,i]=t;return e.addEventListener(s,this[i].bind(this))})),this.hiddenTextarea=e}blur(){this.abortCursorAnimation()}onKeyDown(t){if(!this.isEditing)return;const e=\"rtl\"===this.direction?this.keysMapRtl:this.keysMap;if(t.keyCode in e)this[e[t.keyCode]](t);else{if(!(t.keyCode in this.ctrlKeysMapDown)||!t.ctrlKey&&!t.metaKey)return;this[this.ctrlKeysMapDown[t.keyCode]](t)}t.stopImmediatePropagation(),t.preventDefault(),t.keyCode>=33&&t.keyCode<=40?(this.inCompositionMode=!1,this.clearContextTop(),this.renderCursorOrSelection()):this.canvas&&this.canvas.requestRenderAll()}onKeyUp(t){!this.isEditing||this._copyDone||this.inCompositionMode?this._copyDone=!1:t.keyCode in this.ctrlKeysMapUp&&(t.ctrlKey||t.metaKey)&&(this[this.ctrlKeysMapUp[t.keyCode]](t),t.stopImmediatePropagation(),t.preventDefault(),this.canvas&&this.canvas.requestRenderAll())}onInput(t){const e=this.fromPaste;if(this.fromPaste=!1,t&&t.stopPropagation(),!this.isEditing)return;const s=()=>{this.updateFromTextArea(),this.fire(z),this.canvas&&(this.canvas.fire(\"text:changed\",{target:this}),this.canvas.requestRenderAll())};if(\"\"===this.hiddenTextarea.value)return this.styles={},void s();const i=this._splitTextIntoLines(this.hiddenTextarea.value).graphemeText,r=this._text.length,n=i.length,a=this.selectionStart,h=this.selectionEnd,c=a!==h;let l,u,d,g,f=n-r;const m=this.fromStringToGraphemeSelection(this.hiddenTextarea.selectionStart,this.hiddenTextarea.selectionEnd,this.hiddenTextarea.value),v=a>m.selectionStart;c?(u=this._text.slice(a,h),f+=h-a):n<r&&(u=v?this._text.slice(h+f,h):this._text.slice(a,a-f));const y=i.slice(m.selectionEnd-f,m.selectionEnd);if(u&&u.length&&(y.length&&(l=this.getSelectionStyles(a,a+1,!1),l=y.map((()=>l[0]))),c?(d=a,g=h):v?(d=h-u.length,g=h):(d=h,g=h+u.length),this.removeStyleFromTo(d,g)),y.length){const{copyPasteData:t}=p();e&&y.join(\"\")===t.copiedText&&!o.disableStyleCopyPaste&&(l=t.copiedTextStyle),this.insertNewStyleBlock(y,a,l)}s()}onCompositionStart(){this.inCompositionMode=!0}onCompositionEnd(){this.inCompositionMode=!1}onCompositionUpdate(t){let{target:e}=t;const{selectionStart:s,selectionEnd:i}=e;this.compositionStart=s,this.compositionEnd=i,this.updateTextareaPosition()}copy(){if(this.selectionStart===this.selectionEnd)return;const{copyPasteData:t}=p();t.copiedText=this.getSelectedText(),o.disableStyleCopyPaste?t.copiedTextStyle=void 0:t.copiedTextStyle=this.getSelectionStyles(this.selectionStart,this.selectionEnd,!0),this._copyDone=!0}paste(){this.fromPaste=!0}_getWidthBeforeCursor(t,e){let s,i=this._getLineLeftOffset(t);return e>0&&(s=this.__charBounds[t][e-1],i+=s.left+s.width),i}getDownCursorOffset(t,e){const s=this._getSelectionForOffset(t,e),i=this.get2DCursorLocation(s),r=i.lineIndex;if(r===this._textLines.length-1||t.metaKey||34===t.keyCode)return this._text.length-s;const n=i.charIndex,o=this._getWidthBeforeCursor(r,n),a=this._getIndexOnLine(r+1,o);return this._textLines[r].slice(n).length+a+1+this.missingNewlineOffset(r)}_getSelectionForOffset(t,e){return t.shiftKey&&this.selectionStart!==this.selectionEnd&&e?this.selectionEnd:this.selectionStart}getUpCursorOffset(t,e){const s=this._getSelectionForOffset(t,e),i=this.get2DCursorLocation(s),r=i.lineIndex;if(0===r||t.metaKey||33===t.keyCode)return-s;const n=i.charIndex,o=this._getWidthBeforeCursor(r,n),a=this._getIndexOnLine(r-1,o),h=this._textLines[r].slice(0,n),c=this.missingNewlineOffset(r-1);return-this._textLines[r-1].length+a-h.length+(1-c)}_getIndexOnLine(t,e){const s=this._textLines[t];let i,r,n=this._getLineLeftOffset(t),o=0;for(let a=0,h=s.length;a<h;a++)if(i=this.__charBounds[t][a].width,n+=i,n>e){r=!0;const t=n-i,s=n,h=Math.abs(t-e);o=Math.abs(s-e)<h?a:a-1;break}return r||(o=s.length-1),o}moveCursorDown(t){this.selectionStart>=this._text.length&&this.selectionEnd>=this._text.length||this._moveCursorUpOrDown(\"Down\",t)}moveCursorUp(t){0===this.selectionStart&&0===this.selectionEnd||this._moveCursorUpOrDown(\"Up\",t)}_moveCursorUpOrDown(t,e){const s=this[\"get\".concat(t,\"CursorOffset\")](e,this._selectionDirection===A);if(e.shiftKey?this.moveCursorWithShift(s):this.moveCursorWithoutShift(s),0!==s){const t=this.text.length;this.selectionStart=ds(0,this.selectionStart,t),this.selectionEnd=ds(0,this.selectionEnd,t),this.abortCursorAnimation(),this.initDelayedCursor(),this._fireSelectionChanged(),this._updateTextarea()}}moveCursorWithShift(t){const e=this._selectionDirection===M?this.selectionStart+t:this.selectionEnd+t;return this.setSelectionStartEndWithShift(this.selectionStart,this.selectionEnd,e),0!==t}moveCursorWithoutShift(t){return t<0?(this.selectionStart+=t,this.selectionEnd=this.selectionStart):(this.selectionEnd+=t,this.selectionStart=this.selectionEnd),0!==t}moveCursorLeft(t){0===this.selectionStart&&0===this.selectionEnd||this._moveCursorLeftOrRight(\"Left\",t)}_move(t,e,s){let i;if(t.altKey)i=this[\"findWordBoundary\".concat(s)](this[e]);else{if(!t.metaKey&&35!==t.keyCode&&36!==t.keyCode)return this[e]+=\"Left\"===s?-1:1,!0;i=this[\"findLineBoundary\".concat(s)](this[e])}return void 0!==i&&this[e]!==i&&(this[e]=i,!0)}_moveLeft(t,e){return this._move(t,e,\"Left\")}_moveRight(t,e){return this._move(t,e,\"Right\")}moveCursorLeftWithoutShift(t){let e=!0;return this._selectionDirection=M,this.selectionEnd===this.selectionStart&&0!==this.selectionStart&&(e=this._moveLeft(t,\"selectionStart\")),this.selectionEnd=this.selectionStart,e}moveCursorLeftWithShift(t){return this._selectionDirection===A&&this.selectionStart!==this.selectionEnd?this._moveLeft(t,\"selectionEnd\"):0!==this.selectionStart?(this._selectionDirection=M,this._moveLeft(t,\"selectionStart\")):void 0}moveCursorRight(t){this.selectionStart>=this._text.length&&this.selectionEnd>=this._text.length||this._moveCursorLeftOrRight(\"Right\",t)}_moveCursorLeftOrRight(t,e){const s=\"moveCursor\".concat(t).concat(e.shiftKey?\"WithShift\":\"WithoutShift\");this._currentCursorOpacity=1,this[s](e)&&(this.abortCursorAnimation(),this.initDelayedCursor(),this._fireSelectionChanged(),this._updateTextarea())}moveCursorRightWithShift(t){return this._selectionDirection===M&&this.selectionStart!==this.selectionEnd?this._moveRight(t,\"selectionStart\"):this.selectionEnd!==this._text.length?(this._selectionDirection=A,this._moveRight(t,\"selectionEnd\")):void 0}moveCursorRightWithoutShift(t){let e=!0;return this._selectionDirection=A,this.selectionStart===this.selectionEnd?(e=this._moveRight(t,\"selectionStart\"),this.selectionEnd=this.selectionStart):this.selectionStart=this.selectionEnd,e}}const Mo=t=>!!t.button;class Po extends Do{constructor(){super(...arguments),t(this,\"draggableTextDelegate\",void 0)}initBehavior(){this.on(\"mousedown\",this._mouseDownHandler),this.on(\"mousedown:before\",this._mouseDownHandlerBefore),this.on(\"mouseup\",this.mouseUpHandler),this.on(\"mousedblclick\",this.doubleClickHandler),this.on(\"tripleclick\",this.tripleClickHandler),this.__lastClickTime=+new Date,this.__lastLastClickTime=+new Date,this.__lastPointer={},this.on(\"mousedown\",this.onMouseDown),this.draggableTextDelegate=new To(this),super.initBehavior()}shouldStartDragging(){return this.draggableTextDelegate.isActive()}onDragStart(t){return this.draggableTextDelegate.onDragStart(t)}canDrop(t){return this.draggableTextDelegate.canDrop(t)}onMouseDown(t){if(!this.canvas)return;this.__newClickTime=+new Date;const e=t.pointer;this.isTripleClick(e)&&(this.fire(\"tripleclick\",t),pe(t.e)),this.__lastLastClickTime=this.__lastClickTime,this.__lastClickTime=this.__newClickTime,this.__lastPointer=e,this.__lastSelected=this.selected&&!this.getActiveControl()}isTripleClick(t){return this.__newClickTime-this.__lastClickTime<500&&this.__lastClickTime-this.__lastLastClickTime<500&&this.__lastPointer.x===t.x&&this.__lastPointer.y===t.y}doubleClickHandler(t){this.isEditing&&this.selectWord(this.getSelectionStartFromPointer(t.e))}tripleClickHandler(t){this.isEditing&&this.selectLine(this.getSelectionStartFromPointer(t.e))}_mouseDownHandler(t){let{e:e}=t;this.canvas&&this.editable&&!Mo(e)&&!this.getActiveControl()&&(this.draggableTextDelegate.start(e)||(this.canvas.textEditingManager.register(this),this.selected&&(this.inCompositionMode=!1,this.setCursorByClick(e)),this.isEditing&&(this.__selectionStartOnMouseDown=this.selectionStart,this.selectionStart===this.selectionEnd&&this.abortCursorAnimation(),this.renderCursorOrSelection())))}_mouseDownHandlerBefore(t){let{e:e}=t;this.canvas&&this.editable&&!Mo(e)&&(this.selected=this===this.canvas._activeObject)}mouseUpHandler(t){let{e:e,transform:s}=t;const i=this.draggableTextDelegate.end(e);if(this.canvas){this.canvas.textEditingManager.unregister(this);const t=this.canvas._activeObject;if(t&&t!==this)return}!this.editable||this.group&&!this.group.interactive||s&&s.actionPerformed||Mo(e)||i||(this.__lastSelected&&!this.getActiveControl()?(this.selected=!1,this.__lastSelected=!1,this.enterEditing(e),this.selectionStart===this.selectionEnd?this.initDelayedCursor(!0):this.renderCursorOrSelection()):this.selected=!0)}setCursorByClick(t){const e=this.getSelectionStartFromPointer(t),s=this.selectionStart,i=this.selectionEnd;t.shiftKey?this.setSelectionStartEndWithShift(s,i,e):(this.selectionStart=e,this.selectionEnd=e),this.isEditing&&(this._fireSelectionChanged(),this._updateTextarea())}getSelectionStartFromPointer(t){const e=this.canvas.getScenePoint(t).transform(wt(this.calcTransformMatrix())).add(new ot(-this._getLeftOffset(),-this._getTopOffset()));let s=0,i=0,r=0;for(let t=0;t<this._textLines.length&&s<=e.y;t++)s+=this.getHeightOfLine(t),r=t,t>0&&(i+=this._textLines[t-1].length+this.missingNewlineOffset(t-1));let n=Math.abs(this._getLineLeftOffset(r));const o=this._textLines[r].length,a=this.__charBounds[r];for(let t=0;t<o;t++){const s=n+a[t].kernedWidth;if(e.x<=s){Math.abs(e.x-s)<=Math.abs(e.x-n)&&i++;break}n=s,i++}return Math.min(this.flipX?o-i:i,this._text.length)}}const Eo=\"moveCursorUp\",Ao=\"moveCursorDown\",jo=\"moveCursorLeft\",Fo=\"moveCursorRight\",Lo=\"exitEditing\",Ro=s({selectionStart:0,selectionEnd:0,selectionColor:\"rgba(17,119,255,0.3)\",isEditing:!1,editable:!0,editingBorderColor:\"rgba(102,153,255,0.25)\",cursorWidth:2,cursorColor:\"\",cursorDelay:1e3,cursorDuration:600,caching:!0,hiddenTextareaContainer:null,keysMap:{9:Lo,27:Lo,33:Eo,34:Ao,35:Fo,36:jo,37:jo,38:Eo,39:Fo,40:Ao},keysMapRtl:{9:Lo,27:Lo,33:Eo,34:Ao,35:jo,36:Fo,37:Fo,38:Eo,39:jo,40:Ao},ctrlKeysMapDown:{65:\"selectAll\"},ctrlKeysMapUp:{67:\"copy\",88:\"cut\"}},{_selectionDirection:null,_reSpace:/\\s|\\r?\\n/,inCompositionMode:!1});class Io extends Po{static getDefaults(){return s(s({},super.getDefaults()),Io.ownDefaults)}get type(){const t=super.type;return\"itext\"===t?\"i-text\":t}constructor(t,e){super(t,s(s({},Io.ownDefaults),e)),this.initBehavior()}_set(t,e){return this.isEditing&&this._savedProps&&t in this._savedProps?(this._savedProps[t]=e,this):(\"canvas\"===t&&(this.canvas instanceof xn&&this.canvas.textEditingManager.remove(this),e instanceof xn&&e.textEditingManager.add(this)),super._set(t,e))}setSelectionStart(t){t=Math.max(t,0),this._updateAndFire(\"selectionStart\",t)}setSelectionEnd(t){t=Math.min(t,this.text.length),this._updateAndFire(\"selectionEnd\",t)}_updateAndFire(t,e){this[t]!==e&&(this._fireSelectionChanged(),this[t]=e),this._updateTextarea()}_fireSelectionChanged(){this.fire(\"selection:changed\"),this.canvas&&this.canvas.fire(\"text:selection:changed\",{target:this})}initDimensions(){this.isEditing&&this.initDelayedCursor(),super.initDimensions()}getSelectionStyles(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.selectionStart||0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.selectionEnd,s=arguments.length>2?arguments[2]:void 0;return super.getSelectionStyles(t,e,s)}setSelectionStyles(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.selectionStart||0,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.selectionEnd;return super.setSelectionStyles(t,e,s)}get2DCursorLocation(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.selectionStart,e=arguments.length>1?arguments[1]:void 0;return super.get2DCursorLocation(t,e)}render(t){super.render(t),this.cursorOffsetCache={},this.renderCursorOrSelection()}toCanvasElement(t){const e=this.isEditing;this.isEditing=!1;const s=super.toCanvasElement(t);return this.isEditing=e,s}renderCursorOrSelection(){if(!this.isEditing)return;const t=this.clearContextTop(!0);if(!t)return;const e=this._getCursorBoundaries();this.selectionStart!==this.selectionEnd||this.inCompositionMode?this.renderSelection(t,e):this.renderCursor(t,e),this.canvas.contextTopDirty=!0,t.restore()}_getCursorBoundaries(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.selectionStart,e=arguments.length>1?arguments[1]:void 0;const s=this._getLeftOffset(),i=this._getTopOffset(),r=this._getCursorBoundariesOffsets(t,e);return{left:s,top:i,leftOffset:r.left,topOffset:r.top}}_getCursorBoundariesOffsets(t,e){return e?this.__getCursorBoundariesOffsets(t):this.cursorOffsetCache&&\"top\"in this.cursorOffsetCache?this.cursorOffsetCache:this.cursorOffsetCache=this.__getCursorBoundariesOffsets(t)}__getCursorBoundariesOffsets(t){let e=0,s=0;const{charIndex:i,lineIndex:r}=this.get2DCursorLocation(t);for(let t=0;t<r;t++)e+=this.getHeightOfLine(t);const n=this._getLineLeftOffset(r),o=this.__charBounds[r][i];o&&(s=o.left),0!==this.charSpacing&&i===this._textLines[r].length&&(s-=this._getWidthOfCharSpacing());const a={top:e,left:n+(s>0?s:0)};return\"rtl\"===this.direction&&(this.textAlign===A||this.textAlign===fo||this.textAlign===mo?a.left*=-1:this.textAlign===M||this.textAlign===po?a.left=n-(s>0?s:0):this.textAlign!==D&&this.textAlign!==vo||(a.left=n-(s>0?s:0))),a}renderCursorAt(t){this._renderCursor(this.canvas.contextTop,this._getCursorBoundaries(t,!0),t)}renderCursor(t,e){this._renderCursor(t,e,this.selectionStart)}getCursorRenderingData(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.selectionStart,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this._getCursorBoundaries(t);const s=this.get2DCursorLocation(t),i=s.lineIndex,r=s.charIndex>0?s.charIndex-1:0,n=this.getValueOfPropertyAt(i,r,\"fontSize\"),o=this.getObjectScaling().x*this.canvas.getZoom(),a=this.cursorWidth/o,h=this.getValueOfPropertyAt(i,r,\"deltaY\"),c=e.topOffset+(1-this._fontSizeFraction)*this.getHeightOfLine(i)/this.lineHeight-n*(1-this._fontSizeFraction);return{color:this.cursorColor||this.getValueOfPropertyAt(i,r,\"fill\"),opacity:this._currentCursorOpacity,left:e.left+e.leftOffset-a/2,top:c+e.top+h,width:a,height:n}}_renderCursor(t,e,s){const{color:i,opacity:r,left:n,top:o,width:a,height:h}=this.getCursorRenderingData(s,e);t.fillStyle=i,t.globalAlpha=r,t.fillRect(n,o,a,h)}renderSelection(t,e){const s={selectionStart:this.inCompositionMode?this.hiddenTextarea.selectionStart:this.selectionStart,selectionEnd:this.inCompositionMode?this.hiddenTextarea.selectionEnd:this.selectionEnd};this._renderSelection(t,s,e)}renderDragSourceEffect(){const t=this.draggableTextDelegate.getDragStartSelection();this._renderSelection(this.canvas.contextTop,t,this._getCursorBoundaries(t.selectionStart,!0))}renderDropTargetEffect(t){const e=this.getSelectionStartFromPointer(t);this.renderCursorAt(e)}_renderSelection(t,e,s){const i=e.selectionStart,r=e.selectionEnd,n=this.textAlign.includes(fo),o=this.get2DCursorLocation(i),a=this.get2DCursorLocation(r),h=o.lineIndex,c=a.lineIndex,l=o.charIndex<0?0:o.charIndex,u=a.charIndex<0?0:a.charIndex;for(let e=h;e<=c;e++){const i=this._getLineLeftOffset(e)||0;let r=this.getHeightOfLine(e),o=0,a=0,d=0;if(e===h&&(a=this.__charBounds[h][l].left),e>=h&&e<c)d=n&&!this.isEndOfWrapping(e)?this.width:this.getLineWidth(e)||5;else if(e===c)if(0===u)d=this.__charBounds[c][u].left;else{const t=this._getWidthOfCharSpacing();d=this.__charBounds[c][u-1].left+this.__charBounds[c][u-1].width-t}o=r,(this.lineHeight<1||e===c&&this.lineHeight>1)&&(r/=this.lineHeight);let g=s.left+i+a,f=r,p=0;const m=d-a;this.inCompositionMode?(t.fillStyle=this.compositionColor||\"black\",f=1,p=r):t.fillStyle=this.selectionColor,\"rtl\"===this.direction&&(this.textAlign===A||this.textAlign===fo||this.textAlign===mo?g=this.width-g-m:this.textAlign===M||this.textAlign===po?g=s.left+i-d:this.textAlign!==D&&this.textAlign!==vo||(g=s.left+i-d)),t.fillRect(g,s.top+s.topOffset+p,m,f),s.topOffset+=o}}getCurrentCharFontSize(){const t=this._getCurrentCharIndex();return this.getValueOfPropertyAt(t.l,t.c,\"fontSize\")}getCurrentCharColor(){const t=this._getCurrentCharIndex();return this.getValueOfPropertyAt(t.l,t.c,K)}_getCurrentCharIndex(){const t=this.get2DCursorLocation(this.selectionStart,!0),e=t.charIndex>0?t.charIndex-1:0;return{l:t.lineIndex,c:e}}dispose(){this.exitEditingImpl(),this.draggableTextDelegate.dispose(),super.dispose()}}t(Io,\"ownDefaults\",Ro),t(Io,\"type\",\"IText\"),tt.setClass(Io),tt.setClass(Io,\"i-text\");class Bo extends Io{static getDefaults(){return s(s({},super.getDefaults()),Bo.ownDefaults)}constructor(t,e){super(t,s(s({},Bo.ownDefaults),e))}static createControls(){return{controls:pi()}}initDimensions(){this.initialized&&(this.isEditing&&this.initDelayedCursor(),this._clearCache(),this.dynamicMinWidth=0,this._styleMap=this._generateStyleMap(this._splitText()),this.dynamicMinWidth>this.width&&this._set(\"width\",this.dynamicMinWidth),this.textAlign.includes(fo)&&this.enlargeSpaces(),this.height=this.calcTextHeight())}_generateStyleMap(t){let e=0,s=0,i=0;const r={};for(let n=0;n<t.graphemeLines.length;n++)\"\\n\"===t.graphemeText[i]&&n>0?(s=0,i++,e++):!this.splitByGrapheme&&this._reSpaceAndTab.test(t.graphemeText[i])&&n>0&&(s++,i++),r[n]={line:e,offset:s},i+=t.graphemeLines[n].length,s+=t.graphemeLines[n].length;return r}styleHas(t,e){if(this._styleMap&&!this.isWrapping){const t=this._styleMap[e];t&&(e=t.line)}return super.styleHas(t,e)}isEmptyStyles(t){if(!this.styles)return!0;let e,s=0,i=t+1,r=!1;const n=this._styleMap[t],o=this._styleMap[t+1];n&&(t=n.line,s=n.offset),o&&(i=o.line,r=i===t,e=o.offset);const a=void 0===t?this.styles:{line:this.styles[t]};for(const t in a)for(const i in a[t]){const n=parseInt(i,10);if(n>=s&&(!r||n<e))for(const e in a[t][i])return!1}return!0}_getStyleDeclaration(t,e){if(this._styleMap&&!this.isWrapping){const s=this._styleMap[t];if(!s)return{};t=s.line,e=s.offset+e}return super._getStyleDeclaration(t,e)}_setStyleDeclaration(t,e,s){const i=this._styleMap[t];super._setStyleDeclaration(i.line,i.offset+e,s)}_deleteStyleDeclaration(t,e){const s=this._styleMap[t];super._deleteStyleDeclaration(s.line,s.offset+e)}_getLineStyle(t){const e=this._styleMap[t];return!!this.styles[e.line]}_setLineStyle(t){const e=this._styleMap[t];super._setLineStyle(e.line)}_wrapText(t,e){this.isWrapping=!0;const s=this.getGraphemeDataForRender(t),i=[];for(let t=0;t<s.wordsData.length;t++)i.push(...this._wrapLine(t,e,s));return this.isWrapping=!1,i}getGraphemeDataForRender(t){const e=this.splitByGrapheme,s=e?\"\":\" \";let i=0;return{wordsData:t.map(((t,r)=>{let n=0;const o=e?this.graphemeSplit(t):this.wordSplit(t);return 0===o.length?[{word:[],width:0}]:o.map((t=>{const o=e?[t]:this.graphemeSplit(t),a=this._measureWord(o,r,n);return i=Math.max(a,i),n+=o.length+s.length,{word:o,width:a}}))})),largestWordWidth:i}}_measureWord(t,e){let s,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=0;for(let n=0,o=t.length;n<o;n++){r+=this._getGraphemeBox(t[n],e,n+i,s,true).kernedWidth,s=t[n]}return r}wordSplit(t){return t.split(this._wordJoiners)}_wrapLine(t,e,s){let{largestWordWidth:i,wordsData:r}=s,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const o=this._getWidthOfCharSpacing(),a=this.splitByGrapheme,h=[],c=a?\"\":\" \";let l=0,u=[],d=0,g=0,f=!0;e-=n;const p=Math.max(e,i,this.dynamicMinWidth),m=r[t];let v;for(d=0,v=0;v<m.length;v++){const{word:e,width:s}=m[v];d+=e.length,l+=g+s-o,l>p&&!f?(h.push(u),u=[],l=s,f=!0):l+=o,f||a||u.push(c),u=u.concat(e),g=a?0:this._measureWord([c],t,d),d++,f=!1}return v&&h.push(u),i+n>this.dynamicMinWidth&&(this.dynamicMinWidth=i-o+n),h}isEndOfWrapping(t){return!this._styleMap[t+1]||this._styleMap[t+1].line!==this._styleMap[t].line}missingNewlineOffset(t,e){return this.splitByGrapheme&&!e?this.isEndOfWrapping(t)?1:0:1}_splitTextIntoLines(t){const e=super._splitTextIntoLines(t),s=this._wrapText(e.lines,this.width),i=new Array(s.length);for(let t=0;t<s.length;t++)i[t]=s[t].join(\"\");return e.lines=i,e.graphemeLines=s,e}getMinWidth(){return Math.max(this.minWidth,this.dynamicMinWidth)}_removeExtraneousStyles(){const t=new Map;for(const e in this._styleMap){const s=parseInt(e,10);if(this._textLines[s]){const s=this._styleMap[e].line;t.set(\"\".concat(s),!0)}}for(const e in this.styles)t.has(e)||delete this.styles[e]}toObject(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return super.toObject([\"minWidth\",\"splitByGrapheme\",...t])}}t(Bo,\"type\",\"Textbox\"),t(Bo,\"textLayoutProperties\",[...Io.textLayoutProperties,\"width\"]),t(Bo,\"ownDefaults\",{minWidth:20,dynamicMinWidth:2,lockScalingFlip:!0,noScaleCache:!1,_wordJoiners:/[ \\t\\r]/,splitByGrapheme:!1}),tt.setClass(Bo);class Xo extends xr{shouldPerformLayout(t){return!!t.target.clipPath&&super.shouldPerformLayout(t)}shouldLayoutClipPath(){return!1}calcLayoutResult(t,e){const{target:s}=t,{clipPath:i,group:r}=s;if(!i||!this.shouldPerformLayout(t))return;const{width:n,height:o}=me(_r(s,i)),a=new ot(n,o);if(i.absolutePositioned){return{center:Se(i.getRelativeCenterPoint(),void 0,r?r.calcTransformMatrix():void 0),size:a}}{const r=i.getRelativeCenterPoint().transform(s.calcOwnMatrix(),!0);if(this.shouldPerformLayout(t)){const{center:s=new ot,correction:i=new ot}=this.calcBoundingBox(e,t)||{};return{center:s.add(r),correction:i.subtract(r),size:a}}return{center:s.getRelativeCenterPoint().add(r),size:a}}}}t(Xo,\"type\",\"clip-path\"),tt.setClass(Xo);class Yo extends xr{getInitialSize(t,e){let{target:s}=t,{size:i}=e;return new ot(s.width||i.x,s.height||i.y)}}t(Yo,\"type\",\"fixed\"),tt.setClass(Yo);class Wo extends Tr{subscribeTargets(t){const e=t.target;t.targets.reduce(((t,e)=>(e.parent&&t.add(e.parent),t)),new Set).forEach((t=>{t.layoutManager.subscribeTargets({target:t,targets:[e]})}))}unsubscribeTargets(t){const e=t.target,s=e.getObjects();t.targets.reduce(((t,e)=>(e.parent&&t.add(e.parent),t)),new Set).forEach((t=>{!s.some((e=>e.parent===t))&&t.layoutManager.unsubscribeTargets({target:t,targets:[e]})}))}}class Vo extends Dr{static getDefaults(){return s(s({},super.getDefaults()),Vo.ownDefaults)}constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};super(),Object.assign(this,Vo.ownDefaults),this.setOptions(e);const{left:s,top:i,layoutManager:r}=e;this.groupInit(t,{left:s,top:i,layoutManager:null!=r?r:new Wo})}_shouldSetNestedCoords(){return!0}__objectSelectionMonitor(){}multiSelectAdd(){for(var t=arguments.length,e=new Array(t),s=0;s<t;s++)e[s]=arguments[s];\"selection-order\"===this.multiSelectionStacking?this.add(...e):e.forEach((t=>{const e=this._objects.findIndex((e=>e.isInFrontOf(t))),s=-1===e?this.size():e;this.insertAt(s,t)}))}canEnterGroup(t){return this.getObjects().some((e=>e.isDescendantOf(t)||t.isDescendantOf(e)))?(a(\"error\",\"ActiveSelection: circular object trees are not supported, this call has no effect\"),!1):super.canEnterGroup(t)}enterGroup(t,e){t.parent&&t.parent===t.group?t.parent._exitGroup(t):t.group&&t.parent!==t.group&&t.group.remove(t),this._enterGroup(t,e)}exitGroup(t,e){this._exitGroup(t,e),t.parent&&t.parent._enterGroup(t,!0)}_onAfterObjectsChange(t,e){super._onAfterObjectsChange(t,e);const s=new Set;e.forEach((t=>{const{parent:e}=t;e&&s.add(e)})),t===vr?s.forEach((t=>{t._onAfterObjectsChange(mr,e)})):s.forEach((t=>{t._set(\"dirty\",!0)}))}onDeselect(){return this.removeAll(),!1}toString(){return\"#<ActiveSelection: (\".concat(this.complexity(),\")>\")}shouldCache(){return!1}isOnACache(){return!1}_renderControls(t,e,i){t.save(),t.globalAlpha=this.isMoving?this.borderOpacityWhenMoving:1;const r=s(s({hasControls:!1},i),{},{forActiveSelection:!0});for(let e=0;e<this._objects.length;e++)this._objects[e]._renderControls(t,r);super._renderControls(t,e),t.restore()}}t(Vo,\"type\",\"ActiveSelection\"),t(Vo,\"ownDefaults\",{multiSelectionStacking:\"canvas-stacking\"}),tt.setClass(Vo),tt.setClass(Vo,\"activeSelection\");class zo{constructor(){t(this,\"resources\",{})}applyFilters(t,e,s,i,r){const n=r.getContext(\"2d\");if(!n)return;n.drawImage(e,0,0,s,i);const o={sourceWidth:s,sourceHeight:i,imageData:n.getImageData(0,0,s,i),originalEl:e,originalImageData:n.getImageData(0,0,s,i),canvasEl:r,ctx:n,filterBackend:this};t.forEach((t=>{t.applyTo(o)}));const{imageData:a}=o;return a.width===s&&a.height===i||(r.width=a.width,r.height=a.height),n.putImageData(a,0,0),o}}class Ho{constructor(){let{tileSize:e=o.textureSize}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};t(this,\"aPosition\",new Float32Array([0,0,0,1,1,0,1,1])),t(this,\"resources\",{}),this.tileSize=e,this.setupGLContext(e,e),this.captureGPUInfo()}setupGLContext(t,e){this.dispose(),this.createWebGLCanvas(t,e)}createWebGLCanvas(t,e){const s=vt({width:t,height:e}),i=s.getContext(\"webgl\",{alpha:!0,premultipliedAlpha:!1,depth:!1,stencil:!1,antialias:!1});i&&(i.clearColor(0,0,0,0),this.canvas=s,this.gl=i)}applyFilters(t,e,s,i,r,n){const o=this.gl,a=r.getContext(\"2d\");if(!o||!a)return;let h;n&&(h=this.getCachedTexture(n,e));const c={originalWidth:e.width||e.naturalWidth||0,originalHeight:e.height||e.naturalHeight||0,sourceWidth:s,sourceHeight:i,destinationWidth:s,destinationHeight:i,context:o,sourceTexture:this.createTexture(o,s,i,h?void 0:e),targetTexture:this.createTexture(o,s,i),originalTexture:h||this.createTexture(o,s,i,h?void 0:e),passes:t.length,webgl:!0,aPosition:this.aPosition,programCache:this.programCache,pass:0,filterBackend:this,targetCanvas:r},l=o.createFramebuffer();return o.bindFramebuffer(o.FRAMEBUFFER,l),t.forEach((t=>{t&&t.applyTo(c)})),function(t){const e=t.targetCanvas,s=e.width,i=e.height,r=t.destinationWidth,n=t.destinationHeight;s===r&&i===n||(e.width=r,e.height=n)}(c),this.copyGLTo2D(o,c),o.bindTexture(o.TEXTURE_2D,null),o.deleteTexture(c.sourceTexture),o.deleteTexture(c.targetTexture),o.deleteFramebuffer(l),a.setTransform(1,0,0,1,0,0),c}dispose(){this.canvas&&(this.canvas=null,this.gl=null),this.clearWebGLCaches()}clearWebGLCaches(){this.programCache={},this.textureCache={}}createTexture(t,e,s,i,r){const{NEAREST:n,TEXTURE_2D:o,RGBA:a,UNSIGNED_BYTE:h,CLAMP_TO_EDGE:c,TEXTURE_MAG_FILTER:l,TEXTURE_MIN_FILTER:u,TEXTURE_WRAP_S:d,TEXTURE_WRAP_T:g}=t,f=t.createTexture();return t.bindTexture(o,f),t.texParameteri(o,l,r||n),t.texParameteri(o,u,r||n),t.texParameteri(o,d,c),t.texParameteri(o,g,c),i?t.texImage2D(o,0,a,a,h,i):t.texImage2D(o,0,a,e,s,0,a,h,null),f}getCachedTexture(t,e,s){const{textureCache:i}=this;if(i[t])return i[t];{const r=this.createTexture(this.gl,e.width,e.height,e,s);return r&&(i[t]=r),r}}evictCachesForKey(t){this.textureCache[t]&&(this.gl.deleteTexture(this.textureCache[t]),delete this.textureCache[t])}copyGLTo2D(t,e){const s=t.canvas,i=e.targetCanvas,r=i.getContext(\"2d\");if(!r)return;r.translate(0,i.height),r.scale(1,-1);const n=s.height-i.height;r.drawImage(s,0,n,i.width,i.height,0,0,i.width,i.height)}copyGLTo2DPutImageData(t,e){const s=e.targetCanvas.getContext(\"2d\"),i=e.destinationWidth,r=e.destinationHeight,n=i*r*4;if(!s)return;const o=new Uint8Array(this.imageBuffer,0,n),a=new Uint8ClampedArray(this.imageBuffer,0,n);t.readPixels(0,0,i,r,t.RGBA,t.UNSIGNED_BYTE,o);const h=new ImageData(a,i,r);s.putImageData(h,0,0)}captureGPUInfo(){if(this.gpuInfo)return this.gpuInfo;const t=this.gl,e={renderer:\"\",vendor:\"\"};if(!t)return e;const s=t.getExtension(\"WEBGL_debug_renderer_info\");if(s){const i=t.getParameter(s.UNMASKED_RENDERER_WEBGL),r=t.getParameter(s.UNMASKED_VENDOR_WEBGL);i&&(e.renderer=i.toLowerCase()),r&&(e.vendor=r.toLowerCase())}return this.gpuInfo=e,e}}let Go;function No(){const{WebGLProbe:t}=p();return t.queryWebGL(pt()),o.enableGLFiltering&&t.isSupported(o.textureSize)?new Ho({tileSize:o.textureSize}):new zo}function Uo(){return!Go&&(!(arguments.length>0&&void 0!==arguments[0])||arguments[0])&&(Go=No()),Go}function qo(t){Go=t}const Ko=[\"filters\",\"resizeFilter\",\"src\",\"crossOrigin\",\"type\"],Jo=[\"cropX\",\"cropY\"];class Qo extends yi{static getDefaults(){return s(s({},super.getDefaults()),Qo.ownDefaults)}constructor(e,s){super(),t(this,\"_lastScaleX\",1),t(this,\"_lastScaleY\",1),t(this,\"_filterScalingX\",1),t(this,\"_filterScalingY\",1),this.filters=[],Object.assign(this,Qo.ownDefaults),this.setOptions(s),this.cacheKey=\"texture\".concat(ft()),this.setElement(\"string\"==typeof e?(this.canvas&&re(this.canvas.getElement())||m()).getElementById(e):e,s)}getElement(){return this._element}setElement(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.removeTexture(this.cacheKey),this.removeTexture(\"\".concat(this.cacheKey,\"_filtered\")),this._element=t,this._originalElement=t,this._setWidthHeight(e),t.classList.add(Qo.CSS_CANVAS),0!==this.filters.length&&this.applyFilters(),this.resizeFilter&&this.applyResizeFilters()}removeTexture(t){const e=Uo(!1);e instanceof Ho&&e.evictCachesForKey(t)}dispose(){super.dispose(),this.removeTexture(this.cacheKey),this.removeTexture(\"\".concat(this.cacheKey,\"_filtered\")),this._cacheContext=null,[\"_originalElement\",\"_element\",\"_filteredEl\",\"_cacheCanvas\"].forEach((t=>{const e=this[t];e&&p().dispose(e),this[t]=void 0}))}getCrossOrigin(){return this._originalElement&&(this._originalElement.crossOrigin||null)}getOriginalSize(){const t=this.getElement();return t?{width:t.naturalWidth||t.width,height:t.naturalHeight||t.height}:{width:0,height:0}}_stroke(t){if(!this.stroke||0===this.strokeWidth)return;const e=this.width/2,s=this.height/2;t.beginPath(),t.moveTo(-e,-s),t.lineTo(e,-s),t.lineTo(e,s),t.lineTo(-e,s),t.lineTo(-e,-s),t.closePath()}toObject(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];const e=[];return this.filters.forEach((t=>{t&&e.push(t.toObject())})),s(s({},super.toObject([...Jo,...t])),{},{src:this.getSrc(),crossOrigin:this.getCrossOrigin(),filters:e},this.resizeFilter?{resizeFilter:this.resizeFilter.toObject()}:{})}hasCrop(){return!!this.cropX||!!this.cropY||this.width<this._element.width||this.height<this._element.height}_toSVG(){const t=[],e=this._element,s=-this.width/2,i=-this.height/2;let r=[],n=[],o=\"\",a=\"\";if(!e)return[];if(this.hasCrop()){const t=ft();r.push('<clipPath id=\"imageCrop_'+t+'\">\\n','\\t<rect x=\"'+s+'\" y=\"'+i+'\" width=\"'+this.width+'\" height=\"'+this.height+'\" />\\n',\"</clipPath>\\n\"),o=' clip-path=\"url(#imageCrop_'+t+')\" '}if(this.imageSmoothing||(a=' image-rendering=\"optimizeSpeed\"'),t.push(\"\\t<image \",\"COMMON_PARTS\",'xlink:href=\"'.concat(this.getSvgSrc(!0),'\" x=\"').concat(s-this.cropX,'\" y=\"').concat(i-this.cropY,'\" width=\"').concat(e.width||e.naturalWidth,'\" height=\"').concat(e.height||e.naturalHeight,'\"').concat(a).concat(o,\"></image>\\n\")),this.stroke||this.strokeDashArray){const t=this.fill;this.fill=null,n=['\\t<rect x=\"'.concat(s,'\" y=\"').concat(i,'\" width=\"').concat(this.width,'\" height=\"').concat(this.height,'\" style=\"').concat(this.getSvgStyles(),'\" />\\n')],this.fill=t}return r=this.paintFirst!==K?r.concat(n,t):r.concat(t,n),r}getSrc(t){const e=t?this._element:this._originalElement;return e?e.toDataURL?e.toDataURL():this.srcFromAttribute?e.getAttribute(\"src\")||\"\":e.src:this.src||\"\"}getSvgSrc(t){return this.getSrc(t)}setSrc(t){let{crossOrigin:e,signal:s}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Rt(t,{crossOrigin:e,signal:s}).then((t=>{void 0!==e&&this.set({crossOrigin:e}),this.setElement(t)}))}toString(){return'#<Image: { src: \"'.concat(this.getSrc(),'\" }>')}applyResizeFilters(){const t=this.resizeFilter,e=this.minimumScaleTrigger,s=this.getTotalObjectScaling(),i=s.x,r=s.y,n=this._filteredEl||this._originalElement;if(this.group&&this.set(\"dirty\",!0),!t||i>e&&r>e)return this._element=n,this._filterScalingX=1,this._filterScalingY=1,this._lastScaleX=i,void(this._lastScaleY=r);const o=vt(n),{width:a,height:h}=n;this._element=o,this._lastScaleX=t.scaleX=i,this._lastScaleY=t.scaleY=r,Uo().applyFilters([t],n,a,h,this._element),this._filterScalingX=o.width/this._originalElement.width,this._filterScalingY=o.height/this._originalElement.height}applyFilters(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.filters||[];if(t=t.filter((t=>t&&!t.isNeutralState())),this.set(\"dirty\",!0),this.removeTexture(\"\".concat(this.cacheKey,\"_filtered\")),0===t.length)return this._element=this._originalElement,this._filteredEl=void 0,this._filterScalingX=1,void(this._filterScalingY=1);const e=this._originalElement,s=e.naturalWidth||e.width,i=e.naturalHeight||e.height;if(this._element===this._originalElement){const t=vt({width:s,height:i});this._element=t,this._filteredEl=t}else this._filteredEl&&(this._element=this._filteredEl,this._filteredEl.getContext(\"2d\").clearRect(0,0,s,i),this._lastScaleX=1,this._lastScaleY=1);Uo().applyFilters(t,this._originalElement,s,i,this._element),this._originalElement.width===this._element.width&&this._originalElement.height===this._element.height||(this._filterScalingX=this._element.width/this._originalElement.width,this._filterScalingY=this._element.height/this._originalElement.height)}_render(t){t.imageSmoothingEnabled=this.imageSmoothing,!0!==this.isMoving&&this.resizeFilter&&this._needsResize()&&this.applyResizeFilters(),this._stroke(t),this._renderPaintInOrder(t)}drawCacheOnCanvas(t){t.imageSmoothingEnabled=this.imageSmoothing,super.drawCacheOnCanvas(t)}shouldCache(){return this.needsItsOwnCache()}_renderFill(t){const e=this._element;if(!e)return;const s=this._filterScalingX,i=this._filterScalingY,r=this.width,n=this.height,o=Math.max(this.cropX,0),a=Math.max(this.cropY,0),h=e.naturalWidth||e.width,c=e.naturalHeight||e.height,l=o*s,u=a*i,d=Math.min(r*s,h-l),g=Math.min(n*i,c-u),f=-r/2,p=-n/2,m=Math.min(r,h/s-o),v=Math.min(n,c/i-a);e&&t.drawImage(e,l,u,d,g,f,p,m,v)}_needsResize(){const t=this.getTotalObjectScaling();return t.x!==this._lastScaleX||t.y!==this._lastScaleY}_resetWidthHeight(){this.set(this.getOriginalSize())}_setWidthHeight(){let{width:t,height:e}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const s=this.getOriginalSize();this.width=t||s.width,this.height=e||s.height}parsePreserveAspectRatioAttribute(){const t=Jt(this.preserveAspectRatio||\"\"),e=this.width,s=this.height,i={width:e,height:s};let r,n=this._element.width,o=this._element.height,a=1,h=1,c=0,l=0,u=0,d=0;return!t||t.alignX===j&&t.alignY===j?(a=e/n,h=s/o):(\"meet\"===t.meetOrSlice&&(a=h=Mr(this._element,i),r=(e-n*a)/2,\"Min\"===t.alignX&&(c=-r),\"Max\"===t.alignX&&(c=r),r=(s-o*h)/2,\"Min\"===t.alignY&&(l=-r),\"Max\"===t.alignY&&(l=r)),\"slice\"===t.meetOrSlice&&(a=h=Pr(this._element,i),r=n-e/a,\"Mid\"===t.alignX&&(u=r/2),\"Max\"===t.alignX&&(u=r),r=o-s/h,\"Mid\"===t.alignY&&(d=r/2),\"Max\"===t.alignY&&(d=r),n=e/a,o=s/h)),{width:n,height:o,scaleX:a,scaleY:h,offsetLeft:c,offsetTop:l,cropX:u,cropY:d}}static fromObject(t,e){let{filters:r,resizeFilter:n,src:o,crossOrigin:a,type:h}=t,c=i(t,Ko);return Promise.all([Rt(o,s(s({},e),{},{crossOrigin:a})),r&&It(r,e),n&&It([n],e),Bt(c,e)]).then((t=>{let[e,i=[],[r]=[],n={}]=t;return new this(e,s(s({},c),{},{src:o,filters:i,resizeFilter:r},n))}))}static fromURL(t){let{crossOrigin:e=null,signal:s}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=arguments.length>2?arguments[2]:void 0;return Rt(t,{crossOrigin:e,signal:s}).then((t=>new this(t,i)))}static async fromElement(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},s=arguments.length>2?arguments[2]:void 0;const i=ur(t,this.ATTRIBUTE_NAMES,s);return this.fromURL(i[\"xlink:href\"],e,i).catch((t=>(a(\"log\",\"Unable to parse Image\",t),null)))}}function Zo(t){if(!qe.test(t.nodeName))return{};const e=t.getAttribute(\"viewBox\");let s,i,r=1,n=1,o=0,a=0;const h=t.getAttribute(\"width\"),c=t.getAttribute(\"height\"),l=t.getAttribute(\"x\")||0,u=t.getAttribute(\"y\")||0,d=!(e&&Je.test(e)),g=!h||!c||\"100%\"===h||\"100%\"===c;let f=\"\",p=0,m=0;if(d&&(l||u)&&t.parentNode&&\"#document\"!==t.parentNode.nodeName&&(f=\" translate(\"+Kt(l||\"0\")+\" \"+Kt(u||\"0\")+\") \",s=(t.getAttribute(\"transform\")||\"\")+f,t.setAttribute(\"transform\",s),t.removeAttribute(\"x\"),t.removeAttribute(\"y\")),d&&g)return{width:0,height:0};const v={width:0,height:0};if(d)return v.width=Kt(h),v.height=Kt(c),v;const y=e.match(Je);o=-parseFloat(y[1]),a=-parseFloat(y[2]);const _=parseFloat(y[3]),x=parseFloat(y[4]);v.minX=o,v.minY=a,v.viewBoxWidth=_,v.viewBoxHeight=x,g?(v.width=_,v.height=x):(v.width=Kt(h),v.height=Kt(c),r=v.width/_,n=v.height/x);const C=Jt(t.getAttribute(\"preserveAspectRatio\")||\"\");if(C.alignX!==j&&(\"meet\"===C.meetOrSlice&&(n=r=r>n?n:r),\"slice\"===C.meetOrSlice&&(n=r=r>n?r:n),p=v.width-_*r,m=v.height-x*r,\"Mid\"===C.alignX&&(p/=2),\"Mid\"===C.alignY&&(m/=2),\"Min\"===C.alignX&&(p=0),\"Min\"===C.alignY&&(m=0)),1===r&&1===n&&0===o&&0===a&&0===l&&0===u)return v;if((l||u)&&\"#document\"!==t.parentNode.nodeName&&(f=\" translate(\"+Kt(l||\"0\")+\" \"+Kt(u||\"0\")+\") \"),s=f+\" matrix(\"+r+\" 0 0 \"+n+\" \"+(o*r+p)+\" \"+(a*n+m)+\") \",\"svg\"===t.nodeName){for(i=t.ownerDocument.createElementNS(Ve,\"g\");t.firstChild;)i.appendChild(t.firstChild);t.appendChild(i)}else i=t,i.removeAttribute(\"x\"),i.removeAttribute(\"y\"),s=i.getAttribute(\"transform\")+s;return i.setAttribute(\"transform\",s),v}t(Qo,\"type\",\"Image\"),t(Qo,\"cacheProperties\",[...fs,...Jo]),t(Qo,\"ownDefaults\",{strokeWidth:0,srcFromAttribute:!1,minimumScaleTrigger:.5,cropX:0,cropY:0,imageSmoothing:!0}),t(Qo,\"CSS_CANVAS\",\"canvas-img\"),t(Qo,\"ATTRIBUTE_NAMES\",[...ji,\"x\",\"y\",\"width\",\"height\",\"preserveAspectRatio\",\"xlink:href\",\"crossOrigin\",\"image-rendering\"]),tt.setClass(Qo),tt.setSVGClass(Qo);const $o=t=>t.tagName.replace(\"svg:\",\"\"),ta=Xe([\"pattern\",\"defs\",\"symbol\",\"metadata\",\"clipPath\",\"mask\",\"desc\"]);function ea(t,e){let s,i,r,n,o=[];for(r=0,n=e.length;r<n;r++)s=e[r],i=t.getElementsByTagNameNS(\"http://www.w3.org/2000/svg\",s),o=o.concat(Array.from(i));return o}const sa=[\"gradientTransform\",\"x1\",\"x2\",\"y1\",\"y2\",\"gradientUnits\",\"cx\",\"cy\",\"r\",\"fx\",\"fy\"],ia=\"xlink:href\";function ra(t,e){var s;const i=(null===(s=e.getAttribute(ia))||void 0===s?void 0:s.slice(1))||\"\",r=t.getElementById(i);if(r&&r.getAttribute(ia)&&ra(t,r),r&&(sa.forEach((t=>{const s=r.getAttribute(t);!e.hasAttribute(t)&&s&&e.setAttribute(t,s)})),!e.children.length)){const t=r.cloneNode(!0);for(;t.firstChild;)e.appendChild(t.firstChild)}e.removeAttribute(ia)}const na=[\"linearGradient\",\"radialGradient\",\"svg:linearGradient\",\"svg:radialGradient\"];function oa(t){const e=t.getElementsByTagName(\"style\");let i,r;const n={};for(i=0,r=e.length;i<r;i++){const t=(e[i].textContent||\"\").replace(/\\/\\*[\\s\\S]*?\\*\\//g,\"\");\"\"!==t.trim()&&t.split(\"}\").filter(((t,e,s)=>s.length>1&&t.trim())).forEach((t=>{if((t.match(/{/g)||[]).length>1&&t.trim().startsWith(\"@\"))return;const e=t.split(\"{\"),o={},a=e[1].trim().split(\";\").filter((function(t){return t.trim()}));for(i=0,r=a.length;i<r;i++){const t=a[i].split(\":\"),e=t[0].trim(),s=t[1].trim();o[e]=s}(t=e[0].trim()).split(\",\").forEach((t=>{\"\"!==(t=t.replace(/^svg/i,\"\").trim())&&(n[t]=s(s({},n[t]||{}),o))}))}))}return n}const aa=t=>tt.getSVGClass($o(t).toLowerCase());class ha{constructor(t,e,s,i,r){this.elements=t,this.options=e,this.reviver=s,this.regexUrl=/^url\\(['\"]?#([^'\"]+)['\"]?\\)/g,this.doc=i,this.clipPaths=r,this.gradientDefs=function(t){const e=ea(t,na),s={};let i=e.length;for(;i--;){const r=e[i];r.getAttribute(\"xlink:href\")&&ra(t,r);const n=r.getAttribute(\"id\");n&&(s[n]=r)}return s}(i),this.cssRules=oa(i)}parse(){return Promise.all(this.elements.map((t=>this.createObject(t))))}async createObject(t){const e=aa(t);if(e){const s=await e.fromElement(t,this.options,this.cssRules);return this.resolveGradient(s,t,K),this.resolveGradient(s,t,J),s instanceof Qo&&s._originalElement?cn(s,s.parsePreserveAspectRatioAttribute()):cn(s),await this.resolveClipPath(s,t),this.reviver&&this.reviver(t,s),s}return null}extractPropertyDefinition(t,e,s){const i=t[e],r=this.regexUrl;if(!r.test(i))return;r.lastIndex=0;const n=r.exec(i)[1];return r.lastIndex=0,s[n]}resolveGradient(t,e,i){const r=this.extractPropertyDefinition(t,i,this.gradientDefs);if(r){const n=e.getAttribute(i+\"-opacity\"),o=Ln.fromElement(r,t,s(s({},this.options),{},{opacity:n}));t.set(i,o)}}async resolveClipPath(t,e,s){const i=this.extractPropertyDefinition(t,\"clipPath\",this.clipPaths);if(i){const r=wt(t.calcTransformMatrix()),n=i[0].parentElement;let o=e;for(;!s&&o.parentElement&&o.getAttribute(\"clip-path\")!==t.clipPath;)o=o.parentElement;o.parentElement.appendChild(n);const a=nr(\"\".concat(o.getAttribute(\"transform\")||\"\",\" \").concat(n.getAttribute(\"originalTransform\")||\"\"));n.setAttribute(\"transform\",\"matrix(\".concat(a.join(\",\"),\")\"));const h=await Promise.all(i.map((t=>aa(t).fromElement(t,this.options,this.cssRules).then((t=>(cn(t),t.fillRule=t.clipRule,delete t.clipRule,t)))))),c=1===h.length?h[0]:new Dr(h),l=St(r,c.calcTransformMatrix());c.clipPath&&await this.resolveClipPath(c,o,n.getAttribute(\"clip-path\")?o:void 0);const{scaleX:u,scaleY:d,angle:g,skewX:f,translateX:p,translateY:m}=kt(l);c.set({flipX:!1,flipY:!1}),c.set({scaleX:u,scaleY:d,angle:g,skewX:f,skewY:0}),c.setPositionByOrigin(new ot(p,m),D,D),t.clipPath=c}else delete t.clipPath}}const ca=t=>Ue.test($o(t)),la=()=>({objects:[],elements:[],options:{},allElements:[]});async function ua(t,e){let{crossOrigin:i,signal:r}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(r&&r.aborted)return a(\"log\",new c(\"parseSVGDocument\")),la();const n=t.documentElement;!function(t){const e=ea(t,[\"use\",\"svg:use\"]),s=[\"x\",\"y\",\"xlink:href\",\"href\",\"transform\"];for(const i of e){const e=i.attributes,r={};for(const t of e)t.value&&(r[t.name]=t.value);const n=(r[\"xlink:href\"]||r.href||\"\").slice(1);if(\"\"===n)return;const o=t.getElementById(n);if(null===o)return;let a=o.cloneNode(!0);const h=a.attributes,c={};for(const t of h)t.value&&(c[t.name]=t.value);const{x:l=0,y:u=0,transform:d=\"\"}=r,g=\"\".concat(d,\" \").concat(c.transform||\"\",\" translate(\").concat(l,\", \").concat(u,\")\");if(Zo(a),/^svg$/i.test(a.nodeName)){const t=a.ownerDocument.createElementNS(Ve,\"g\");Object.entries(c).forEach((e=>{let[s,i]=e;return t.setAttributeNS(Ve,s,i)})),t.append(...a.childNodes),a=t}for(const t of e){if(!t)continue;const{name:e,value:i}=t;if(!s.includes(e))if(\"style\"===e){const t={};hr(i,t),Object.entries(c).forEach((e=>{let[s,i]=e;t[s]=i})),hr(c.style||\"\",t);const s=Object.entries(t).map((t=>t.join(\":\"))).join(\";\");a.setAttribute(e,s)}else!c[e]&&a.setAttribute(e,i)}a.setAttribute(\"transform\",g),a.setAttribute(\"instantiated_by_use\",\"1\"),a.removeAttribute(\"id\"),i.parentNode.replaceChild(a,i)}}(t);const o=Array.from(n.getElementsByTagName(\"*\")),h=s(s({},Zo(n)),{},{crossOrigin:i,signal:r}),l=o.filter((t=>(Zo(t),ca(t)&&!function(t){let e=t;for(;e&&(e=e.parentElement);)if(e&&e.nodeName&&ta.test($o(e))&&!e.getAttribute(\"instantiated_by_use\"))return!0;return!1}(t))));if(!l||l&&!l.length)return s(s({},la()),{},{options:h,allElements:o});const u={};o.filter((t=>\"clipPath\"===$o(t))).forEach((t=>{t.setAttribute(\"originalTransform\",t.getAttribute(\"transform\")||\"\");const e=t.getAttribute(\"id\");u[e]=Array.from(t.getElementsByTagName(\"*\")).filter((t=>ca(t)))}));const d=new ha(l,h,e,t,u);return{objects:await d.parse(),elements:l,options:h,allElements:o}}function da(t,e,s){return ua((new(v().DOMParser)).parseFromString(t.trim(),\"text/xml\"),e,s)}function ga(t,e){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return new Promise(((e,i)=>{hn(t.replace(/^\\n\\s*/,\"\").trim(),{onComplete:t=>{const s=t.responseXML;s&&e(s),i()},signal:s.signal})})).then((t=>ua(t,e,s))).catch((()=>la()))}const fa=W,pa=t=>function(e,s,i){const{points:r,pathOffset:n}=i;return new ot(r[t]).subtract(n).transform(St(i.getViewportTransform(),i.calcTransformMatrix()))},ma=(t,e,s,i)=>{const{target:r,pointIndex:n}=e,o=r,a=Se(new ot(s,i),void 0,o.calcOwnMatrix());return o.points[n]=a.add(o.pathOffset),o.setDimensions(),!0},va=(t,e)=>function(i,r,n,o){const a=r.target,h=new ot(a.points[(t>0?t:a.points.length)-1]),c=h.subtract(a.pathOffset).transform(a.calcOwnMatrix()),l=e(i,s(s({},r),{},{pointIndex:t}),n,o),u=h.subtract(a.pathOffset).transform(a.calcOwnMatrix()).subtract(c);return a.left-=u.x,a.top-=u.y,l},ya=t=>Xs(fa,va(t,ma));const _a=(t,e,s)=>{const{path:i,pathOffset:r}=t,n=i[e];return new ot(n[s]-r.x,n[s+1]-r.y).transform(St(t.getViewportTransform(),t.calcTransformMatrix()))};function xa(t,e,s){const{commandIndex:i,pointIndex:r}=this;return _a(s,i,r)}function Ca(t,e,i,r){const{target:n}=e,{commandIndex:o,pointIndex:a}=this,h=((t,e,s,i,r)=>{const{path:n,pathOffset:o}=t,a=n[(i>0?i:n.length)-1],h=new ot(a[r],a[r+1]),c=h.subtract(o).transform(t.calcOwnMatrix()),l=Se(new ot(e,s),void 0,t.calcOwnMatrix());n[i][r]=l.x+o.x,n[i][r+1]=l.y+o.y,t.setDimensions();const u=h.subtract(t.pathOffset).transform(t.calcOwnMatrix()).subtract(c);return t.left-=u.x,t.top-=u.y,t.set(\"dirty\",!0),!0})(n,i,r,o,a);return ke(this.actionName,s(s({},Fe(t,e,i,r)),{},{commandIndex:o,pointIndex:a})),h}class ba extends Hs{constructor(t){super(t)}render(t,e,i,r,n){const o=s(s({},r),{},{cornerColor:this.controlFill,cornerStrokeColor:this.controlStroke,transparentCorners:!this.controlFill});super.render(t,e,i,o,n)}}class wa extends ba{constructor(t){super(t)}render(t,e,s,i,r){const{path:n}=r,{commandIndex:o,pointIndex:a,connectToCommandIndex:h,connectToPointIndex:c}=this;t.save(),t.strokeStyle=this.controlStroke,this.connectionDashArray&&t.setLineDash(this.connectionDashArray);const[l]=n[o],u=_a(r,h,c);if(\"Q\"===l){const i=_a(r,o,a+2);t.moveTo(i.x,i.y),t.lineTo(e,s)}else t.moveTo(e,s);t.lineTo(u.x,u.y),t.stroke(),t.restore(),super.render(t,e,s,i,r)}}const Sa=(t,e,i,r,n,o)=>new(i?wa:ba)(s(s({commandIndex:t,pointIndex:e,actionName:\"modifyPath\",positionHandler:xa,actionHandler:Ca,connectToCommandIndex:n,connectToPointIndex:o},r),i?r.controlPointStyle:r.pointStyle));var Ta=Object.freeze({__proto__:null,changeWidth:Ws,createObjectDefaultControls:gi,createPathControls:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const s={};let i=\"M\";return t.path.forEach(((t,r)=>{const n=t[0];switch(\"Z\"!==n&&(s[\"c_\".concat(r,\"_\").concat(n)]=Sa(r,t.length-2,!1,e)),n){case\"C\":s[\"c_\".concat(r,\"_C_CP_1\")]=Sa(r,1,!0,e,r-1,(t=>\"C\"===t?5:\"Q\"===t?3:1)(i)),s[\"c_\".concat(r,\"_C_CP_2\")]=Sa(r,3,!0,e,r,5);break;case\"Q\":s[\"c_\".concat(r,\"_Q_CP_1\")]=Sa(r,1,!0,e,r,3)}i=n})),s},createPolyActionHandler:ya,createPolyControls:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const i={};for(let r=0;r<(\"number\"==typeof t?t:t.points.length);r++)i[\"p\".concat(r)]=new Hs(s({actionName:fa,positionHandler:pa(r),actionHandler:ya(r)},e));return i},createPolyPositionHandler:pa,createResizeControls:fi,createTextboxDefaultControls:pi,dragHandler:Ie,factoryPolyActionHandler:va,getLocalPoint:Re,polyActionHandler:ma,renderCircleControl:Vs,renderSquareControl:zs,rotationStyleHandler:Gs,rotationWithSnapping:Ns,scaleCursorStyleHandler:Js,scaleOrSkewActionName:ci,scaleSkewCursorStyleHandler:li,scalingEqually:Zs,scalingX:$s,scalingXOrSkewingY:ui,scalingY:ti,scalingYOrSkewingX:di,skewCursorStyleHandler:ri,skewHandlerX:oi,skewHandlerY:ai,wrapWithFireEvent:Xs,wrapWithFixedAnchor:Ys});const Oa=t=>void 0!==t.webgl,ka=(t,e)=>{const s=vt({width:t,height:e}),i=pt().getContext(\"webgl\"),r={imageBuffer:new ArrayBuffer(t*e*4)},n={destinationWidth:t,destinationHeight:e,targetCanvas:s};let o;o=v().performance.now(),Ho.prototype.copyGLTo2D.call(r,i,n);const a=v().performance.now()-o;o=v().performance.now(),Ho.prototype.copyGLTo2DPutImageData.call(r,i,n);return a>v().performance.now()-o},Da=\"precision highp float\",Ma=\"\\n    \".concat(Da,\";\\n    varying vec2 vTexCoord;\\n    uniform sampler2D uTexture;\\n    void main() {\\n      gl_FragColor = texture2D(uTexture, vTexCoord);\\n    }\"),Pa=[\"type\"],Ea=[\"type\"],Aa=new RegExp(Da,\"g\");class ja{get type(){return this.constructor.type}constructor(){let t=i(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},Pa);Object.assign(this,this.constructor.defaults,t)}getFragmentSource(){return Ma}getVertexSource(){return\"\\n    attribute vec2 aPosition;\\n    varying vec2 vTexCoord;\\n    void main() {\\n      vTexCoord = aPosition;\\n      gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n    }\"}createProgram(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.getFragmentSource(),s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.getVertexSource();const{WebGLProbe:{GLPrecision:i=\"highp\"}}=p();\"highp\"!==i&&(e=e.replace(Aa,Da.replace(\"highp\",i)));const r=t.createShader(t.VERTEX_SHADER),n=t.createShader(t.FRAGMENT_SHADER),o=t.createProgram();if(!r||!n||!o)throw new h(\"Vertex, fragment shader or program creation error\");if(t.shaderSource(r,s),t.compileShader(r),!t.getShaderParameter(r,t.COMPILE_STATUS))throw new h(\"Vertex shader compile error for \".concat(this.type,\": \").concat(t.getShaderInfoLog(r)));if(t.shaderSource(n,e),t.compileShader(n),!t.getShaderParameter(n,t.COMPILE_STATUS))throw new h(\"Fragment shader compile error for \".concat(this.type,\": \").concat(t.getShaderInfoLog(n)));if(t.attachShader(o,r),t.attachShader(o,n),t.linkProgram(o),!t.getProgramParameter(o,t.LINK_STATUS))throw new h('Shader link error for \"'.concat(this.type,'\" ').concat(t.getProgramInfoLog(o)));const a=this.getUniformLocations(t,o)||{};return a.uStepW=t.getUniformLocation(o,\"uStepW\"),a.uStepH=t.getUniformLocation(o,\"uStepH\"),{program:o,attributeLocations:this.getAttributeLocations(t,o),uniformLocations:a}}getAttributeLocations(t,e){return{aPosition:t.getAttribLocation(e,\"aPosition\")}}getUniformLocations(t,e){const s=this.constructor.uniformLocations,i={};for(let r=0;r<s.length;r++)i[s[r]]=t.getUniformLocation(e,s[r]);return i}sendAttributeData(t,e,s){const i=e.aPosition,r=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,r),t.enableVertexAttribArray(i),t.vertexAttribPointer(i,2,t.FLOAT,!1,0,0),t.bufferData(t.ARRAY_BUFFER,s,t.STATIC_DRAW)}_setupFrameBuffer(t){const e=t.context;if(t.passes>1){const s=t.destinationWidth,i=t.destinationHeight;t.sourceWidth===s&&t.sourceHeight===i||(e.deleteTexture(t.targetTexture),t.targetTexture=t.filterBackend.createTexture(e,s,i)),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t.targetTexture,0)}else e.bindFramebuffer(e.FRAMEBUFFER,null),e.finish()}_swapTextures(t){t.passes--,t.pass++;const e=t.targetTexture;t.targetTexture=t.sourceTexture,t.sourceTexture=e}isNeutralState(t){return!1}applyTo(t){Oa(t)?(this._setupFrameBuffer(t),this.applyToWebGL(t),this._swapTextures(t)):this.applyTo2d(t)}applyTo2d(t){}getCacheKey(){return this.type}retrieveShader(t){const e=this.getCacheKey();return t.programCache[e]||(t.programCache[e]=this.createProgram(t.context)),t.programCache[e]}applyToWebGL(t){const e=t.context,s=this.retrieveShader(t);0===t.pass&&t.originalTexture?e.bindTexture(e.TEXTURE_2D,t.originalTexture):e.bindTexture(e.TEXTURE_2D,t.sourceTexture),e.useProgram(s.program),this.sendAttributeData(e,s.attributeLocations,t.aPosition),e.uniform1f(s.uniformLocations.uStepW,1/t.sourceWidth),e.uniform1f(s.uniformLocations.uStepH,1/t.sourceHeight),this.sendUniformData(e,s.uniformLocations),e.viewport(0,0,t.destinationWidth,t.destinationHeight),e.drawArrays(e.TRIANGLE_STRIP,0,4)}bindAdditionalTexture(t,e,s){t.activeTexture(s),t.bindTexture(t.TEXTURE_2D,e),t.activeTexture(t.TEXTURE0)}unbindAdditionalTexture(t,e){t.activeTexture(e),t.bindTexture(t.TEXTURE_2D,null),t.activeTexture(t.TEXTURE0)}sendUniformData(t,e){}createHelpLayer(t){if(!t.helpLayer){const{sourceWidth:e,sourceHeight:s}=t,i=vt({width:e,height:s});t.helpLayer=i}}toObject(){const t=Object.keys(this.constructor.defaults||{});return s({type:this.type},t.reduce(((t,e)=>(t[e]=this[e],t)),{}))}toJSON(){return this.toObject()}static async fromObject(t,e){return new this(i(t,Ea))}}t(ja,\"type\",\"BaseFilter\"),t(ja,\"uniformLocations\",[]);const Fa={multiply:\"gl_FragColor.rgb *= uColor.rgb;\\n\",screen:\"gl_FragColor.rgb = 1.0 - (1.0 - gl_FragColor.rgb) * (1.0 - uColor.rgb);\\n\",add:\"gl_FragColor.rgb += uColor.rgb;\\n\",difference:\"gl_FragColor.rgb = abs(gl_FragColor.rgb - uColor.rgb);\\n\",subtract:\"gl_FragColor.rgb -= uColor.rgb;\\n\",lighten:\"gl_FragColor.rgb = max(gl_FragColor.rgb, uColor.rgb);\\n\",darken:\"gl_FragColor.rgb = min(gl_FragColor.rgb, uColor.rgb);\\n\",exclusion:\"gl_FragColor.rgb += uColor.rgb - 2.0 * (uColor.rgb * gl_FragColor.rgb);\\n\",overlay:\"\\n    if (uColor.r < 0.5) {\\n      gl_FragColor.r *= 2.0 * uColor.r;\\n    } else {\\n      gl_FragColor.r = 1.0 - 2.0 * (1.0 - gl_FragColor.r) * (1.0 - uColor.r);\\n    }\\n    if (uColor.g < 0.5) {\\n      gl_FragColor.g *= 2.0 * uColor.g;\\n    } else {\\n      gl_FragColor.g = 1.0 - 2.0 * (1.0 - gl_FragColor.g) * (1.0 - uColor.g);\\n    }\\n    if (uColor.b < 0.5) {\\n      gl_FragColor.b *= 2.0 * uColor.b;\\n    } else {\\n      gl_FragColor.b = 1.0 - 2.0 * (1.0 - gl_FragColor.b) * (1.0 - uColor.b);\\n    }\\n    \",tint:\"\\n    gl_FragColor.rgb *= (1.0 - uColor.a);\\n    gl_FragColor.rgb += uColor.rgb;\\n    \"};class La extends ja{getCacheKey(){return\"\".concat(this.type,\"_\").concat(this.mode)}getFragmentSource(){return\"\\n      precision highp float;\\n      uniform sampler2D uTexture;\\n      uniform vec4 uColor;\\n      varying vec2 vTexCoord;\\n      void main() {\\n        vec4 color = texture2D(uTexture, vTexCoord);\\n        gl_FragColor = color;\\n        if (color.a > 0.0) {\\n          \".concat(Fa[this.mode],\"\\n        }\\n      }\\n      \")}applyTo2d(t){let{imageData:{data:e}}=t;const s=new Ut(this.color).getSource(),i=this.alpha,r=s[0]*i,n=s[1]*i,o=s[2]*i,a=1-i;for(let t=0;t<e.length;t+=4){const s=e[t],i=e[t+1],h=e[t+2];let c,l,u;switch(this.mode){case\"multiply\":c=s*r/255,l=i*n/255,u=h*o/255;break;case\"screen\":c=255-(255-s)*(255-r)/255,l=255-(255-i)*(255-n)/255,u=255-(255-h)*(255-o)/255;break;case\"add\":c=s+r,l=i+n,u=h+o;break;case\"difference\":c=Math.abs(s-r),l=Math.abs(i-n),u=Math.abs(h-o);break;case\"subtract\":c=s-r,l=i-n,u=h-o;break;case\"darken\":c=Math.min(s,r),l=Math.min(i,n),u=Math.min(h,o);break;case\"lighten\":c=Math.max(s,r),l=Math.max(i,n),u=Math.max(h,o);break;case\"overlay\":c=r<128?2*s*r/255:255-2*(255-s)*(255-r)/255,l=n<128?2*i*n/255:255-2*(255-i)*(255-n)/255,u=o<128?2*h*o/255:255-2*(255-h)*(255-o)/255;break;case\"exclusion\":c=r+s-2*r*s/255,l=n+i-2*n*i/255,u=o+h-2*o*h/255;break;case\"tint\":c=r+s*a,l=n+i*a,u=o+h*a}e[t]=c,e[t+1]=l,e[t+2]=u}}sendUniformData(t,e){const s=new Ut(this.color).getSource();s[0]=this.alpha*s[0]/255,s[1]=this.alpha*s[1]/255,s[2]=this.alpha*s[2]/255,s[3]=this.alpha,t.uniform4fv(e.uColor,s)}}t(La,\"defaults\",{color:\"#F95C63\",mode:\"multiply\",alpha:1}),t(La,\"type\",\"BlendColor\"),t(La,\"uniformLocations\",[\"uColor\"]),tt.setClass(La);const Ra={multiply:\"\\n    precision highp float;\\n    uniform sampler2D uTexture;\\n    uniform sampler2D uImage;\\n    uniform vec4 uColor;\\n    varying vec2 vTexCoord;\\n    varying vec2 vTexCoord2;\\n    void main() {\\n      vec4 color = texture2D(uTexture, vTexCoord);\\n      vec4 color2 = texture2D(uImage, vTexCoord2);\\n      color.rgba *= color2.rgba;\\n      gl_FragColor = color;\\n    }\\n    \",mask:\"\\n    precision highp float;\\n    uniform sampler2D uTexture;\\n    uniform sampler2D uImage;\\n    uniform vec4 uColor;\\n    varying vec2 vTexCoord;\\n    varying vec2 vTexCoord2;\\n    void main() {\\n      vec4 color = texture2D(uTexture, vTexCoord);\\n      vec4 color2 = texture2D(uImage, vTexCoord2);\\n      color.a = color2.a;\\n      gl_FragColor = color;\\n    }\\n    \"},Ia=[\"type\",\"image\"];class Ba extends ja{getCacheKey(){return\"\".concat(this.type,\"_\").concat(this.mode)}getFragmentSource(){return Ra[this.mode]}getVertexSource(){return\"\\n    attribute vec2 aPosition;\\n    varying vec2 vTexCoord;\\n    varying vec2 vTexCoord2;\\n    uniform mat3 uTransformMatrix;\\n    void main() {\\n      vTexCoord = aPosition;\\n      vTexCoord2 = (uTransformMatrix * vec3(aPosition, 1.0)).xy;\\n      gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n    }\\n    \"}applyToWebGL(t){const e=t.context,s=this.createTexture(t.filterBackend,this.image);this.bindAdditionalTexture(e,s,e.TEXTURE1),super.applyToWebGL(t),this.unbindAdditionalTexture(e,e.TEXTURE1)}createTexture(t,e){return t.getCachedTexture(e.cacheKey,e.getElement())}calculateMatrix(){const t=this.image,{width:e,height:s}=t.getElement();return[1/t.scaleX,0,0,0,1/t.scaleY,0,-t.left/e,-t.top/s,1]}applyTo2d(t){let{imageData:{data:e,width:s,height:i},filterBackend:{resources:r}}=t;const n=this.image;r.blendImage||(r.blendImage=pt());const o=r.blendImage,a=o.getContext(\"2d\");o.width!==s||o.height!==i?(o.width=s,o.height=i):a.clearRect(0,0,s,i),a.setTransform(n.scaleX,0,0,n.scaleY,n.left,n.top),a.drawImage(n.getElement(),0,0,s,i);const h=a.getImageData(0,0,s,i).data;for(let t=0;t<e.length;t+=4){const s=e[t],i=e[t+1],r=e[t+2],n=e[t+3],o=h[t],a=h[t+1],c=h[t+2],l=h[t+3];switch(this.mode){case\"multiply\":e[t]=s*o/255,e[t+1]=i*a/255,e[t+2]=r*c/255,e[t+3]=n*l/255;break;case\"mask\":e[t+3]=l}}}sendUniformData(t,e){const s=this.calculateMatrix();t.uniform1i(e.uImage,1),t.uniformMatrix3fv(e.uTransformMatrix,!1,s)}toObject(){return s(s({},super.toObject()),{},{image:this.image&&this.image.toObject()})}static async fromObject(t,e){let{type:r,image:n}=t,o=i(t,Ia);return Qo.fromObject(n,e).then((t=>new this(s(s({},o),{},{image:t}))))}}t(Ba,\"type\",\"BlendImage\"),t(Ba,\"defaults\",{mode:\"multiply\",alpha:1}),t(Ba,\"uniformLocations\",[\"uTransformMatrix\",\"uImage\"]),tt.setClass(Ba);class Xa extends ja{getFragmentSource(){return\"\\n    precision highp float;\\n    uniform sampler2D uTexture;\\n    uniform vec2 uDelta;\\n    varying vec2 vTexCoord;\\n    const float nSamples = 15.0;\\n    vec3 v3offset = vec3(12.9898, 78.233, 151.7182);\\n    float random(vec3 scale) {\\n      /* use the fragment position for a different seed per-pixel */\\n      return fract(sin(dot(gl_FragCoord.xyz, scale)) * 43758.5453);\\n    }\\n    void main() {\\n      vec4 color = vec4(0.0);\\n      float total = 0.0;\\n      float offset = random(v3offset);\\n      for (float t = -nSamples; t <= nSamples; t++) {\\n        float percent = (t + offset - 0.5) / nSamples;\\n        float weight = 1.0 - abs(percent);\\n        color += texture2D(uTexture, vTexCoord + uDelta * percent) * weight;\\n        total += weight;\\n      }\\n      gl_FragColor = color / total;\\n    }\\n  \"}applyTo(t){Oa(t)?(this.aspectRatio=t.sourceWidth/t.sourceHeight,t.passes++,this._setupFrameBuffer(t),this.horizontal=!0,this.applyToWebGL(t),this._swapTextures(t),this._setupFrameBuffer(t),this.horizontal=!1,this.applyToWebGL(t),this._swapTextures(t)):this.applyTo2d(t)}applyTo2d(t){t.imageData=this.simpleBlur(t)}simpleBlur(t){let{ctx:e,imageData:s,filterBackend:{resources:i}}=t;const{width:r,height:n}=s;i.blurLayer1||(i.blurLayer1=pt(),i.blurLayer2=pt());const o=i.blurLayer1,a=i.blurLayer2;o.width===r&&o.height===n||(a.width=o.width=r,a.height=o.height=n);const h=o.getContext(\"2d\"),c=a.getContext(\"2d\"),l=15,u=.06*this.blur*.5;let d,g,f,p;for(h.putImageData(s,0,0),c.clearRect(0,0,r,n),p=-15;p<=l;p++)d=(Math.random()-.5)/4,g=p/l,f=u*g*r+d,c.globalAlpha=1-Math.abs(g),c.drawImage(o,f,d),h.drawImage(a,0,0),c.globalAlpha=1,c.clearRect(0,0,a.width,a.height);for(p=-15;p<=l;p++)d=(Math.random()-.5)/4,g=p/l,f=u*g*n+d,c.globalAlpha=1-Math.abs(g),c.drawImage(o,d,f),h.drawImage(a,0,0),c.globalAlpha=1,c.clearRect(0,0,a.width,a.height);e.drawImage(o,0,0);const m=e.getImageData(0,0,o.width,o.height);return h.globalAlpha=1,h.clearRect(0,0,o.width,o.height),m}sendUniformData(t,e){const s=this.chooseRightDelta();t.uniform2fv(e.uDelta,s)}isNeutralState(){return 0===this.blur}chooseRightDelta(){let t=1;const e=[0,0];this.horizontal?this.aspectRatio>1&&(t=1/this.aspectRatio):this.aspectRatio<1&&(t=this.aspectRatio);const s=t*this.blur*.12;return this.horizontal?e[0]=s:e[1]=s,e}}t(Xa,\"type\",\"Blur\"),t(Xa,\"defaults\",{blur:0}),t(Xa,\"uniformLocations\",[\"uDelta\"]),tt.setClass(Xa);class Ya extends ja{getFragmentSource(){return\"\\n  precision highp float;\\n  uniform sampler2D uTexture;\\n  uniform float uBrightness;\\n  varying vec2 vTexCoord;\\n  void main() {\\n    vec4 color = texture2D(uTexture, vTexCoord);\\n    color.rgb += uBrightness;\\n    gl_FragColor = color;\\n  }\\n\"}applyTo2d(t){let{imageData:{data:e}}=t;const s=Math.round(255*this.brightness);for(let t=0;t<e.length;t+=4)e[t]+=s,e[t+1]+=s,e[t+2]+=s}isNeutralState(){return 0===this.brightness}sendUniformData(t,e){t.uniform1f(e.uBrightness,this.brightness)}}t(Ya,\"type\",\"Brightness\"),t(Ya,\"defaults\",{brightness:0}),t(Ya,\"uniformLocations\",[\"uBrightness\"]),tt.setClass(Ya);const Wa={matrix:[1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0],colorsOnly:!0};class Va extends ja{getFragmentSource(){return\"\\n  precision highp float;\\n  uniform sampler2D uTexture;\\n  varying vec2 vTexCoord;\\n  uniform mat4 uColorMatrix;\\n  uniform vec4 uConstants;\\n  void main() {\\n    vec4 color = texture2D(uTexture, vTexCoord);\\n    color *= uColorMatrix;\\n    color += uConstants;\\n    gl_FragColor = color;\\n  }\"}applyTo2d(t){const e=t.imageData.data,s=this.matrix,i=this.colorsOnly;for(let t=0;t<e.length;t+=4){const r=e[t],n=e[t+1],o=e[t+2];if(e[t]=r*s[0]+n*s[1]+o*s[2]+255*s[4],e[t+1]=r*s[5]+n*s[6]+o*s[7]+255*s[9],e[t+2]=r*s[10]+n*s[11]+o*s[12]+255*s[14],!i){const i=e[t+3];e[t]+=i*s[3],e[t+1]+=i*s[8],e[t+2]+=i*s[13],e[t+3]=r*s[15]+n*s[16]+o*s[17]+i*s[18]+255*s[19]}}}sendUniformData(t,e){const s=this.matrix,i=[s[0],s[1],s[2],s[3],s[5],s[6],s[7],s[8],s[10],s[11],s[12],s[13],s[15],s[16],s[17],s[18]],r=[s[4],s[9],s[14],s[19]];t.uniformMatrix4fv(e.uColorMatrix,!1,i),t.uniform4fv(e.uConstants,r)}toObject(){return s(s({},super.toObject()),{},{matrix:[...this.matrix]})}}function za(e,s){var i;const r=(t(i=class extends Va{toObject(){return{type:this.type,colorsOnly:this.colorsOnly}}},\"type\",e),t(i,\"defaults\",{colorsOnly:!1,matrix:s}),i);return tt.setClass(r,e),r}t(Va,\"type\",\"ColorMatrix\"),t(Va,\"defaults\",Wa),t(Va,\"uniformLocations\",[\"uColorMatrix\",\"uConstants\"]),tt.setClass(Va);const Ha=za(\"Brownie\",[.5997,.34553,-.27082,0,.186,-.0377,.86095,.15059,0,-.1449,.24113,-.07441,.44972,0,-.02965,0,0,0,1,0]),Ga=za(\"Vintage\",[.62793,.32021,-.03965,0,.03784,.02578,.64411,.03259,0,.02926,.0466,-.08512,.52416,0,.02023,0,0,0,1,0]),Na=za(\"Kodachrome\",[1.12855,-.39673,-.03992,0,.24991,-.16404,1.08352,-.05498,0,.09698,-.16786,-.56034,1.60148,0,.13972,0,0,0,1,0]),Ua=za(\"Technicolor\",[1.91252,-.85453,-.09155,0,.04624,-.30878,1.76589,-.10601,0,-.27589,-.2311,-.75018,1.84759,0,.12137,0,0,0,1,0]),qa=za(\"Polaroid\",[1.438,-.062,-.062,0,0,-.122,1.378,-.122,0,0,-.016,-.016,1.483,0,0,0,0,0,1,0]),Ka=za(\"Sepia\",[.393,.769,.189,0,0,.349,.686,.168,0,0,.272,.534,.131,0,0,0,0,0,1,0]),Ja=za(\"BlackWhite\",[1.5,1.5,1.5,0,-1,1.5,1.5,1.5,0,-1,1.5,1.5,1.5,0,-1,0,0,0,1,0]);class Qa extends ja{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(t),this.subFilters=t.subFilters||[]}applyTo(t){Oa(t)&&(t.passes+=this.subFilters.length-1),this.subFilters.forEach((e=>{e.applyTo(t)}))}toObject(){return{type:this.type,subFilters:this.subFilters.map((t=>t.toObject()))}}isNeutralState(){return!this.subFilters.some((t=>!t.isNeutralState()))}static fromObject(t,e){return Promise.all((t.subFilters||[]).map((t=>tt.getClass(t.type).fromObject(t,e)))).then((t=>new this({subFilters:t})))}}t(Qa,\"type\",\"Composed\"),tt.setClass(Qa);class Za extends ja{getFragmentSource(){return\"\\n  precision highp float;\\n  uniform sampler2D uTexture;\\n  uniform float uContrast;\\n  varying vec2 vTexCoord;\\n  void main() {\\n    vec4 color = texture2D(uTexture, vTexCoord);\\n    float contrastF = 1.015 * (uContrast + 1.0) / (1.0 * (1.015 - uContrast));\\n    color.rgb = contrastF * (color.rgb - 0.5) + 0.5;\\n    gl_FragColor = color;\\n  }\"}isNeutralState(){return 0===this.contrast}applyTo2d(t){let{imageData:{data:e}}=t;const s=Math.floor(255*this.contrast),i=259*(s+255)/(255*(259-s));for(let t=0;t<e.length;t+=4)e[t]=i*(e[t]-128)+128,e[t+1]=i*(e[t+1]-128)+128,e[t+2]=i*(e[t+2]-128)+128}sendUniformData(t,e){t.uniform1f(e.uContrast,this.contrast)}}t(Za,\"type\",\"Contrast\"),t(Za,\"defaults\",{contrast:0}),t(Za,\"uniformLocations\",[\"uContrast\"]),tt.setClass(Za);const $a={Convolute_3_1:\"\\n    precision highp float;\\n    uniform sampler2D uTexture;\\n    uniform float uMatrix[9];\\n    uniform float uStepW;\\n    uniform float uStepH;\\n    varying vec2 vTexCoord;\\n    void main() {\\n      vec4 color = vec4(0, 0, 0, 0);\\n      for (float h = 0.0; h < 3.0; h+=1.0) {\\n        for (float w = 0.0; w < 3.0; w+=1.0) {\\n          vec2 matrixPos = vec2(uStepW * (w - 1), uStepH * (h - 1));\\n          color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 3.0 + w)];\\n        }\\n      }\\n      gl_FragColor = color;\\n    }\\n    \",Convolute_3_0:\"\\n    precision highp float;\\n    uniform sampler2D uTexture;\\n    uniform float uMatrix[9];\\n    uniform float uStepW;\\n    uniform float uStepH;\\n    varying vec2 vTexCoord;\\n    void main() {\\n      vec4 color = vec4(0, 0, 0, 1);\\n      for (float h = 0.0; h < 3.0; h+=1.0) {\\n        for (float w = 0.0; w < 3.0; w+=1.0) {\\n          vec2 matrixPos = vec2(uStepW * (w - 1.0), uStepH * (h - 1.0));\\n          color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 3.0 + w)];\\n        }\\n      }\\n      float alpha = texture2D(uTexture, vTexCoord).a;\\n      gl_FragColor = color;\\n      gl_FragColor.a = alpha;\\n    }\\n    \",Convolute_5_1:\"\\n    precision highp float;\\n    uniform sampler2D uTexture;\\n    uniform float uMatrix[25];\\n    uniform float uStepW;\\n    uniform float uStepH;\\n    varying vec2 vTexCoord;\\n    void main() {\\n      vec4 color = vec4(0, 0, 0, 0);\\n      for (float h = 0.0; h < 5.0; h+=1.0) {\\n        for (float w = 0.0; w < 5.0; w+=1.0) {\\n          vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n          color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 5.0 + w)];\\n        }\\n      }\\n      gl_FragColor = color;\\n    }\\n    \",Convolute_5_0:\"\\n    precision highp float;\\n    uniform sampler2D uTexture;\\n    uniform float uMatrix[25];\\n    uniform float uStepW;\\n    uniform float uStepH;\\n    varying vec2 vTexCoord;\\n    void main() {\\n      vec4 color = vec4(0, 0, 0, 1);\\n      for (float h = 0.0; h < 5.0; h+=1.0) {\\n        for (float w = 0.0; w < 5.0; w+=1.0) {\\n          vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n          color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 5.0 + w)];\\n        }\\n      }\\n      float alpha = texture2D(uTexture, vTexCoord).a;\\n      gl_FragColor = color;\\n      gl_FragColor.a = alpha;\\n    }\\n    \",Convolute_7_1:\"\\n    precision highp float;\\n    uniform sampler2D uTexture;\\n    uniform float uMatrix[49];\\n    uniform float uStepW;\\n    uniform float uStepH;\\n    varying vec2 vTexCoord;\\n    void main() {\\n      vec4 color = vec4(0, 0, 0, 0);\\n      for (float h = 0.0; h < 7.0; h+=1.0) {\\n        for (float w = 0.0; w < 7.0; w+=1.0) {\\n          vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n          color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 7.0 + w)];\\n        }\\n      }\\n      gl_FragColor = color;\\n    }\\n    \",Convolute_7_0:\"\\n    precision highp float;\\n    uniform sampler2D uTexture;\\n    uniform float uMatrix[49];\\n    uniform float uStepW;\\n    uniform float uStepH;\\n    varying vec2 vTexCoord;\\n    void main() {\\n      vec4 color = vec4(0, 0, 0, 1);\\n      for (float h = 0.0; h < 7.0; h+=1.0) {\\n        for (float w = 0.0; w < 7.0; w+=1.0) {\\n          vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n          color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 7.0 + w)];\\n        }\\n      }\\n      float alpha = texture2D(uTexture, vTexCoord).a;\\n      gl_FragColor = color;\\n      gl_FragColor.a = alpha;\\n    }\\n    \",Convolute_9_1:\"\\n    precision highp float;\\n    uniform sampler2D uTexture;\\n    uniform float uMatrix[81];\\n    uniform float uStepW;\\n    uniform float uStepH;\\n    varying vec2 vTexCoord;\\n    void main() {\\n      vec4 color = vec4(0, 0, 0, 0);\\n      for (float h = 0.0; h < 9.0; h+=1.0) {\\n        for (float w = 0.0; w < 9.0; w+=1.0) {\\n          vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n          color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 9.0 + w)];\\n        }\\n      }\\n      gl_FragColor = color;\\n    }\\n    \",Convolute_9_0:\"\\n    precision highp float;\\n    uniform sampler2D uTexture;\\n    uniform float uMatrix[81];\\n    uniform float uStepW;\\n    uniform float uStepH;\\n    varying vec2 vTexCoord;\\n    void main() {\\n      vec4 color = vec4(0, 0, 0, 1);\\n      for (float h = 0.0; h < 9.0; h+=1.0) {\\n        for (float w = 0.0; w < 9.0; w+=1.0) {\\n          vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n          color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 9.0 + w)];\\n        }\\n      }\\n      float alpha = texture2D(uTexture, vTexCoord).a;\\n      gl_FragColor = color;\\n      gl_FragColor.a = alpha;\\n    }\\n    \"};class th extends ja{getCacheKey(){return\"\".concat(this.type,\"_\").concat(Math.sqrt(this.matrix.length),\"_\").concat(this.opaque?1:0)}getFragmentSource(){return $a[this.getCacheKey()]}applyTo2d(t){const e=t.imageData,s=e.data,i=this.matrix,r=Math.round(Math.sqrt(i.length)),n=Math.floor(r/2),o=e.width,a=e.height,h=t.ctx.createImageData(o,a),c=h.data,l=this.opaque?1:0;let u,d,g,f,p,m,v,y,_,x,C,b,w;for(C=0;C<a;C++)for(x=0;x<o;x++){for(p=4*(C*o+x),u=0,d=0,g=0,f=0,w=0;w<r;w++)for(b=0;b<r;b++)v=C+w-n,m=x+b-n,v<0||v>=a||m<0||m>=o||(y=4*(v*o+m),_=i[w*r+b],u+=s[y]*_,d+=s[y+1]*_,g+=s[y+2]*_,l||(f+=s[y+3]*_));c[p]=u,c[p+1]=d,c[p+2]=g,c[p+3]=l?s[p+3]:f}t.imageData=h}sendUniformData(t,e){t.uniform1fv(e.uMatrix,this.matrix)}toObject(){return s(s({},super.toObject()),{},{opaque:this.opaque,matrix:[...this.matrix]})}}t(th,\"type\",\"Convolute\"),t(th,\"defaults\",{opaque:!1,matrix:[0,0,0,0,1,0,0,0,0]}),t(th,\"uniformLocations\",[\"uMatrix\",\"uOpaque\",\"uHalfSize\",\"uSize\"]),tt.setClass(th);const eh=\"Gamma\";class sh extends ja{getFragmentSource(){return\"\\n  precision highp float;\\n  uniform sampler2D uTexture;\\n  uniform vec3 uGamma;\\n  varying vec2 vTexCoord;\\n  void main() {\\n    vec4 color = texture2D(uTexture, vTexCoord);\\n    vec3 correction = (1.0 / uGamma);\\n    color.r = pow(color.r, correction.r);\\n    color.g = pow(color.g, correction.g);\\n    color.b = pow(color.b, correction.b);\\n    gl_FragColor = color;\\n    gl_FragColor.rgb *= color.a;\\n  }\\n\"}constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(t),this.gamma=t.gamma||this.constructor.defaults.gamma.concat()}applyTo2d(t){let{imageData:{data:e}}=t;const s=this.gamma,i=1/s[0],r=1/s[1],n=1/s[2];this.rgbValues||(this.rgbValues={r:new Uint8Array(256),g:new Uint8Array(256),b:new Uint8Array(256)});const o=this.rgbValues;for(let t=0;t<256;t++)o.r[t]=255*Math.pow(t/255,i),o.g[t]=255*Math.pow(t/255,r),o.b[t]=255*Math.pow(t/255,n);for(let t=0;t<e.length;t+=4)e[t]=o.r[e[t]],e[t+1]=o.g[e[t+1]],e[t+2]=o.b[e[t+2]]}sendUniformData(t,e){t.uniform3fv(e.uGamma,this.gamma)}isNeutralState(){const{gamma:t}=this;return 1===t[0]&&1===t[1]&&1===t[2]}toObject(){return{type:eh,gamma:this.gamma.concat()}}}t(sh,\"type\",eh),t(sh,\"defaults\",{gamma:[1,1,1]}),t(sh,\"uniformLocations\",[\"uGamma\"]),tt.setClass(sh);const ih={average:\"\\n    precision highp float;\\n    uniform sampler2D uTexture;\\n    varying vec2 vTexCoord;\\n    void main() {\\n      vec4 color = texture2D(uTexture, vTexCoord);\\n      float average = (color.r + color.b + color.g) / 3.0;\\n      gl_FragColor = vec4(average, average, average, color.a);\\n    }\\n    \",lightness:\"\\n    precision highp float;\\n    uniform sampler2D uTexture;\\n    uniform int uMode;\\n    varying vec2 vTexCoord;\\n    void main() {\\n      vec4 col = texture2D(uTexture, vTexCoord);\\n      float average = (max(max(col.r, col.g),col.b) + min(min(col.r, col.g),col.b)) / 2.0;\\n      gl_FragColor = vec4(average, average, average, col.a);\\n    }\\n    \",luminosity:\"\\n    precision highp float;\\n    uniform sampler2D uTexture;\\n    uniform int uMode;\\n    varying vec2 vTexCoord;\\n    void main() {\\n      vec4 col = texture2D(uTexture, vTexCoord);\\n      float average = 0.21 * col.r + 0.72 * col.g + 0.07 * col.b;\\n      gl_FragColor = vec4(average, average, average, col.a);\\n    }\\n    \"};class rh extends ja{applyTo2d(t){let{imageData:{data:e}}=t;for(let t,s=0;s<e.length;s+=4){const i=e[s],r=e[s+1],n=e[s+2];switch(this.mode){case\"average\":t=(i+r+n)/3;break;case\"lightness\":t=(Math.min(i,r,n)+Math.max(i,r,n))/2;break;case\"luminosity\":t=.21*i+.72*r+.07*n}e[s+2]=e[s+1]=e[s]=t}}getCacheKey(){return\"\".concat(this.type,\"_\").concat(this.mode)}getFragmentSource(){return ih[this.mode]}sendUniformData(t,e){t.uniform1i(e.uMode,1)}isNeutralState(){return!1}}t(rh,\"type\",\"Grayscale\"),t(rh,\"defaults\",{mode:\"average\"}),t(rh,\"uniformLocations\",[\"uMode\"]),tt.setClass(rh);const nh=s(s({},Wa),{},{rotation:0});class oh extends Va{calculateMatrix(){const t=this.rotation*Math.PI,e=rt(t),s=nt(t),i=1/3,r=Math.sqrt(i)*s,n=1-e;this.matrix=[e+n/3,i*n-r,i*n+r,0,0,i*n+r,e+i*n,i*n-r,0,0,i*n-r,i*n+r,e+i*n,0,0,0,0,0,1,0]}isNeutralState(){return 0===this.rotation}applyTo(t){this.calculateMatrix(),super.applyTo(t)}toObject(){return{type:this.type,rotation:this.rotation}}}t(oh,\"type\",\"HueRotation\"),t(oh,\"defaults\",nh),tt.setClass(oh);class ah extends ja{applyTo2d(t){let{imageData:{data:e}}=t;for(let t=0;t<e.length;t+=4)e[t]=255-e[t],e[t+1]=255-e[t+1],e[t+2]=255-e[t+2],this.alpha&&(e[t+3]=255-e[t+3])}getFragmentSource(){return\"\\n  precision highp float;\\n  uniform sampler2D uTexture;\\n  uniform int uInvert;\\n  uniform int uAlpha;\\n  varying vec2 vTexCoord;\\n  void main() {\\n    vec4 color = texture2D(uTexture, vTexCoord);\\n    if (uInvert == 1) {\\n      if (uAlpha == 1) {\\n        gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,1.0 -color.a);\\n      } else {\\n        gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,color.a);\\n      }\\n    } else {\\n      gl_FragColor = color;\\n    }\\n  }\\n\"}isNeutralState(){return!this.invert}sendUniformData(t,e){t.uniform1i(e.uInvert,Number(this.invert)),t.uniform1i(e.uAlpha,Number(this.alpha))}}t(ah,\"type\",\"Invert\"),t(ah,\"defaults\",{alpha:!1,invert:!0}),t(ah,\"uniformLocations\",[\"uInvert\",\"uAlpha\"]),tt.setClass(ah);class hh extends ja{getFragmentSource(){return\"\\n  precision highp float;\\n  uniform sampler2D uTexture;\\n  uniform float uStepH;\\n  uniform float uNoise;\\n  uniform float uSeed;\\n  varying vec2 vTexCoord;\\n  float rand(vec2 co, float seed, float vScale) {\\n    return fract(sin(dot(co.xy * vScale ,vec2(12.9898 , 78.233))) * 43758.5453 * (seed + 0.01) / 2.0);\\n  }\\n  void main() {\\n    vec4 color = texture2D(uTexture, vTexCoord);\\n    color.rgb += (0.5 - rand(vTexCoord, uSeed, 0.1 / uStepH)) * uNoise;\\n    gl_FragColor = color;\\n  }\\n\"}applyTo2d(t){let{imageData:{data:e}}=t;const s=this.noise;for(let t=0;t<e.length;t+=4){const i=(.5-Math.random())*s;e[t]+=i,e[t+1]+=i,e[t+2]+=i}}sendUniformData(t,e){t.uniform1f(e.uNoise,this.noise/255),t.uniform1f(e.uSeed,Math.random())}isNeutralState(){return 0===this.noise}}t(hh,\"type\",\"Noise\"),t(hh,\"defaults\",{noise:0}),t(hh,\"uniformLocations\",[\"uNoise\",\"uSeed\"]),tt.setClass(hh);class ch extends ja{applyTo2d(t){let{imageData:{data:e,width:s,height:i}}=t;for(let t=0;t<i;t+=this.blocksize)for(let r=0;r<s;r+=this.blocksize){const n=4*t*s+4*r,o=e[n],a=e[n+1],h=e[n+2],c=e[n+3];for(let n=t;n<Math.min(t+this.blocksize,i);n++)for(let t=r;t<Math.min(r+this.blocksize,s);t++){const i=4*n*s+4*t;e[i]=o,e[i+1]=a,e[i+2]=h,e[i+3]=c}}}isNeutralState(){return 1===this.blocksize}getFragmentSource(){return\"\\n  precision highp float;\\n  uniform sampler2D uTexture;\\n  uniform float uBlocksize;\\n  uniform float uStepW;\\n  uniform float uStepH;\\n  varying vec2 vTexCoord;\\n  void main() {\\n    float blockW = uBlocksize * uStepW;\\n    float blockH = uBlocksize * uStepH;\\n    int posX = int(vTexCoord.x / blockW);\\n    int posY = int(vTexCoord.y / blockH);\\n    float fposX = float(posX);\\n    float fposY = float(posY);\\n    vec2 squareCoords = vec2(fposX * blockW, fposY * blockH);\\n    vec4 color = texture2D(uTexture, squareCoords);\\n    gl_FragColor = color;\\n  }\\n\"}sendUniformData(t,e){t.uniform1f(e.uBlocksize,this.blocksize)}}t(ch,\"type\",\"Pixelate\"),t(ch,\"defaults\",{blocksize:4}),t(ch,\"uniformLocations\",[\"uBlocksize\"]),tt.setClass(ch);class lh extends ja{getFragmentSource(){return\"\\nprecision highp float;\\nuniform sampler2D uTexture;\\nuniform vec4 uLow;\\nuniform vec4 uHigh;\\nvarying vec2 vTexCoord;\\nvoid main() {\\n  gl_FragColor = texture2D(uTexture, vTexCoord);\\n  if(all(greaterThan(gl_FragColor.rgb,uLow.rgb)) && all(greaterThan(uHigh.rgb,gl_FragColor.rgb))) {\\n    gl_FragColor.a = 0.0;\\n  }\\n}\\n\"}applyTo2d(t){let{imageData:{data:e}}=t;const s=255*this.distance,i=new Ut(this.color).getSource(),r=[i[0]-s,i[1]-s,i[2]-s],n=[i[0]+s,i[1]+s,i[2]+s];for(let t=0;t<e.length;t+=4){const s=e[t],i=e[t+1],o=e[t+2];s>r[0]&&i>r[1]&&o>r[2]&&s<n[0]&&i<n[1]&&o<n[2]&&(e[t+3]=0)}}sendUniformData(t,e){const s=new Ut(this.color).getSource(),i=this.distance,r=[0+s[0]/255-i,0+s[1]/255-i,0+s[2]/255-i,1],n=[s[0]/255+i,s[1]/255+i,s[2]/255+i,1];t.uniform4fv(e.uLow,r),t.uniform4fv(e.uHigh,n)}}t(lh,\"type\",\"RemoveColor\"),t(lh,\"defaults\",{color:\"#FFFFFF\",distance:.02,useAlpha:!1}),t(lh,\"uniformLocations\",[\"uLow\",\"uHigh\"]),tt.setClass(lh);class uh extends ja{sendUniformData(t,e){t.uniform2fv(e.uDelta,this.horizontal?[1/this.width,0]:[0,1/this.height]),t.uniform1fv(e.uTaps,this.taps)}getFilterWindow(){const t=this.tempScale;return Math.ceil(this.lanczosLobes/t)}getCacheKey(){const t=this.getFilterWindow();return\"\".concat(this.type,\"_\").concat(t)}getFragmentSource(){const t=this.getFilterWindow();return this.generateShader(t)}getTaps(){const t=this.lanczosCreate(this.lanczosLobes),e=this.tempScale,s=this.getFilterWindow(),i=new Array(s);for(let r=1;r<=s;r++)i[r-1]=t(r*e);return i}generateShader(t){const e=new Array(t);for(let s=1;s<=t;s++)e[s-1]=\"\".concat(s,\".0 * uDelta\");return\"\\n      precision highp float;\\n      uniform sampler2D uTexture;\\n      uniform vec2 uDelta;\\n      varying vec2 vTexCoord;\\n      uniform float uTaps[\".concat(t,\"];\\n      void main() {\\n        vec4 color = texture2D(uTexture, vTexCoord);\\n        float sum = 1.0;\\n        \").concat(e.map(((t,e)=>\"\\n              color += texture2D(uTexture, vTexCoord + \".concat(t,\") * uTaps[\").concat(e,\"] + texture2D(uTexture, vTexCoord - \").concat(t,\") * uTaps[\").concat(e,\"];\\n              sum += 2.0 * uTaps[\").concat(e,\"];\\n            \"))).join(\"\\n\"),\"\\n        gl_FragColor = color / sum;\\n      }\\n    \")}applyToForWebgl(t){t.passes++,this.width=t.sourceWidth,this.horizontal=!0,this.dW=Math.round(this.width*this.scaleX),this.dH=t.sourceHeight,this.tempScale=this.dW/this.width,this.taps=this.getTaps(),t.destinationWidth=this.dW,super.applyTo(t),t.sourceWidth=t.destinationWidth,this.height=t.sourceHeight,this.horizontal=!1,this.dH=Math.round(this.height*this.scaleY),this.tempScale=this.dH/this.height,this.taps=this.getTaps(),t.destinationHeight=this.dH,super.applyTo(t),t.sourceHeight=t.destinationHeight}applyTo(t){Oa(t)?this.applyToForWebgl(t):this.applyTo2d(t)}isNeutralState(){return 1===this.scaleX&&1===this.scaleY}lanczosCreate(t){return e=>{if(e>=t||e<=-t)return 0;if(e<1.1920929e-7&&e>-1.1920929e-7)return 1;const s=(e*=Math.PI)/t;return Math.sin(e)/e*Math.sin(s)/s}}applyTo2d(t){const e=t.imageData,s=this.scaleX,i=this.scaleY;this.rcpScaleX=1/s,this.rcpScaleY=1/i;const r=e.width,n=e.height,o=Math.round(r*s),a=Math.round(n*i);let h;h=\"sliceHack\"===this.resizeType?this.sliceByTwo(t,r,n,o,a):\"hermite\"===this.resizeType?this.hermiteFastResize(t,r,n,o,a):\"bilinear\"===this.resizeType?this.bilinearFiltering(t,r,n,o,a):\"lanczos\"===this.resizeType?this.lanczosResize(t,r,n,o,a):new ImageData(o,a),t.imageData=h}sliceByTwo(t,e,s,i,r){const n=t.imageData,o=.5;let a=!1,h=!1,c=e*o,l=s*o;const u=t.filterBackend.resources;let d=0,g=0;const f=e;let p=0;u.sliceByTwo||(u.sliceByTwo=pt());const m=u.sliceByTwo;(m.width<1.5*e||m.height<s)&&(m.width=1.5*e,m.height=s);const v=m.getContext(\"2d\");for(v.clearRect(0,0,1.5*e,s),v.putImageData(n,0,0),i=Math.floor(i),r=Math.floor(r);!a||!h;)e=c,s=l,i<Math.floor(c*o)?c=Math.floor(c*o):(c=i,a=!0),r<Math.floor(l*o)?l=Math.floor(l*o):(l=r,h=!0),v.drawImage(m,d,g,e,s,f,p,c,l),d=f,g=p,p+=l;return v.getImageData(d,g,i,r)}lanczosResize(t,e,s,i,r){const n=t.imageData.data,o=t.ctx.createImageData(i,r),a=o.data,h=this.lanczosCreate(this.lanczosLobes),c=this.rcpScaleX,l=this.rcpScaleY,u=2/this.rcpScaleX,d=2/this.rcpScaleY,g=Math.ceil(c*this.lanczosLobes/2),f=Math.ceil(l*this.lanczosLobes/2),p={},m={x:0,y:0},v={x:0,y:0};return function t(y){let _,x,C,b,w,S,T,O,k,D,M;for(m.x=(y+.5)*c,v.x=Math.floor(m.x),_=0;_<r;_++){for(m.y=(_+.5)*l,v.y=Math.floor(m.y),w=0,S=0,T=0,O=0,k=0,x=v.x-g;x<=v.x+g;x++)if(!(x<0||x>=e)){D=Math.floor(1e3*Math.abs(x-m.x)),p[D]||(p[D]={});for(let t=v.y-f;t<=v.y+f;t++)t<0||t>=s||(M=Math.floor(1e3*Math.abs(t-m.y)),p[D][M]||(p[D][M]=h(Math.sqrt(Math.pow(D*u,2)+Math.pow(M*d,2))/1e3)),C=p[D][M],C>0&&(b=4*(t*e+x),w+=C,S+=C*n[b],T+=C*n[b+1],O+=C*n[b+2],k+=C*n[b+3]))}b=4*(_*i+y),a[b]=S/w,a[b+1]=T/w,a[b+2]=O/w,a[b+3]=k/w}return++y<i?t(y):o}(0)}bilinearFiltering(t,e,s,i,r){let n,o,a,h,c,l,u,d,g,f,p,m,v,y=0;const _=this.rcpScaleX,x=this.rcpScaleY,C=4*(e-1),b=t.imageData.data,w=t.ctx.createImageData(i,r),S=w.data;for(u=0;u<r;u++)for(d=0;d<i;d++)for(c=Math.floor(_*d),l=Math.floor(x*u),g=_*d-c,f=x*u-l,v=4*(l*e+c),p=0;p<4;p++)n=b[v+p],o=b[v+4+p],a=b[v+C+p],h=b[v+C+4+p],m=n*(1-g)*(1-f)+o*g*(1-f)+a*f*(1-g)+h*g*f,S[y++]=m;return w}hermiteFastResize(t,e,s,i,r){const n=this.rcpScaleX,o=this.rcpScaleY,a=Math.ceil(n/2),h=Math.ceil(o/2),c=t.imageData.data,l=t.ctx.createImageData(i,r),u=l.data;for(let t=0;t<r;t++)for(let s=0;s<i;s++){const r=4*(s+t*i);let l=0,d=0,g=0,f=0,p=0,m=0,v=0;const y=(t+.5)*o;for(let i=Math.floor(t*o);i<(t+1)*o;i++){const t=Math.abs(y-(i+.5))/h,r=(s+.5)*n,o=t*t;for(let t=Math.floor(s*n);t<(s+1)*n;t++){let s=Math.abs(r-(t+.5))/a;const n=Math.sqrt(o+s*s);n>1&&n<-1||(l=2*n*n*n-3*n*n+1,l>0&&(s=4*(t+i*e),v+=l*c[s+3],g+=l,c[s+3]<255&&(l=l*c[s+3]/250),f+=l*c[s],p+=l*c[s+1],m+=l*c[s+2],d+=l))}}u[r]=f/d,u[r+1]=p/d,u[r+2]=m/d,u[r+3]=v/g}return l}}t(uh,\"type\",\"Resize\"),t(uh,\"defaults\",{resizeType:\"hermite\",scaleX:1,scaleY:1,lanczosLobes:3}),t(uh,\"uniformLocations\",[\"uDelta\",\"uTaps\"]),tt.setClass(uh);class dh extends ja{getFragmentSource(){return\"\\n  precision highp float;\\n  uniform sampler2D uTexture;\\n  uniform float uSaturation;\\n  varying vec2 vTexCoord;\\n  void main() {\\n    vec4 color = texture2D(uTexture, vTexCoord);\\n    float rgMax = max(color.r, color.g);\\n    float rgbMax = max(rgMax, color.b);\\n    color.r += rgbMax != color.r ? (rgbMax - color.r) * uSaturation : 0.00;\\n    color.g += rgbMax != color.g ? (rgbMax - color.g) * uSaturation : 0.00;\\n    color.b += rgbMax != color.b ? (rgbMax - color.b) * uSaturation : 0.00;\\n    gl_FragColor = color;\\n  }\\n\"}applyTo2d(t){let{imageData:{data:e}}=t;const s=-this.saturation;for(let t=0;t<e.length;t+=4){const i=e[t],r=e[t+1],n=e[t+2],o=Math.max(i,r,n);e[t]+=o!==i?(o-i)*s:0,e[t+1]+=o!==r?(o-r)*s:0,e[t+2]+=o!==n?(o-n)*s:0}}sendUniformData(t,e){t.uniform1f(e.uSaturation,-this.saturation)}isNeutralState(){return 0===this.saturation}}t(dh,\"type\",\"Saturation\"),t(dh,\"defaults\",{saturation:0}),t(dh,\"uniformLocations\",[\"uSaturation\"]),tt.setClass(dh);class gh extends ja{getFragmentSource(){return\"\\n  precision highp float;\\n  uniform sampler2D uTexture;\\n  uniform float uVibrance;\\n  varying vec2 vTexCoord;\\n  void main() {\\n    vec4 color = texture2D(uTexture, vTexCoord);\\n    float max = max(color.r, max(color.g, color.b));\\n    float avg = (color.r + color.g + color.b) / 3.0;\\n    float amt = (abs(max - avg) * 2.0) * uVibrance;\\n    color.r += max != color.r ? (max - color.r) * amt : 0.00;\\n    color.g += max != color.g ? (max - color.g) * amt : 0.00;\\n    color.b += max != color.b ? (max - color.b) * amt : 0.00;\\n    gl_FragColor = color;\\n  }\\n\"}applyTo2d(t){let{imageData:{data:e}}=t;const s=-this.vibrance;for(let t=0;t<e.length;t+=4){const i=e[t],r=e[t+1],n=e[t+2],o=Math.max(i,r,n),a=(i+r+n)/3,h=2*Math.abs(o-a)/255*s;e[t]+=o!==i?(o-i)*h:0,e[t+1]+=o!==r?(o-r)*h:0,e[t+2]+=o!==n?(o-n)*h:0}}sendUniformData(t,e){t.uniform1f(e.uVibrance,-this.vibrance)}isNeutralState(){return 0===this.vibrance}}t(gh,\"type\",\"Vibrance\"),t(gh,\"defaults\",{vibrance:0}),t(gh,\"uniformLocations\",[\"uVibrance\"]),tt.setClass(gh);var fh=Object.freeze({__proto__:null,BaseFilter:ja,BlackWhite:Ja,BlendColor:La,BlendImage:Ba,Blur:Xa,Brightness:Ya,Brownie:Ha,ColorMatrix:Va,Composed:Qa,Contrast:Za,Convolute:th,Gamma:sh,Grayscale:rh,HueRotation:oh,Invert:ah,Kodachrome:Na,Noise:hh,Pixelate:ch,Polaroid:qa,RemoveColor:lh,Resize:uh,Saturation:dh,Sepia:Ka,Technicolor:Ua,Vibrance:gh,Vintage:Ga});\n//# sourceMappingURL=index.min.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mYWJyaWMvZGlzdC9pbmRleC5taW4ubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLGtCQUFrQixxQkFBcUIsb0JBQW9CLG1DQUFtQyw0QkFBNEIsZUFBZSw2QkFBNkIsK0JBQStCLG9FQUFvRSxzQ0FBc0MsYUFBYSxnQ0FBZ0Msb0NBQW9DLGtEQUFrRCxXQUFXLGdCQUFnQixxQkFBcUIsaUNBQWlDLHNDQUFzQyw0QkFBNEIsdURBQXVELHNCQUFzQixTQUFTLGNBQWMsWUFBWSxtQkFBbUIsS0FBSyx5Q0FBeUMseUNBQXlDLFlBQVkscUlBQXFJLGdFQUFnRSxHQUFHLFNBQVMsZ0JBQWdCLG9CQUFvQix3QkFBd0Isb0JBQW9CLFNBQVMsb0JBQW9CLDJCQUEyQiw0QkFBNEIsVUFBVSxTQUFTLE1BQU0saUNBQWlDLHNDQUFzQyxRQUFRLFdBQVcsOEJBQThCLDZDQUE2QyxTQUFTLGdCQUFnQixrRUFBa0UsS0FBSyx3QkFBd0IsR0FBRyxRQUFRLGNBQWMsaWFBQWlhLG1DQUFtQyw0QkFBNEIsZUFBZSwwQkFBMEIsWUFBWSxnRUFBZ0Usc0JBQXNCLFdBQVcsZ0VBQWdFLHFCQUFxQixvQkFBb0IsY0FBYyx5RUFBeUUseUJBQXlCLEdBQUcsYUFBYSxrQkFBa0IsbUJBQW1CLGtFQUFrRSxNQUFNLG1CQUFtQixlQUFlLHNEQUFzRCxJQUFJLHdCQUF3QixrQ0FBa0Msc0JBQXNCLGlCQUFpQiwrQkFBK0Isa0JBQWtCLGVBQWUsK0RBQStELFNBQVMsa0JBQWtCLG1CQUFtQixzQ0FBc0MsZUFBZSx1Q0FBdUMsK0ZBQStGLGNBQWMsOEJBQThCLDhQQUE4UCxlQUFlLHFEQUFxRCxXQUFXLE1BQU0sWUFBWSxJQUFJLGNBQWMsNkxBQTZMLGlCQUFpQiw2Q0FBNkMsTUFBTSxxRkFBcUYsa0JBQWtCLGNB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QUFvQixvQkFBb0IsaUNBQWlDLCtCQUErQiw0QkFBNEIsMkJBQTJCLGlCQUFpQixrREFBa0Qsc0RBQXNELHNEQUFzRCxxREFBcUQsK0RBQStELCtEQUErRCwrREFBK0QsMkJBQTJCLEtBQUssSUFBSSxhQUFhLElBQUksV0FBVyxRQUFRLEdBQUcsdUJBQXVCLFlBQVksV0FBVyxNQUFNLHFGQUFxRix1RUFBdUUscUJBQXFCLHdDQUF3QyxpQkFBaUIsMEJBQTBCLHlDQUF5QyxXQUFXLHlEQUF5RCxzQkFBc0IsZ1ZBQWdWLEVBQXF6QztBQUN0bmtUIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFR1c2hhciBiYWphalxcT25lRHJpdmVcXERlc2t0b3BcXGRyYXdpbmdcXG5vZGVfbW9kdWxlc1xcZmFicmljXFxkaXN0XFxpbmRleC5taW4ubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHQodCxlLHMpe3JldHVybihlPWZ1bmN0aW9uKHQpe3ZhciBlPWZ1bmN0aW9uKHQsZSl7aWYoXCJvYmplY3RcIiE9dHlwZW9mIHR8fCF0KXJldHVybiB0O3ZhciBzPXRbU3ltYm9sLnRvUHJpbWl0aXZlXTtpZih2b2lkIDAhPT1zKXt2YXIgaT1zLmNhbGwodCxlfHxcImRlZmF1bHRcIik7aWYoXCJvYmplY3RcIiE9dHlwZW9mIGkpcmV0dXJuIGk7dGhyb3cgbmV3IFR5cGVFcnJvcihcIkBAdG9QcmltaXRpdmUgbXVzdCByZXR1cm4gYSBwcmltaXRpdmUgdmFsdWUuXCIpfXJldHVybihcInN0cmluZ1wiPT09ZT9TdHJpbmc6TnVtYmVyKSh0KX0odCxcInN0cmluZ1wiKTtyZXR1cm5cInN5bWJvbFwiPT10eXBlb2YgZT9lOmUrXCJcIn0oZSkpaW4gdD9PYmplY3QuZGVmaW5lUHJvcGVydHkodCxlLHt2YWx1ZTpzLGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwfSk6dFtlXT1zLHR9ZnVuY3Rpb24gZSh0LGUpe3ZhciBzPU9iamVjdC5rZXlzKHQpO2lmKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpe3ZhciBpPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHModCk7ZSYmKGk9aS5maWx0ZXIoKGZ1bmN0aW9uKGUpe3JldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHQsZSkuZW51bWVyYWJsZX0pKSkscy5wdXNoLmFwcGx5KHMsaSl9cmV0dXJuIHN9ZnVuY3Rpb24gcyhzKXtmb3IodmFyIGk9MTtpPGFyZ3VtZW50cy5sZW5ndGg7aSsrKXt2YXIgcj1udWxsIT1hcmd1bWVudHNbaV0/YXJndW1lbnRzW2ldOnt9O2klMj9lKE9iamVjdChyKSwhMCkuZm9yRWFjaCgoZnVuY3Rpb24oZSl7dChzLGUscltlXSl9KSk6T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnM/T2JqZWN0LmRlZmluZVByb3BlcnRpZXMocyxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhyKSk6ZShPYmplY3QocikpLmZvckVhY2goKGZ1bmN0aW9uKHQpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShzLHQsT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihyLHQpKX0pKX1yZXR1cm4gc31mdW5jdGlvbiBpKHQsZSl7aWYobnVsbD09dClyZXR1cm57fTt2YXIgcyxpLHI9ZnVuY3Rpb24odCxlKXtpZihudWxsPT10KXJldHVybnt9O3ZhciBzPXt9O2Zvcih2YXIgaSBpbiB0KWlmKHt9Lmhhc093blByb3BlcnR5LmNhbGwodCxpKSl7aWYoZS5pbmRleE9mKGkpPj0wKWNvbnRpbnVlO3NbaV09dFtpXX1yZXR1cm4gc30odCxlKTtpZihPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKXt2YXIgbj1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHQpO2ZvcihpPTA7aTxuLmxlbmd0aDtpKyspcz1uW2ldLGUuaW5kZXhPZihzKT49MHx8e30ucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbCh0LHMpJiYocltzXT10W3NdKX1yZXR1cm4gcn1mdW5jdGlvbiByKHQsZSl7cmV0dXJuIGV8fChlPXQuc2xpY2UoMCkpLE9iamVjdC5mcmVlemUoT2JqZWN0LmRlZmluZVByb3BlcnRpZXModCx7cmF3Ont2YWx1ZTpPYmplY3QuZnJlZXplKGUpfX0pKX1jbGFzcyBue2NvbnN0cnVjdG9yKCl7dCh0aGlzLFwiYnJvd3NlclNoYWRvd0JsdXJDb25zdGFudFwiLDEpLHQodGhpcyxcIkRQSVwiLDk2KSx0KHRoaXMsXCJkZXZpY2VQaXhlbFJhdGlvXCIsXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdz93aW5kb3cuZGV2aWNlUGl4ZWxSYXRpbzoxKSx0KHRoaXMsXCJwZXJmTGltaXRTaXplVG90YWxcIiwyMDk3MTUyKSx0KHRoaXMsXCJtYXhDYWNoZVNpZGVMaW1pdFwiLDQwOTYpLHQodGhpcyxcIm1pbkNhY2hlU2lkZUxpbWl0XCIsMjU2KSx0KHRoaXMsXCJkaXNhYmxlU3R5bGVDb3B5UGFzdGVcIiwhMSksdCh0aGlzLFwiZW5hYmxlR0xGaWx0ZXJpbmdcIiwhMCksdCh0aGlzLFwidGV4dHVyZVNpemVcIiw0MDk2KSx0KHRoaXMsXCJmb3JjZUdMUHV0SW1hZ2VEYXRhXCIsITEpLHQodGhpcyxcImNhY2hlc0JvdW5kc09mQ3VydmVcIiwhMSksdCh0aGlzLFwiZm9udFBhdGhzXCIse30pLHQodGhpcyxcIk5VTV9GUkFDVElPTl9ESUdJVFNcIiw0KX19Y29uc3Qgbz1uZXcgY2xhc3MgZXh0ZW5kcyBue2NvbnN0cnVjdG9yKHQpe3N1cGVyKCksdGhpcy5jb25maWd1cmUodCl9Y29uZmlndXJlKCl7bGV0IHQ9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9O09iamVjdC5hc3NpZ24odGhpcyx0KX1hZGRGb250cygpe2xldCB0PWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fTt0aGlzLmZvbnRQYXRocz1zKHMoe30sdGhpcy5mb250UGF0aHMpLHQpfXJlbW92ZUZvbnRzKCl7KGFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTpbXSkuZm9yRWFjaCgodD0+e2RlbGV0ZSB0aGlzLmZvbnRQYXRoc1t0XX0pKX1jbGVhckZvbnRzKCl7dGhpcy5mb250UGF0aHM9e319cmVzdG9yZURlZmF1bHRzKHQpe2NvbnN0IGU9bmV3IG4scz0obnVsbD09dD92b2lkIDA6dC5yZWR1Y2UoKCh0LHMpPT4odFtzXT1lW3NdLHQpKSx7fSkpfHxlO3RoaXMuY29uZmlndXJlKHMpfX0sYT1mdW5jdGlvbih0KXtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aCxzPW5ldyBBcnJheShlPjE/ZS0xOjApLGk9MTtpPGU7aSsrKXNbaS0xXT1hcmd1bWVudHNbaV07cmV0dXJuIGNvbnNvbGVbdF0oXCJmYWJyaWNcIiwuLi5zKX07Y2xhc3MgaCBleHRlbmRzIEVycm9ye2NvbnN0cnVjdG9yKHQsZSl7c3VwZXIoXCJmYWJyaWM6IFwiLmNvbmNhdCh0KSxlKX19Y2xhc3MgYyBleHRlbmRzIGh7Y29uc3RydWN0b3IodCl7c3VwZXIoXCJcIi5jb25jYXQodCxcIiAnb3B0aW9ucy5zaWduYWwnIGlzIGluICdhYm9ydGVkJyBzdGF0ZVwiKSl9fWNsYXNzIGx7fWNsYXNzIHUgZXh0ZW5kcyBse3Rlc3RQcmVjaXNpb24odCxlKXtjb25zdCBzPVwicHJlY2lzaW9uIFwiLmNvbmNhdChlLFwiIGZsb2F0O1xcbnZvaWQgbWFpbigpe31cIiksaT10LmNyZWF0ZVNoYWRlcih0LkZSQUdNRU5UX1NIQURFUik7cmV0dXJuISFpJiYodC5zaGFkZXJTb3VyY2UoaSxzKSx0LmNvbXBpbGVTaGFkZXIoaSksISF0LmdldFNoYWRlclBhcmFtZXRlcihpLHQuQ09NUElMRV9TVEFUVVMpKX1xdWVyeVdlYkdMKHQpe2NvbnN0IGU9dC5nZXRDb250ZXh0KFwid2ViZ2xcIik7ZSYmKHRoaXMubWF4VGV4dHVyZVNpemU9ZS5nZXRQYXJhbWV0ZXIoZS5NQVhfVEVYVFVSRV9TSVpFKSx0aGlzLkdMUHJlY2lzaW9uPVtcImhpZ2hwXCIsXCJtZWRpdW1wXCIsXCJsb3dwXCJdLmZpbmQoKHQ9PnRoaXMudGVzdFByZWNpc2lvbihlLHQpKSksZS5nZXRFeHRlbnNpb24oXCJXRUJHTF9sb3NlX2NvbnRleHRcIikubG9zZUNvbnRleHQoKSxhKFwibG9nXCIsXCJXZWJHTDogbWF4IHRleHR1cmUgc2l6ZSBcIi5jb25jYXQodGhpcy5tYXhUZXh0dXJlU2l6ZSkpKX1pc1N1cHBvcnRlZCh0KXtyZXR1cm4hIXRoaXMubWF4VGV4dHVyZVNpemUmJnRoaXMubWF4VGV4dHVyZVNpemU+PXR9fWNvbnN0IGQ9e307bGV0IGc7Y29uc3QgZj10PT57Zz10fSxwPSgpPT5nfHwoZz17ZG9jdW1lbnQ6ZG9jdW1lbnQsd2luZG93OndpbmRvdyxpc1RvdWNoU3VwcG9ydGVkOlwib250b3VjaHN0YXJ0XCJpbiB3aW5kb3d8fFwib250b3VjaHN0YXJ0XCJpbiBkb2N1bWVudHx8d2luZG93JiZ3aW5kb3cubmF2aWdhdG9yJiZ3aW5kb3cubmF2aWdhdG9yLm1heFRvdWNoUG9pbnRzPjAsV2ViR0xQcm9iZTpuZXcgdSxkaXNwb3NlKCl7fSxjb3B5UGFzdGVEYXRhOmR9KSxtPSgpPT5wKCkuZG9jdW1lbnQsdj0oKT0+cCgpLndpbmRvdyx5PSgpPT57dmFyIHQ7cmV0dXJuIE1hdGgubWF4KG51bGwhPT0odD1vLmRldmljZVBpeGVsUmF0aW8pJiZ2b2lkIDAhPT10P3Q6digpLmRldmljZVBpeGVsUmF0aW8sMSl9O2NvbnN0IF89bmV3IGNsYXNze2NvbnN0cnVjdG9yKCl7dCh0aGlzLFwiY2hhcldpZHRoc0NhY2hlXCIse30pLHQodGhpcyxcImJvdW5kc09mQ3VydmVDYWNoZVwiLHt9KX1nZXRGb250Q2FjaGUodCl7bGV0e2ZvbnRGYW1pbHk6ZSxmb250U3R5bGU6cyxmb250V2VpZ2h0Oml9PXQ7ZT1lLnRvTG93ZXJDYXNlKCksdGhpcy5jaGFyV2lkdGhzQ2FjaGVbZV18fCh0aGlzLmNoYXJXaWR0aHNDYWNoZVtlXT17fSk7Y29uc3Qgcj10aGlzLmNoYXJXaWR0aHNDYWNoZVtlXSxuPVwiXCIuY29uY2F0KHMudG9Mb3dlckNhc2UoKSxcIl9cIikuY29uY2F0KChpK1wiXCIpLnRvTG93ZXJDYXNlKCkpO3JldHVybiByW25dfHwocltuXT17fSkscltuXX1jbGVhckZvbnRDYWNoZSh0KXsodD0odHx8XCJcIikudG9Mb3dlckNhc2UoKSk/dGhpcy5jaGFyV2lkdGhzQ2FjaGVbdF0mJmRlbGV0ZSB0aGlzLmNoYXJXaWR0aHNDYWNoZVt0XTp0aGlzLmNoYXJXaWR0aHNDYWNoZT17fX1saW1pdERpbXNCeUFyZWEodCl7Y29uc3R7cGVyZkxpbWl0U2l6ZVRvdGFsOmV9PW8scz1NYXRoLnNxcnQoZSp0KTtyZXR1cm5bTWF0aC5mbG9vcihzKSxNYXRoLmZsb29yKGUvcyldfX07Y29uc3QgeD1cIjYuNS40XCI7ZnVuY3Rpb24gQygpe31jb25zdCBiPU1hdGguUEkvMix3PTIqTWF0aC5QSSxTPU1hdGguUEkvMTgwLFQ9T2JqZWN0LmZyZWV6ZShbMSwwLDAsMSwwLDBdKSxPPTE2LGs9LjQ0NzcxNTI1MDIsRD1cImNlbnRlclwiLE09XCJsZWZ0XCIsUD1cInRvcFwiLEU9XCJib3R0b21cIixBPVwicmlnaHRcIixqPVwibm9uZVwiLEY9L1xccj9cXG4vLEw9XCJtb3ZpbmdcIixSPVwic2NhbGluZ1wiLEk9XCJyb3RhdGluZ1wiLEI9XCJyb3RhdGVcIixYPVwic2tld2luZ1wiLFk9XCJyZXNpemluZ1wiLFc9XCJtb2RpZnlQb2x5XCIsVj1cIm1vZGlmeVBhdGhcIix6PVwiY2hhbmdlZFwiLEg9XCJzY2FsZVwiLEc9XCJzY2FsZVhcIixOPVwic2NhbGVZXCIsVT1cInNrZXdYXCIscT1cInNrZXdZXCIsSz1cImZpbGxcIixKPVwic3Ryb2tlXCIsUT1cIm1vZGlmaWVkXCIsWj1cImpzb25cIiwkPVwic3ZnXCI7Y29uc3QgdHQ9bmV3IGNsYXNze2NvbnN0cnVjdG9yKCl7dGhpc1taXT1uZXcgTWFwLHRoaXNbJF09bmV3IE1hcH1oYXModCl7cmV0dXJuIHRoaXNbWl0uaGFzKHQpfWdldENsYXNzKHQpe2NvbnN0IGU9dGhpc1taXS5nZXQodCk7aWYoIWUpdGhyb3cgbmV3IGgoXCJObyBjbGFzcyByZWdpc3RlcmVkIGZvciBcIi5jb25jYXQodCkpO3JldHVybiBlfXNldENsYXNzKHQsZSl7ZT90aGlzW1pdLnNldChlLHQpOih0aGlzW1pdLnNldCh0LnR5cGUsdCksdGhpc1taXS5zZXQodC50eXBlLnRvTG93ZXJDYXNlKCksdCkpfWdldFNWR0NsYXNzKHQpe3JldHVybiB0aGlzWyRdLmdldCh0KX1zZXRTVkdDbGFzcyh0LGUpe3RoaXNbJF0uc2V0KG51bGwhPWU/ZTp0LnR5cGUudG9Mb3dlckNhc2UoKSx0KX19O2NvbnN0IGV0PW5ldyBjbGFzcyBleHRlbmRzIEFycmF5e3JlbW92ZSh0KXtjb25zdCBlPXRoaXMuaW5kZXhPZih0KTtlPi0xJiZ0aGlzLnNwbGljZShlLDEpfWNhbmNlbEFsbCgpe2NvbnN0IHQ9dGhpcy5zcGxpY2UoMCk7cmV0dXJuIHQuZm9yRWFjaCgodD0+dC5hYm9ydCgpKSksdH1jYW5jZWxCeUNhbnZhcyh0KXtpZighdClyZXR1cm5bXTtjb25zdCBlPXRoaXMuZmlsdGVyKChlPT57dmFyIHM7cmV0dXJuIGUudGFyZ2V0PT09dHx8XCJvYmplY3RcIj09dHlwZW9mIGUudGFyZ2V0JiYobnVsbD09PShzPWUudGFyZ2V0KXx8dm9pZCAwPT09cz92b2lkIDA6cy5jYW52YXMpPT09dH0pKTtyZXR1cm4gZS5mb3JFYWNoKCh0PT50LmFib3J0KCkpKSxlfWNhbmNlbEJ5VGFyZ2V0KHQpe2lmKCF0KXJldHVybltdO2NvbnN0IGU9dGhpcy5maWx0ZXIoKGU9PmUudGFyZ2V0PT09dCkpO3JldHVybiBlLmZvckVhY2goKHQ9PnQuYWJvcnQoKSkpLGV9fTtjbGFzcyBzdHtjb25zdHJ1Y3Rvcigpe3QodGhpcyxcIl9fZXZlbnRMaXN0ZW5lcnNcIix7fSl9b24odCxlKXtpZih0aGlzLl9fZXZlbnRMaXN0ZW5lcnN8fCh0aGlzLl9fZXZlbnRMaXN0ZW5lcnM9e30pLFwib2JqZWN0XCI9PXR5cGVvZiB0KXJldHVybiBPYmplY3QuZW50cmllcyh0KS5mb3JFYWNoKCh0PT57bGV0W2Usc109dDt0aGlzLm9uKGUscyl9KSksKCk9PnRoaXMub2ZmKHQpO2lmKGUpe2NvbnN0IHM9dDtyZXR1cm4gdGhpcy5fX2V2ZW50TGlzdGVuZXJzW3NdfHwodGhpcy5fX2V2ZW50TGlzdGVuZXJzW3NdPVtdKSx0aGlzLl9fZXZlbnRMaXN0ZW5lcnNbc10ucHVzaChlKSwoKT0+dGhpcy5vZmYocyxlKX1yZXR1cm4oKT0+ITF9b25jZSh0LGUpe2lmKFwib2JqZWN0XCI9PXR5cGVvZiB0KXtjb25zdCBlPVtdO3JldHVybiBPYmplY3QuZW50cmllcyh0KS5mb3JFYWNoKCh0PT57bGV0W3MsaV09dDtlLnB1c2godGhpcy5vbmNlKHMsaSkpfSkpLCgpPT5lLmZvckVhY2goKHQ9PnQoKSkpfWlmKGUpe2NvbnN0IHM9dGhpcy5vbih0LChmdW5jdGlvbigpe2Zvcih2YXIgdD1hcmd1bWVudHMubGVuZ3RoLGk9bmV3IEFycmF5KHQpLHI9MDtyPHQ7cisrKWlbcl09YXJndW1lbnRzW3JdO2UuY2FsbCh0aGlzLC4uLmkpLHMoKX0pKTtyZXR1cm4gc31yZXR1cm4oKT0+ITF9X3JlbW92ZUV2ZW50TGlzdGVuZXIodCxlKXtpZih0aGlzLl9fZXZlbnRMaXN0ZW5lcnNbdF0paWYoZSl7Y29uc3Qgcz10aGlzLl9fZXZlbnRMaXN0ZW5lcnNbdF0saT1zLmluZGV4T2YoZSk7aT4tMSYmcy5zcGxpY2UoaSwxKX1lbHNlIHRoaXMuX19ldmVudExpc3RlbmVyc1t0XT1bXX1vZmYodCxlKXtpZih0aGlzLl9fZXZlbnRMaXN0ZW5lcnMpaWYodm9pZCAwPT09dClmb3IoY29uc3QgdCBpbiB0aGlzLl9fZXZlbnRMaXN0ZW5lcnMpdGhpcy5fcmVtb3ZlRXZlbnRMaXN0ZW5lcih0KTtlbHNlXCJvYmplY3RcIj09dHlwZW9mIHQ/T2JqZWN0LmVudHJpZXModCkuZm9yRWFjaCgodD0+e2xldFtlLHNdPXQ7dGhpcy5fcmVtb3ZlRXZlbnRMaXN0ZW5lcihlLHMpfSkpOnRoaXMuX3JlbW92ZUV2ZW50TGlzdGVuZXIodCxlKX1maXJlKHQsZSl7dmFyIHM7aWYoIXRoaXMuX19ldmVudExpc3RlbmVycylyZXR1cm47Y29uc3QgaT1udWxsPT09KHM9dGhpcy5fX2V2ZW50TGlzdGVuZXJzW3RdKXx8dm9pZCAwPT09cz92b2lkIDA6cy5jb25jYXQoKTtpZihpKWZvcihsZXQgdD0wO3Q8aS5sZW5ndGg7dCsrKWlbdF0uY2FsbCh0aGlzLGV8fHt9KX19Y29uc3QgaXQ9KHQsZSk9Pntjb25zdCBzPXQuaW5kZXhPZihlKTtyZXR1cm4tMSE9PXMmJnQuc3BsaWNlKHMsMSksdH0scnQ9dD0+e2lmKDA9PT10KXJldHVybiAxO3N3aXRjaChNYXRoLmFicyh0KS9iKXtjYXNlIDE6Y2FzZSAzOnJldHVybiAwO2Nhc2UgMjpyZXR1cm4tMX1yZXR1cm4gTWF0aC5jb3ModCl9LG50PXQ9PntpZigwPT09dClyZXR1cm4gMDtjb25zdCBlPXQvYixzPU1hdGguc2lnbih0KTtzd2l0Y2goZSl7Y2FzZSAxOnJldHVybiBzO2Nhc2UgMjpyZXR1cm4gMDtjYXNlIDM6cmV0dXJuLXN9cmV0dXJuIE1hdGguc2luKHQpfTtjbGFzcyBvdHtjb25zdHJ1Y3Rvcigpe2xldCB0PWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTowLGU9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOjA7XCJvYmplY3RcIj09dHlwZW9mIHQ/KHRoaXMueD10LngsdGhpcy55PXQueSk6KHRoaXMueD10LHRoaXMueT1lKX1hZGQodCl7cmV0dXJuIG5ldyBvdCh0aGlzLngrdC54LHRoaXMueSt0LnkpfWFkZEVxdWFscyh0KXtyZXR1cm4gdGhpcy54Kz10LngsdGhpcy55Kz10LnksdGhpc31zY2FsYXJBZGQodCl7cmV0dXJuIG5ldyBvdCh0aGlzLngrdCx0aGlzLnkrdCl9c2NhbGFyQWRkRXF1YWxzKHQpe3JldHVybiB0aGlzLngrPXQsdGhpcy55Kz10LHRoaXN9c3VidHJhY3QodCl7cmV0dXJuIG5ldyBvdCh0aGlzLngtdC54LHRoaXMueS10LnkpfXN1YnRyYWN0RXF1YWxzKHQpe3JldHVybiB0aGlzLngtPXQueCx0aGlzLnktPXQueSx0aGlzfXNjYWxhclN1YnRyYWN0KHQpe3JldHVybiBuZXcgb3QodGhpcy54LXQsdGhpcy55LXQpfXNjYWxhclN1YnRyYWN0RXF1YWxzKHQpe3JldHVybiB0aGlzLngtPXQsdGhpcy55LT10LHRoaXN9bXVsdGlwbHkodCl7cmV0dXJuIG5ldyBvdCh0aGlzLngqdC54LHRoaXMueSp0LnkpfXNjYWxhck11bHRpcGx5KHQpe3JldHVybiBuZXcgb3QodGhpcy54KnQsdGhpcy55KnQpfXNjYWxhck11bHRpcGx5RXF1YWxzKHQpe3JldHVybiB0aGlzLngqPXQsdGhpcy55Kj10LHRoaXN9ZGl2aWRlKHQpe3JldHVybiBuZXcgb3QodGhpcy54L3QueCx0aGlzLnkvdC55KX1zY2FsYXJEaXZpZGUodCl7cmV0dXJuIG5ldyBvdCh0aGlzLngvdCx0aGlzLnkvdCl9c2NhbGFyRGl2aWRlRXF1YWxzKHQpe3JldHVybiB0aGlzLngvPXQsdGhpcy55Lz10LHRoaXN9ZXEodCl7cmV0dXJuIHRoaXMueD09PXQueCYmdGhpcy55PT09dC55fWx0KHQpe3JldHVybiB0aGlzLng8dC54JiZ0aGlzLnk8dC55fWx0ZSh0KXtyZXR1cm4gdGhpcy54PD10LngmJnRoaXMueTw9dC55fWd0KHQpe3JldHVybiB0aGlzLng+dC54JiZ0aGlzLnk+dC55fWd0ZSh0KXtyZXR1cm4gdGhpcy54Pj10LngmJnRoaXMueT49dC55fWxlcnAodCl7bGV0IGU9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOi41O3JldHVybiBlPU1hdGgubWF4KE1hdGgubWluKDEsZSksMCksbmV3IG90KHRoaXMueCsodC54LXRoaXMueCkqZSx0aGlzLnkrKHQueS10aGlzLnkpKmUpfWRpc3RhbmNlRnJvbSh0KXtjb25zdCBlPXRoaXMueC10Lngscz10aGlzLnktdC55O3JldHVybiBNYXRoLnNxcnQoZSplK3Mqcyl9bWlkUG9pbnRGcm9tKHQpe3JldHVybiB0aGlzLmxlcnAodCl9bWluKHQpe3JldHVybiBuZXcgb3QoTWF0aC5taW4odGhpcy54LHQueCksTWF0aC5taW4odGhpcy55LHQueSkpfW1heCh0KXtyZXR1cm4gbmV3IG90KE1hdGgubWF4KHRoaXMueCx0LngpLE1hdGgubWF4KHRoaXMueSx0LnkpKX10b1N0cmluZygpe3JldHVyblwiXCIuY29uY2F0KHRoaXMueCxcIixcIikuY29uY2F0KHRoaXMueSl9c2V0WFkodCxlKXtyZXR1cm4gdGhpcy54PXQsdGhpcy55PWUsdGhpc31zZXRYKHQpe3JldHVybiB0aGlzLng9dCx0aGlzfXNldFkodCl7cmV0dXJuIHRoaXMueT10LHRoaXN9c2V0RnJvbVBvaW50KHQpe3JldHVybiB0aGlzLng9dC54LHRoaXMueT10LnksdGhpc31zd2FwKHQpe2NvbnN0IGU9dGhpcy54LHM9dGhpcy55O3RoaXMueD10LngsdGhpcy55PXQueSx0Lng9ZSx0Lnk9c31jbG9uZSgpe3JldHVybiBuZXcgb3QodGhpcy54LHRoaXMueSl9cm90YXRlKHQpe2xldCBlPWFyZ3VtZW50cy5sZW5ndGg+MSYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXTphdDtjb25zdCBzPW50KHQpLGk9cnQodCkscj10aGlzLnN1YnRyYWN0KGUpO3JldHVybiBuZXcgb3Qoci54Kmktci55KnMsci54KnMrci55KmkpLmFkZChlKX10cmFuc2Zvcm0odCl7bGV0IGU9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0mJmFyZ3VtZW50c1sxXTtyZXR1cm4gbmV3IG90KHRbMF0qdGhpcy54K3RbMl0qdGhpcy55KyhlPzA6dFs0XSksdFsxXSp0aGlzLngrdFszXSp0aGlzLnkrKGU/MDp0WzVdKSl9fWNvbnN0IGF0PW5ldyBvdCgwLDApLGh0PXQ9PiEhdCYmQXJyYXkuaXNBcnJheSh0Ll9vYmplY3RzKTtmdW5jdGlvbiBjdChlKXtjbGFzcyBzIGV4dGVuZHMgZXtjb25zdHJ1Y3Rvcigpe3N1cGVyKC4uLmFyZ3VtZW50cyksdCh0aGlzLFwiX29iamVjdHNcIixbXSl9X29uT2JqZWN0QWRkZWQodCl7fV9vbk9iamVjdFJlbW92ZWQodCl7fV9vblN0YWNrT3JkZXJDaGFuZ2VkKHQpe31hZGQoKXtmb3IodmFyIHQ9YXJndW1lbnRzLmxlbmd0aCxlPW5ldyBBcnJheSh0KSxzPTA7czx0O3MrKyllW3NdPWFyZ3VtZW50c1tzXTtjb25zdCBpPXRoaXMuX29iamVjdHMucHVzaCguLi5lKTtyZXR1cm4gZS5mb3JFYWNoKCh0PT50aGlzLl9vbk9iamVjdEFkZGVkKHQpKSksaX1pbnNlcnRBdCh0KXtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aCxzPW5ldyBBcnJheShlPjE/ZS0xOjApLGk9MTtpPGU7aSsrKXNbaS0xXT1hcmd1bWVudHNbaV07cmV0dXJuIHRoaXMuX29iamVjdHMuc3BsaWNlKHQsMCwuLi5zKSxzLmZvckVhY2goKHQ9PnRoaXMuX29uT2JqZWN0QWRkZWQodCkpKSx0aGlzLl9vYmplY3RzLmxlbmd0aH1yZW1vdmUoKXtjb25zdCB0PXRoaXMuX29iamVjdHMsZT1bXTtmb3IodmFyIHM9YXJndW1lbnRzLmxlbmd0aCxpPW5ldyBBcnJheShzKSxyPTA7cjxzO3IrKylpW3JdPWFyZ3VtZW50c1tyXTtyZXR1cm4gaS5mb3JFYWNoKChzPT57Y29uc3QgaT10LmluZGV4T2Yocyk7LTEhPT1pJiYodC5zcGxpY2UoaSwxKSxlLnB1c2gocyksdGhpcy5fb25PYmplY3RSZW1vdmVkKHMpKX0pKSxlfWZvckVhY2hPYmplY3QodCl7dGhpcy5nZXRPYmplY3RzKCkuZm9yRWFjaCgoKGUscyxpKT0+dChlLHMsaSkpKX1nZXRPYmplY3RzKCl7Zm9yKHZhciB0PWFyZ3VtZW50cy5sZW5ndGgsZT1uZXcgQXJyYXkodCkscz0wO3M8dDtzKyspZVtzXT1hcmd1bWVudHNbc107cmV0dXJuIDA9PT1lLmxlbmd0aD9bLi4udGhpcy5fb2JqZWN0c106dGhpcy5fb2JqZWN0cy5maWx0ZXIoKHQ9PnQuaXNUeXBlKC4uLmUpKSl9aXRlbSh0KXtyZXR1cm4gdGhpcy5fb2JqZWN0c1t0XX1pc0VtcHR5KCl7cmV0dXJuIDA9PT10aGlzLl9vYmplY3RzLmxlbmd0aH1zaXplKCl7cmV0dXJuIHRoaXMuX29iamVjdHMubGVuZ3RofWNvbnRhaW5zKHQsZSl7cmV0dXJuISF0aGlzLl9vYmplY3RzLmluY2x1ZGVzKHQpfHwhIWUmJnRoaXMuX29iamVjdHMuc29tZSgoZT0+ZSBpbnN0YW5jZW9mIHMmJmUuY29udGFpbnModCwhMCkpKX1jb21wbGV4aXR5KCl7cmV0dXJuIHRoaXMuX29iamVjdHMucmVkdWNlKCgodCxlKT0+dCs9ZS5jb21wbGV4aXR5P2UuY29tcGxleGl0eSgpOjApLDApfXNlbmRPYmplY3RUb0JhY2sodCl7cmV0dXJuISghdHx8dD09PXRoaXMuX29iamVjdHNbMF0pJiYoaXQodGhpcy5fb2JqZWN0cyx0KSx0aGlzLl9vYmplY3RzLnVuc2hpZnQodCksdGhpcy5fb25TdGFja09yZGVyQ2hhbmdlZCh0KSwhMCl9YnJpbmdPYmplY3RUb0Zyb250KHQpe3JldHVybiEoIXR8fHQ9PT10aGlzLl9vYmplY3RzW3RoaXMuX29iamVjdHMubGVuZ3RoLTFdKSYmKGl0KHRoaXMuX29iamVjdHMsdCksdGhpcy5fb2JqZWN0cy5wdXNoKHQpLHRoaXMuX29uU3RhY2tPcmRlckNoYW5nZWQodCksITApfXNlbmRPYmplY3RCYWNrd2FyZHModCxlKXtpZighdClyZXR1cm4hMTtjb25zdCBzPXRoaXMuX29iamVjdHMuaW5kZXhPZih0KTtpZigwIT09cyl7Y29uc3QgaT10aGlzLmZpbmROZXdMb3dlckluZGV4KHQscyxlKTtyZXR1cm4gaXQodGhpcy5fb2JqZWN0cyx0KSx0aGlzLl9vYmplY3RzLnNwbGljZShpLDAsdCksdGhpcy5fb25TdGFja09yZGVyQ2hhbmdlZCh0KSwhMH1yZXR1cm4hMX1icmluZ09iamVjdEZvcndhcmQodCxlKXtpZighdClyZXR1cm4hMTtjb25zdCBzPXRoaXMuX29iamVjdHMuaW5kZXhPZih0KTtpZihzIT09dGhpcy5fb2JqZWN0cy5sZW5ndGgtMSl7Y29uc3QgaT10aGlzLmZpbmROZXdVcHBlckluZGV4KHQscyxlKTtyZXR1cm4gaXQodGhpcy5fb2JqZWN0cyx0KSx0aGlzLl9vYmplY3RzLnNwbGljZShpLDAsdCksdGhpcy5fb25TdGFja09yZGVyQ2hhbmdlZCh0KSwhMH1yZXR1cm4hMX1tb3ZlT2JqZWN0VG8odCxlKXtyZXR1cm4gdCE9PXRoaXMuX29iamVjdHNbZV0mJihpdCh0aGlzLl9vYmplY3RzLHQpLHRoaXMuX29iamVjdHMuc3BsaWNlKGUsMCx0KSx0aGlzLl9vblN0YWNrT3JkZXJDaGFuZ2VkKHQpLCEwKX1maW5kTmV3TG93ZXJJbmRleCh0LGUscyl7bGV0IGk7aWYocyl7aT1lO2ZvcihsZXQgcz1lLTE7cz49MDstLXMpaWYodC5pc092ZXJsYXBwaW5nKHRoaXMuX29iamVjdHNbc10pKXtpPXM7YnJlYWt9fWVsc2UgaT1lLTE7cmV0dXJuIGl9ZmluZE5ld1VwcGVySW5kZXgodCxlLHMpe2xldCBpO2lmKHMpe2k9ZTtmb3IobGV0IHM9ZSsxO3M8dGhpcy5fb2JqZWN0cy5sZW5ndGg7KytzKWlmKHQuaXNPdmVybGFwcGluZyh0aGlzLl9vYmplY3RzW3NdKSl7aT1zO2JyZWFrfX1lbHNlIGk9ZSsxO3JldHVybiBpfWNvbGxlY3RPYmplY3RzKHQpe2xldHtsZWZ0OmUsdG9wOnMsd2lkdGg6aSxoZWlnaHQ6cn09dCx7aW5jbHVkZUludGVyc2VjdGluZzpuPSEwfT1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06e307Y29uc3Qgbz1bXSxhPW5ldyBvdChlLHMpLGg9YS5hZGQobmV3IG90KGkscikpO2ZvcihsZXQgdD10aGlzLl9vYmplY3RzLmxlbmd0aC0xO3Q+PTA7dC0tKXtjb25zdCBlPXRoaXMuX29iamVjdHNbdF07ZS5zZWxlY3RhYmxlJiZlLnZpc2libGUmJihuJiZlLmludGVyc2VjdHNXaXRoUmVjdChhLGgpfHxlLmlzQ29udGFpbmVkV2l0aGluUmVjdChhLGgpfHxuJiZlLmNvbnRhaW5zUG9pbnQoYSl8fG4mJmUuY29udGFpbnNQb2ludChoKSkmJm8ucHVzaChlKX1yZXR1cm4gb319cmV0dXJuIHN9Y2xhc3MgbHQgZXh0ZW5kcyBzdHtfc2V0T3B0aW9ucygpe2xldCB0PWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fTtmb3IoY29uc3QgZSBpbiB0KXRoaXMuc2V0KGUsdFtlXSl9X3NldE9iamVjdCh0KXtmb3IoY29uc3QgZSBpbiB0KXRoaXMuX3NldChlLHRbZV0pfXNldCh0LGUpe3JldHVyblwib2JqZWN0XCI9PXR5cGVvZiB0P3RoaXMuX3NldE9iamVjdCh0KTp0aGlzLl9zZXQodCxlKSx0aGlzfV9zZXQodCxlKXt0aGlzW3RdPWV9dG9nZ2xlKHQpe2NvbnN0IGU9dGhpcy5nZXQodCk7cmV0dXJuXCJib29sZWFuXCI9PXR5cGVvZiBlJiZ0aGlzLnNldCh0LCFlKSx0aGlzfWdldCh0KXtyZXR1cm4gdGhpc1t0XX19ZnVuY3Rpb24gdXQodCl7cmV0dXJuIHYoKS5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUodCl9ZnVuY3Rpb24gZHQodCl7cmV0dXJuIHYoKS5jYW5jZWxBbmltYXRpb25GcmFtZSh0KX1sZXQgZ3Q9MDtjb25zdCBmdD0oKT0+Z3QrKyxwdD0oKT0+e2NvbnN0IHQ9bSgpLmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIik7aWYoIXR8fHZvaWQgMD09PXQuZ2V0Q29udGV4dCl0aHJvdyBuZXcgaChcIkZhaWxlZCB0byBjcmVhdGUgYGNhbnZhc2AgZWxlbWVudFwiKTtyZXR1cm4gdH0sbXQ9KCk9Pm0oKS5jcmVhdGVFbGVtZW50KFwiaW1nXCIpLHZ0PXQ9Pntjb25zdCBlPXB0KCk7cmV0dXJuIGUud2lkdGg9dC53aWR0aCxlLmhlaWdodD10LmhlaWdodCxlfSx5dD0odCxlLHMpPT50LnRvRGF0YVVSTChcImltYWdlL1wiLmNvbmNhdChlKSxzKSxfdD10PT50KlMseHQ9dD0+dC9TLEN0PXQ9PnQuZXZlcnkoKCh0LGUpPT50PT09VFtlXSkpLGJ0PSh0LGUscyk9Pm5ldyBvdCh0KS50cmFuc2Zvcm0oZSxzKSx3dD10PT57Y29uc3QgZT0xLyh0WzBdKnRbM10tdFsxXSp0WzJdKSxzPVtlKnRbM10sLWUqdFsxXSwtZSp0WzJdLGUqdFswXSwwLDBdLHt4OmkseTpyfT1uZXcgb3QodFs0XSx0WzVdKS50cmFuc2Zvcm0ocywhMCk7cmV0dXJuIHNbNF09LWksc1s1XT0tcixzfSxTdD0odCxlLHMpPT5bdFswXSplWzBdK3RbMl0qZVsxXSx0WzFdKmVbMF0rdFszXSplWzFdLHRbMF0qZVsyXSt0WzJdKmVbM10sdFsxXSplWzJdK3RbM10qZVszXSxzPzA6dFswXSplWzRdK3RbMl0qZVs1XSt0WzRdLHM/MDp0WzFdKmVbNF0rdFszXSplWzVdK3RbNV1dLFR0PSh0LGUpPT50LnJlZHVjZVJpZ2h0KCgodCxzKT0+cyYmdD9TdChzLHQsZSk6c3x8dCksdm9pZCAwKXx8VC5jb25jYXQoKSxPdD10PT57bGV0W2Usc109dDtyZXR1cm4gTWF0aC5hdGFuMihzLGUpfSxrdD10PT57Y29uc3QgZT1PdCh0KSxzPU1hdGgucG93KHRbMF0sMikrTWF0aC5wb3codFsxXSwyKSxpPU1hdGguc3FydChzKSxyPSh0WzBdKnRbM10tdFsyXSp0WzFdKS9pLG49TWF0aC5hdGFuMih0WzBdKnRbMl0rdFsxXSp0WzNdLHMpO3JldHVybnthbmdsZTp4dChlKSxzY2FsZVg6aSxzY2FsZVk6cixza2V3WDp4dChuKSxza2V3WTowLHRyYW5zbGF0ZVg6dFs0XXx8MCx0cmFuc2xhdGVZOnRbNV18fDB9fSxEdD1mdW5jdGlvbih0KXtyZXR1cm5bMSwwLDAsMSx0LGFyZ3VtZW50cy5sZW5ndGg+MSYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXTowXX07ZnVuY3Rpb24gTXQoKXtsZXR7YW5nbGU6dD0wfT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30se3g6ZT0wLHk6cz0wfT1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06e307Y29uc3QgaT1fdCh0KSxyPXJ0KGkpLG49bnQoaSk7cmV0dXJuW3IsbiwtbixyLGU/ZS0ociplLW4qcyk6MCxzP3MtKG4qZStyKnMpOjBdfWNvbnN0IFB0PWZ1bmN0aW9uKHQpe3JldHVyblt0LDAsMCxhcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06dCwwLDBdfSxFdD10PT5NYXRoLnRhbihfdCh0KSksQXQ9dD0+WzEsMCxFdCh0KSwxLDAsMF0sanQ9dD0+WzEsRXQodCksMCwxLDAsMF0sRnQ9dD0+e2xldHtzY2FsZVg6ZT0xLHNjYWxlWTpzPTEsZmxpcFg6aT0hMSxmbGlwWTpyPSExLHNrZXdYOm49MCxza2V3WTpvPTB9PXQsYT1QdChpPy1lOmUscj8tczpzKTtyZXR1cm4gbiYmKGE9U3QoYSxBdChuKSwhMCkpLG8mJihhPVN0KGEsanQobyksITApKSxhfSxMdD10PT57Y29uc3R7dHJhbnNsYXRlWDplPTAsdHJhbnNsYXRlWTpzPTAsYW5nbGU6aT0wfT10O2xldCByPUR0KGUscyk7aSYmKHI9U3QocixNdCh7YW5nbGU6aX0pKSk7Y29uc3Qgbj1GdCh0KTtyZXR1cm4gQ3Qobil8fChyPVN0KHIsbikpLHJ9LFJ0PWZ1bmN0aW9uKHQpe2xldHtzaWduYWw6ZSxjcm9zc09yaWdpbjpzPW51bGx9PWFyZ3VtZW50cy5sZW5ndGg+MSYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXTp7fTtyZXR1cm4gbmV3IFByb21pc2UoKGZ1bmN0aW9uKGkscil7aWYoZSYmZS5hYm9ydGVkKXJldHVybiByKG5ldyBjKFwibG9hZEltYWdlXCIpKTtjb25zdCBuPW10KCk7bGV0IG87ZSYmKG89ZnVuY3Rpb24odCl7bi5zcmM9XCJcIixyKHQpfSxlLmFkZEV2ZW50TGlzdGVuZXIoXCJhYm9ydFwiLG8se29uY2U6ITB9KSk7Y29uc3QgYT1mdW5jdGlvbigpe24ub25sb2FkPW4ub25lcnJvcj1udWxsLG8mJihudWxsPT1lfHxlLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJhYm9ydFwiLG8pKSxpKG4pfTt0PyhuLm9ubG9hZD1hLG4ub25lcnJvcj1mdW5jdGlvbigpe28mJihudWxsPT1lfHxlLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJhYm9ydFwiLG8pKSxyKG5ldyBoKFwiRXJyb3IgbG9hZGluZyBcIi5jb25jYXQobi5zcmMpKSl9LHMmJihuLmNyb3NzT3JpZ2luPXMpLG4uc3JjPXQpOmEoKX0pKX0sSXQ9ZnVuY3Rpb24odCl7bGV0e3NpZ25hbDplLHJldml2ZXI6cz1DfT1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06e307cmV0dXJuIG5ldyBQcm9taXNlKCgoaSxyKT0+e2NvbnN0IG49W107ZSYmZS5hZGRFdmVudExpc3RlbmVyKFwiYWJvcnRcIixyLHtvbmNlOiEwfSksUHJvbWlzZS5hbGwodC5tYXAoKHQ9PnR0LmdldENsYXNzKHQudHlwZSkuZnJvbU9iamVjdCh0LHtzaWduYWw6ZX0pLnRoZW4oKGU9PihzKHQsZSksbi5wdXNoKGUpLGUpKSkpKSkudGhlbihpKS5jYXRjaCgodD0+e24uZm9yRWFjaCgodD0+e3QuZGlzcG9zZSYmdC5kaXNwb3NlKCl9KSkscih0KX0pKS5maW5hbGx5KCgoKT0+e2UmJmUucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImFib3J0XCIscil9KSl9KSl9LEJ0PWZ1bmN0aW9uKHQpe2xldHtzaWduYWw6ZX09YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOnt9O3JldHVybiBuZXcgUHJvbWlzZSgoKHMsaSk9Pntjb25zdCByPVtdO2UmJmUuYWRkRXZlbnRMaXN0ZW5lcihcImFib3J0XCIsaSx7b25jZTohMH0pO2NvbnN0IG49T2JqZWN0LnZhbHVlcyh0KS5tYXAoKHQ9PnQmJnQudHlwZSYmdHQuaGFzKHQudHlwZSk/SXQoW3RdLHtzaWduYWw6ZX0pLnRoZW4oKHQ9PntsZXRbZV09dDtyZXR1cm4gci5wdXNoKGUpLGV9KSk6dCkpLG89T2JqZWN0LmtleXModCk7UHJvbWlzZS5hbGwobikudGhlbigodD0+dC5yZWR1Y2UoKCh0LGUscyk9Pih0W29bc11dPWUsdCkpLHt9KSkpLnRoZW4ocykuY2F0Y2goKHQ9PntyLmZvckVhY2goKHQ9Pnt0LmRpc3Bvc2UmJnQuZGlzcG9zZSgpfSkpLGkodCl9KSkuZmluYWxseSgoKCk9PntlJiZlLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJhYm9ydFwiLGkpfSkpfSkpfSxYdD1mdW5jdGlvbih0KXtyZXR1cm4oYXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOltdKS5yZWR1Y2UoKChlLHMpPT4ocyBpbiB0JiYoZVtzXT10W3NdKSxlKSkse30pfSxZdD0odCxlKT0+T2JqZWN0LmtleXModCkucmVkdWNlKCgocyxpKT0+KGUodFtpXSxpLHQpJiYoc1tpXT10W2ldKSxzKSkse30pLFd0PXthbGljZWJsdWU6XCIjRjBGOEZGXCIsYW50aXF1ZXdoaXRlOlwiI0ZBRUJEN1wiLGFxdWE6XCIjMEZGXCIsYXF1YW1hcmluZTpcIiM3RkZGRDRcIixhenVyZTpcIiNGMEZGRkZcIixiZWlnZTpcIiNGNUY1RENcIixiaXNxdWU6XCIjRkZFNEM0XCIsYmxhY2s6XCIjMDAwXCIsYmxhbmNoZWRhbG1vbmQ6XCIjRkZFQkNEXCIsYmx1ZTpcIiMwMEZcIixibHVldmlvbGV0OlwiIzhBMkJFMlwiLGJyb3duOlwiI0E1MkEyQVwiLGJ1cmx5d29vZDpcIiNERUI4ODdcIixjYWRldGJsdWU6XCIjNUY5RUEwXCIsY2hhcnRyZXVzZTpcIiM3RkZGMDBcIixjaG9jb2xhdGU6XCIjRDI2OTFFXCIsY29yYWw6XCIjRkY3RjUwXCIsY29ybmZsb3dlcmJsdWU6XCIjNjQ5NUVEXCIsY29ybnNpbGs6XCIjRkZGOERDXCIsY3JpbXNvbjpcIiNEQzE0M0NcIixjeWFuOlwiIzBGRlwiLGRhcmtibHVlOlwiIzAwMDA4QlwiLGRhcmtjeWFuOlwiIzAwOEI4QlwiLGRhcmtnb2xkZW5yb2Q6XCIjQjg4NjBCXCIsZGFya2dyYXk6XCIjQTlBOUE5XCIsZGFya2dyZXk6XCIjQTlBOUE5XCIsZGFya2dyZWVuOlwiIzAwNjQwMFwiLGRhcmtraGFraTpcIiNCREI3NkJcIixkYXJrbWFnZW50YTpcIiM4QjAwOEJcIixkYXJrb2xpdmVncmVlbjpcIiM1NTZCMkZcIixkYXJrb3JhbmdlOlwiI0ZGOEMwMFwiLGRhcmtvcmNoaWQ6XCIjOTkzMkNDXCIsZGFya3JlZDpcIiM4QjAwMDBcIixkYXJrc2FsbW9uOlwiI0U5OTY3QVwiLGRhcmtzZWFncmVlbjpcIiM4RkJDOEZcIixkYXJrc2xhdGVibHVlOlwiIzQ4M0Q4QlwiLGRhcmtzbGF0ZWdyYXk6XCIjMkY0RjRGXCIsZGFya3NsYXRlZ3JleTpcIiMyRjRGNEZcIixkYXJrdHVycXVvaXNlOlwiIzAwQ0VEMVwiLGRhcmt2aW9sZXQ6XCIjOTQwMEQzXCIsZGVlcHBpbms6XCIjRkYxNDkzXCIsZGVlcHNreWJsdWU6XCIjMDBCRkZGXCIsZGltZ3JheTpcIiM2OTY5NjlcIixkaW1ncmV5OlwiIzY5Njk2OVwiLGRvZGdlcmJsdWU6XCIjMUU5MEZGXCIsZmlyZWJyaWNrOlwiI0IyMjIyMlwiLGZsb3JhbHdoaXRlOlwiI0ZGRkFGMFwiLGZvcmVzdGdyZWVuOlwiIzIyOEIyMlwiLGZ1Y2hzaWE6XCIjRjBGXCIsZ2FpbnNib3JvOlwiI0RDRENEQ1wiLGdob3N0d2hpdGU6XCIjRjhGOEZGXCIsZ29sZDpcIiNGRkQ3MDBcIixnb2xkZW5yb2Q6XCIjREFBNTIwXCIsZ3JheTpcIiM4MDgwODBcIixncmV5OlwiIzgwODA4MFwiLGdyZWVuOlwiIzAwODAwMFwiLGdyZWVueWVsbG93OlwiI0FERkYyRlwiLGhvbmV5ZGV3OlwiI0YwRkZGMFwiLGhvdHBpbms6XCIjRkY2OUI0XCIsaW5kaWFucmVkOlwiI0NENUM1Q1wiLGluZGlnbzpcIiM0QjAwODJcIixpdm9yeTpcIiNGRkZGRjBcIixraGFraTpcIiNGMEU2OENcIixsYXZlbmRlcjpcIiNFNkU2RkFcIixsYXZlbmRlcmJsdXNoOlwiI0ZGRjBGNVwiLGxhd25ncmVlbjpcIiM3Q0ZDMDBcIixsZW1vbmNoaWZmb246XCIjRkZGQUNEXCIsbGlnaHRibHVlOlwiI0FERDhFNlwiLGxpZ2h0Y29yYWw6XCIjRjA4MDgwXCIsbGlnaHRjeWFuOlwiI0UwRkZGRlwiLGxpZ2h0Z29sZGVucm9keWVsbG93OlwiI0ZBRkFEMlwiLGxpZ2h0Z3JheTpcIiNEM0QzRDNcIixsaWdodGdyZXk6XCIjRDNEM0QzXCIsbGlnaHRncmVlbjpcIiM5MEVFOTBcIixsaWdodHBpbms6XCIjRkZCNkMxXCIsbGlnaHRzYWxtb246XCIjRkZBMDdBXCIsbGlnaHRzZWFncmVlbjpcIiMyMEIyQUFcIixsaWdodHNreWJsdWU6XCIjODdDRUZBXCIsbGlnaHRzbGF0ZWdyYXk6XCIjNzg5XCIsbGlnaHRzbGF0ZWdyZXk6XCIjNzg5XCIsbGlnaHRzdGVlbGJsdWU6XCIjQjBDNERFXCIsbGlnaHR5ZWxsb3c6XCIjRkZGRkUwXCIsbGltZTpcIiMwRjBcIixsaW1lZ3JlZW46XCIjMzJDRDMyXCIsbGluZW46XCIjRkFGMEU2XCIsbWFnZW50YTpcIiNGMEZcIixtYXJvb246XCIjODAwMDAwXCIsbWVkaXVtYXF1YW1hcmluZTpcIiM2NkNEQUFcIixtZWRpdW1ibHVlOlwiIzAwMDBDRFwiLG1lZGl1bW9yY2hpZDpcIiNCQTU1RDNcIixtZWRpdW1wdXJwbGU6XCIjOTM3MERCXCIsbWVkaXVtc2VhZ3JlZW46XCIjM0NCMzcxXCIsbWVkaXVtc2xhdGVibHVlOlwiIzdCNjhFRVwiLG1lZGl1bXNwcmluZ2dyZWVuOlwiIzAwRkE5QVwiLG1lZGl1bXR1cnF1b2lzZTpcIiM0OEQxQ0NcIixtZWRpdW12aW9sZXRyZWQ6XCIjQzcxNTg1XCIsbWlkbmlnaHRibHVlOlwiIzE5MTk3MFwiLG1pbnRjcmVhbTpcIiNGNUZGRkFcIixtaXN0eXJvc2U6XCIjRkZFNEUxXCIsbW9jY2FzaW46XCIjRkZFNEI1XCIsbmF2YWpvd2hpdGU6XCIjRkZERUFEXCIsbmF2eTpcIiMwMDAwODBcIixvbGRsYWNlOlwiI0ZERjVFNlwiLG9saXZlOlwiIzgwODAwMFwiLG9saXZlZHJhYjpcIiM2QjhFMjNcIixvcmFuZ2U6XCIjRkZBNTAwXCIsb3JhbmdlcmVkOlwiI0ZGNDUwMFwiLG9yY2hpZDpcIiNEQTcwRDZcIixwYWxlZ29sZGVucm9kOlwiI0VFRThBQVwiLHBhbGVncmVlbjpcIiM5OEZCOThcIixwYWxldHVycXVvaXNlOlwiI0FGRUVFRVwiLHBhbGV2aW9sZXRyZWQ6XCIjREI3MDkzXCIscGFwYXlhd2hpcDpcIiNGRkVGRDVcIixwZWFjaHB1ZmY6XCIjRkZEQUI5XCIscGVydTpcIiNDRDg1M0ZcIixwaW5rOlwiI0ZGQzBDQlwiLHBsdW06XCIjRERBMEREXCIscG93ZGVyYmx1ZTpcIiNCMEUwRTZcIixwdXJwbGU6XCIjODAwMDgwXCIscmViZWNjYXB1cnBsZTpcIiM2MzlcIixyZWQ6XCIjRjAwXCIscm9zeWJyb3duOlwiI0JDOEY4RlwiLHJveWFsYmx1ZTpcIiM0MTY5RTFcIixzYWRkbGVicm93bjpcIiM4QjQ1MTNcIixzYWxtb246XCIjRkE4MDcyXCIsc2FuZHlicm93bjpcIiNGNEE0NjBcIixzZWFncmVlbjpcIiMyRThCNTdcIixzZWFzaGVsbDpcIiNGRkY1RUVcIixzaWVubmE6XCIjQTA1MjJEXCIsc2lsdmVyOlwiI0MwQzBDMFwiLHNreWJsdWU6XCIjODdDRUVCXCIsc2xhdGVibHVlOlwiIzZBNUFDRFwiLHNsYXRlZ3JheTpcIiM3MDgwOTBcIixzbGF0ZWdyZXk6XCIjNzA4MDkwXCIsc25vdzpcIiNGRkZBRkFcIixzcHJpbmdncmVlbjpcIiMwMEZGN0ZcIixzdGVlbGJsdWU6XCIjNDY4MkI0XCIsdGFuOlwiI0QyQjQ4Q1wiLHRlYWw6XCIjMDA4MDgwXCIsdGhpc3RsZTpcIiNEOEJGRDhcIix0b21hdG86XCIjRkY2MzQ3XCIsdHVycXVvaXNlOlwiIzQwRTBEMFwiLHZpb2xldDpcIiNFRTgyRUVcIix3aGVhdDpcIiNGNURFQjNcIix3aGl0ZTpcIiNGRkZcIix3aGl0ZXNtb2tlOlwiI0Y1RjVGNVwiLHllbGxvdzpcIiNGRjBcIix5ZWxsb3dncmVlbjpcIiM5QUNEMzJcIn0sVnQ9KHQsZSxzKT0+KHM8MCYmKHMrPTEpLHM+MSYmKHMtPTEpLHM8MS82P3QrNiooZS10KSpzOnM8LjU/ZTpzPDIvMz90KyhlLXQpKigyLzMtcykqNjp0KSx6dD0odCxlLHMsaSk9Pnt0Lz0yNTUsZS89MjU1LHMvPTI1NTtjb25zdCByPU1hdGgubWF4KHQsZSxzKSxuPU1hdGgubWluKHQsZSxzKTtsZXQgbyxhO2NvbnN0IGg9KHIrbikvMjtpZihyPT09bilvPWE9MDtlbHNle2NvbnN0IGk9ci1uO3N3aXRjaChhPWg+LjU/aS8oMi1yLW4pOmkvKHIrbikscil7Y2FzZSB0Om89KGUtcykvaSsoZTxzPzY6MCk7YnJlYWs7Y2FzZSBlOm89KHMtdCkvaSsyO2JyZWFrO2Nhc2UgczpvPSh0LWUpL2krNH1vLz02fXJldHVybltNYXRoLnJvdW5kKDM2MCpvKSxNYXRoLnJvdW5kKDEwMCphKSxNYXRoLnJvdW5kKDEwMCpoKSxpXX0sSHQ9ZnVuY3Rpb24oKXtsZXQgdD1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06XCIxXCI7cmV0dXJuIHBhcnNlRmxvYXQodCkvKHQuZW5kc1dpdGgoXCIlXCIpPzEwMDoxKX0sR3Q9dD0+TWF0aC5taW4oTWF0aC5yb3VuZCh0KSwyNTUpLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpLnBhZFN0YXJ0KDIsXCIwXCIpLE50PXQ9PntsZXRbZSxzLGkscj0xXT10O2NvbnN0IG49TWF0aC5yb3VuZCguMyplKy41OSpzKy4xMSppKTtyZXR1cm5bbixuLG4scl19O2NsYXNzIFV0e2NvbnN0cnVjdG9yKGUpe2lmKHQodGhpcyxcImlzVW5yZWNvZ25pc2VkXCIsITEpLGUpaWYoZSBpbnN0YW5jZW9mIFV0KXRoaXMuc2V0U291cmNlKFsuLi5lLl9zb3VyY2VdKTtlbHNlIGlmKEFycmF5LmlzQXJyYXkoZSkpe2NvbnN0W3QscyxpLHI9MV09ZTt0aGlzLnNldFNvdXJjZShbdCxzLGkscl0pfWVsc2UgdGhpcy5zZXRTb3VyY2UodGhpcy5fdHJ5UGFyc2luZ0NvbG9yKGUpKTtlbHNlIHRoaXMuc2V0U291cmNlKFswLDAsMCwxXSl9X3RyeVBhcnNpbmdDb2xvcih0KXtyZXR1cm4odD10LnRvTG93ZXJDYXNlKCkpaW4gV3QmJih0PVd0W3RdKSxcInRyYW5zcGFyZW50XCI9PT10P1syNTUsMjU1LDI1NSwwXTpVdC5zb3VyY2VGcm9tSGV4KHQpfHxVdC5zb3VyY2VGcm9tUmdiKHQpfHxVdC5zb3VyY2VGcm9tSHNsKHQpfHwodGhpcy5pc1VucmVjb2duaXNlZD0hMCkmJlswLDAsMCwxXX1nZXRTb3VyY2UoKXtyZXR1cm4gdGhpcy5fc291cmNlfXNldFNvdXJjZSh0KXt0aGlzLl9zb3VyY2U9dH10b1JnYigpe2NvbnN0W3QsZSxzXT10aGlzLmdldFNvdXJjZSgpO3JldHVyblwicmdiKFwiLmNvbmNhdCh0LFwiLFwiKS5jb25jYXQoZSxcIixcIikuY29uY2F0KHMsXCIpXCIpfXRvUmdiYSgpe3JldHVyblwicmdiYShcIi5jb25jYXQodGhpcy5nZXRTb3VyY2UoKS5qb2luKFwiLFwiKSxcIilcIil9dG9Ic2woKXtjb25zdFt0LGUsc109enQoLi4udGhpcy5nZXRTb3VyY2UoKSk7cmV0dXJuXCJoc2woXCIuY29uY2F0KHQsXCIsXCIpLmNvbmNhdChlLFwiJSxcIikuY29uY2F0KHMsXCIlKVwiKX10b0hzbGEoKXtjb25zdFt0LGUscyxpXT16dCguLi50aGlzLmdldFNvdXJjZSgpKTtyZXR1cm5cImhzbGEoXCIuY29uY2F0KHQsXCIsXCIpLmNvbmNhdChlLFwiJSxcIikuY29uY2F0KHMsXCIlLFwiKS5jb25jYXQoaSxcIilcIil9dG9IZXgoKXtyZXR1cm4gdGhpcy50b0hleGEoKS5zbGljZSgwLDYpfXRvSGV4YSgpe2NvbnN0W3QsZSxzLGldPXRoaXMuZ2V0U291cmNlKCk7cmV0dXJuXCJcIi5jb25jYXQoR3QodCkpLmNvbmNhdChHdChlKSkuY29uY2F0KEd0KHMpKS5jb25jYXQoR3QoTWF0aC5yb3VuZCgyNTUqaSkpKX1nZXRBbHBoYSgpe3JldHVybiB0aGlzLmdldFNvdXJjZSgpWzNdfXNldEFscGhhKHQpe3JldHVybiB0aGlzLl9zb3VyY2VbM109dCx0aGlzfXRvR3JheXNjYWxlKCl7cmV0dXJuIHRoaXMuc2V0U291cmNlKE50KHRoaXMuZ2V0U291cmNlKCkpKSx0aGlzfXRvQmxhY2tXaGl0ZSh0KXtjb25zdFtlLCwsc109TnQodGhpcy5nZXRTb3VyY2UoKSksaT1lPCh0fHwxMjcpPzA6MjU1O3JldHVybiB0aGlzLnNldFNvdXJjZShbaSxpLGksc10pLHRoaXN9b3ZlcmxheVdpdGgodCl7dCBpbnN0YW5jZW9mIFV0fHwodD1uZXcgVXQodCkpO2NvbnN0IGU9dGhpcy5nZXRTb3VyY2UoKSxzPXQuZ2V0U291cmNlKCksW2kscixuXT1lLm1hcCgoKHQsZSk9Pk1hdGgucm91bmQoLjUqdCsuNSpzW2VdKSkpO3JldHVybiB0aGlzLnNldFNvdXJjZShbaSxyLG4sZVszXV0pLHRoaXN9c3RhdGljIGZyb21SZ2IodCl7cmV0dXJuIFV0LmZyb21SZ2JhKHQpfXN0YXRpYyBmcm9tUmdiYSh0KXtyZXR1cm4gbmV3IFV0KFV0LnNvdXJjZUZyb21SZ2IodCkpfXN0YXRpYyBzb3VyY2VGcm9tUmdiKHQpe2NvbnN0IGU9dC5tYXRjaCgvXnJnYmE/XFwoXFxzKihcXGR7MCwzfSg/OlxcLlxcZCspPyU/KVxccypbXFxzfCxdXFxzKihcXGR7MCwzfSg/OlxcLlxcZCspPyU/KVxccypbXFxzfCxdXFxzKihcXGR7MCwzfSg/OlxcLlxcZCspPyU/KVxccyooPzpcXHMqWywvXVxccyooXFxkezAsM30oPzpcXC5cXGQrKT8lPylcXHMqKT9cXCkkL2kpO2lmKGUpe2NvbnN0W3QscyxpXT1lLnNsaWNlKDEsNCkubWFwKCh0PT57Y29uc3QgZT1wYXJzZUZsb2F0KHQpO3JldHVybiB0LmVuZHNXaXRoKFwiJVwiKT9NYXRoLnJvdW5kKDIuNTUqZSk6ZX0pKTtyZXR1cm5bdCxzLGksSHQoZVs0XSldfX1zdGF0aWMgZnJvbUhzbCh0KXtyZXR1cm4gVXQuZnJvbUhzbGEodCl9c3RhdGljIGZyb21Ic2xhKHQpe3JldHVybiBuZXcgVXQoVXQuc291cmNlRnJvbUhzbCh0KSl9c3RhdGljIHNvdXJjZUZyb21Ic2wodCl7Y29uc3QgZT10Lm1hdGNoKC9eaHNsYT9cXChcXHMqKFsrLV0/XFxkezAsM30oPzpcXC5cXGQrKT8oPzpkZWd8dHVybnxyYWQpPylcXHMqW1xcc3wsXVxccyooXFxkezAsM30oPzpcXC5cXGQrKT8lPylcXHMqW1xcc3wsXVxccyooXFxkezAsM30oPzpcXC5cXGQrKT8lPylcXHMqKD86XFxzKlssL11cXHMqKFxcZCooPzpcXC5cXGQrKT8lPylcXHMqKT9cXCkkL2kpO2lmKCFlKXJldHVybjtjb25zdCBzPShVdC5wYXJzZUFuZ2xldG9EZWdyZWVzKGVbMV0pJTM2MCszNjApJTM2MC8zNjAsaT1wYXJzZUZsb2F0KGVbMl0pLzEwMCxyPXBhcnNlRmxvYXQoZVszXSkvMTAwO2xldCBuLG8sYTtpZigwPT09aSluPW89YT1yO2Vsc2V7Y29uc3QgdD1yPD0uNT9yKihpKzEpOnIraS1yKmksZT0yKnItdDtuPVZ0KGUsdCxzKzEvMyksbz1WdChlLHQscyksYT1WdChlLHQscy0xLzMpfXJldHVybltNYXRoLnJvdW5kKDI1NSpuKSxNYXRoLnJvdW5kKDI1NSpvKSxNYXRoLnJvdW5kKDI1NSphKSxIdChlWzRdKV19c3RhdGljIGZyb21IZXgodCl7cmV0dXJuIG5ldyBVdChVdC5zb3VyY2VGcm9tSGV4KHQpKX1zdGF0aWMgc291cmNlRnJvbUhleCh0KXtpZih0Lm1hdGNoKC9eIz8oKFswLTlhLWZdKXszLDR9fChbMC05YS1mXXsyfSl7Myw0fSkkL2kpKXtjb25zdCBlPXQuc2xpY2UodC5pbmRleE9mKFwiI1wiKSsxKTtsZXQgcztzPWUubGVuZ3RoPD00P2Uuc3BsaXQoXCJcIikubWFwKCh0PT50K3QpKTplLm1hdGNoKC8uezJ9L2cpO2NvbnN0W2kscixuLG89MjU1XT1zLm1hcCgodD0+cGFyc2VJbnQodCwxNikpKTtyZXR1cm5baSxyLG4sby8yNTVdfX1zdGF0aWMgcGFyc2VBbmdsZXRvRGVncmVlcyh0KXtjb25zdCBlPXQudG9Mb3dlckNhc2UoKSxzPXBhcnNlRmxvYXQoZSk7cmV0dXJuIGUuaW5jbHVkZXMoXCJyYWRcIik/eHQocyk6ZS5pbmNsdWRlcyhcInR1cm5cIik/MzYwKnM6c319Y29uc3QgcXQ9KHQsZSk9PnBhcnNlRmxvYXQoTnVtYmVyKHQpLnRvRml4ZWQoZSkpLEt0PWZ1bmN0aW9uKHQpe2xldCBlPWFyZ3VtZW50cy5sZW5ndGg+MSYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXTpPO2NvbnN0IHM9L1xcRHswLDJ9JC8uZXhlYyh0KSxpPXBhcnNlRmxvYXQodCkscj1vLkRQSTtzd2l0Y2gobnVsbD09cz92b2lkIDA6c1swXSl7Y2FzZVwibW1cIjpyZXR1cm4gaSpyLzI1LjQ7Y2FzZVwiY21cIjpyZXR1cm4gaSpyLzIuNTQ7Y2FzZVwiaW5cIjpyZXR1cm4gaSpyO2Nhc2VcInB0XCI6cmV0dXJuIGkqci83MjtjYXNlXCJwY1wiOnJldHVybiBpKnIvNzIqMTI7Y2FzZVwiZW1cIjpyZXR1cm4gaSplO2RlZmF1bHQ6cmV0dXJuIGl9fSxKdD10PT57Y29uc3RbZSxzXT10LnRyaW0oKS5zcGxpdChcIiBcIiksW2kscl09KG49ZSkmJm4hPT1qP1tuLnNsaWNlKDEsNCksbi5zbGljZSg1LDgpXTpuPT09aj9bbixuXTpbXCJNaWRcIixcIk1pZFwiXTt2YXIgbjtyZXR1cm57bWVldE9yU2xpY2U6c3x8XCJtZWV0XCIsYWxpZ25YOmksYWxpZ25ZOnJ9fSxRdD10PT5cIm1hdHJpeChcIit0Lm1hcCgodD0+cXQodCxvLk5VTV9GUkFDVElPTl9ESUdJVFMpKSkuam9pbihcIiBcIikrXCIpXCIsWnQ9ZnVuY3Rpb24odCxlKXtsZXQgcyxpLHI9IShhcmd1bWVudHMubGVuZ3RoPjImJnZvaWQgMCE9PWFyZ3VtZW50c1syXSl8fGFyZ3VtZW50c1syXTtpZihlKWlmKGUudG9MaXZlKXM9XCJ1cmwoI1NWR0lEX1wiLmNvbmNhdChlLmlkLFwiKVwiKTtlbHNle2NvbnN0IHQ9bmV3IFV0KGUpLHI9dC5nZXRBbHBoYSgpO3M9dC50b1JnYigpLDEhPT1yJiYoaT1yLnRvU3RyaW5nKCkpfWVsc2Ugcz1cIm5vbmVcIjtyZXR1cm4gcj9cIlwiLmNvbmNhdCh0LFwiOiBcIikuY29uY2F0KHMsXCI7IFwiKS5jb25jYXQoaT9cIlwiLmNvbmNhdCh0LFwiLW9wYWNpdHk6IFwiKS5jb25jYXQoaSxcIjsgXCIpOlwiXCIpOlwiXCIuY29uY2F0KHQsJz1cIicpLmNvbmNhdChzLCdcIiAnKS5jb25jYXQoaT9cIlwiLmNvbmNhdCh0LCctb3BhY2l0eT1cIicpLmNvbmNhdChpLCdcIiAnKTpcIlwiKX0sJHQ9dD0+ISF0JiZ2b2lkIDAhPT10LnRvTGl2ZSx0ZT10PT4hIXQmJlwiZnVuY3Rpb25cIj09dHlwZW9mIHQudG9PYmplY3QsZWU9dD0+ISF0JiZ2b2lkIDAhPT10Lm9mZnNldFgmJlwic291cmNlXCJpbiB0LHNlPXQ9PiEhdCYmXCJtdWx0aVNlbGVjdGlvblN0YWNraW5nXCJpbiB0O2Z1bmN0aW9uIGllKHQpe2NvbnN0IGU9dCYmcmUodCk7bGV0IHM9MCxpPTA7aWYoIXR8fCFlKXJldHVybntsZWZ0OnMsdG9wOml9O2xldCByPXQ7Y29uc3Qgbj1lLmRvY3VtZW50RWxlbWVudCxvPWUuYm9keXx8e3Njcm9sbExlZnQ6MCxzY3JvbGxUb3A6MH07Zm9yKDtyJiYoci5wYXJlbnROb2RlfHxyLmhvc3QpJiYocj1yLnBhcmVudE5vZGV8fHIuaG9zdCxyPT09ZT8ocz1vLnNjcm9sbExlZnR8fG4uc2Nyb2xsTGVmdHx8MCxpPW8uc2Nyb2xsVG9wfHxuLnNjcm9sbFRvcHx8MCk6KHMrPXIuc2Nyb2xsTGVmdHx8MCxpKz1yLnNjcm9sbFRvcHx8MCksMSE9PXIubm9kZVR5cGV8fFwiZml4ZWRcIiE9PXIuc3R5bGUucG9zaXRpb24pOyk7cmV0dXJue2xlZnQ6cyx0b3A6aX19Y29uc3QgcmU9dD0+dC5vd25lckRvY3VtZW50fHxudWxsLG5lPXQ9Pnt2YXIgZTtyZXR1cm4obnVsbD09PShlPXQub3duZXJEb2N1bWVudCl8fHZvaWQgMD09PWU/dm9pZCAwOmUuZGVmYXVsdFZpZXcpfHxudWxsfSxvZT1mdW5jdGlvbih0LGUscyl7bGV0e3dpZHRoOmksaGVpZ2h0OnJ9PXMsbj1hcmd1bWVudHMubGVuZ3RoPjMmJnZvaWQgMCE9PWFyZ3VtZW50c1szXT9hcmd1bWVudHNbM106MTt0LndpZHRoPWksdC5oZWlnaHQ9cixuPjEmJih0LnNldEF0dHJpYnV0ZShcIndpZHRoXCIsKGkqbikudG9TdHJpbmcoKSksdC5zZXRBdHRyaWJ1dGUoXCJoZWlnaHRcIiwocipuKS50b1N0cmluZygpKSxlLnNjYWxlKG4sbikpfSxhZT0odCxlKT0+e2xldHt3aWR0aDpzLGhlaWdodDppfT1lO3MmJih0LnN0eWxlLndpZHRoPVwibnVtYmVyXCI9PXR5cGVvZiBzP1wiXCIuY29uY2F0KHMsXCJweFwiKTpzKSxpJiYodC5zdHlsZS5oZWlnaHQ9XCJudW1iZXJcIj09dHlwZW9mIGk/XCJcIi5jb25jYXQoaSxcInB4XCIpOmkpfTtmdW5jdGlvbiBoZSh0KXtyZXR1cm4gdm9pZCAwIT09dC5vbnNlbGVjdHN0YXJ0JiYodC5vbnNlbGVjdHN0YXJ0PSgpPT4hMSksdC5zdHlsZS51c2VyU2VsZWN0PWosdH1jbGFzcyBjZXtjb25zdHJ1Y3RvcihlKXt0KHRoaXMsXCJfb3JpZ2luYWxDYW52YXNTdHlsZVwiLHZvaWQgMCksdCh0aGlzLFwibG93ZXJcIix2b2lkIDApO2NvbnN0IHM9dGhpcy5jcmVhdGVMb3dlckNhbnZhcyhlKTt0aGlzLmxvd2VyPXtlbDpzLGN0eDpzLmdldENvbnRleHQoXCIyZFwiKX19Y3JlYXRlTG93ZXJDYW52YXModCl7Y29uc3QgZT0ocz10KSYmdm9pZCAwIT09cy5nZXRDb250ZXh0P3Q6dCYmbSgpLmdldEVsZW1lbnRCeUlkKHQpfHxwdCgpO3ZhciBzO2lmKGUuaGFzQXR0cmlidXRlKFwiZGF0YS1mYWJyaWNcIikpdGhyb3cgbmV3IGgoXCJUcnlpbmcgdG8gaW5pdGlhbGl6ZSBhIGNhbnZhcyB0aGF0IGhhcyBhbHJlYWR5IGJlZW4gaW5pdGlhbGl6ZWQuIERpZCB5b3UgZm9yZ2V0IHRvIGRpc3Bvc2UgdGhlIGNhbnZhcz9cIik7cmV0dXJuIHRoaXMuX29yaWdpbmFsQ2FudmFzU3R5bGU9ZS5zdHlsZS5jc3NUZXh0LGUuc2V0QXR0cmlidXRlKFwiZGF0YS1mYWJyaWNcIixcIm1haW5cIiksZS5jbGFzc0xpc3QuYWRkKFwibG93ZXItY2FudmFzXCIpLGV9Y2xlYW51cERPTSh0KXtsZXR7d2lkdGg6ZSxoZWlnaHQ6c309dDtjb25zdHtlbDppfT10aGlzLmxvd2VyO2kuY2xhc3NMaXN0LnJlbW92ZShcImxvd2VyLWNhbnZhc1wiKSxpLnJlbW92ZUF0dHJpYnV0ZShcImRhdGEtZmFicmljXCIpLGkuc2V0QXR0cmlidXRlKFwid2lkdGhcIixcIlwiLmNvbmNhdChlKSksaS5zZXRBdHRyaWJ1dGUoXCJoZWlnaHRcIixcIlwiLmNvbmNhdChzKSksaS5zdHlsZS5jc3NUZXh0PXRoaXMuX29yaWdpbmFsQ2FudmFzU3R5bGV8fFwiXCIsdGhpcy5fb3JpZ2luYWxDYW52YXNTdHlsZT12b2lkIDB9c2V0RGltZW5zaW9ucyh0LGUpe2NvbnN0e2VsOnMsY3R4Oml9PXRoaXMubG93ZXI7b2UocyxpLHQsZSl9c2V0Q1NTRGltZW5zaW9ucyh0KXthZSh0aGlzLmxvd2VyLmVsLHQpfWNhbGNPZmZzZXQoKXtyZXR1cm4gZnVuY3Rpb24odCl7dmFyIGU7Y29uc3Qgcz10JiZyZSh0KSxpPXtsZWZ0OjAsdG9wOjB9O2lmKCFzKXJldHVybiBpO2NvbnN0IHI9KG51bGw9PT0oZT1uZSh0KSl8fHZvaWQgMD09PWU/dm9pZCAwOmUuZ2V0Q29tcHV0ZWRTdHlsZSh0LG51bGwpKXx8e307aS5sZWZ0Kz1wYXJzZUludChyLmJvcmRlckxlZnRXaWR0aCwxMCl8fDAsaS50b3ArPXBhcnNlSW50KHIuYm9yZGVyVG9wV2lkdGgsMTApfHwwLGkubGVmdCs9cGFyc2VJbnQoci5wYWRkaW5nTGVmdCwxMCl8fDAsaS50b3ArPXBhcnNlSW50KHIucGFkZGluZ1RvcCwxMCl8fDA7bGV0IG49e2xlZnQ6MCx0b3A6MH07Y29uc3Qgbz1zLmRvY3VtZW50RWxlbWVudDt2b2lkIDAhPT10LmdldEJvdW5kaW5nQ2xpZW50UmVjdCYmKG49dC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSk7Y29uc3QgYT1pZSh0KTtyZXR1cm57bGVmdDpuLmxlZnQrYS5sZWZ0LShvLmNsaWVudExlZnR8fDApK2kubGVmdCx0b3A6bi50b3ArYS50b3AtKG8uY2xpZW50VG9wfHwwKStpLnRvcH19KHRoaXMubG93ZXIuZWwpfWRpc3Bvc2UoKXtwKCkuZGlzcG9zZSh0aGlzLmxvd2VyLmVsKSxkZWxldGUgdGhpcy5sb3dlcn19Y29uc3QgbGU9e2JhY2tncm91bmRWcHQ6ITAsYmFja2dyb3VuZENvbG9yOlwiXCIsb3ZlcmxheVZwdDohMCxvdmVybGF5Q29sb3I6XCJcIixpbmNsdWRlRGVmYXVsdFZhbHVlczohMCxzdmdWaWV3cG9ydFRyYW5zZm9ybWF0aW9uOiEwLHJlbmRlck9uQWRkUmVtb3ZlOiEwLHNraXBPZmZzY3JlZW46ITAsZW5hYmxlUmV0aW5hU2NhbGluZzohMCxpbWFnZVNtb290aGluZ0VuYWJsZWQ6ITAsY29udHJvbHNBYm92ZU92ZXJsYXk6ITEsYWxsb3dUb3VjaFNjcm9sbGluZzohMSx2aWV3cG9ydFRyYW5zZm9ybTpbLi4uVF19O2NsYXNzIHVlIGV4dGVuZHMoY3QobHQpKXtnZXQgbG93ZXJDYW52YXNFbCgpe3ZhciB0O3JldHVybiBudWxsPT09KHQ9dGhpcy5lbGVtZW50cy5sb3dlcil8fHZvaWQgMD09PXQ/dm9pZCAwOnQuZWx9Z2V0IGNvbnRleHRDb250YWluZXIoKXt2YXIgdDtyZXR1cm4gbnVsbD09PSh0PXRoaXMuZWxlbWVudHMubG93ZXIpfHx2b2lkIDA9PT10P3ZvaWQgMDp0LmN0eH1zdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gdWUub3duRGVmYXVsdHN9Y29uc3RydWN0b3IodCl7bGV0IGU9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOnt9O3N1cGVyKCksT2JqZWN0LmFzc2lnbih0aGlzLHRoaXMuY29uc3RydWN0b3IuZ2V0RGVmYXVsdHMoKSksdGhpcy5zZXQoZSksdGhpcy5pbml0RWxlbWVudHModCksdGhpcy5fc2V0RGltZW5zaW9uc0ltcGwoe3dpZHRoOnRoaXMud2lkdGh8fHRoaXMuZWxlbWVudHMubG93ZXIuZWwud2lkdGh8fDAsaGVpZ2h0OnRoaXMuaGVpZ2h0fHx0aGlzLmVsZW1lbnRzLmxvd2VyLmVsLmhlaWdodHx8MH0pLHRoaXMuc2tpcENvbnRyb2xzRHJhd2luZz0hMSx0aGlzLnZpZXdwb3J0VHJhbnNmb3JtPVsuLi50aGlzLnZpZXdwb3J0VHJhbnNmb3JtXSx0aGlzLmNhbGNWaWV3cG9ydEJvdW5kYXJpZXMoKX1pbml0RWxlbWVudHModCl7dGhpcy5lbGVtZW50cz1uZXcgY2UodCl9YWRkKCl7Y29uc3QgdD1zdXBlci5hZGQoLi4uYXJndW1lbnRzKTtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD4wJiZ0aGlzLnJlbmRlck9uQWRkUmVtb3ZlJiZ0aGlzLnJlcXVlc3RSZW5kZXJBbGwoKSx0fWluc2VydEF0KHQpe2Zvcih2YXIgZT1hcmd1bWVudHMubGVuZ3RoLHM9bmV3IEFycmF5KGU+MT9lLTE6MCksaT0xO2k8ZTtpKyspc1tpLTFdPWFyZ3VtZW50c1tpXTtjb25zdCByPXN1cGVyLmluc2VydEF0KHQsLi4ucyk7cmV0dXJuIHMubGVuZ3RoPjAmJnRoaXMucmVuZGVyT25BZGRSZW1vdmUmJnRoaXMucmVxdWVzdFJlbmRlckFsbCgpLHJ9cmVtb3ZlKCl7Y29uc3QgdD1zdXBlci5yZW1vdmUoLi4uYXJndW1lbnRzKTtyZXR1cm4gdC5sZW5ndGg+MCYmdGhpcy5yZW5kZXJPbkFkZFJlbW92ZSYmdGhpcy5yZXF1ZXN0UmVuZGVyQWxsKCksdH1fb25PYmplY3RBZGRlZCh0KXt0LmNhbnZhcyYmdC5jYW52YXMhPT10aGlzJiYoYShcIndhcm5cIixcIkNhbnZhcyBpcyB0cnlpbmcgdG8gYWRkIGFuIG9iamVjdCB0aGF0IGJlbG9uZ3MgdG8gYSBkaWZmZXJlbnQgY2FudmFzLlxcblJlc3VsdGluZyB0byBkZWZhdWx0IGJlaGF2aW9yOiByZW1vdmluZyBvYmplY3QgZnJvbSBwcmV2aW91cyBjYW52YXMgYW5kIGFkZGluZyB0byBuZXcgY2FudmFzXCIpLHQuY2FudmFzLnJlbW92ZSh0KSksdC5fc2V0KFwiY2FudmFzXCIsdGhpcyksdC5zZXRDb29yZHMoKSx0aGlzLmZpcmUoXCJvYmplY3Q6YWRkZWRcIix7dGFyZ2V0OnR9KSx0LmZpcmUoXCJhZGRlZFwiLHt0YXJnZXQ6dGhpc30pfV9vbk9iamVjdFJlbW92ZWQodCl7dC5fc2V0KFwiY2FudmFzXCIsdm9pZCAwKSx0aGlzLmZpcmUoXCJvYmplY3Q6cmVtb3ZlZFwiLHt0YXJnZXQ6dH0pLHQuZmlyZShcInJlbW92ZWRcIix7dGFyZ2V0OnRoaXN9KX1fb25TdGFja09yZGVyQ2hhbmdlZCgpe3RoaXMucmVuZGVyT25BZGRSZW1vdmUmJnRoaXMucmVxdWVzdFJlbmRlckFsbCgpfWdldFJldGluYVNjYWxpbmcoKXtyZXR1cm4gdGhpcy5lbmFibGVSZXRpbmFTY2FsaW5nP3koKToxfWNhbGNPZmZzZXQoKXtyZXR1cm4gdGhpcy5fb2Zmc2V0PXRoaXMuZWxlbWVudHMuY2FsY09mZnNldCgpfWdldFdpZHRoKCl7cmV0dXJuIHRoaXMud2lkdGh9Z2V0SGVpZ2h0KCl7cmV0dXJuIHRoaXMuaGVpZ2h0fXNldFdpZHRoKHQsZSl7cmV0dXJuIHRoaXMuc2V0RGltZW5zaW9ucyh7d2lkdGg6dH0sZSl9c2V0SGVpZ2h0KHQsZSl7cmV0dXJuIHRoaXMuc2V0RGltZW5zaW9ucyh7aGVpZ2h0OnR9LGUpfV9zZXREaW1lbnNpb25zSW1wbCh0KXtsZXR7Y3NzT25seTplPSExLGJhY2tzdG9yZU9ubHk6aT0hMX09YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOnt9O2lmKCFlKXtjb25zdCBlPXMoe3dpZHRoOnRoaXMud2lkdGgsaGVpZ2h0OnRoaXMuaGVpZ2h0fSx0KTt0aGlzLmVsZW1lbnRzLnNldERpbWVuc2lvbnMoZSx0aGlzLmdldFJldGluYVNjYWxpbmcoKSksdGhpcy5oYXNMb3N0Q29udGV4dD0hMCx0aGlzLndpZHRoPWUud2lkdGgsdGhpcy5oZWlnaHQ9ZS5oZWlnaHR9aXx8dGhpcy5lbGVtZW50cy5zZXRDU1NEaW1lbnNpb25zKHQpLHRoaXMuY2FsY09mZnNldCgpfXNldERpbWVuc2lvbnModCxlKXt0aGlzLl9zZXREaW1lbnNpb25zSW1wbCh0LGUpLGUmJmUuY3NzT25seXx8dGhpcy5yZXF1ZXN0UmVuZGVyQWxsKCl9Z2V0Wm9vbSgpe3JldHVybiB0aGlzLnZpZXdwb3J0VHJhbnNmb3JtWzBdfXNldFZpZXdwb3J0VHJhbnNmb3JtKHQpe3RoaXMudmlld3BvcnRUcmFuc2Zvcm09dCx0aGlzLmNhbGNWaWV3cG9ydEJvdW5kYXJpZXMoKSx0aGlzLnJlbmRlck9uQWRkUmVtb3ZlJiZ0aGlzLnJlcXVlc3RSZW5kZXJBbGwoKX16b29tVG9Qb2ludCh0LGUpe2NvbnN0IHM9dCxpPVsuLi50aGlzLnZpZXdwb3J0VHJhbnNmb3JtXSxyPWJ0KHQsd3QoaSkpO2lbMF09ZSxpWzNdPWU7Y29uc3Qgbj1idChyLGkpO2lbNF0rPXMueC1uLngsaVs1XSs9cy55LW4ueSx0aGlzLnNldFZpZXdwb3J0VHJhbnNmb3JtKGkpfXNldFpvb20odCl7dGhpcy56b29tVG9Qb2ludChuZXcgb3QoMCwwKSx0KX1hYnNvbHV0ZVBhbih0KXtjb25zdCBlPVsuLi50aGlzLnZpZXdwb3J0VHJhbnNmb3JtXTtyZXR1cm4gZVs0XT0tdC54LGVbNV09LXQueSx0aGlzLnNldFZpZXdwb3J0VHJhbnNmb3JtKGUpfXJlbGF0aXZlUGFuKHQpe3JldHVybiB0aGlzLmFic29sdXRlUGFuKG5ldyBvdCgtdC54LXRoaXMudmlld3BvcnRUcmFuc2Zvcm1bNF0sLXQueS10aGlzLnZpZXdwb3J0VHJhbnNmb3JtWzVdKSl9Z2V0RWxlbWVudCgpe3JldHVybiB0aGlzLmVsZW1lbnRzLmxvd2VyLmVsfWNsZWFyQ29udGV4dCh0KXt0LmNsZWFyUmVjdCgwLDAsdGhpcy53aWR0aCx0aGlzLmhlaWdodCl9Z2V0Q29udGV4dCgpe3JldHVybiB0aGlzLmVsZW1lbnRzLmxvd2VyLmN0eH1jbGVhcigpe3RoaXMucmVtb3ZlKC4uLnRoaXMuZ2V0T2JqZWN0cygpKSx0aGlzLmJhY2tncm91bmRJbWFnZT12b2lkIDAsdGhpcy5vdmVybGF5SW1hZ2U9dm9pZCAwLHRoaXMuYmFja2dyb3VuZENvbG9yPVwiXCIsdGhpcy5vdmVybGF5Q29sb3I9XCJcIix0aGlzLmNsZWFyQ29udGV4dCh0aGlzLmdldENvbnRleHQoKSksdGhpcy5maXJlKFwiY2FudmFzOmNsZWFyZWRcIiksdGhpcy5yZW5kZXJPbkFkZFJlbW92ZSYmdGhpcy5yZXF1ZXN0UmVuZGVyQWxsKCl9cmVuZGVyQWxsKCl7dGhpcy5jYW5jZWxSZXF1ZXN0ZWRSZW5kZXIoKSx0aGlzLmRlc3Ryb3llZHx8dGhpcy5yZW5kZXJDYW52YXModGhpcy5nZXRDb250ZXh0KCksdGhpcy5fb2JqZWN0cyl9cmVuZGVyQW5kUmVzZXQoKXt0aGlzLm5leHRSZW5kZXJIYW5kbGU9MCx0aGlzLnJlbmRlckFsbCgpfXJlcXVlc3RSZW5kZXJBbGwoKXt0aGlzLm5leHRSZW5kZXJIYW5kbGV8fHRoaXMuZGlzcG9zZWR8fHRoaXMuZGVzdHJveWVkfHwodGhpcy5uZXh0UmVuZGVySGFuZGxlPXV0KCgoKT0+dGhpcy5yZW5kZXJBbmRSZXNldCgpKSkpfWNhbGNWaWV3cG9ydEJvdW5kYXJpZXMoKXtjb25zdCB0PXRoaXMud2lkdGgsZT10aGlzLmhlaWdodCxzPXd0KHRoaXMudmlld3BvcnRUcmFuc2Zvcm0pLGk9YnQoe3g6MCx5OjB9LHMpLHI9YnQoe3g6dCx5OmV9LHMpLG49aS5taW4ociksbz1pLm1heChyKTtyZXR1cm4gdGhpcy52cHRDb29yZHM9e3RsOm4sdHI6bmV3IG90KG8ueCxuLnkpLGJsOm5ldyBvdChuLngsby55KSxicjpvfX1jYW5jZWxSZXF1ZXN0ZWRSZW5kZXIoKXt0aGlzLm5leHRSZW5kZXJIYW5kbGUmJihkdCh0aGlzLm5leHRSZW5kZXJIYW5kbGUpLHRoaXMubmV4dFJlbmRlckhhbmRsZT0wKX1kcmF3Q29udHJvbHModCl7fXJlbmRlckNhbnZhcyh0LGUpe2lmKHRoaXMuZGVzdHJveWVkKXJldHVybjtjb25zdCBzPXRoaXMudmlld3BvcnRUcmFuc2Zvcm0saT10aGlzLmNsaXBQYXRoO3RoaXMuY2FsY1ZpZXdwb3J0Qm91bmRhcmllcygpLHRoaXMuY2xlYXJDb250ZXh0KHQpLHQuaW1hZ2VTbW9vdGhpbmdFbmFibGVkPXRoaXMuaW1hZ2VTbW9vdGhpbmdFbmFibGVkLHQucGF0dGVyblF1YWxpdHk9XCJiZXN0XCIsdGhpcy5maXJlKFwiYmVmb3JlOnJlbmRlclwiLHtjdHg6dH0pLHRoaXMuX3JlbmRlckJhY2tncm91bmQodCksdC5zYXZlKCksdC50cmFuc2Zvcm0oc1swXSxzWzFdLHNbMl0sc1szXSxzWzRdLHNbNV0pLHRoaXMuX3JlbmRlck9iamVjdHModCxlKSx0LnJlc3RvcmUoKSx0aGlzLmNvbnRyb2xzQWJvdmVPdmVybGF5fHx0aGlzLnNraXBDb250cm9sc0RyYXdpbmd8fHRoaXMuZHJhd0NvbnRyb2xzKHQpLGkmJihpLl9zZXQoXCJjYW52YXNcIix0aGlzKSxpLnNob3VsZENhY2hlKCksaS5fdHJhbnNmb3JtRG9uZT0hMCxpLnJlbmRlckNhY2hlKHtmb3JDbGlwcGluZzohMH0pLHRoaXMuZHJhd0NsaXBQYXRoT25DYW52YXModCxpKSksdGhpcy5fcmVuZGVyT3ZlcmxheSh0KSx0aGlzLmNvbnRyb2xzQWJvdmVPdmVybGF5JiYhdGhpcy5za2lwQ29udHJvbHNEcmF3aW5nJiZ0aGlzLmRyYXdDb250cm9scyh0KSx0aGlzLmZpcmUoXCJhZnRlcjpyZW5kZXJcIix7Y3R4OnR9KSx0aGlzLl9fY2xlYW51cFRhc2smJih0aGlzLl9fY2xlYW51cFRhc2soKSx0aGlzLl9fY2xlYW51cFRhc2s9dm9pZCAwKX1kcmF3Q2xpcFBhdGhPbkNhbnZhcyh0LGUpe2NvbnN0IHM9dGhpcy52aWV3cG9ydFRyYW5zZm9ybTt0LnNhdmUoKSx0LnRyYW5zZm9ybSguLi5zKSx0Lmdsb2JhbENvbXBvc2l0ZU9wZXJhdGlvbj1cImRlc3RpbmF0aW9uLWluXCIsZS50cmFuc2Zvcm0odCksdC5zY2FsZSgxL2Uuem9vbVgsMS9lLnpvb21ZKSx0LmRyYXdJbWFnZShlLl9jYWNoZUNhbnZhcywtZS5jYWNoZVRyYW5zbGF0aW9uWCwtZS5jYWNoZVRyYW5zbGF0aW9uWSksdC5yZXN0b3JlKCl9X3JlbmRlck9iamVjdHModCxlKXtmb3IobGV0IHM9MCxpPWUubGVuZ3RoO3M8aTsrK3MpZVtzXSYmZVtzXS5yZW5kZXIodCl9X3JlbmRlckJhY2tncm91bmRPck92ZXJsYXkodCxlKXtjb25zdCBzPXRoaXNbXCJcIi5jb25jYXQoZSxcIkNvbG9yXCIpXSxpPXRoaXNbXCJcIi5jb25jYXQoZSxcIkltYWdlXCIpXSxyPXRoaXMudmlld3BvcnRUcmFuc2Zvcm0sbj10aGlzW1wiXCIuY29uY2F0KGUsXCJWcHRcIildO2lmKCFzJiYhaSlyZXR1cm47Y29uc3Qgbz0kdChzKTtpZihzKXtpZih0LnNhdmUoKSx0LmJlZ2luUGF0aCgpLHQubW92ZVRvKDAsMCksdC5saW5lVG8odGhpcy53aWR0aCwwKSx0LmxpbmVUbyh0aGlzLndpZHRoLHRoaXMuaGVpZ2h0KSx0LmxpbmVUbygwLHRoaXMuaGVpZ2h0KSx0LmNsb3NlUGF0aCgpLHQuZmlsbFN0eWxlPW8/cy50b0xpdmUodCk6cyxuJiZ0LnRyYW5zZm9ybSguLi5yKSxvKXt0LnRyYW5zZm9ybSgxLDAsMCwxLHMub2Zmc2V0WHx8MCxzLm9mZnNldFl8fDApO2NvbnN0IGU9cy5ncmFkaWVudFRyYW5zZm9ybXx8cy5wYXR0ZXJuVHJhbnNmb3JtO2UmJnQudHJhbnNmb3JtKC4uLmUpfXQuZmlsbCgpLHQucmVzdG9yZSgpfWlmKGkpe3Quc2F2ZSgpO2NvbnN0e3NraXBPZmZzY3JlZW46ZX09dGhpczt0aGlzLnNraXBPZmZzY3JlZW49bixuJiZ0LnRyYW5zZm9ybSguLi5yKSxpLnJlbmRlcih0KSx0aGlzLnNraXBPZmZzY3JlZW49ZSx0LnJlc3RvcmUoKX19X3JlbmRlckJhY2tncm91bmQodCl7dGhpcy5fcmVuZGVyQmFja2dyb3VuZE9yT3ZlcmxheSh0LFwiYmFja2dyb3VuZFwiKX1fcmVuZGVyT3ZlcmxheSh0KXt0aGlzLl9yZW5kZXJCYWNrZ3JvdW5kT3JPdmVybGF5KHQsXCJvdmVybGF5XCIpfWdldENlbnRlcigpe3JldHVybnt0b3A6dGhpcy5oZWlnaHQvMixsZWZ0OnRoaXMud2lkdGgvMn19Z2V0Q2VudGVyUG9pbnQoKXtyZXR1cm4gbmV3IG90KHRoaXMud2lkdGgvMix0aGlzLmhlaWdodC8yKX1jZW50ZXJPYmplY3RIKHQpe3JldHVybiB0aGlzLl9jZW50ZXJPYmplY3QodCxuZXcgb3QodGhpcy5nZXRDZW50ZXJQb2ludCgpLngsdC5nZXRDZW50ZXJQb2ludCgpLnkpKX1jZW50ZXJPYmplY3RWKHQpe3JldHVybiB0aGlzLl9jZW50ZXJPYmplY3QodCxuZXcgb3QodC5nZXRDZW50ZXJQb2ludCgpLngsdGhpcy5nZXRDZW50ZXJQb2ludCgpLnkpKX1jZW50ZXJPYmplY3QodCl7cmV0dXJuIHRoaXMuX2NlbnRlck9iamVjdCh0LHRoaXMuZ2V0Q2VudGVyUG9pbnQoKSl9dmlld3BvcnRDZW50ZXJPYmplY3QodCl7cmV0dXJuIHRoaXMuX2NlbnRlck9iamVjdCh0LHRoaXMuZ2V0VnBDZW50ZXIoKSl9dmlld3BvcnRDZW50ZXJPYmplY3RIKHQpe3JldHVybiB0aGlzLl9jZW50ZXJPYmplY3QodCxuZXcgb3QodGhpcy5nZXRWcENlbnRlcigpLngsdC5nZXRDZW50ZXJQb2ludCgpLnkpKX12aWV3cG9ydENlbnRlck9iamVjdFYodCl7cmV0dXJuIHRoaXMuX2NlbnRlck9iamVjdCh0LG5ldyBvdCh0LmdldENlbnRlclBvaW50KCkueCx0aGlzLmdldFZwQ2VudGVyKCkueSkpfWdldFZwQ2VudGVyKCl7cmV0dXJuIGJ0KHRoaXMuZ2V0Q2VudGVyUG9pbnQoKSx3dCh0aGlzLnZpZXdwb3J0VHJhbnNmb3JtKSl9X2NlbnRlck9iamVjdCh0LGUpe3Quc2V0WFkoZSxELEQpLHQuc2V0Q29vcmRzKCksdGhpcy5yZW5kZXJPbkFkZFJlbW92ZSYmdGhpcy5yZXF1ZXN0UmVuZGVyQWxsKCl9dG9EYXRhbGVzc0pTT04odCl7cmV0dXJuIHRoaXMudG9EYXRhbGVzc09iamVjdCh0KX10b09iamVjdCh0KXtyZXR1cm4gdGhpcy5fdG9PYmplY3RNZXRob2QoXCJ0b09iamVjdFwiLHQpfXRvSlNPTigpe3JldHVybiB0aGlzLnRvT2JqZWN0KCl9dG9EYXRhbGVzc09iamVjdCh0KXtyZXR1cm4gdGhpcy5fdG9PYmplY3RNZXRob2QoXCJ0b0RhdGFsZXNzT2JqZWN0XCIsdCl9X3RvT2JqZWN0TWV0aG9kKHQsZSl7Y29uc3QgaT10aGlzLmNsaXBQYXRoLHI9aSYmIWkuZXhjbHVkZUZyb21FeHBvcnQ/dGhpcy5fdG9PYmplY3QoaSx0LGUpOm51bGw7cmV0dXJuIHMocyhzKHt2ZXJzaW9uOnh9LFh0KHRoaXMsZSkpLHt9LHtvYmplY3RzOnRoaXMuX29iamVjdHMuZmlsdGVyKCh0PT4hdC5leGNsdWRlRnJvbUV4cG9ydCkpLm1hcCgocz0+dGhpcy5fdG9PYmplY3Qocyx0LGUpKSl9LHRoaXMuX19zZXJpYWxpemVCZ092ZXJsYXkodCxlKSkscj97Y2xpcFBhdGg6cn06bnVsbCl9X3RvT2JqZWN0KHQsZSxzKXtsZXQgaTt0aGlzLmluY2x1ZGVEZWZhdWx0VmFsdWVzfHwoaT10LmluY2x1ZGVEZWZhdWx0VmFsdWVzLHQuaW5jbHVkZURlZmF1bHRWYWx1ZXM9ITEpO2NvbnN0IHI9dFtlXShzKTtyZXR1cm4gdGhpcy5pbmNsdWRlRGVmYXVsdFZhbHVlc3x8KHQuaW5jbHVkZURlZmF1bHRWYWx1ZXM9ISFpKSxyfV9fc2VyaWFsaXplQmdPdmVybGF5KHQsZSl7Y29uc3Qgcz17fSxpPXRoaXMuYmFja2dyb3VuZEltYWdlLHI9dGhpcy5vdmVybGF5SW1hZ2Usbj10aGlzLmJhY2tncm91bmRDb2xvcixvPXRoaXMub3ZlcmxheUNvbG9yO3JldHVybiAkdChuKT9uLmV4Y2x1ZGVGcm9tRXhwb3J0fHwocy5iYWNrZ3JvdW5kPW4udG9PYmplY3QoZSkpOm4mJihzLmJhY2tncm91bmQ9biksJHQobyk/by5leGNsdWRlRnJvbUV4cG9ydHx8KHMub3ZlcmxheT1vLnRvT2JqZWN0KGUpKTpvJiYocy5vdmVybGF5PW8pLGkmJiFpLmV4Y2x1ZGVGcm9tRXhwb3J0JiYocy5iYWNrZ3JvdW5kSW1hZ2U9dGhpcy5fdG9PYmplY3QoaSx0LGUpKSxyJiYhci5leGNsdWRlRnJvbUV4cG9ydCYmKHMub3ZlcmxheUltYWdlPXRoaXMuX3RvT2JqZWN0KHIsdCxlKSksc310b1NWRygpe2xldCB0PWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSxlPWFyZ3VtZW50cy5sZW5ndGg+MT9hcmd1bWVudHNbMV06dm9pZCAwO3QucmV2aXZlcj1lO2NvbnN0IHM9W107cmV0dXJuIHRoaXMuX3NldFNWR1ByZWFtYmxlKHMsdCksdGhpcy5fc2V0U1ZHSGVhZGVyKHMsdCksdGhpcy5jbGlwUGF0aCYmcy5wdXNoKCc8ZyBjbGlwLXBhdGg9XCJ1cmwoIycuY29uY2F0KHRoaXMuY2xpcFBhdGguY2xpcFBhdGhJZCwnKVwiID5cXG4nKSksdGhpcy5fc2V0U1ZHQmdPdmVybGF5Q29sb3IocyxcImJhY2tncm91bmRcIiksdGhpcy5fc2V0U1ZHQmdPdmVybGF5SW1hZ2UocyxcImJhY2tncm91bmRJbWFnZVwiLGUpLHRoaXMuX3NldFNWR09iamVjdHMocyxlKSx0aGlzLmNsaXBQYXRoJiZzLnB1c2goXCI8L2c+XFxuXCIpLHRoaXMuX3NldFNWR0JnT3ZlcmxheUNvbG9yKHMsXCJvdmVybGF5XCIpLHRoaXMuX3NldFNWR0JnT3ZlcmxheUltYWdlKHMsXCJvdmVybGF5SW1hZ2VcIixlKSxzLnB1c2goXCI8L3N2Zz5cIikscy5qb2luKFwiXCIpfV9zZXRTVkdQcmVhbWJsZSh0LGUpe2Uuc3VwcHJlc3NQcmVhbWJsZXx8dC5wdXNoKCc8P3htbCB2ZXJzaW9uPVwiMS4wXCIgZW5jb2Rpbmc9XCInLGUuZW5jb2Rpbmd8fFwiVVRGLThcIiwnXCIgc3RhbmRhbG9uZT1cIm5vXCIgPz5cXG4nLCc8IURPQ1RZUEUgc3ZnIFBVQkxJQyBcIi0vL1czQy8vRFREIFNWRyAxLjEvL0VOXCIgJywnXCJodHRwOi8vd3d3LnczLm9yZy9HcmFwaGljcy9TVkcvMS4xL0RURC9zdmcxMS5kdGRcIj5cXG4nKX1fc2V0U1ZHSGVhZGVyKHQsZSl7Y29uc3Qgcz1lLndpZHRofHxcIlwiLmNvbmNhdCh0aGlzLndpZHRoKSxpPWUuaGVpZ2h0fHxcIlwiLmNvbmNhdCh0aGlzLmhlaWdodCkscj1vLk5VTV9GUkFDVElPTl9ESUdJVFMsbj1lLnZpZXdCb3g7bGV0IGE7aWYobilhPSd2aWV3Qm94PVwiJy5jb25jYXQobi54LFwiIFwiKS5jb25jYXQobi55LFwiIFwiKS5jb25jYXQobi53aWR0aCxcIiBcIikuY29uY2F0KG4uaGVpZ2h0LCdcIiAnKTtlbHNlIGlmKHRoaXMuc3ZnVmlld3BvcnRUcmFuc2Zvcm1hdGlvbil7Y29uc3QgdD10aGlzLnZpZXdwb3J0VHJhbnNmb3JtO2E9J3ZpZXdCb3g9XCInLmNvbmNhdChxdCgtdFs0XS90WzBdLHIpLFwiIFwiKS5jb25jYXQocXQoLXRbNV0vdFszXSxyKSxcIiBcIikuY29uY2F0KHF0KHRoaXMud2lkdGgvdFswXSxyKSxcIiBcIikuY29uY2F0KHF0KHRoaXMuaGVpZ2h0L3RbM10sciksJ1wiICcpfWVsc2UgYT0ndmlld0JveD1cIjAgMCAnLmNvbmNhdCh0aGlzLndpZHRoLFwiIFwiKS5jb25jYXQodGhpcy5oZWlnaHQsJ1wiICcpO3QucHVzaChcIjxzdmcgXCIsJ3htbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiAnLCd4bWxuczp4bGluaz1cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiAnLCd2ZXJzaW9uPVwiMS4xXCIgJywnd2lkdGg9XCInLHMsJ1wiICcsJ2hlaWdodD1cIicsaSwnXCIgJyxhLCd4bWw6c3BhY2U9XCJwcmVzZXJ2ZVwiPlxcbicsXCI8ZGVzYz5DcmVhdGVkIHdpdGggRmFicmljLmpzIFwiLHgsXCI8L2Rlc2M+XFxuXCIsXCI8ZGVmcz5cXG5cIix0aGlzLmNyZWF0ZVNWR0ZvbnRGYWNlc01hcmt1cCgpLHRoaXMuY3JlYXRlU1ZHUmVmRWxlbWVudHNNYXJrdXAoKSx0aGlzLmNyZWF0ZVNWR0NsaXBQYXRoTWFya3VwKGUpLFwiPC9kZWZzPlxcblwiKX1jcmVhdGVTVkdDbGlwUGF0aE1hcmt1cCh0KXtjb25zdCBlPXRoaXMuY2xpcFBhdGg7cmV0dXJuIGU/KGUuY2xpcFBhdGhJZD1cIkNMSVBQQVRIX1wiLmNvbmNhdChmdCgpKSwnPGNsaXBQYXRoIGlkPVwiJy5jb25jYXQoZS5jbGlwUGF0aElkLCdcIiA+XFxuJykuY29uY2F0KGUudG9DbGlwUGF0aFNWRyh0LnJldml2ZXIpLFwiPC9jbGlwUGF0aD5cXG5cIikpOlwiXCJ9Y3JlYXRlU1ZHUmVmRWxlbWVudHNNYXJrdXAoKXtyZXR1cm5bXCJiYWNrZ3JvdW5kXCIsXCJvdmVybGF5XCJdLm1hcCgodD0+e2NvbnN0IGU9dGhpc1tcIlwiLmNvbmNhdCh0LFwiQ29sb3JcIildO2lmKCR0KGUpKXtjb25zdCBzPXRoaXNbXCJcIi5jb25jYXQodCxcIlZwdFwiKV0saT10aGlzLnZpZXdwb3J0VHJhbnNmb3JtLHI9e2lzVHlwZTooKT0+ITEsd2lkdGg6dGhpcy53aWR0aC8ocz9pWzBdOjEpLGhlaWdodDp0aGlzLmhlaWdodC8ocz9pWzNdOjEpfTtyZXR1cm4gZS50b1NWRyhyLHthZGRpdGlvbmFsVHJhbnNmb3JtOnM/UXQoaSk6XCJcIn0pfX0pKS5qb2luKFwiXCIpfWNyZWF0ZVNWR0ZvbnRGYWNlc01hcmt1cCgpe2NvbnN0IHQ9W10sZT17fSxzPW8uZm9udFBhdGhzO3RoaXMuX29iamVjdHMuZm9yRWFjaCgoZnVuY3Rpb24gZShzKXt0LnB1c2gocyksaHQocykmJnMuX29iamVjdHMuZm9yRWFjaChlKX0pKSx0LmZvckVhY2goKHQ9PntpZighKGk9dCl8fFwiZnVuY3Rpb25cIiE9dHlwZW9mIGkuX3JlbmRlclRleHQpcmV0dXJuO3ZhciBpO2NvbnN0e3N0eWxlczpyLGZvbnRGYW1pbHk6bn09dDshZVtuXSYmc1tuXSYmKGVbbl09ITAsciYmT2JqZWN0LnZhbHVlcyhyKS5mb3JFYWNoKCh0PT57T2JqZWN0LnZhbHVlcyh0KS5mb3JFYWNoKCh0PT57bGV0e2ZvbnRGYW1pbHk6aT1cIlwifT10OyFlW2ldJiZzW2ldJiYoZVtpXT0hMCl9KSl9KSkpfSkpO2NvbnN0IGk9T2JqZWN0LmtleXMoZSkubWFwKCh0PT5cIlxcdFxcdEBmb250LWZhY2Uge1xcblxcdFxcdFxcdGZvbnQtZmFtaWx5OiAnXCIuY29uY2F0KHQsXCInO1xcblxcdFxcdFxcdHNyYzogdXJsKCdcIikuY29uY2F0KHNbdF0sXCInKTtcXG5cXHRcXHR9XFxuXCIpKSkuam9pbihcIlwiKTtyZXR1cm4gaT8nXFx0PHN0eWxlIHR5cGU9XCJ0ZXh0L2Nzc1wiPjwhW0NEQVRBW1xcbicuY29uY2F0KGksXCJdXT48L3N0eWxlPlxcblwiKTpcIlwifV9zZXRTVkdPYmplY3RzKHQsZSl7dGhpcy5mb3JFYWNoT2JqZWN0KChzPT57cy5leGNsdWRlRnJvbUV4cG9ydHx8dGhpcy5fc2V0U1ZHT2JqZWN0KHQscyxlKX0pKX1fc2V0U1ZHT2JqZWN0KHQsZSxzKXt0LnB1c2goZS50b1NWRyhzKSl9X3NldFNWR0JnT3ZlcmxheUltYWdlKHQsZSxzKXtjb25zdCBpPXRoaXNbZV07aSYmIWkuZXhjbHVkZUZyb21FeHBvcnQmJmkudG9TVkcmJnQucHVzaChpLnRvU1ZHKHMpKX1fc2V0U1ZHQmdPdmVybGF5Q29sb3IodCxlKXtjb25zdCBzPXRoaXNbXCJcIi5jb25jYXQoZSxcIkNvbG9yXCIpXTtpZihzKWlmKCR0KHMpKXtjb25zdCBpPXMucmVwZWF0fHxcIlwiLHI9dGhpcy53aWR0aCxuPXRoaXMuaGVpZ2h0LG89dGhpc1tcIlwiLmNvbmNhdChlLFwiVnB0XCIpXT9RdCh3dCh0aGlzLnZpZXdwb3J0VHJhbnNmb3JtKSk6XCJcIjt0LnB1c2goJzxyZWN0IHRyYW5zZm9ybT1cIicuY29uY2F0KG8sXCIgdHJhbnNsYXRlKFwiKS5jb25jYXQoci8yLFwiLFwiKS5jb25jYXQobi8yLCcpXCIgeD1cIicpLmNvbmNhdChzLm9mZnNldFgtci8yLCdcIiB5PVwiJykuY29uY2F0KHMub2Zmc2V0WS1uLzIsJ1wiIHdpZHRoPVwiJykuY29uY2F0KFwicmVwZWF0LXlcIiE9PWkmJlwibm8tcmVwZWF0XCIhPT1pfHwhZWUocyk/cjpzLnNvdXJjZS53aWR0aCwnXCIgaGVpZ2h0PVwiJykuY29uY2F0KFwicmVwZWF0LXhcIiE9PWkmJlwibm8tcmVwZWF0XCIhPT1pfHwhZWUocyk/bjpzLnNvdXJjZS5oZWlnaHQsJ1wiIGZpbGw9XCJ1cmwoI1NWR0lEXycpLmNvbmNhdChzLmlkLCcpXCI+PC9yZWN0PlxcbicpKX1lbHNlIHQucHVzaCgnPHJlY3QgeD1cIjBcIiB5PVwiMFwiIHdpZHRoPVwiMTAwJVwiIGhlaWdodD1cIjEwMCVcIiAnLCdmaWxsPVwiJyxzLCdcIicsXCI+PC9yZWN0PlxcblwiKX1sb2FkRnJvbUpTT04odCxlKXtsZXR7c2lnbmFsOnN9PWFyZ3VtZW50cy5sZW5ndGg+MiYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTp7fTtpZighdClyZXR1cm4gUHJvbWlzZS5yZWplY3QobmV3IGgoXCJganNvbmAgaXMgdW5kZWZpbmVkXCIpKTtjb25zdCBpPVwic3RyaW5nXCI9PXR5cGVvZiB0P0pTT04ucGFyc2UodCk6dCx7b2JqZWN0czpyPVtdLGJhY2tncm91bmRJbWFnZTpuLGJhY2tncm91bmQ6byxvdmVybGF5SW1hZ2U6YSxvdmVybGF5OmMsY2xpcFBhdGg6bH09aSx1PXRoaXMucmVuZGVyT25BZGRSZW1vdmU7cmV0dXJuIHRoaXMucmVuZGVyT25BZGRSZW1vdmU9ITEsUHJvbWlzZS5hbGwoW0l0KHIse3Jldml2ZXI6ZSxzaWduYWw6c30pLEJ0KHtiYWNrZ3JvdW5kSW1hZ2U6bixiYWNrZ3JvdW5kQ29sb3I6byxvdmVybGF5SW1hZ2U6YSxvdmVybGF5Q29sb3I6YyxjbGlwUGF0aDpsfSx7c2lnbmFsOnN9KV0pLnRoZW4oKHQ9PntsZXRbZSxzXT10O3JldHVybiB0aGlzLmNsZWFyKCksdGhpcy5hZGQoLi4uZSksdGhpcy5zZXQoaSksdGhpcy5zZXQocyksdGhpcy5yZW5kZXJPbkFkZFJlbW92ZT11LHRoaXN9KSl9Y2xvbmUodCl7Y29uc3QgZT10aGlzLnRvT2JqZWN0KHQpO3JldHVybiB0aGlzLmNsb25lV2l0aG91dERhdGEoKS5sb2FkRnJvbUpTT04oZSl9Y2xvbmVXaXRob3V0RGF0YSgpe2NvbnN0IHQ9dnQodGhpcyk7cmV0dXJuIG5ldyB0aGlzLmNvbnN0cnVjdG9yKHQpfXRvRGF0YVVSTCgpe2xldCB0PWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fTtjb25zdHtmb3JtYXQ6ZT1cInBuZ1wiLHF1YWxpdHk6cz0xLG11bHRpcGxpZXI6aT0xLGVuYWJsZVJldGluYVNjYWxpbmc6cj0hMX09dCxuPWkqKHI/dGhpcy5nZXRSZXRpbmFTY2FsaW5nKCk6MSk7cmV0dXJuIHl0KHRoaXMudG9DYW52YXNFbGVtZW50KG4sdCksZSxzKX10b0NhbnZhc0VsZW1lbnQoKXtsZXQgdD1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06MSx7d2lkdGg6ZSxoZWlnaHQ6cyxsZWZ0OmksdG9wOnIsZmlsdGVyOm59PWFyZ3VtZW50cy5sZW5ndGg+MSYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXTp7fTtjb25zdCBvPShlfHx0aGlzLndpZHRoKSp0LGE9KHN8fHRoaXMuaGVpZ2h0KSp0LGg9dGhpcy5nZXRab29tKCksYz10aGlzLndpZHRoLGw9dGhpcy5oZWlnaHQsdT10aGlzLnNraXBDb250cm9sc0RyYXdpbmcsZD1oKnQsZz10aGlzLnZpZXdwb3J0VHJhbnNmb3JtLGY9W2QsMCwwLGQsKGdbNF0tKGl8fDApKSp0LChnWzVdLShyfHwwKSkqdF0scD10aGlzLmVuYWJsZVJldGluYVNjYWxpbmcsbT12dCh7d2lkdGg6byxoZWlnaHQ6YX0pLHY9bj90aGlzLl9vYmplY3RzLmZpbHRlcigodD0+bih0KSkpOnRoaXMuX29iamVjdHM7cmV0dXJuIHRoaXMuZW5hYmxlUmV0aW5hU2NhbGluZz0hMSx0aGlzLnZpZXdwb3J0VHJhbnNmb3JtPWYsdGhpcy53aWR0aD1vLHRoaXMuaGVpZ2h0PWEsdGhpcy5za2lwQ29udHJvbHNEcmF3aW5nPSEwLHRoaXMuY2FsY1ZpZXdwb3J0Qm91bmRhcmllcygpLHRoaXMucmVuZGVyQ2FudmFzKG0uZ2V0Q29udGV4dChcIjJkXCIpLHYpLHRoaXMudmlld3BvcnRUcmFuc2Zvcm09Zyx0aGlzLndpZHRoPWMsdGhpcy5oZWlnaHQ9bCx0aGlzLmNhbGNWaWV3cG9ydEJvdW5kYXJpZXMoKSx0aGlzLmVuYWJsZVJldGluYVNjYWxpbmc9cCx0aGlzLnNraXBDb250cm9sc0RyYXdpbmc9dSxtfWRpc3Bvc2UoKXtyZXR1cm4hdGhpcy5kaXNwb3NlZCYmdGhpcy5lbGVtZW50cy5jbGVhbnVwRE9NKHt3aWR0aDp0aGlzLndpZHRoLGhlaWdodDp0aGlzLmhlaWdodH0pLGV0LmNhbmNlbEJ5Q2FudmFzKHRoaXMpLHRoaXMuZGlzcG9zZWQ9ITAsbmV3IFByb21pc2UoKCh0LGUpPT57Y29uc3Qgcz0oKT0+e3RoaXMuZGVzdHJveSgpLHQoITApfTtzLmtpbGw9ZSx0aGlzLl9fY2xlYW51cFRhc2smJnRoaXMuX19jbGVhbnVwVGFzay5raWxsKFwiYWJvcnRlZFwiKSx0aGlzLmRlc3Ryb3llZD90KCExKTp0aGlzLm5leHRSZW5kZXJIYW5kbGU/dGhpcy5fX2NsZWFudXBUYXNrPXM6cygpfSkpfWRlc3Ryb3koKXt0aGlzLmRlc3Ryb3llZD0hMCx0aGlzLmNhbmNlbFJlcXVlc3RlZFJlbmRlcigpLHRoaXMuZm9yRWFjaE9iamVjdCgodD0+dC5kaXNwb3NlKCkpKSx0aGlzLl9vYmplY3RzPVtdLHRoaXMuYmFja2dyb3VuZEltYWdlJiZ0aGlzLmJhY2tncm91bmRJbWFnZS5kaXNwb3NlKCksdGhpcy5iYWNrZ3JvdW5kSW1hZ2U9dm9pZCAwLHRoaXMub3ZlcmxheUltYWdlJiZ0aGlzLm92ZXJsYXlJbWFnZS5kaXNwb3NlKCksdGhpcy5vdmVybGF5SW1hZ2U9dm9pZCAwLHRoaXMuZWxlbWVudHMuZGlzcG9zZSgpfXRvU3RyaW5nKCl7cmV0dXJuXCIjPENhbnZhcyAoXCIuY29uY2F0KHRoaXMuY29tcGxleGl0eSgpLFwiKTogeyBvYmplY3RzOiBcIikuY29uY2F0KHRoaXMuX29iamVjdHMubGVuZ3RoLFwiIH0+XCIpfX10KHVlLFwib3duRGVmYXVsdHNcIixsZSk7Y29uc3QgZGU9W1widG91Y2hzdGFydFwiLFwidG91Y2htb3ZlXCIsXCJ0b3VjaGVuZFwiXTtjb25zdCBnZT10PT57Y29uc3QgZT1pZSh0LnRhcmdldCkscz1mdW5jdGlvbih0KXtjb25zdCBlPXQuY2hhbmdlZFRvdWNoZXM7cmV0dXJuIGUmJmVbMF0/ZVswXTp0fSh0KTtyZXR1cm4gbmV3IG90KHMuY2xpZW50WCtlLmxlZnQscy5jbGllbnRZK2UudG9wKX0sZmU9dD0+ZGUuaW5jbHVkZXModC50eXBlKXx8XCJ0b3VjaFwiPT09dC5wb2ludGVyVHlwZSxwZT10PT57dC5wcmV2ZW50RGVmYXVsdCgpLHQuc3RvcFByb3BhZ2F0aW9uKCl9LG1lPXQ9PntsZXQgZT0wLHM9MCxpPTAscj0wO2ZvcihsZXQgbj0wLG89dC5sZW5ndGg7bjxvO24rKyl7Y29uc3R7eDpvLHk6YX09dFtuXTsobz5pfHwhbikmJihpPW8pLChvPGV8fCFuKSYmKGU9byksKGE+cnx8IW4pJiYocj1hKSwoYTxzfHwhbikmJihzPWEpfXJldHVybntsZWZ0OmUsdG9wOnMsd2lkdGg6aS1lLGhlaWdodDpyLXN9fSx2ZT1bXCJ0cmFuc2xhdGVYXCIsXCJ0cmFuc2xhdGVZXCIsXCJzY2FsZVhcIixcInNjYWxlWVwiXSx5ZT0odCxlKT0+X2UodCxTdChlLHQuY2FsY093bk1hdHJpeCgpKSksX2U9KHQsZSk9Pntjb25zdCBzPWt0KGUpLHt0cmFuc2xhdGVYOnIsdHJhbnNsYXRlWTpuLHNjYWxlWDpvLHNjYWxlWTphfT1zLGg9aShzLHZlKSxjPW5ldyBvdChyLG4pO3QuZmxpcFg9ITEsdC5mbGlwWT0hMSxPYmplY3QuYXNzaWduKHQsaCksdC5zZXQoe3NjYWxlWDpvLHNjYWxlWTphfSksdC5zZXRQb3NpdGlvbkJ5T3JpZ2luKGMsRCxEKX0seGU9dD0+e3Quc2NhbGVYPTEsdC5zY2FsZVk9MSx0LnNrZXdYPTAsdC5za2V3WT0wLHQuZmxpcFg9ITEsdC5mbGlwWT0hMSx0LnJvdGF0ZSgwKX0sQ2U9dD0+KHtzY2FsZVg6dC5zY2FsZVgsc2NhbGVZOnQuc2NhbGVZLHNrZXdYOnQuc2tld1gsc2tld1k6dC5za2V3WSxhbmdsZTp0LmFuZ2xlLGxlZnQ6dC5sZWZ0LGZsaXBYOnQuZmxpcFgsZmxpcFk6dC5mbGlwWSx0b3A6dC50b3B9KSxiZT0odCxlLHMpPT57Y29uc3QgaT10LzIscj1lLzIsbj1bbmV3IG90KC1pLC1yKSxuZXcgb3QoaSwtciksbmV3IG90KC1pLHIpLG5ldyBvdChpLHIpXS5tYXAoKHQ9PnQudHJhbnNmb3JtKHMpKSksbz1tZShuKTtyZXR1cm4gbmV3IG90KG8ud2lkdGgsby5oZWlnaHQpfSx3ZT1mdW5jdGlvbigpe2xldCB0PWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTpUO3JldHVybiBTdCh3dChhcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06VCksdCl9LFNlPWZ1bmN0aW9uKHQpe2xldCBlPWFyZ3VtZW50cy5sZW5ndGg+MSYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXTpULHM9YXJndW1lbnRzLmxlbmd0aD4yJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOlQ7cmV0dXJuIHQudHJhbnNmb3JtKHdlKGUscykpfSxUZT1mdW5jdGlvbih0KXtsZXQgZT1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06VCxzPWFyZ3VtZW50cy5sZW5ndGg+MiYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpUO3JldHVybiB0LnRyYW5zZm9ybSh3ZShlLHMpLCEwKX0sT2U9KHQsZSxzKT0+e2NvbnN0IGk9d2UoZSxzKTtyZXR1cm4gX2UodCxTdChpLHQuY2FsY093bk1hdHJpeCgpKSksaX0sa2U9KHQsZSk9Pnt2YXIgaTtjb25zdHt0cmFuc2Zvcm06e3RhcmdldDpyfX09ZTtudWxsPT09KGk9ci5jYW52YXMpfHx2b2lkIDA9PT1pfHxpLmZpcmUoXCJvYmplY3Q6XCIuY29uY2F0KHQpLHMocyh7fSxlKSx7fSx7dGFyZ2V0OnJ9KSksci5maXJlKHQsZSl9LERlPXtsZWZ0Oi0uNSx0b3A6LS41LGNlbnRlcjowLGJvdHRvbTouNSxyaWdodDouNX0sTWU9dD0+XCJzdHJpbmdcIj09dHlwZW9mIHQ/RGVbdF06dC0uNSxQZT1cIm5vdC1hbGxvd2VkXCI7ZnVuY3Rpb24gRWUodCl7cmV0dXJuIE1lKHQub3JpZ2luWCk9PT1NZShEKSYmTWUodC5vcmlnaW5ZKT09PU1lKEQpfWZ1bmN0aW9uIEFlKHQpe3JldHVybi41LU1lKHQpfWNvbnN0IGplPSh0LGUpPT50W2VdLEZlPSh0LGUscyxpKT0+KHtlOnQsdHJhbnNmb3JtOmUscG9pbnRlcjpuZXcgb3QocyxpKX0pO2Z1bmN0aW9uIExlKHQsZSl7Y29uc3Qgcz10LmdldFRvdGFsQW5nbGUoKSt4dChNYXRoLmF0YW4yKGUueSxlLngpKSszNjA7cmV0dXJuIE1hdGgucm91bmQocyUzNjAvNDUpfWZ1bmN0aW9uIFJlKHQsZSxzLGkscil7dmFyIG47bGV0e3RhcmdldDpvLGNvcm5lcjphfT10O2NvbnN0IGg9by5jb250cm9sc1thXSxjPShudWxsPT09KG49by5jYW52YXMpfHx2b2lkIDA9PT1uP3ZvaWQgMDpuLmdldFpvb20oKSl8fDEsbD1vLnBhZGRpbmcvYyx1PWZ1bmN0aW9uKHQsZSxzLGkpe2NvbnN0IHI9dC5nZXRSZWxhdGl2ZUNlbnRlclBvaW50KCksbj12b2lkIDAhPT1zJiZ2b2lkIDAhPT1pP3QudHJhbnNsYXRlVG9HaXZlbk9yaWdpbihyLEQsRCxzLGkpOm5ldyBvdCh0LmxlZnQsdC50b3ApO3JldHVybih0LmFuZ2xlP2Uucm90YXRlKC1fdCh0LmFuZ2xlKSxyKTplKS5zdWJ0cmFjdChuKX0obyxuZXcgb3QoaSxyKSxlLHMpO3JldHVybiB1Lng+PWwmJih1LngtPWwpLHUueDw9LWwmJih1LngrPWwpLHUueT49bCYmKHUueS09bCksdS55PD1sJiYodS55Kz1sKSx1LngtPWgub2Zmc2V0WCx1LnktPWgub2Zmc2V0WSx1fWNvbnN0IEllPSh0LGUscyxpKT0+e2NvbnN0e3RhcmdldDpyLG9mZnNldFg6bixvZmZzZXRZOm99PWUsYT1zLW4saD1pLW8sYz0hamUocixcImxvY2tNb3ZlbWVudFhcIikmJnIubGVmdCE9PWEsbD0hamUocixcImxvY2tNb3ZlbWVudFlcIikmJnIudG9wIT09aDtyZXR1cm4gYyYmci5zZXQoTSxhKSxsJiZyLnNldChQLGgpLChjfHxsKSYma2UoTCxGZSh0LGUscyxpKSksY3x8bH07Y2xhc3MgQmV7Z2V0U3ZnU3R5bGVzKHQpe2NvbnN0IGU9dGhpcy5maWxsUnVsZT90aGlzLmZpbGxSdWxlOlwibm9uemVyb1wiLHM9dGhpcy5zdHJva2VXaWR0aD90aGlzLnN0cm9rZVdpZHRoOlwiMFwiLGk9dGhpcy5zdHJva2VEYXNoQXJyYXk/dGhpcy5zdHJva2VEYXNoQXJyYXkuam9pbihcIiBcIik6aixyPXRoaXMuc3Ryb2tlRGFzaE9mZnNldD90aGlzLnN0cm9rZURhc2hPZmZzZXQ6XCIwXCIsbj10aGlzLnN0cm9rZUxpbmVDYXA/dGhpcy5zdHJva2VMaW5lQ2FwOlwiYnV0dFwiLG89dGhpcy5zdHJva2VMaW5lSm9pbj90aGlzLnN0cm9rZUxpbmVKb2luOlwibWl0ZXJcIixhPXRoaXMuc3Ryb2tlTWl0ZXJMaW1pdD90aGlzLnN0cm9rZU1pdGVyTGltaXQ6XCI0XCIsaD12b2lkIDAhPT10aGlzLm9wYWNpdHk/dGhpcy5vcGFjaXR5OlwiMVwiLGM9dGhpcy52aXNpYmxlP1wiXCI6XCIgdmlzaWJpbGl0eTogaGlkZGVuO1wiLGw9dD9cIlwiOnRoaXMuZ2V0U3ZnRmlsdGVyKCksdT1adChLLHRoaXMuZmlsbCk7cmV0dXJuW1p0KEosdGhpcy5zdHJva2UpLFwic3Ryb2tlLXdpZHRoOiBcIixzLFwiOyBcIixcInN0cm9rZS1kYXNoYXJyYXk6IFwiLGksXCI7IFwiLFwic3Ryb2tlLWxpbmVjYXA6IFwiLG4sXCI7IFwiLFwic3Ryb2tlLWRhc2hvZmZzZXQ6IFwiLHIsXCI7IFwiLFwic3Ryb2tlLWxpbmVqb2luOiBcIixvLFwiOyBcIixcInN0cm9rZS1taXRlcmxpbWl0OiBcIixhLFwiOyBcIix1LFwiZmlsbC1ydWxlOiBcIixlLFwiOyBcIixcIm9wYWNpdHk6IFwiLGgsXCI7XCIsbCxjXS5qb2luKFwiXCIpfWdldFN2Z0ZpbHRlcigpe3JldHVybiB0aGlzLnNoYWRvdz9cImZpbHRlcjogdXJsKCNTVkdJRF9cIi5jb25jYXQodGhpcy5zaGFkb3cuaWQsXCIpO1wiKTpcIlwifWdldFN2Z0NvbW1vbnMoKXtyZXR1cm5bdGhpcy5pZD8naWQ9XCInLmNvbmNhdCh0aGlzLmlkLCdcIiAnKTpcIlwiLHRoaXMuY2xpcFBhdGg/J2NsaXAtcGF0aD1cInVybCgjJy5jb25jYXQodGhpcy5jbGlwUGF0aC5jbGlwUGF0aElkLCcpXCIgJyk6XCJcIl0uam9pbihcIlwiKX1nZXRTdmdUcmFuc2Zvcm0odCl7bGV0IGU9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOlwiXCI7Y29uc3Qgcz10P3RoaXMuY2FsY1RyYW5zZm9ybU1hdHJpeCgpOnRoaXMuY2FsY093bk1hdHJpeCgpLGk9J3RyYW5zZm9ybT1cIicuY29uY2F0KFF0KHMpKTtyZXR1cm5cIlwiLmNvbmNhdChpKS5jb25jYXQoZSwnXCIgJyl9X3RvU1ZHKHQpe3JldHVybltcIlwiXX10b1NWRyh0KXtyZXR1cm4gdGhpcy5fY3JlYXRlQmFzZVNWR01hcmt1cCh0aGlzLl90b1NWRyh0KSx7cmV2aXZlcjp0fSl9dG9DbGlwUGF0aFNWRyh0KXtyZXR1cm5cIlxcdFwiK3RoaXMuX2NyZWF0ZUJhc2VDbGlwUGF0aFNWR01hcmt1cCh0aGlzLl90b1NWRyh0KSx7cmV2aXZlcjp0fSl9X2NyZWF0ZUJhc2VDbGlwUGF0aFNWR01hcmt1cCh0KXtsZXR7cmV2aXZlcjplLGFkZGl0aW9uYWxUcmFuc2Zvcm06cz1cIlwifT1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06e307Y29uc3QgaT1bdGhpcy5nZXRTdmdUcmFuc2Zvcm0oITAscyksdGhpcy5nZXRTdmdDb21tb25zKCldLmpvaW4oXCJcIikscj10LmluZGV4T2YoXCJDT01NT05fUEFSVFNcIik7cmV0dXJuIHRbcl09aSxlP2UodC5qb2luKFwiXCIpKTp0LmpvaW4oXCJcIil9X2NyZWF0ZUJhc2VTVkdNYXJrdXAodCl7bGV0e25vU3R5bGU6ZSxyZXZpdmVyOnMsd2l0aFNoYWRvdzppLGFkZGl0aW9uYWxUcmFuc2Zvcm06cn09YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOnt9O2NvbnN0IG49ZT9cIlwiOidzdHlsZT1cIicuY29uY2F0KHRoaXMuZ2V0U3ZnU3R5bGVzKCksJ1wiICcpLG89aT8nc3R5bGU9XCInLmNvbmNhdCh0aGlzLmdldFN2Z0ZpbHRlcigpLCdcIiAnKTpcIlwiLGE9dGhpcy5jbGlwUGF0aCxoPXRoaXMuc3Ryb2tlVW5pZm9ybT8ndmVjdG9yLWVmZmVjdD1cIm5vbi1zY2FsaW5nLXN0cm9rZVwiICc6XCJcIixjPWEmJmEuYWJzb2x1dGVQb3NpdGlvbmVkLGw9dGhpcy5zdHJva2UsdT10aGlzLmZpbGwsZD10aGlzLnNoYWRvdyxnPVtdLGY9dC5pbmRleE9mKFwiQ09NTU9OX1BBUlRTXCIpO2xldCBwO2EmJihhLmNsaXBQYXRoSWQ9XCJDTElQUEFUSF9cIi5jb25jYXQoZnQoKSkscD0nPGNsaXBQYXRoIGlkPVwiJy5jb25jYXQoYS5jbGlwUGF0aElkLCdcIiA+XFxuJykuY29uY2F0KGEudG9DbGlwUGF0aFNWRyhzKSxcIjwvY2xpcFBhdGg+XFxuXCIpKSxjJiZnLnB1c2goXCI8ZyBcIixvLHRoaXMuZ2V0U3ZnQ29tbW9ucygpLFwiID5cXG5cIiksZy5wdXNoKFwiPGcgXCIsdGhpcy5nZXRTdmdUcmFuc2Zvcm0oITEpLGM/XCJcIjpvK3RoaXMuZ2V0U3ZnQ29tbW9ucygpLFwiID5cXG5cIik7Y29uc3QgbT1bbixoLGU/XCJcIjp0aGlzLmFkZFBhaW50T3JkZXIoKSxcIiBcIixyPyd0cmFuc2Zvcm09XCInLmNvbmNhdChyLCdcIiAnKTpcIlwiXS5qb2luKFwiXCIpO3JldHVybiB0W2ZdPW0sJHQodSkmJmcucHVzaCh1LnRvU1ZHKHRoaXMpKSwkdChsKSYmZy5wdXNoKGwudG9TVkcodGhpcykpLGQmJmcucHVzaChkLnRvU1ZHKHRoaXMpKSxhJiZnLnB1c2gocCksZy5wdXNoKHQuam9pbihcIlwiKSksZy5wdXNoKFwiPC9nPlxcblwiKSxjJiZnLnB1c2goXCI8L2c+XFxuXCIpLHM/cyhnLmpvaW4oXCJcIikpOmcuam9pbihcIlwiKX1hZGRQYWludE9yZGVyKCl7cmV0dXJuIHRoaXMucGFpbnRGaXJzdCE9PUs/JyBwYWludC1vcmRlcj1cIicuY29uY2F0KHRoaXMucGFpbnRGaXJzdCwnXCIgJyk6XCJcIn19ZnVuY3Rpb24gWGUodCl7cmV0dXJuIG5ldyBSZWdFeHAoXCJeKFwiK3Quam9pbihcInxcIikrXCIpXFxcXGJcIixcImlcIil9dmFyIFllO2NvbnN0IFdlPVN0cmluZy5yYXcoWWV8fChZZT1yKFtcIig/OlstK10/KD86ZCouZCt8ZCsuPykoPzpbZUVdWy0rXT9kKyk/KVwiXSxbXCIoPzpbLStdPyg/OlxcXFxkKlxcXFwuXFxcXGQrfFxcXFxkK1xcXFwuPykoPzpbZUVdWy0rXT9cXFxcZCspPylcIl0pKSksVmU9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLHplPW5ldyBSZWdFeHAoXCIobm9ybWFsfGl0YWxpYyk/XFxcXHMqKG5vcm1hbHxzbWFsbC1jYXBzKT9cXFxccyoobm9ybWFsfGJvbGR8Ym9sZGVyfGxpZ2h0ZXJ8MTAwfDIwMHwzMDB8NDAwfDUwMHw2MDB8NzAwfDgwMHw5MDApP1xcXFxzKihcIitXZStcIig/OnB4fGNtfG1tfGVtfHB0fHBjfGluKSopKD86XFxcXC8obm9ybWFsfFwiK1dlK1wiKSk/XFxcXHMrKC4qKVwiKSxIZT17Y3g6TSx4Ok0scjpcInJhZGl1c1wiLGN5OlAseTpQLGRpc3BsYXk6XCJ2aXNpYmxlXCIsdmlzaWJpbGl0eTpcInZpc2libGVcIix0cmFuc2Zvcm06XCJ0cmFuc2Zvcm1NYXRyaXhcIixcImZpbGwtb3BhY2l0eVwiOlwiZmlsbE9wYWNpdHlcIixcImZpbGwtcnVsZVwiOlwiZmlsbFJ1bGVcIixcImZvbnQtZmFtaWx5XCI6XCJmb250RmFtaWx5XCIsXCJmb250LXNpemVcIjpcImZvbnRTaXplXCIsXCJmb250LXN0eWxlXCI6XCJmb250U3R5bGVcIixcImZvbnQtd2VpZ2h0XCI6XCJmb250V2VpZ2h0XCIsXCJsZXR0ZXItc3BhY2luZ1wiOlwiY2hhclNwYWNpbmdcIixcInBhaW50LW9yZGVyXCI6XCJwYWludEZpcnN0XCIsXCJzdHJva2UtZGFzaGFycmF5XCI6XCJzdHJva2VEYXNoQXJyYXlcIixcInN0cm9rZS1kYXNob2Zmc2V0XCI6XCJzdHJva2VEYXNoT2Zmc2V0XCIsXCJzdHJva2UtbGluZWNhcFwiOlwic3Ryb2tlTGluZUNhcFwiLFwic3Ryb2tlLWxpbmVqb2luXCI6XCJzdHJva2VMaW5lSm9pblwiLFwic3Ryb2tlLW1pdGVybGltaXRcIjpcInN0cm9rZU1pdGVyTGltaXRcIixcInN0cm9rZS1vcGFjaXR5XCI6XCJzdHJva2VPcGFjaXR5XCIsXCJzdHJva2Utd2lkdGhcIjpcInN0cm9rZVdpZHRoXCIsXCJ0ZXh0LWRlY29yYXRpb25cIjpcInRleHREZWNvcmF0aW9uXCIsXCJ0ZXh0LWFuY2hvclwiOlwidGV4dEFuY2hvclwiLG9wYWNpdHk6XCJvcGFjaXR5XCIsXCJjbGlwLXBhdGhcIjpcImNsaXBQYXRoXCIsXCJjbGlwLXJ1bGVcIjpcImNsaXBSdWxlXCIsXCJ2ZWN0b3ItZWZmZWN0XCI6XCJzdHJva2VVbmlmb3JtXCIsXCJpbWFnZS1yZW5kZXJpbmdcIjpcImltYWdlU21vb3RoaW5nXCJ9LEdlPVwiZm9udC1zaXplXCIsTmU9XCJjbGlwLXBhdGhcIixVZT1YZShbXCJwYXRoXCIsXCJjaXJjbGVcIixcInBvbHlnb25cIixcInBvbHlsaW5lXCIsXCJlbGxpcHNlXCIsXCJyZWN0XCIsXCJsaW5lXCIsXCJpbWFnZVwiLFwidGV4dFwiXSkscWU9WGUoW1wic3ltYm9sXCIsXCJpbWFnZVwiLFwibWFya2VyXCIsXCJwYXR0ZXJuXCIsXCJ2aWV3XCIsXCJzdmdcIl0pLEtlPVhlKFtcInN5bWJvbFwiLFwiZ1wiLFwiYVwiLFwic3ZnXCIsXCJjbGlwUGF0aFwiLFwiZGVmc1wiXSksSmU9bmV3IFJlZ0V4cChcIl5cXFxccyooXCIrV2UrXCIrKVxcXFxzKiw/XFxcXHMqKFwiK1dlK1wiKylcXFxccyosP1xcXFxzKihcIitXZStcIispXFxcXHMqLD9cXFxccyooXCIrV2UrXCIrKVxcXFxzKiRcIiksUWU9bmV3IG90KDEsMCksWmU9bmV3IG90LCRlPSh0LGUpPT50LnJvdGF0ZShlKSx0cz0odCxlKT0+bmV3IG90KGUpLnN1YnRyYWN0KHQpLGVzPXQ9PnQuZGlzdGFuY2VGcm9tKFplKSxzcz0odCxlKT0+TWF0aC5hdGFuMihvcyh0LGUpLGFzKHQsZSkpLGlzPXQ9PnNzKFFlLHQpLHJzPXQ9PnQuZXEoWmUpP3Q6dC5zY2FsYXJEaXZpZGUoZXModCkpLG5zPWZ1bmN0aW9uKHQpe2xldCBlPSEoYXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0pfHxhcmd1bWVudHNbMV07cmV0dXJuIHJzKG5ldyBvdCgtdC55LHQueCkuc2NhbGFyTXVsdGlwbHkoZT8xOi0xKSl9LG9zPSh0LGUpPT50LngqZS55LXQueSplLngsYXM9KHQsZSk9PnQueCplLngrdC55KmUueSxocz0odCxlLHMpPT57aWYodC5lcShlKXx8dC5lcShzKSlyZXR1cm4hMDtjb25zdCBpPW9zKGUscykscj1vcyhlLHQpLG49b3Mocyx0KTtyZXR1cm4gaT49MD9yPj0wJiZuPD0wOiEocjw9MCYmbj49MCl9LGNzPVwiKC0/XFxcXGQrKD86XFxcXC5cXFxcZCopPyg/OnB4KT8oPzpcXFxccz98JCkpP1wiLGxzPW5ldyBSZWdFeHAoXCIoPzpcXFxcc3xeKVwiK2NzK2NzK1wiKFwiK1dlK1wiPyg/OnB4KT8pPyg/OlxcXFxzP3wkKSg/OiR8XFxcXHMpXCIpO2NsYXNzIHVze2NvbnN0cnVjdG9yKHQpe2NvbnN0IGU9XCJzdHJpbmdcIj09dHlwZW9mIHQ/dXMucGFyc2VTaGFkb3codCk6dDtPYmplY3QuYXNzaWduKHRoaXMsdXMub3duRGVmYXVsdHMsZSksdGhpcy5pZD1mdCgpfXN0YXRpYyBwYXJzZVNoYWRvdyh0KXtjb25zdCBlPXQudHJpbSgpLFsscz0wLGk9MCxyPTBdPShscy5leGVjKGUpfHxbXSkubWFwKCh0PT5wYXJzZUZsb2F0KHQpfHwwKSk7cmV0dXJue2NvbG9yOihlLnJlcGxhY2UobHMsXCJcIil8fFwicmdiKDAsMCwwKVwiKS50cmltKCksb2Zmc2V0WDpzLG9mZnNldFk6aSxibHVyOnJ9fXRvU3RyaW5nKCl7cmV0dXJuW3RoaXMub2Zmc2V0WCx0aGlzLm9mZnNldFksdGhpcy5ibHVyLHRoaXMuY29sb3JdLmpvaW4oXCJweCBcIil9dG9TVkcodCl7Y29uc3QgZT0kZShuZXcgb3QodGhpcy5vZmZzZXRYLHRoaXMub2Zmc2V0WSksX3QoLXQuYW5nbGUpKSxzPW5ldyBVdCh0aGlzLmNvbG9yKTtsZXQgaT00MCxyPTQwO3JldHVybiB0LndpZHRoJiZ0LmhlaWdodCYmKGk9MTAwKnF0KChNYXRoLmFicyhlLngpK3RoaXMuYmx1cikvdC53aWR0aCxvLk5VTV9GUkFDVElPTl9ESUdJVFMpKzIwLHI9MTAwKnF0KChNYXRoLmFicyhlLnkpK3RoaXMuYmx1cikvdC5oZWlnaHQsby5OVU1fRlJBQ1RJT05fRElHSVRTKSsyMCksdC5mbGlwWCYmKGUueCo9LTEpLHQuZmxpcFkmJihlLnkqPS0xKSwnPGZpbHRlciBpZD1cIlNWR0lEXycuY29uY2F0KHRoaXMuaWQsJ1wiIHk9XCItJykuY29uY2F0KHIsJyVcIiBoZWlnaHQ9XCInKS5jb25jYXQoMTAwKzIqciwnJVwiIHg9XCItJykuY29uY2F0KGksJyVcIiB3aWR0aD1cIicpLmNvbmNhdCgxMDArMippLCclXCIgPlxcblxcdDxmZUdhdXNzaWFuQmx1ciBpbj1cIlNvdXJjZUFscGhhXCIgc3RkRGV2aWF0aW9uPVwiJykuY29uY2F0KHF0KHRoaXMuYmx1cj90aGlzLmJsdXIvMjowLG8uTlVNX0ZSQUNUSU9OX0RJR0lUUyksJ1wiPjwvZmVHYXVzc2lhbkJsdXI+XFxuXFx0PGZlT2Zmc2V0IGR4PVwiJykuY29uY2F0KHF0KGUueCxvLk5VTV9GUkFDVElPTl9ESUdJVFMpLCdcIiBkeT1cIicpLmNvbmNhdChxdChlLnksby5OVU1fRlJBQ1RJT05fRElHSVRTKSwnXCIgcmVzdWx0PVwib0JsdXJcIiA+PC9mZU9mZnNldD5cXG5cXHQ8ZmVGbG9vZCBmbG9vZC1jb2xvcj1cIicpLmNvbmNhdChzLnRvUmdiKCksJ1wiIGZsb29kLW9wYWNpdHk9XCInKS5jb25jYXQocy5nZXRBbHBoYSgpLCdcIi8+XFxuXFx0PGZlQ29tcG9zaXRlIGluMj1cIm9CbHVyXCIgb3BlcmF0b3I9XCJpblwiIC8+XFxuXFx0PGZlTWVyZ2U+XFxuXFx0XFx0PGZlTWVyZ2VOb2RlPjwvZmVNZXJnZU5vZGU+XFxuXFx0XFx0PGZlTWVyZ2VOb2RlIGluPVwiU291cmNlR3JhcGhpY1wiPjwvZmVNZXJnZU5vZGU+XFxuXFx0PC9mZU1lcmdlPlxcbjwvZmlsdGVyPlxcbicpfXRvT2JqZWN0KCl7Y29uc3QgdD17Y29sb3I6dGhpcy5jb2xvcixibHVyOnRoaXMuYmx1cixvZmZzZXRYOnRoaXMub2Zmc2V0WCxvZmZzZXRZOnRoaXMub2Zmc2V0WSxhZmZlY3RTdHJva2U6dGhpcy5hZmZlY3RTdHJva2Usbm9uU2NhbGluZzp0aGlzLm5vblNjYWxpbmcsdHlwZTp0aGlzLmNvbnN0cnVjdG9yLnR5cGV9LGU9dXMub3duRGVmYXVsdHM7cmV0dXJuIHRoaXMuaW5jbHVkZURlZmF1bHRWYWx1ZXM/dDpZdCh0LCgodCxzKT0+dCE9PWVbc10pKX1zdGF0aWMgYXN5bmMgZnJvbU9iamVjdCh0KXtyZXR1cm4gbmV3IHRoaXModCl9fXQodXMsXCJvd25EZWZhdWx0c1wiLHtjb2xvcjpcInJnYigwLDAsMClcIixibHVyOjAsb2Zmc2V0WDowLG9mZnNldFk6MCxhZmZlY3RTdHJva2U6ITEsaW5jbHVkZURlZmF1bHRWYWx1ZXM6ITAsbm9uU2NhbGluZzohMX0pLHQodXMsXCJ0eXBlXCIsXCJzaGFkb3dcIiksdHQuc2V0Q2xhc3ModXMsXCJzaGFkb3dcIik7Y29uc3QgZHM9KHQsZSxzKT0+TWF0aC5tYXgodCxNYXRoLm1pbihlLHMpKSxncz1bUCxNLEcsTixcImZsaXBYXCIsXCJmbGlwWVwiLFwib3JpZ2luWFwiLFwib3JpZ2luWVwiLFwiYW5nbGVcIixcIm9wYWNpdHlcIixcImdsb2JhbENvbXBvc2l0ZU9wZXJhdGlvblwiLFwic2hhZG93XCIsXCJ2aXNpYmxlXCIsVSxxXSxmcz1bSyxKLFwic3Ryb2tlV2lkdGhcIixcInN0cm9rZURhc2hBcnJheVwiLFwid2lkdGhcIixcImhlaWdodFwiLFwicGFpbnRGaXJzdFwiLFwic3Ryb2tlVW5pZm9ybVwiLFwic3Ryb2tlTGluZUNhcFwiLFwic3Ryb2tlRGFzaE9mZnNldFwiLFwic3Ryb2tlTGluZUpvaW5cIixcInN0cm9rZU1pdGVyTGltaXRcIixcImJhY2tncm91bmRDb2xvclwiLFwiY2xpcFBhdGhcIl0scHM9e3RvcDowLGxlZnQ6MCx3aWR0aDowLGhlaWdodDowLGFuZ2xlOjAsZmxpcFg6ITEsZmxpcFk6ITEsc2NhbGVYOjEsc2NhbGVZOjEsbWluU2NhbGVMaW1pdDowLHNrZXdYOjAsc2tld1k6MCxvcmlnaW5YOk0sb3JpZ2luWTpQLHN0cm9rZVdpZHRoOjEsc3Ryb2tlVW5pZm9ybTohMSxwYWRkaW5nOjAsb3BhY2l0eToxLHBhaW50Rmlyc3Q6SyxmaWxsOlwicmdiKDAsMCwwKVwiLGZpbGxSdWxlOlwibm9uemVyb1wiLHN0cm9rZTpudWxsLHN0cm9rZURhc2hBcnJheTpudWxsLHN0cm9rZURhc2hPZmZzZXQ6MCxzdHJva2VMaW5lQ2FwOlwiYnV0dFwiLHN0cm9rZUxpbmVKb2luOlwibWl0ZXJcIixzdHJva2VNaXRlckxpbWl0OjQsZ2xvYmFsQ29tcG9zaXRlT3BlcmF0aW9uOlwic291cmNlLW92ZXJcIixiYWNrZ3JvdW5kQ29sb3I6XCJcIixzaGFkb3c6bnVsbCx2aXNpYmxlOiEwLGluY2x1ZGVEZWZhdWx0VmFsdWVzOiEwLGV4Y2x1ZGVGcm9tRXhwb3J0OiExLG9iamVjdENhY2hpbmc6ITAsY2xpcFBhdGg6dm9pZCAwLGludmVydGVkOiExLGFic29sdXRlUG9zaXRpb25lZDohMSxjZW50ZXJlZFJvdGF0aW9uOiEwLGNlbnRlcmVkU2NhbGluZzohMSxkaXJ0eTohMH0sbXM9KHQsZSxzLGkpPT4odDxNYXRoLmFicyhlKT8odD1lLGk9cy80KTppPTA9PT1lJiYwPT09dD9zL3cqTWF0aC5hc2luKDEpOnMvdypNYXRoLmFzaW4oZS90KSx7YTp0LGM6ZSxwOnMsczppfSksdnM9KHQsZSxzLGkscik9PnQqTWF0aC5wb3coMiwxMCooaS09MSkpKk1hdGguc2luKChpKnItZSkqdy9zKSx5cz0odCxlLHMsaSk9Pi1zKk1hdGguY29zKHQvaSpiKStzK2UsX3M9KHQsZSxzLGkpPT4odC89aSk8MS8yLjc1P3MqKDcuNTYyNSp0KnQpK2U6dDwyLzIuNzU/cyooNy41NjI1Kih0LT0xLjUvMi43NSkqdCsuNzUpK2U6dDwyLjUvMi43NT9zKig3LjU2MjUqKHQtPTIuMjUvMi43NSkqdCsuOTM3NSkrZTpzKig3LjU2MjUqKHQtPTIuNjI1LzIuNzUpKnQrLjk4NDM3NSkrZSx4cz0odCxlLHMsaSk9PnMtX3MoaS10LDAscyxpKStlO3ZhciBDcz1PYmplY3QuZnJlZXplKHtfX3Byb3RvX186bnVsbCxkZWZhdWx0RWFzaW5nOnlzLGVhc2VJbkJhY2s6ZnVuY3Rpb24odCxlLHMsaSl7bGV0IHI9YXJndW1lbnRzLmxlbmd0aD40JiZ2b2lkIDAhPT1hcmd1bWVudHNbNF0/YXJndW1lbnRzWzRdOjEuNzAxNTg7cmV0dXJuIHMqKHQvPWkpKnQqKChyKzEpKnQtcikrZX0sZWFzZUluQm91bmNlOnhzLGVhc2VJbkNpcmM6KHQsZSxzLGkpPT4tcyooTWF0aC5zcXJ0KDEtKHQvPWkpKnQpLTEpK2UsZWFzZUluQ3ViaWM6KHQsZSxzLGkpPT5zKih0L2kpKiozK2UsZWFzZUluRWxhc3RpYzoodCxlLHMsaSk9Pntjb25zdCByPXM7bGV0IG49MDtpZigwPT09dClyZXR1cm4gZTtpZigxPT09KHQvPWkpKXJldHVybiBlK3M7bnx8KG49LjMqaSk7Y29uc3R7YTpvLHM6YSxwOmh9PW1zKHIscyxuLDEuNzAxNTgpO3JldHVybi12cyhvLGEsaCx0LGkpK2V9LGVhc2VJbkV4cG86KHQsZSxzLGkpPT4wPT09dD9lOnMqMioqKDEwKih0L2ktMSkpK2UsZWFzZUluT3V0QmFjazpmdW5jdGlvbih0LGUscyxpKXtsZXQgcj1hcmd1bWVudHMubGVuZ3RoPjQmJnZvaWQgMCE9PWFyZ3VtZW50c1s0XT9hcmd1bWVudHNbNF06MS43MDE1ODtyZXR1cm4odC89aS8yKTwxP3MvMioodCp0KigoMSsocio9MS41MjUpKSp0LXIpKStlOnMvMiooKHQtPTIpKnQqKCgxKyhyKj0xLjUyNSkpKnQrcikrMikrZX0sZWFzZUluT3V0Qm91bmNlOih0LGUscyxpKT0+dDxpLzI/LjUqeHMoMip0LDAscyxpKStlOi41Kl9zKDIqdC1pLDAscyxpKSsuNSpzK2UsZWFzZUluT3V0Q2lyYzoodCxlLHMsaSk9Pih0Lz1pLzIpPDE/LXMvMiooTWF0aC5zcXJ0KDEtdCoqMiktMSkrZTpzLzIqKE1hdGguc3FydCgxLSh0LT0yKSp0KSsxKStlLGVhc2VJbk91dEN1YmljOih0LGUscyxpKT0+KHQvPWkvMik8MT9zLzIqdCoqMytlOnMvMiooKHQtMikqKjMrMikrZSxlYXNlSW5PdXRFbGFzdGljOih0LGUscyxpKT0+e2NvbnN0IHI9cztsZXQgbj0wO2lmKDA9PT10KXJldHVybiBlO2lmKDI9PT0odC89aS8yKSlyZXR1cm4gZStzO258fChuPWkqKC4zKjEuNSkpO2NvbnN0e2E6byxzOmEscDpoLGM6Y309bXMocixzLG4sMS43MDE1OCk7cmV0dXJuIHQ8MT8tLjUqdnMobyxhLGgsdCxpKStlOm8qTWF0aC5wb3coMiwtMTAqKHQtPTEpKSpNYXRoLnNpbigodCppLWEpKncvaCkqLjUrYytlfSxlYXNlSW5PdXRFeHBvOih0LGUscyxpKT0+MD09PXQ/ZTp0PT09aT9lK3M6KHQvPWkvMik8MT9zLzIqMioqKDEwKih0LTEpKStlOnMvMiotKDIqKigtMTAqLS10KSsyKStlLGVhc2VJbk91dFF1YWQ6KHQsZSxzLGkpPT4odC89aS8yKTwxP3MvMip0KioyK2U6LXMvMiooLS10Kih0LTIpLTEpK2UsZWFzZUluT3V0UXVhcnQ6KHQsZSxzLGkpPT4odC89aS8yKTwxP3MvMip0Kio0K2U6LXMvMiooKHQtPTIpKnQqKjMtMikrZSxlYXNlSW5PdXRRdWludDoodCxlLHMsaSk9Pih0Lz1pLzIpPDE/cy8yKnQqKjUrZTpzLzIqKCh0LTIpKio1KzIpK2UsZWFzZUluT3V0U2luZToodCxlLHMsaSk9Pi1zLzIqKE1hdGguY29zKE1hdGguUEkqdC9pKS0xKStlLGVhc2VJblF1YWQ6KHQsZSxzLGkpPT5zKih0Lz1pKSp0K2UsZWFzZUluUXVhcnQ6KHQsZSxzLGkpPT5zKih0Lz1pKSp0KiozK2UsZWFzZUluUXVpbnQ6KHQsZSxzLGkpPT5zKih0L2kpKio1K2UsZWFzZUluU2luZToodCxlLHMsaSk9Pi1zKk1hdGguY29zKHQvaSpiKStzK2UsZWFzZU91dEJhY2s6ZnVuY3Rpb24odCxlLHMsaSl7bGV0IHI9YXJndW1lbnRzLmxlbmd0aD40JiZ2b2lkIDAhPT1hcmd1bWVudHNbNF0/YXJndW1lbnRzWzRdOjEuNzAxNTg7cmV0dXJuIHMqKCh0PXQvaS0xKSp0KigocisxKSp0K3IpKzEpK2V9LGVhc2VPdXRCb3VuY2U6X3MsZWFzZU91dENpcmM6KHQsZSxzLGkpPT5zKk1hdGguc3FydCgxLSh0PXQvaS0xKSp0KStlLGVhc2VPdXRDdWJpYzoodCxlLHMsaSk9PnMqKCh0L2ktMSkqKjMrMSkrZSxlYXNlT3V0RWxhc3RpYzoodCxlLHMsaSk9Pntjb25zdCByPXM7bGV0IG49MDtpZigwPT09dClyZXR1cm4gZTtpZigxPT09KHQvPWkpKXJldHVybiBlK3M7bnx8KG49LjMqaSk7Y29uc3R7YTpvLHM6YSxwOmgsYzpjfT1tcyhyLHMsbiwxLjcwMTU4KTtyZXR1cm4gbyoyKiooLTEwKnQpKk1hdGguc2luKCh0KmktYSkqdy9oKStjK2V9LGVhc2VPdXRFeHBvOih0LGUscyxpKT0+dD09PWk/ZStzOnMqLSgyKiooLTEwKnQvaSkrMSkrZSxlYXNlT3V0UXVhZDoodCxlLHMsaSk9Pi1zKih0Lz1pKSoodC0yKStlLGVhc2VPdXRRdWFydDoodCxlLHMsaSk9Pi1zKigodD10L2ktMSkqdCoqMy0xKStlLGVhc2VPdXRRdWludDoodCxlLHMsaSk9PnMqKCh0L2ktMSkqKjUrMSkrZSxlYXNlT3V0U2luZToodCxlLHMsaSk9PnMqTWF0aC5zaW4odC9pKmIpK2V9KTtjb25zdCBicz0oKT0+ITE7Y2xhc3Mgd3N7Y29uc3RydWN0b3IoZSl7bGV0e3N0YXJ0VmFsdWU6cyxieVZhbHVlOmksZHVyYXRpb246cj01MDAsZGVsYXk6bj0wLGVhc2luZzpvPXlzLG9uU3RhcnQ6YT1DLG9uQ2hhbmdlOmg9QyxvbkNvbXBsZXRlOmM9QyxhYm9ydDpsPWJzLHRhcmdldDp1fT1lO3QodGhpcyxcIl9zdGF0ZVwiLFwicGVuZGluZ1wiKSx0KHRoaXMsXCJkdXJhdGlvblByb2dyZXNzXCIsMCksdCh0aGlzLFwidmFsdWVQcm9ncmVzc1wiLDApLHRoaXMudGljaz10aGlzLnRpY2suYmluZCh0aGlzKSx0aGlzLmR1cmF0aW9uPXIsdGhpcy5kZWxheT1uLHRoaXMuZWFzaW5nPW8sdGhpcy5fb25TdGFydD1hLHRoaXMuX29uQ2hhbmdlPWgsdGhpcy5fb25Db21wbGV0ZT1jLHRoaXMuX2Fib3J0PWwsdGhpcy50YXJnZXQ9dSx0aGlzLnN0YXJ0VmFsdWU9cyx0aGlzLmJ5VmFsdWU9aSx0aGlzLnZhbHVlPXRoaXMuc3RhcnRWYWx1ZSx0aGlzLmVuZFZhbHVlPU9iamVjdC5mcmVlemUodGhpcy5jYWxjdWxhdGUodGhpcy5kdXJhdGlvbikudmFsdWUpfWdldCBzdGF0ZSgpe3JldHVybiB0aGlzLl9zdGF0ZX1pc0RvbmUoKXtyZXR1cm5cImFib3J0ZWRcIj09PXRoaXMuX3N0YXRlfHxcImNvbXBsZXRlZFwiPT09dGhpcy5fc3RhdGV9c3RhcnQoKXtjb25zdCB0PXQ9PntcInBlbmRpbmdcIj09PXRoaXMuX3N0YXRlJiYodGhpcy5zdGFydFRpbWU9dHx8K25ldyBEYXRlLHRoaXMuX3N0YXRlPVwicnVubmluZ1wiLHRoaXMuX29uU3RhcnQoKSx0aGlzLnRpY2sodGhpcy5zdGFydFRpbWUpKX07dGhpcy5yZWdpc3RlcigpLHRoaXMuZGVsYXk+MD9zZXRUaW1lb3V0KCgoKT0+dXQodCkpLHRoaXMuZGVsYXkpOnV0KHQpfXRpY2sodCl7Y29uc3QgZT0odHx8K25ldyBEYXRlKS10aGlzLnN0YXJ0VGltZSxzPU1hdGgubWluKGUsdGhpcy5kdXJhdGlvbik7dGhpcy5kdXJhdGlvblByb2dyZXNzPXMvdGhpcy5kdXJhdGlvbjtjb25zdHt2YWx1ZTppLHZhbHVlUHJvZ3Jlc3M6cn09dGhpcy5jYWxjdWxhdGUocyk7dGhpcy52YWx1ZT1PYmplY3QuZnJlZXplKGkpLHRoaXMudmFsdWVQcm9ncmVzcz1yLFwiYWJvcnRlZFwiIT09dGhpcy5fc3RhdGUmJih0aGlzLl9hYm9ydCh0aGlzLnZhbHVlLHRoaXMudmFsdWVQcm9ncmVzcyx0aGlzLmR1cmF0aW9uUHJvZ3Jlc3MpPyh0aGlzLl9zdGF0ZT1cImFib3J0ZWRcIix0aGlzLnVucmVnaXN0ZXIoKSk6ZT49dGhpcy5kdXJhdGlvbj8odGhpcy5kdXJhdGlvblByb2dyZXNzPXRoaXMudmFsdWVQcm9ncmVzcz0xLHRoaXMuX29uQ2hhbmdlKHRoaXMuZW5kVmFsdWUsdGhpcy52YWx1ZVByb2dyZXNzLHRoaXMuZHVyYXRpb25Qcm9ncmVzcyksdGhpcy5fc3RhdGU9XCJjb21wbGV0ZWRcIix0aGlzLl9vbkNvbXBsZXRlKHRoaXMuZW5kVmFsdWUsdGhpcy52YWx1ZVByb2dyZXNzLHRoaXMuZHVyYXRpb25Qcm9ncmVzcyksdGhpcy51bnJlZ2lzdGVyKCkpOih0aGlzLl9vbkNoYW5nZSh0aGlzLnZhbHVlLHRoaXMudmFsdWVQcm9ncmVzcyx0aGlzLmR1cmF0aW9uUHJvZ3Jlc3MpLHV0KHRoaXMudGljaykpKX1yZWdpc3Rlcigpe2V0LnB1c2godGhpcyl9dW5yZWdpc3Rlcigpe2V0LnJlbW92ZSh0aGlzKX1hYm9ydCgpe3RoaXMuX3N0YXRlPVwiYWJvcnRlZFwiLHRoaXMudW5yZWdpc3RlcigpfX1jb25zdCBTcz1bXCJzdGFydFZhbHVlXCIsXCJlbmRWYWx1ZVwiXTtjbGFzcyBUcyBleHRlbmRzIHdze2NvbnN0cnVjdG9yKHQpe2xldHtzdGFydFZhbHVlOmU9MCxlbmRWYWx1ZTpyPTEwMH09dDtzdXBlcihzKHMoe30saSh0LFNzKSkse30se3N0YXJ0VmFsdWU6ZSxieVZhbHVlOnItZX0pKX1jYWxjdWxhdGUodCl7Y29uc3QgZT10aGlzLmVhc2luZyh0LHRoaXMuc3RhcnRWYWx1ZSx0aGlzLmJ5VmFsdWUsdGhpcy5kdXJhdGlvbik7cmV0dXJue3ZhbHVlOmUsdmFsdWVQcm9ncmVzczpNYXRoLmFicygoZS10aGlzLnN0YXJ0VmFsdWUpL3RoaXMuYnlWYWx1ZSl9fX1jb25zdCBPcz1bXCJzdGFydFZhbHVlXCIsXCJlbmRWYWx1ZVwiXTtjbGFzcyBrcyBleHRlbmRzIHdze2NvbnN0cnVjdG9yKHQpe2xldHtzdGFydFZhbHVlOmU9WzBdLGVuZFZhbHVlOnI9WzEwMF19PXQ7c3VwZXIocyhzKHt9LGkodCxPcykpLHt9LHtzdGFydFZhbHVlOmUsYnlWYWx1ZTpyLm1hcCgoKHQscyk9PnQtZVtzXSkpfSkpfWNhbGN1bGF0ZSh0KXtjb25zdCBlPXRoaXMuc3RhcnRWYWx1ZS5tYXAoKChlLHMpPT50aGlzLmVhc2luZyh0LGUsdGhpcy5ieVZhbHVlW3NdLHRoaXMuZHVyYXRpb24scykpKTtyZXR1cm57dmFsdWU6ZSx2YWx1ZVByb2dyZXNzOk1hdGguYWJzKChlWzBdLXRoaXMuc3RhcnRWYWx1ZVswXSkvdGhpcy5ieVZhbHVlWzBdKX19fWNvbnN0IERzPVtcInN0YXJ0VmFsdWVcIixcImVuZFZhbHVlXCIsXCJlYXNpbmdcIixcIm9uQ2hhbmdlXCIsXCJvbkNvbXBsZXRlXCIsXCJhYm9ydFwiXSxNcz0odCxlLHMsaSk9PmUrcyooMS1NYXRoLmNvcyh0L2kqYikpLFBzPXQ9PnQmJigoZSxzLGkpPT50KG5ldyBVdChlKS50b1JnYmEoKSxzLGkpKTtjbGFzcyBFcyBleHRlbmRzIHdze2NvbnN0cnVjdG9yKHQpe2xldHtzdGFydFZhbHVlOmUsZW5kVmFsdWU6cixlYXNpbmc6bj1NcyxvbkNoYW5nZTpvLG9uQ29tcGxldGU6YSxhYm9ydDpofT10LGM9aSh0LERzKTtjb25zdCBsPW5ldyBVdChlKS5nZXRTb3VyY2UoKSx1PW5ldyBVdChyKS5nZXRTb3VyY2UoKTtzdXBlcihzKHMoe30sYykse30se3N0YXJ0VmFsdWU6bCxieVZhbHVlOnUubWFwKCgodCxlKT0+dC1sW2VdKSksZWFzaW5nOm4sb25DaGFuZ2U6UHMobyksb25Db21wbGV0ZTpQcyhhKSxhYm9ydDpQcyhoKX0pKX1jYWxjdWxhdGUodCl7Y29uc3RbZSxzLGkscl09dGhpcy5zdGFydFZhbHVlLm1hcCgoKGUscyk9PnRoaXMuZWFzaW5nKHQsZSx0aGlzLmJ5VmFsdWVbc10sdGhpcy5kdXJhdGlvbixzKSkpLG49Wy4uLltlLHMsaV0ubWFwKE1hdGgucm91bmQpLGRzKDAsciwxKV07cmV0dXJue3ZhbHVlOm4sdmFsdWVQcm9ncmVzczpuLm1hcCgoKHQsZSk9PjAhPT10aGlzLmJ5VmFsdWVbZV0/TWF0aC5hYnMoKHQtdGhpcy5zdGFydFZhbHVlW2VdKS90aGlzLmJ5VmFsdWVbZV0pOjApKS5maW5kKCh0PT4wIT09dCkpfHwwfX19ZnVuY3Rpb24gQXModCl7Y29uc3QgZT0odD0+QXJyYXkuaXNBcnJheSh0LnN0YXJ0VmFsdWUpfHxBcnJheS5pc0FycmF5KHQuZW5kVmFsdWUpKSh0KT9uZXcga3ModCk6bmV3IFRzKHQpO3JldHVybiBlLnN0YXJ0KCksZX1mdW5jdGlvbiBqcyh0KXtjb25zdCBlPW5ldyBFcyh0KTtyZXR1cm4gZS5zdGFydCgpLGV9Y2xhc3MgRnN7Y29uc3RydWN0b3IodCl7dGhpcy5zdGF0dXM9dCx0aGlzLnBvaW50cz1bXX1pbmNsdWRlcyh0KXtyZXR1cm4gdGhpcy5wb2ludHMuc29tZSgoZT0+ZS5lcSh0KSkpfWFwcGVuZCgpe2Zvcih2YXIgdD1hcmd1bWVudHMubGVuZ3RoLGU9bmV3IEFycmF5KHQpLHM9MDtzPHQ7cysrKWVbc109YXJndW1lbnRzW3NdO3JldHVybiB0aGlzLnBvaW50cz10aGlzLnBvaW50cy5jb25jYXQoZS5maWx0ZXIoKHQ9PiF0aGlzLmluY2x1ZGVzKHQpKSkpLHRoaXN9c3RhdGljIGlzUG9pbnRDb250YWluZWQodCxlLHMpe2xldCBpPWFyZ3VtZW50cy5sZW5ndGg+MyYmdm9pZCAwIT09YXJndW1lbnRzWzNdJiZhcmd1bWVudHNbM107aWYoZS5lcShzKSlyZXR1cm4gdC5lcShlKTtpZihlLng9PT1zLngpcmV0dXJuIHQueD09PWUueCYmKGl8fHQueT49TWF0aC5taW4oZS55LHMueSkmJnQueTw9TWF0aC5tYXgoZS55LHMueSkpO2lmKGUueT09PXMueSlyZXR1cm4gdC55PT09ZS55JiYoaXx8dC54Pj1NYXRoLm1pbihlLngscy54KSYmdC54PD1NYXRoLm1heChlLngscy54KSk7e2NvbnN0IHI9dHMoZSxzKSxuPXRzKGUsdCkuZGl2aWRlKHIpO3JldHVybiBpP01hdGguYWJzKG4ueCk9PT1NYXRoLmFicyhuLnkpOm4ueD09PW4ueSYmbi54Pj0wJiZuLng8PTF9fXN0YXRpYyBpc1BvaW50SW5Qb2x5Z29uKHQsZSl7Y29uc3Qgcz1uZXcgb3QodCkuc2V0WChNYXRoLm1pbih0LngtMSwuLi5lLm1hcCgodD0+dC54KSkpKTtsZXQgaT0wO2ZvcihsZXQgcj0wO3I8ZS5sZW5ndGg7cisrKXtjb25zdCBuPXRoaXMuaW50ZXJzZWN0U2VnbWVudFNlZ21lbnQoZVtyXSxlWyhyKzEpJWUubGVuZ3RoXSx0LHMpO2lmKG4uaW5jbHVkZXModCkpcmV0dXJuITA7aSs9TnVtYmVyKFwiSW50ZXJzZWN0aW9uXCI9PT1uLnN0YXR1cyl9cmV0dXJuIGklMj09MX1zdGF0aWMgaW50ZXJzZWN0TGluZUxpbmUodCxlLHMsaSl7bGV0IHI9IShhcmd1bWVudHMubGVuZ3RoPjQmJnZvaWQgMCE9PWFyZ3VtZW50c1s0XSl8fGFyZ3VtZW50c1s0XSxuPSEoYXJndW1lbnRzLmxlbmd0aD41JiZ2b2lkIDAhPT1hcmd1bWVudHNbNV0pfHxhcmd1bWVudHNbNV07Y29uc3Qgbz1lLngtdC54LGE9ZS55LXQueSxoPWkueC1zLngsYz1pLnktcy55LGw9dC54LXMueCx1PXQueS1zLnksZD1oKnUtYypsLGc9byp1LWEqbCxmPWMqby1oKmE7aWYoMCE9PWYpe2NvbnN0IGU9ZC9mLHM9Zy9mO3JldHVybihyfHwwPD1lJiZlPD0xKSYmKG58fDA8PXMmJnM8PTEpP25ldyBGcyhcIkludGVyc2VjdGlvblwiKS5hcHBlbmQobmV3IG90KHQueCtlKm8sdC55K2UqYSkpOm5ldyBGc31pZigwPT09ZHx8MD09PWcpe2NvbnN0IG89cnx8bnx8RnMuaXNQb2ludENvbnRhaW5lZCh0LHMsaSl8fEZzLmlzUG9pbnRDb250YWluZWQoZSxzLGkpfHxGcy5pc1BvaW50Q29udGFpbmVkKHMsdCxlKXx8RnMuaXNQb2ludENvbnRhaW5lZChpLHQsZSk7cmV0dXJuIG5ldyBGcyhvP1wiQ29pbmNpZGVudFwiOnZvaWQgMCl9cmV0dXJuIG5ldyBGcyhcIlBhcmFsbGVsXCIpfXN0YXRpYyBpbnRlcnNlY3RTZWdtZW50TGluZSh0LGUscyxpKXtyZXR1cm4gRnMuaW50ZXJzZWN0TGluZUxpbmUodCxlLHMsaSwhMSwhMCl9c3RhdGljIGludGVyc2VjdFNlZ21lbnRTZWdtZW50KHQsZSxzLGkpe3JldHVybiBGcy5pbnRlcnNlY3RMaW5lTGluZSh0LGUscyxpLCExLCExKX1zdGF0aWMgaW50ZXJzZWN0TGluZVBvbHlnb24odCxlLHMpe2xldCBpPSEoYXJndW1lbnRzLmxlbmd0aD4zJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10pfHxhcmd1bWVudHNbM107Y29uc3Qgcj1uZXcgRnMsbj1zLmxlbmd0aDtmb3IobGV0IG8sYSxoLGM9MDtjPG47YysrKXtpZihvPXNbY10sYT1zWyhjKzEpJW5dLGg9RnMuaW50ZXJzZWN0TGluZUxpbmUodCxlLG8sYSxpLCExKSxcIkNvaW5jaWRlbnRcIj09PWguc3RhdHVzKXJldHVybiBoO3IuYXBwZW5kKC4uLmgucG9pbnRzKX1yZXR1cm4gci5wb2ludHMubGVuZ3RoPjAmJihyLnN0YXR1cz1cIkludGVyc2VjdGlvblwiKSxyfXN0YXRpYyBpbnRlcnNlY3RTZWdtZW50UG9seWdvbih0LGUscyl7cmV0dXJuIEZzLmludGVyc2VjdExpbmVQb2x5Z29uKHQsZSxzLCExKX1zdGF0aWMgaW50ZXJzZWN0UG9seWdvblBvbHlnb24odCxlKXtjb25zdCBzPW5ldyBGcyxpPXQubGVuZ3RoLHI9W107Zm9yKGxldCBuPTA7bjxpO24rKyl7Y29uc3Qgbz10W25dLGE9dFsobisxKSVpXSxoPUZzLmludGVyc2VjdFNlZ21lbnRQb2x5Z29uKG8sYSxlKTtcIkNvaW5jaWRlbnRcIj09PWguc3RhdHVzPyhyLnB1c2goaCkscy5hcHBlbmQobyxhKSk6cy5hcHBlbmQoLi4uaC5wb2ludHMpfXJldHVybiByLmxlbmd0aD4wJiZyLmxlbmd0aD09PXQubGVuZ3RoP25ldyBGcyhcIkNvaW5jaWRlbnRcIik6KHMucG9pbnRzLmxlbmd0aD4wJiYocy5zdGF0dXM9XCJJbnRlcnNlY3Rpb25cIikscyl9c3RhdGljIGludGVyc2VjdFBvbHlnb25SZWN0YW5nbGUodCxlLHMpe2NvbnN0IGk9ZS5taW4ocykscj1lLm1heChzKSxuPW5ldyBvdChyLngsaS55KSxvPW5ldyBvdChpLngsci55KTtyZXR1cm4gRnMuaW50ZXJzZWN0UG9seWdvblBvbHlnb24odCxbaSxuLHIsb10pfX1jbGFzcyBMcyBleHRlbmRzIGx0e2dldFgoKXtyZXR1cm4gdGhpcy5nZXRYWSgpLnh9c2V0WCh0KXt0aGlzLnNldFhZKHRoaXMuZ2V0WFkoKS5zZXRYKHQpKX1nZXRZKCl7cmV0dXJuIHRoaXMuZ2V0WFkoKS55fXNldFkodCl7dGhpcy5zZXRYWSh0aGlzLmdldFhZKCkuc2V0WSh0KSl9Z2V0UmVsYXRpdmVYKCl7cmV0dXJuIHRoaXMubGVmdH1zZXRSZWxhdGl2ZVgodCl7dGhpcy5sZWZ0PXR9Z2V0UmVsYXRpdmVZKCl7cmV0dXJuIHRoaXMudG9wfXNldFJlbGF0aXZlWSh0KXt0aGlzLnRvcD10fWdldFhZKCl7Y29uc3QgdD10aGlzLmdldFJlbGF0aXZlWFkoKTtyZXR1cm4gdGhpcy5ncm91cD9idCh0LHRoaXMuZ3JvdXAuY2FsY1RyYW5zZm9ybU1hdHJpeCgpKTp0fXNldFhZKHQsZSxzKXt0aGlzLmdyb3VwJiYodD1idCh0LHd0KHRoaXMuZ3JvdXAuY2FsY1RyYW5zZm9ybU1hdHJpeCgpKSkpLHRoaXMuc2V0UmVsYXRpdmVYWSh0LGUscyl9Z2V0UmVsYXRpdmVYWSgpe3JldHVybiBuZXcgb3QodGhpcy5sZWZ0LHRoaXMudG9wKX1zZXRSZWxhdGl2ZVhZKHQpe2xldCBlPWFyZ3VtZW50cy5sZW5ndGg+MSYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXTp0aGlzLm9yaWdpblgscz1hcmd1bWVudHMubGVuZ3RoPjImJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06dGhpcy5vcmlnaW5ZO3RoaXMuc2V0UG9zaXRpb25CeU9yaWdpbih0LGUscyl9aXNTdHJva2VBY2NvdW50ZWRGb3JJbkRpbWVuc2lvbnMoKXtyZXR1cm4hMX1nZXRDb29yZHMoKXtjb25zdHt0bDp0LHRyOmUsYnI6cyxibDppfT10aGlzLmFDb29yZHN8fCh0aGlzLmFDb29yZHM9dGhpcy5jYWxjQUNvb3JkcygpKSxyPVt0LGUscyxpXTtpZih0aGlzLmdyb3VwKXtjb25zdCB0PXRoaXMuZ3JvdXAuY2FsY1RyYW5zZm9ybU1hdHJpeCgpO3JldHVybiByLm1hcCgoZT0+YnQoZSx0KSkpfXJldHVybiByfWludGVyc2VjdHNXaXRoUmVjdCh0LGUpe3JldHVyblwiSW50ZXJzZWN0aW9uXCI9PT1Gcy5pbnRlcnNlY3RQb2x5Z29uUmVjdGFuZ2xlKHRoaXMuZ2V0Q29vcmRzKCksdCxlKS5zdGF0dXN9aW50ZXJzZWN0c1dpdGhPYmplY3QodCl7Y29uc3QgZT1Gcy5pbnRlcnNlY3RQb2x5Z29uUG9seWdvbih0aGlzLmdldENvb3JkcygpLHQuZ2V0Q29vcmRzKCkpO3JldHVyblwiSW50ZXJzZWN0aW9uXCI9PT1lLnN0YXR1c3x8XCJDb2luY2lkZW50XCI9PT1lLnN0YXR1c3x8dC5pc0NvbnRhaW5lZFdpdGhpbk9iamVjdCh0aGlzKXx8dGhpcy5pc0NvbnRhaW5lZFdpdGhpbk9iamVjdCh0KX1pc0NvbnRhaW5lZFdpdGhpbk9iamVjdCh0KXtyZXR1cm4gdGhpcy5nZXRDb29yZHMoKS5ldmVyeSgoZT0+dC5jb250YWluc1BvaW50KGUpKSl9aXNDb250YWluZWRXaXRoaW5SZWN0KHQsZSl7Y29uc3R7bGVmdDpzLHRvcDppLHdpZHRoOnIsaGVpZ2h0Om59PXRoaXMuZ2V0Qm91bmRpbmdSZWN0KCk7cmV0dXJuIHM+PXQueCYmcytyPD1lLngmJmk+PXQueSYmaStuPD1lLnl9aXNPdmVybGFwcGluZyh0KXtyZXR1cm4gdGhpcy5pbnRlcnNlY3RzV2l0aE9iamVjdCh0KXx8dGhpcy5pc0NvbnRhaW5lZFdpdGhpbk9iamVjdCh0KXx8dC5pc0NvbnRhaW5lZFdpdGhpbk9iamVjdCh0aGlzKX1jb250YWluc1BvaW50KHQpe3JldHVybiBGcy5pc1BvaW50SW5Qb2x5Z29uKHQsdGhpcy5nZXRDb29yZHMoKSl9aXNPblNjcmVlbigpe2lmKCF0aGlzLmNhbnZhcylyZXR1cm4hMTtjb25zdHt0bDp0LGJyOmV9PXRoaXMuY2FudmFzLnZwdENvb3JkcztyZXR1cm4hIXRoaXMuZ2V0Q29vcmRzKCkuc29tZSgocz0+cy54PD1lLngmJnMueD49dC54JiZzLnk8PWUueSYmcy55Pj10LnkpKXx8KCEhdGhpcy5pbnRlcnNlY3RzV2l0aFJlY3QodCxlKXx8dGhpcy5jb250YWluc1BvaW50KHQubWlkUG9pbnRGcm9tKGUpKSl9aXNQYXJ0aWFsbHlPblNjcmVlbigpe2lmKCF0aGlzLmNhbnZhcylyZXR1cm4hMTtjb25zdHt0bDp0LGJyOmV9PXRoaXMuY2FudmFzLnZwdENvb3JkcztpZih0aGlzLmludGVyc2VjdHNXaXRoUmVjdCh0LGUpKXJldHVybiEwO3JldHVybiB0aGlzLmdldENvb3JkcygpLmV2ZXJ5KChzPT4ocy54Pj1lLnh8fHMueDw9dC54KSYmKHMueT49ZS55fHxzLnk8PXQueSkpKSYmdGhpcy5jb250YWluc1BvaW50KHQubWlkUG9pbnRGcm9tKGUpKX1nZXRCb3VuZGluZ1JlY3QoKXtyZXR1cm4gbWUodGhpcy5nZXRDb29yZHMoKSl9Z2V0U2NhbGVkV2lkdGgoKXtyZXR1cm4gdGhpcy5fZ2V0VHJhbnNmb3JtZWREaW1lbnNpb25zKCkueH1nZXRTY2FsZWRIZWlnaHQoKXtyZXR1cm4gdGhpcy5fZ2V0VHJhbnNmb3JtZWREaW1lbnNpb25zKCkueX1zY2FsZSh0KXt0aGlzLl9zZXQoRyx0KSx0aGlzLl9zZXQoTix0KSx0aGlzLnNldENvb3JkcygpfXNjYWxlVG9XaWR0aCh0KXtjb25zdCBlPXRoaXMuZ2V0Qm91bmRpbmdSZWN0KCkud2lkdGgvdGhpcy5nZXRTY2FsZWRXaWR0aCgpO3JldHVybiB0aGlzLnNjYWxlKHQvdGhpcy53aWR0aC9lKX1zY2FsZVRvSGVpZ2h0KHQpe2NvbnN0IGU9dGhpcy5nZXRCb3VuZGluZ1JlY3QoKS5oZWlnaHQvdGhpcy5nZXRTY2FsZWRIZWlnaHQoKTtyZXR1cm4gdGhpcy5zY2FsZSh0L3RoaXMuaGVpZ2h0L2UpfWdldENhbnZhc1JldGluYVNjYWxpbmcoKXt2YXIgdDtyZXR1cm4obnVsbD09PSh0PXRoaXMuY2FudmFzKXx8dm9pZCAwPT09dD92b2lkIDA6dC5nZXRSZXRpbmFTY2FsaW5nKCkpfHwxfWdldFRvdGFsQW5nbGUoKXtyZXR1cm4gdGhpcy5ncm91cD94dChPdCh0aGlzLmNhbGNUcmFuc2Zvcm1NYXRyaXgoKSkpOnRoaXMuYW5nbGV9Z2V0Vmlld3BvcnRUcmFuc2Zvcm0oKXt2YXIgdDtyZXR1cm4obnVsbD09PSh0PXRoaXMuY2FudmFzKXx8dm9pZCAwPT09dD92b2lkIDA6dC52aWV3cG9ydFRyYW5zZm9ybSl8fFQuY29uY2F0KCl9Y2FsY0FDb29yZHMoKXtjb25zdCB0PU10KHthbmdsZTp0aGlzLmFuZ2xlfSkse3g6ZSx5OnN9PXRoaXMuZ2V0UmVsYXRpdmVDZW50ZXJQb2ludCgpLGk9RHQoZSxzKSxyPVN0KGksdCksbj10aGlzLl9nZXRUcmFuc2Zvcm1lZERpbWVuc2lvbnMoKSxvPW4ueC8yLGE9bi55LzI7cmV0dXJue3RsOmJ0KHt4Oi1vLHk6LWF9LHIpLHRyOmJ0KHt4Om8seTotYX0sciksYmw6YnQoe3g6LW8seTphfSxyKSxicjpidCh7eDpvLHk6YX0scil9fXNldENvb3Jkcygpe3RoaXMuYUNvb3Jkcz10aGlzLmNhbGNBQ29vcmRzKCl9dHJhbnNmb3JtTWF0cml4S2V5KCl7bGV0IHQ9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0mJmFyZ3VtZW50c1swXSxlPVtdO3JldHVybiF0JiZ0aGlzLmdyb3VwJiYoZT10aGlzLmdyb3VwLnRyYW5zZm9ybU1hdHJpeEtleSh0KSksZS5wdXNoKHRoaXMudG9wLHRoaXMubGVmdCx0aGlzLndpZHRoLHRoaXMuaGVpZ2h0LHRoaXMuc2NhbGVYLHRoaXMuc2NhbGVZLHRoaXMuYW5nbGUsdGhpcy5zdHJva2VXaWR0aCx0aGlzLnNrZXdYLHRoaXMuc2tld1ksK3RoaXMuZmxpcFgsK3RoaXMuZmxpcFksTWUodGhpcy5vcmlnaW5YKSxNZSh0aGlzLm9yaWdpblkpKSxlfWNhbGNUcmFuc2Zvcm1NYXRyaXgoKXtsZXQgdD1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXSYmYXJndW1lbnRzWzBdLGU9dGhpcy5jYWxjT3duTWF0cml4KCk7aWYodHx8IXRoaXMuZ3JvdXApcmV0dXJuIGU7Y29uc3Qgcz10aGlzLnRyYW5zZm9ybU1hdHJpeEtleSh0KSxpPXRoaXMubWF0cml4Q2FjaGU7cmV0dXJuIGkmJmkua2V5LmV2ZXJ5KCgodCxlKT0+dD09PXNbZV0pKT9pLnZhbHVlOih0aGlzLmdyb3VwJiYoZT1TdCh0aGlzLmdyb3VwLmNhbGNUcmFuc2Zvcm1NYXRyaXgoITEpLGUpKSx0aGlzLm1hdHJpeENhY2hlPXtrZXk6cyx2YWx1ZTplfSxlKX1jYWxjT3duTWF0cml4KCl7Y29uc3QgdD10aGlzLnRyYW5zZm9ybU1hdHJpeEtleSghMCksZT10aGlzLm93bk1hdHJpeENhY2hlO2lmKGUmJmUua2V5PT09dClyZXR1cm4gZS52YWx1ZTtjb25zdCBzPXRoaXMuZ2V0UmVsYXRpdmVDZW50ZXJQb2ludCgpLGk9e2FuZ2xlOnRoaXMuYW5nbGUsdHJhbnNsYXRlWDpzLngsdHJhbnNsYXRlWTpzLnksc2NhbGVYOnRoaXMuc2NhbGVYLHNjYWxlWTp0aGlzLnNjYWxlWSxza2V3WDp0aGlzLnNrZXdYLHNrZXdZOnRoaXMuc2tld1ksZmxpcFg6dGhpcy5mbGlwWCxmbGlwWTp0aGlzLmZsaXBZfSxyPUx0KGkpO3JldHVybiB0aGlzLm93bk1hdHJpeENhY2hlPXtrZXk6dCx2YWx1ZTpyfSxyfV9nZXROb25UcmFuc2Zvcm1lZERpbWVuc2lvbnMoKXtyZXR1cm4gbmV3IG90KHRoaXMud2lkdGgsdGhpcy5oZWlnaHQpLnNjYWxhckFkZCh0aGlzLnN0cm9rZVdpZHRoKX1fY2FsY3VsYXRlQ3VycmVudERpbWVuc2lvbnModCl7cmV0dXJuIHRoaXMuX2dldFRyYW5zZm9ybWVkRGltZW5zaW9ucyh0KS50cmFuc2Zvcm0odGhpcy5nZXRWaWV3cG9ydFRyYW5zZm9ybSgpLCEwKS5zY2FsYXJBZGQoMip0aGlzLnBhZGRpbmcpfV9nZXRUcmFuc2Zvcm1lZERpbWVuc2lvbnMoKXtsZXQgdD1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e307Y29uc3QgZT1zKHtzY2FsZVg6dGhpcy5zY2FsZVgsc2NhbGVZOnRoaXMuc2NhbGVZLHNrZXdYOnRoaXMuc2tld1gsc2tld1k6dGhpcy5za2V3WSx3aWR0aDp0aGlzLndpZHRoLGhlaWdodDp0aGlzLmhlaWdodCxzdHJva2VXaWR0aDp0aGlzLnN0cm9rZVdpZHRofSx0KSxpPWUuc3Ryb2tlV2lkdGg7bGV0IHI9aSxuPTA7dGhpcy5zdHJva2VVbmlmb3JtJiYocj0wLG49aSk7Y29uc3Qgbz1lLndpZHRoK3IsYT1lLmhlaWdodCtyO2xldCBoO3JldHVybiBoPTA9PT1lLnNrZXdYJiYwPT09ZS5za2V3WT9uZXcgb3QobyplLnNjYWxlWCxhKmUuc2NhbGVZKTpiZShvLGEsRnQoZSkpLGguc2NhbGFyQWRkKG4pfXRyYW5zbGF0ZVRvR2l2ZW5PcmlnaW4odCxlLHMsaSxyKXtsZXQgbj10Lngsbz10Lnk7Y29uc3QgYT1NZShpKS1NZShlKSxoPU1lKHIpLU1lKHMpO2lmKGF8fGgpe2NvbnN0IHQ9dGhpcy5fZ2V0VHJhbnNmb3JtZWREaW1lbnNpb25zKCk7bis9YSp0Lngsbys9aCp0Lnl9cmV0dXJuIG5ldyBvdChuLG8pfXRyYW5zbGF0ZVRvQ2VudGVyUG9pbnQodCxlLHMpe2lmKGU9PT1EJiZzPT09RClyZXR1cm4gdDtjb25zdCBpPXRoaXMudHJhbnNsYXRlVG9HaXZlbk9yaWdpbih0LGUscyxELEQpO3JldHVybiB0aGlzLmFuZ2xlP2kucm90YXRlKF90KHRoaXMuYW5nbGUpLHQpOml9dHJhbnNsYXRlVG9PcmlnaW5Qb2ludCh0LGUscyl7Y29uc3QgaT10aGlzLnRyYW5zbGF0ZVRvR2l2ZW5PcmlnaW4odCxELEQsZSxzKTtyZXR1cm4gdGhpcy5hbmdsZT9pLnJvdGF0ZShfdCh0aGlzLmFuZ2xlKSx0KTppfWdldENlbnRlclBvaW50KCl7Y29uc3QgdD10aGlzLmdldFJlbGF0aXZlQ2VudGVyUG9pbnQoKTtyZXR1cm4gdGhpcy5ncm91cD9idCh0LHRoaXMuZ3JvdXAuY2FsY1RyYW5zZm9ybU1hdHJpeCgpKTp0fWdldFJlbGF0aXZlQ2VudGVyUG9pbnQoKXtyZXR1cm4gdGhpcy50cmFuc2xhdGVUb0NlbnRlclBvaW50KG5ldyBvdCh0aGlzLmxlZnQsdGhpcy50b3ApLHRoaXMub3JpZ2luWCx0aGlzLm9yaWdpblkpfWdldFBvaW50QnlPcmlnaW4odCxlKXtyZXR1cm4gdGhpcy50cmFuc2xhdGVUb09yaWdpblBvaW50KHRoaXMuZ2V0UmVsYXRpdmVDZW50ZXJQb2ludCgpLHQsZSl9c2V0UG9zaXRpb25CeU9yaWdpbih0LGUscyl7Y29uc3QgaT10aGlzLnRyYW5zbGF0ZVRvQ2VudGVyUG9pbnQodCxlLHMpLHI9dGhpcy50cmFuc2xhdGVUb09yaWdpblBvaW50KGksdGhpcy5vcmlnaW5YLHRoaXMub3JpZ2luWSk7dGhpcy5zZXQoe2xlZnQ6ci54LHRvcDpyLnl9KX1fZ2V0TGVmdFRvcENvb3Jkcygpe3JldHVybiB0aGlzLnRyYW5zbGF0ZVRvT3JpZ2luUG9pbnQodGhpcy5nZXRSZWxhdGl2ZUNlbnRlclBvaW50KCksTSxQKX19Y29uc3QgUnM9W1widHlwZVwiXSxJcz1bXCJleHRyYVBhcmFtXCJdO2xldCBCcz1jbGFzcyBlIGV4dGVuZHMgTHN7c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJuIGUub3duRGVmYXVsdHN9Z2V0IHR5cGUoKXtjb25zdCB0PXRoaXMuY29uc3RydWN0b3IudHlwZTtyZXR1cm5cIkZhYnJpY09iamVjdFwiPT09dD9cIm9iamVjdFwiOnQudG9Mb3dlckNhc2UoKX1zZXQgdHlwZSh0KXthKFwid2FyblwiLFwiU2V0dGluZyB0eXBlIGhhcyBubyBlZmZlY3RcIix0KX1jb25zdHJ1Y3RvcihzKXtzdXBlcigpLHQodGhpcyxcIl9jYWNoZUNvbnRleHRcIixudWxsKSxPYmplY3QuYXNzaWduKHRoaXMsZS5vd25EZWZhdWx0cyksdGhpcy5zZXRPcHRpb25zKHMpfV9jcmVhdGVDYWNoZUNhbnZhcygpe3RoaXMuX2NhY2hlQ2FudmFzPXB0KCksdGhpcy5fY2FjaGVDb250ZXh0PXRoaXMuX2NhY2hlQ2FudmFzLmdldENvbnRleHQoXCIyZFwiKSx0aGlzLl91cGRhdGVDYWNoZUNhbnZhcygpLHRoaXMuZGlydHk9ITB9X2xpbWl0Q2FjaGVTaXplKHQpe2NvbnN0IGU9dC53aWR0aCxzPXQuaGVpZ2h0LGk9by5tYXhDYWNoZVNpZGVMaW1pdCxyPW8ubWluQ2FjaGVTaWRlTGltaXQ7aWYoZTw9aSYmczw9aSYmZSpzPD1vLnBlcmZMaW1pdFNpemVUb3RhbClyZXR1cm4gZTxyJiYodC53aWR0aD1yKSxzPHImJih0LmhlaWdodD1yKSx0O2NvbnN0IG49ZS9zLFthLGhdPV8ubGltaXREaW1zQnlBcmVhKG4pLGM9ZHMocixhLGkpLGw9ZHMocixoLGkpO3JldHVybiBlPmMmJih0Lnpvb21YLz1lL2MsdC53aWR0aD1jLHQuY2FwcGVkPSEwKSxzPmwmJih0Lnpvb21ZLz1zL2wsdC5oZWlnaHQ9bCx0LmNhcHBlZD0hMCksdH1fZ2V0Q2FjaGVDYW52YXNEaW1lbnNpb25zKCl7Y29uc3QgdD10aGlzLmdldFRvdGFsT2JqZWN0U2NhbGluZygpLGU9dGhpcy5fZ2V0VHJhbnNmb3JtZWREaW1lbnNpb25zKHtza2V3WDowLHNrZXdZOjB9KSxzPWUueCp0LngvdGhpcy5zY2FsZVgsaT1lLnkqdC55L3RoaXMuc2NhbGVZO3JldHVybnt3aWR0aDpNYXRoLmNlaWwocysyKSxoZWlnaHQ6TWF0aC5jZWlsKGkrMiksem9vbVg6dC54LHpvb21ZOnQueSx4OnMseTppfX1fdXBkYXRlQ2FjaGVDYW52YXMoKXtjb25zdCB0PXRoaXMuX2NhY2hlQ2FudmFzLGU9dGhpcy5fY2FjaGVDb250ZXh0LHt3aWR0aDpzLGhlaWdodDppLHpvb21YOnIsem9vbVk6bix4Om8seTphfT10aGlzLl9saW1pdENhY2hlU2l6ZSh0aGlzLl9nZXRDYWNoZUNhbnZhc0RpbWVuc2lvbnMoKSksaD1zIT09dC53aWR0aHx8aSE9PXQuaGVpZ2h0LGM9dGhpcy56b29tWCE9PXJ8fHRoaXMuem9vbVkhPT1uO2lmKCF0fHwhZSlyZXR1cm4hMTtpZihofHxjKXtzIT09dC53aWR0aHx8aSE9PXQuaGVpZ2h0Pyh0LndpZHRoPXMsdC5oZWlnaHQ9aSk6KGUuc2V0VHJhbnNmb3JtKDEsMCwwLDEsMCwwKSxlLmNsZWFyUmVjdCgwLDAsdC53aWR0aCx0LmhlaWdodCkpO2NvbnN0IGg9by8yLGM9YS8yO3JldHVybiB0aGlzLmNhY2hlVHJhbnNsYXRpb25YPU1hdGgucm91bmQodC53aWR0aC8yLWgpK2gsdGhpcy5jYWNoZVRyYW5zbGF0aW9uWT1NYXRoLnJvdW5kKHQuaGVpZ2h0LzItYykrYyxlLnRyYW5zbGF0ZSh0aGlzLmNhY2hlVHJhbnNsYXRpb25YLHRoaXMuY2FjaGVUcmFuc2xhdGlvblkpLGUuc2NhbGUocixuKSx0aGlzLnpvb21YPXIsdGhpcy56b29tWT1uLCEwfXJldHVybiExfXNldE9wdGlvbnMoKXtsZXQgdD1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e307dGhpcy5fc2V0T3B0aW9ucyh0KX10cmFuc2Zvcm0odCl7Y29uc3QgZT10aGlzLmdyb3VwJiYhdGhpcy5ncm91cC5fdHJhbnNmb3JtRG9uZXx8dGhpcy5ncm91cCYmdGhpcy5jYW52YXMmJnQ9PT10aGlzLmNhbnZhcy5jb250ZXh0VG9wLHM9dGhpcy5jYWxjVHJhbnNmb3JtTWF0cml4KCFlKTt0LnRyYW5zZm9ybShzWzBdLHNbMV0sc1syXSxzWzNdLHNbNF0sc1s1XSl9Z2V0T2JqZWN0U2NhbGluZygpe2lmKCF0aGlzLmdyb3VwKXJldHVybiBuZXcgb3QoTWF0aC5hYnModGhpcy5zY2FsZVgpLE1hdGguYWJzKHRoaXMuc2NhbGVZKSk7Y29uc3QgdD1rdCh0aGlzLmNhbGNUcmFuc2Zvcm1NYXRyaXgoKSk7cmV0dXJuIG5ldyBvdChNYXRoLmFicyh0LnNjYWxlWCksTWF0aC5hYnModC5zY2FsZVkpKX1nZXRUb3RhbE9iamVjdFNjYWxpbmcoKXtjb25zdCB0PXRoaXMuZ2V0T2JqZWN0U2NhbGluZygpO2lmKHRoaXMuY2FudmFzKXtjb25zdCBlPXRoaXMuY2FudmFzLmdldFpvb20oKSxzPXRoaXMuZ2V0Q2FudmFzUmV0aW5hU2NhbGluZygpO3JldHVybiB0LnNjYWxhck11bHRpcGx5KGUqcyl9cmV0dXJuIHR9Z2V0T2JqZWN0T3BhY2l0eSgpe2xldCB0PXRoaXMub3BhY2l0eTtyZXR1cm4gdGhpcy5ncm91cCYmKHQqPXRoaXMuZ3JvdXAuZ2V0T2JqZWN0T3BhY2l0eSgpKSx0fV9jb25zdHJhaW5TY2FsZSh0KXtyZXR1cm4gTWF0aC5hYnModCk8dGhpcy5taW5TY2FsZUxpbWl0P3Q8MD8tdGhpcy5taW5TY2FsZUxpbWl0OnRoaXMubWluU2NhbGVMaW1pdDowPT09dD8xZS00OnR9X3NldCh0LGUpe3QhPT1HJiZ0IT09Tnx8KGU9dGhpcy5fY29uc3RyYWluU2NhbGUoZSkpLHQ9PT1HJiZlPDA/KHRoaXMuZmxpcFg9IXRoaXMuZmxpcFgsZSo9LTEpOlwic2NhbGVZXCI9PT10JiZlPDA/KHRoaXMuZmxpcFk9IXRoaXMuZmxpcFksZSo9LTEpOlwic2hhZG93XCIhPT10fHwhZXx8ZSBpbnN0YW5jZW9mIHVzfHwoZT1uZXcgdXMoZSkpO2NvbnN0IHM9dGhpc1t0XSE9PWU7cmV0dXJuIHRoaXNbdF09ZSxzJiZ0aGlzLmNvbnN0cnVjdG9yLmNhY2hlUHJvcGVydGllcy5pbmNsdWRlcyh0KSYmKHRoaXMuZGlydHk9ITApLHRoaXMucGFyZW50JiYodGhpcy5kaXJ0eXx8cyYmdGhpcy5jb25zdHJ1Y3Rvci5zdGF0ZVByb3BlcnRpZXMuaW5jbHVkZXModCkpJiZ0aGlzLnBhcmVudC5fc2V0KFwiZGlydHlcIiwhMCksdGhpc31pc05vdFZpc2libGUoKXtyZXR1cm4gMD09PXRoaXMub3BhY2l0eXx8IXRoaXMud2lkdGgmJiF0aGlzLmhlaWdodCYmMD09PXRoaXMuc3Ryb2tlV2lkdGh8fCF0aGlzLnZpc2libGV9cmVuZGVyKHQpe3RoaXMuaXNOb3RWaXNpYmxlKCl8fHRoaXMuY2FudmFzJiZ0aGlzLmNhbnZhcy5za2lwT2Zmc2NyZWVuJiYhdGhpcy5ncm91cCYmIXRoaXMuaXNPblNjcmVlbigpfHwodC5zYXZlKCksdGhpcy5fc2V0dXBDb21wb3NpdGVPcGVyYXRpb24odCksdGhpcy5kcmF3U2VsZWN0aW9uQmFja2dyb3VuZCh0KSx0aGlzLnRyYW5zZm9ybSh0KSx0aGlzLl9zZXRPcGFjaXR5KHQpLHRoaXMuX3NldFNoYWRvdyh0KSx0aGlzLnNob3VsZENhY2hlKCk/KHRoaXMucmVuZGVyQ2FjaGUoKSx0aGlzLmRyYXdDYWNoZU9uQ2FudmFzKHQpKToodGhpcy5fcmVtb3ZlQ2FjaGVDYW52YXMoKSx0aGlzLmRyYXdPYmplY3QodCwhMSx7fSksdGhpcy5kaXJ0eT0hMSksdC5yZXN0b3JlKCkpfWRyYXdTZWxlY3Rpb25CYWNrZ3JvdW5kKHQpe31yZW5kZXJDYWNoZSh0KXtpZih0PXR8fHt9LHRoaXMuX2NhY2hlQ2FudmFzJiZ0aGlzLl9jYWNoZUNvbnRleHR8fHRoaXMuX2NyZWF0ZUNhY2hlQ2FudmFzKCksdGhpcy5pc0NhY2hlRGlydHkoKSYmdGhpcy5fY2FjaGVDb250ZXh0KXtjb25zdHt6b29tWDplLHpvb21ZOnMsY2FjaGVUcmFuc2xhdGlvblg6aSxjYWNoZVRyYW5zbGF0aW9uWTpyfT10aGlzLHt3aWR0aDpuLGhlaWdodDpvfT10aGlzLl9jYWNoZUNhbnZhczt0aGlzLmRyYXdPYmplY3QodGhpcy5fY2FjaGVDb250ZXh0LHQuZm9yQ2xpcHBpbmcse3pvb21YOmUsem9vbVk6cyxjYWNoZVRyYW5zbGF0aW9uWDppLGNhY2hlVHJhbnNsYXRpb25ZOnIsd2lkdGg6bixoZWlnaHQ6byxwYXJlbnRDbGlwUGF0aHM6W119KSx0aGlzLmRpcnR5PSExfX1fcmVtb3ZlQ2FjaGVDYW52YXMoKXt0aGlzLl9jYWNoZUNhbnZhcz12b2lkIDAsdGhpcy5fY2FjaGVDb250ZXh0PW51bGx9aGFzU3Ryb2tlKCl7cmV0dXJuIHRoaXMuc3Ryb2tlJiZcInRyYW5zcGFyZW50XCIhPT10aGlzLnN0cm9rZSYmMCE9PXRoaXMuc3Ryb2tlV2lkdGh9aGFzRmlsbCgpe3JldHVybiB0aGlzLmZpbGwmJlwidHJhbnNwYXJlbnRcIiE9PXRoaXMuZmlsbH1uZWVkc0l0c093bkNhY2hlKCl7cmV0dXJuISEodGhpcy5wYWludEZpcnN0PT09SiYmdGhpcy5oYXNGaWxsKCkmJnRoaXMuaGFzU3Ryb2tlKCkmJnRoaXMuc2hhZG93KXx8ISF0aGlzLmNsaXBQYXRofXNob3VsZENhY2hlKCl7cmV0dXJuIHRoaXMub3duQ2FjaGluZz10aGlzLm9iamVjdENhY2hpbmcmJighdGhpcy5wYXJlbnR8fCF0aGlzLnBhcmVudC5pc09uQUNhY2hlKCkpfHx0aGlzLm5lZWRzSXRzT3duQ2FjaGUoKSx0aGlzLm93bkNhY2hpbmd9d2lsbERyYXdTaGFkb3coKXtyZXR1cm4hIXRoaXMuc2hhZG93JiYoMCE9PXRoaXMuc2hhZG93Lm9mZnNldFh8fDAhPT10aGlzLnNoYWRvdy5vZmZzZXRZKX1kcmF3Q2xpcFBhdGhPbkNhY2hlKHQsZSxzKXt0LnNhdmUoKSxlLmludmVydGVkP3QuZ2xvYmFsQ29tcG9zaXRlT3BlcmF0aW9uPVwiZGVzdGluYXRpb24tb3V0XCI6dC5nbG9iYWxDb21wb3NpdGVPcGVyYXRpb249XCJkZXN0aW5hdGlvbi1pblwiLHQuc2V0VHJhbnNmb3JtKDEsMCwwLDEsMCwwKSx0LmRyYXdJbWFnZShzLDAsMCksdC5yZXN0b3JlKCl9ZHJhd09iamVjdCh0LGUscyl7Y29uc3QgaT10aGlzLmZpbGwscj10aGlzLnN0cm9rZTtlPyh0aGlzLmZpbGw9XCJibGFja1wiLHRoaXMuc3Ryb2tlPVwiXCIsdGhpcy5fc2V0Q2xpcHBpbmdQcm9wZXJ0aWVzKHQpKTp0aGlzLl9yZW5kZXJCYWNrZ3JvdW5kKHQpLHRoaXMuX3JlbmRlcih0KSx0aGlzLl9kcmF3Q2xpcFBhdGgodCx0aGlzLmNsaXBQYXRoLHMpLHRoaXMuZmlsbD1pLHRoaXMuc3Ryb2tlPXJ9Y3JlYXRlQ2xpcFBhdGhMYXllcih0LGUpe2NvbnN0IHM9dnQoZSksaT1zLmdldENvbnRleHQoXCIyZFwiKTtpZihpLnRyYW5zbGF0ZShlLmNhY2hlVHJhbnNsYXRpb25YLGUuY2FjaGVUcmFuc2xhdGlvblkpLGkuc2NhbGUoZS56b29tWCxlLnpvb21ZKSx0Ll9jYWNoZUNhbnZhcz1zLGUucGFyZW50Q2xpcFBhdGhzLmZvckVhY2goKHQ9Pnt0LnRyYW5zZm9ybShpKX0pKSxlLnBhcmVudENsaXBQYXRocy5wdXNoKHQpLHQuYWJzb2x1dGVQb3NpdGlvbmVkKXtjb25zdCB0PXd0KHRoaXMuY2FsY1RyYW5zZm9ybU1hdHJpeCgpKTtpLnRyYW5zZm9ybSh0WzBdLHRbMV0sdFsyXSx0WzNdLHRbNF0sdFs1XSl9cmV0dXJuIHQudHJhbnNmb3JtKGkpLHQuZHJhd09iamVjdChpLCEwLGUpLHN9X2RyYXdDbGlwUGF0aCh0LGUscyl7aWYoIWUpcmV0dXJuO2UuX3RyYW5zZm9ybURvbmU9ITA7Y29uc3QgaT10aGlzLmNyZWF0ZUNsaXBQYXRoTGF5ZXIoZSxzKTt0aGlzLmRyYXdDbGlwUGF0aE9uQ2FjaGUodCxlLGkpfWRyYXdDYWNoZU9uQ2FudmFzKHQpe3Quc2NhbGUoMS90aGlzLnpvb21YLDEvdGhpcy56b29tWSksdC5kcmF3SW1hZ2UodGhpcy5fY2FjaGVDYW52YXMsLXRoaXMuY2FjaGVUcmFuc2xhdGlvblgsLXRoaXMuY2FjaGVUcmFuc2xhdGlvblkpfWlzQ2FjaGVEaXJ0eSgpe2xldCB0PWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdJiZhcmd1bWVudHNbMF07aWYodGhpcy5pc05vdFZpc2libGUoKSlyZXR1cm4hMTtjb25zdCBlPXRoaXMuX2NhY2hlQ2FudmFzLHM9dGhpcy5fY2FjaGVDb250ZXh0O3JldHVybiEoIWV8fCFzfHx0fHwhdGhpcy5fdXBkYXRlQ2FjaGVDYW52YXMoKSl8fCEhKHRoaXMuZGlydHl8fHRoaXMuY2xpcFBhdGgmJnRoaXMuY2xpcFBhdGguYWJzb2x1dGVQb3NpdGlvbmVkKSYmKGUmJnMmJiF0JiYocy5zYXZlKCkscy5zZXRUcmFuc2Zvcm0oMSwwLDAsMSwwLDApLHMuY2xlYXJSZWN0KDAsMCxlLndpZHRoLGUuaGVpZ2h0KSxzLnJlc3RvcmUoKSksITApfV9yZW5kZXJCYWNrZ3JvdW5kKHQpe2lmKCF0aGlzLmJhY2tncm91bmRDb2xvcilyZXR1cm47Y29uc3QgZT10aGlzLl9nZXROb25UcmFuc2Zvcm1lZERpbWVuc2lvbnMoKTt0LmZpbGxTdHlsZT10aGlzLmJhY2tncm91bmRDb2xvcix0LmZpbGxSZWN0KC1lLngvMiwtZS55LzIsZS54LGUueSksdGhpcy5fcmVtb3ZlU2hhZG93KHQpfV9zZXRPcGFjaXR5KHQpe3RoaXMuZ3JvdXAmJiF0aGlzLmdyb3VwLl90cmFuc2Zvcm1Eb25lP3QuZ2xvYmFsQWxwaGE9dGhpcy5nZXRPYmplY3RPcGFjaXR5KCk6dC5nbG9iYWxBbHBoYSo9dGhpcy5vcGFjaXR5fV9zZXRTdHJva2VTdHlsZXModCxlKXtjb25zdCBzPWUuc3Ryb2tlO3MmJih0LmxpbmVXaWR0aD1lLnN0cm9rZVdpZHRoLHQubGluZUNhcD1lLnN0cm9rZUxpbmVDYXAsdC5saW5lRGFzaE9mZnNldD1lLnN0cm9rZURhc2hPZmZzZXQsdC5saW5lSm9pbj1lLnN0cm9rZUxpbmVKb2luLHQubWl0ZXJMaW1pdD1lLnN0cm9rZU1pdGVyTGltaXQsJHQocyk/XCJwZXJjZW50YWdlXCI9PT1zLmdyYWRpZW50VW5pdHN8fHMuZ3JhZGllbnRUcmFuc2Zvcm18fHMucGF0dGVyblRyYW5zZm9ybT90aGlzLl9hcHBseVBhdHRlcm5Gb3JUcmFuc2Zvcm1lZEdyYWRpZW50KHQscyk6KHQuc3Ryb2tlU3R5bGU9cy50b0xpdmUodCksdGhpcy5fYXBwbHlQYXR0ZXJuR3JhZGllbnRUcmFuc2Zvcm0odCxzKSk6dC5zdHJva2VTdHlsZT1lLnN0cm9rZSl9X3NldEZpbGxTdHlsZXModCxlKXtsZXR7ZmlsbDpzfT1lO3MmJigkdChzKT8odC5maWxsU3R5bGU9cy50b0xpdmUodCksdGhpcy5fYXBwbHlQYXR0ZXJuR3JhZGllbnRUcmFuc2Zvcm0odCxzKSk6dC5maWxsU3R5bGU9cyl9X3NldENsaXBwaW5nUHJvcGVydGllcyh0KXt0Lmdsb2JhbEFscGhhPTEsdC5zdHJva2VTdHlsZT1cInRyYW5zcGFyZW50XCIsdC5maWxsU3R5bGU9XCIjMDAwMDAwXCJ9X3NldExpbmVEYXNoKHQsZSl7ZSYmMCE9PWUubGVuZ3RoJiZ0LnNldExpbmVEYXNoKGUpfV9zZXRTaGFkb3codCl7aWYoIXRoaXMuc2hhZG93KXJldHVybjtjb25zdCBlPXRoaXMuc2hhZG93LHM9dGhpcy5jYW52YXMsaT10aGlzLmdldENhbnZhc1JldGluYVNjYWxpbmcoKSxbciwsLG5dPShudWxsPT1zP3ZvaWQgMDpzLnZpZXdwb3J0VHJhbnNmb3JtKXx8VCxhPXIqaSxoPW4qaSxjPWUubm9uU2NhbGluZz9uZXcgb3QoMSwxKTp0aGlzLmdldE9iamVjdFNjYWxpbmcoKTt0LnNoYWRvd0NvbG9yPWUuY29sb3IsdC5zaGFkb3dCbHVyPWUuYmx1cipvLmJyb3dzZXJTaGFkb3dCbHVyQ29uc3RhbnQqKGEraCkqKGMueCtjLnkpLzQsdC5zaGFkb3dPZmZzZXRYPWUub2Zmc2V0WCphKmMueCx0LnNoYWRvd09mZnNldFk9ZS5vZmZzZXRZKmgqYy55fV9yZW1vdmVTaGFkb3codCl7dGhpcy5zaGFkb3cmJih0LnNoYWRvd0NvbG9yPVwiXCIsdC5zaGFkb3dCbHVyPXQuc2hhZG93T2Zmc2V0WD10LnNoYWRvd09mZnNldFk9MCl9X2FwcGx5UGF0dGVybkdyYWRpZW50VHJhbnNmb3JtKHQsZSl7aWYoISR0KGUpKXJldHVybntvZmZzZXRYOjAsb2Zmc2V0WTowfTtjb25zdCBzPWUuZ3JhZGllbnRUcmFuc2Zvcm18fGUucGF0dGVyblRyYW5zZm9ybSxpPS10aGlzLndpZHRoLzIrZS5vZmZzZXRYfHwwLHI9LXRoaXMuaGVpZ2h0LzIrZS5vZmZzZXRZfHwwO3JldHVyblwicGVyY2VudGFnZVwiPT09ZS5ncmFkaWVudFVuaXRzP3QudHJhbnNmb3JtKHRoaXMud2lkdGgsMCwwLHRoaXMuaGVpZ2h0LGkscik6dC50cmFuc2Zvcm0oMSwwLDAsMSxpLHIpLHMmJnQudHJhbnNmb3JtKHNbMF0sc1sxXSxzWzJdLHNbM10sc1s0XSxzWzVdKSx7b2Zmc2V0WDppLG9mZnNldFk6cn19X3JlbmRlclBhaW50SW5PcmRlcih0KXt0aGlzLnBhaW50Rmlyc3Q9PT1KPyh0aGlzLl9yZW5kZXJTdHJva2UodCksdGhpcy5fcmVuZGVyRmlsbCh0KSk6KHRoaXMuX3JlbmRlckZpbGwodCksdGhpcy5fcmVuZGVyU3Ryb2tlKHQpKX1fcmVuZGVyKHQpe31fcmVuZGVyRmlsbCh0KXt0aGlzLmZpbGwmJih0LnNhdmUoKSx0aGlzLl9zZXRGaWxsU3R5bGVzKHQsdGhpcyksXCJldmVub2RkXCI9PT10aGlzLmZpbGxSdWxlP3QuZmlsbChcImV2ZW5vZGRcIik6dC5maWxsKCksdC5yZXN0b3JlKCkpfV9yZW5kZXJTdHJva2UodCl7aWYodGhpcy5zdHJva2UmJjAhPT10aGlzLnN0cm9rZVdpZHRoKXtpZih0aGlzLnNoYWRvdyYmIXRoaXMuc2hhZG93LmFmZmVjdFN0cm9rZSYmdGhpcy5fcmVtb3ZlU2hhZG93KHQpLHQuc2F2ZSgpLHRoaXMuc3Ryb2tlVW5pZm9ybSl7Y29uc3QgZT10aGlzLmdldE9iamVjdFNjYWxpbmcoKTt0LnNjYWxlKDEvZS54LDEvZS55KX10aGlzLl9zZXRMaW5lRGFzaCh0LHRoaXMuc3Ryb2tlRGFzaEFycmF5KSx0aGlzLl9zZXRTdHJva2VTdHlsZXModCx0aGlzKSx0LnN0cm9rZSgpLHQucmVzdG9yZSgpfX1fYXBwbHlQYXR0ZXJuRm9yVHJhbnNmb3JtZWRHcmFkaWVudCh0LGUpe3ZhciBzO2NvbnN0IGk9dGhpcy5fbGltaXRDYWNoZVNpemUodGhpcy5fZ2V0Q2FjaGVDYW52YXNEaW1lbnNpb25zKCkpLHI9dGhpcy5nZXRDYW52YXNSZXRpbmFTY2FsaW5nKCksbj1pLngvdGhpcy5zY2FsZVgvcixvPWkueS90aGlzLnNjYWxlWS9yLGE9dnQoe3dpZHRoOk1hdGguY2VpbChuKSxoZWlnaHQ6TWF0aC5jZWlsKG8pfSksaD1hLmdldENvbnRleHQoXCIyZFwiKTtoJiYoaC5iZWdpblBhdGgoKSxoLm1vdmVUbygwLDApLGgubGluZVRvKG4sMCksaC5saW5lVG8obixvKSxoLmxpbmVUbygwLG8pLGguY2xvc2VQYXRoKCksaC50cmFuc2xhdGUobi8yLG8vMiksaC5zY2FsZShpLnpvb21YL3RoaXMuc2NhbGVYL3IsaS56b29tWS90aGlzLnNjYWxlWS9yKSx0aGlzLl9hcHBseVBhdHRlcm5HcmFkaWVudFRyYW5zZm9ybShoLGUpLGguZmlsbFN0eWxlPWUudG9MaXZlKHQpLGguZmlsbCgpLHQudHJhbnNsYXRlKC10aGlzLndpZHRoLzItdGhpcy5zdHJva2VXaWR0aC8yLC10aGlzLmhlaWdodC8yLXRoaXMuc3Ryb2tlV2lkdGgvMiksdC5zY2FsZShyKnRoaXMuc2NhbGVYL2kuem9vbVgscip0aGlzLnNjYWxlWS9pLnpvb21ZKSx0LnN0cm9rZVN0eWxlPW51bGwhPT0ocz1oLmNyZWF0ZVBhdHRlcm4oYSxcIm5vLXJlcGVhdFwiKSkmJnZvaWQgMCE9PXM/czpcIlwiKX1fZmluZENlbnRlckZyb21FbGVtZW50KCl7cmV0dXJuIG5ldyBvdCh0aGlzLmxlZnQrdGhpcy53aWR0aC8yLHRoaXMudG9wK3RoaXMuaGVpZ2h0LzIpfWNsb25lKHQpe2NvbnN0IGU9dGhpcy50b09iamVjdCh0KTtyZXR1cm4gdGhpcy5jb25zdHJ1Y3Rvci5mcm9tT2JqZWN0KGUpfWNsb25lQXNJbWFnZSh0KXtjb25zdCBlPXRoaXMudG9DYW52YXNFbGVtZW50KHQpO3JldHVybiBuZXcodHQuZ2V0Q2xhc3MoXCJpbWFnZVwiKSkoZSl9dG9DYW52YXNFbGVtZW50KCl7bGV0IHQ9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9O2NvbnN0IGU9Q2UodGhpcykscz10aGlzLmdyb3VwLGk9dGhpcy5zaGFkb3cscj1NYXRoLmFicyxuPXQuZW5hYmxlUmV0aW5hU2NhbGluZz95KCk6MSxvPSh0Lm11bHRpcGxpZXJ8fDEpKm4sYT10LmNhbnZhc1Byb3ZpZGVyfHwodD0+bmV3IHVlKHQse2VuYWJsZVJldGluYVNjYWxpbmc6ITEscmVuZGVyT25BZGRSZW1vdmU6ITEsc2tpcE9mZnNjcmVlbjohMX0pKTtkZWxldGUgdGhpcy5ncm91cCx0LndpdGhvdXRUcmFuc2Zvcm0mJnhlKHRoaXMpLHQud2l0aG91dFNoYWRvdyYmKHRoaXMuc2hhZG93PW51bGwpLHQudmlld3BvcnRUcmFuc2Zvcm0mJk9lKHRoaXMsdGhpcy5nZXRWaWV3cG9ydFRyYW5zZm9ybSgpKSx0aGlzLnNldENvb3JkcygpO2NvbnN0IGg9cHQoKSxjPXRoaXMuZ2V0Qm91bmRpbmdSZWN0KCksbD10aGlzLnNoYWRvdyx1PW5ldyBvdDtpZihsKXtjb25zdCB0PWwuYmx1cixlPWwubm9uU2NhbGluZz9uZXcgb3QoMSwxKTp0aGlzLmdldE9iamVjdFNjYWxpbmcoKTt1Lng9MipNYXRoLnJvdW5kKHIobC5vZmZzZXRYKSt0KSpyKGUueCksdS55PTIqTWF0aC5yb3VuZChyKGwub2Zmc2V0WSkrdCkqcihlLnkpfWNvbnN0IGQ9Yy53aWR0aCt1LngsZz1jLmhlaWdodCt1Lnk7aC53aWR0aD1NYXRoLmNlaWwoZCksaC5oZWlnaHQ9TWF0aC5jZWlsKGcpO2NvbnN0IGY9YShoKTtcImpwZWdcIj09PXQuZm9ybWF0JiYoZi5iYWNrZ3JvdW5kQ29sb3I9XCIjZmZmXCIpLHRoaXMuc2V0UG9zaXRpb25CeU9yaWdpbihuZXcgb3QoZi53aWR0aC8yLGYuaGVpZ2h0LzIpLEQsRCk7Y29uc3QgcD10aGlzLmNhbnZhcztmLl9vYmplY3RzPVt0aGlzXSx0aGlzLnNldChcImNhbnZhc1wiLGYpLHRoaXMuc2V0Q29vcmRzKCk7Y29uc3QgbT1mLnRvQ2FudmFzRWxlbWVudChvfHwxLHQpO3JldHVybiB0aGlzLnNldChcImNhbnZhc1wiLHApLHRoaXMuc2hhZG93PWkscyYmKHRoaXMuZ3JvdXA9cyksdGhpcy5zZXQoZSksdGhpcy5zZXRDb29yZHMoKSxmLl9vYmplY3RzPVtdLGYuZGVzdHJveSgpLG19dG9EYXRhVVJMKCl7bGV0IHQ9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9O3JldHVybiB5dCh0aGlzLnRvQ2FudmFzRWxlbWVudCh0KSx0LmZvcm1hdHx8XCJwbmdcIix0LnF1YWxpdHl8fDEpfWlzVHlwZSgpe2Zvcih2YXIgdD1hcmd1bWVudHMubGVuZ3RoLGU9bmV3IEFycmF5KHQpLHM9MDtzPHQ7cysrKWVbc109YXJndW1lbnRzW3NdO3JldHVybiBlLmluY2x1ZGVzKHRoaXMuY29uc3RydWN0b3IudHlwZSl8fGUuaW5jbHVkZXModGhpcy50eXBlKX1jb21wbGV4aXR5KCl7cmV0dXJuIDF9dG9KU09OKCl7cmV0dXJuIHRoaXMudG9PYmplY3QoKX1yb3RhdGUodCl7Y29uc3R7Y2VudGVyZWRSb3RhdGlvbjplLG9yaWdpblg6cyxvcmlnaW5ZOml9PXRoaXM7aWYoZSl7Y29uc3R7eDp0LHk6ZX09dGhpcy5nZXRSZWxhdGl2ZUNlbnRlclBvaW50KCk7dGhpcy5vcmlnaW5YPUQsdGhpcy5vcmlnaW5ZPUQsdGhpcy5sZWZ0PXQsdGhpcy50b3A9ZX1pZih0aGlzLnNldChcImFuZ2xlXCIsdCksZSl7Y29uc3R7eDp0LHk6ZX09dGhpcy50cmFuc2xhdGVUb09yaWdpblBvaW50KHRoaXMuZ2V0UmVsYXRpdmVDZW50ZXJQb2ludCgpLHMsaSk7dGhpcy5sZWZ0PXQsdGhpcy50b3A9ZSx0aGlzLm9yaWdpblg9cyx0aGlzLm9yaWdpblk9aX19c2V0T25Hcm91cCgpe31fc2V0dXBDb21wb3NpdGVPcGVyYXRpb24odCl7dGhpcy5nbG9iYWxDb21wb3NpdGVPcGVyYXRpb24mJih0Lmdsb2JhbENvbXBvc2l0ZU9wZXJhdGlvbj10aGlzLmdsb2JhbENvbXBvc2l0ZU9wZXJhdGlvbil9ZGlzcG9zZSgpe2V0LmNhbmNlbEJ5VGFyZ2V0KHRoaXMpLHRoaXMub2ZmKCksdGhpcy5fc2V0KFwiY2FudmFzXCIsdm9pZCAwKSx0aGlzLl9jYWNoZUNhbnZhcyYmcCgpLmRpc3Bvc2UodGhpcy5fY2FjaGVDYW52YXMpLHRoaXMuX2NhY2hlQ2FudmFzPXZvaWQgMCx0aGlzLl9jYWNoZUNvbnRleHQ9bnVsbH1hbmltYXRlKHQsZSl7cmV0dXJuIE9iamVjdC5lbnRyaWVzKHQpLnJlZHVjZSgoKHQscyk9PntsZXRbaSxyXT1zO3JldHVybiB0W2ldPXRoaXMuX2FuaW1hdGUoaSxyLGUpLHR9KSx7fSl9X2FuaW1hdGUodCxlKXtsZXQgaT1hcmd1bWVudHMubGVuZ3RoPjImJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06e307Y29uc3Qgcj10LnNwbGl0KFwiLlwiKSxuPXRoaXMuY29uc3RydWN0b3IuY29sb3JQcm9wZXJ0aWVzLmluY2x1ZGVzKHJbci5sZW5ndGgtMV0pLHthYm9ydDpvLHN0YXJ0VmFsdWU6YSxvbkNoYW5nZTpoLG9uQ29tcGxldGU6Y309aSxsPXMocyh7fSxpKSx7fSx7dGFyZ2V0OnRoaXMsc3RhcnRWYWx1ZTpudWxsIT1hP2E6ci5yZWR1Y2UoKCh0LGUpPT50W2VdKSx0aGlzKSxlbmRWYWx1ZTplLGFib3J0Om51bGw9PW8/dm9pZCAwOm8uYmluZCh0aGlzKSxvbkNoYW5nZToodCxlLHMpPT57ci5yZWR1Y2UoKChlLHMsaSk9PihpPT09ci5sZW5ndGgtMSYmKGVbc109dCksZVtzXSkpLHRoaXMpLGgmJmgodCxlLHMpfSxvbkNvbXBsZXRlOih0LGUscyk9Pnt0aGlzLnNldENvb3JkcygpLGMmJmModCxlLHMpfX0pO3JldHVybiBuP2pzKGwpOkFzKGwpfWlzRGVzY2VuZGFudE9mKHQpe2NvbnN0e3BhcmVudDplLGdyb3VwOnN9PXRoaXM7cmV0dXJuIGU9PT10fHxzPT09dHx8ISFlJiZlLmlzRGVzY2VuZGFudE9mKHQpfHwhIXMmJnMhPT1lJiZzLmlzRGVzY2VuZGFudE9mKHQpfWdldEFuY2VzdG9ycygpe2NvbnN0IHQ9W107bGV0IGU9dGhpcztkb3tlPWUucGFyZW50LGUmJnQucHVzaChlKX13aGlsZShlKTtyZXR1cm4gdH1maW5kQ29tbW9uQW5jZXN0b3JzKHQpe2lmKHRoaXM9PT10KXJldHVybntmb3JrOltdLG90aGVyRm9yazpbXSxjb21tb246W3RoaXMsLi4udGhpcy5nZXRBbmNlc3RvcnMoKV19O2NvbnN0IGU9dGhpcy5nZXRBbmNlc3RvcnMoKSxzPXQuZ2V0QW5jZXN0b3JzKCk7aWYoMD09PWUubGVuZ3RoJiZzLmxlbmd0aD4wJiZ0aGlzPT09c1tzLmxlbmd0aC0xXSlyZXR1cm57Zm9yazpbXSxvdGhlckZvcms6W3QsLi4ucy5zbGljZSgwLHMubGVuZ3RoLTEpXSxjb21tb246W3RoaXNdfTtmb3IobGV0IGkscj0wO3I8ZS5sZW5ndGg7cisrKXtpZihpPWVbcl0saT09PXQpcmV0dXJue2Zvcms6W3RoaXMsLi4uZS5zbGljZSgwLHIpXSxvdGhlckZvcms6W10sY29tbW9uOmUuc2xpY2Uocil9O2ZvcihsZXQgbj0wO248cy5sZW5ndGg7bisrKXtpZih0aGlzPT09c1tuXSlyZXR1cm57Zm9yazpbXSxvdGhlckZvcms6W3QsLi4ucy5zbGljZSgwLG4pXSxjb21tb246W3RoaXMsLi4uZV19O2lmKGk9PT1zW25dKXJldHVybntmb3JrOlt0aGlzLC4uLmUuc2xpY2UoMCxyKV0sb3RoZXJGb3JrOlt0LC4uLnMuc2xpY2UoMCxuKV0sY29tbW9uOmUuc2xpY2Uocil9fX1yZXR1cm57Zm9yazpbdGhpcywuLi5lXSxvdGhlckZvcms6W3QsLi4uc10sY29tbW9uOltdfX1oYXNDb21tb25BbmNlc3RvcnModCl7Y29uc3QgZT10aGlzLmZpbmRDb21tb25BbmNlc3RvcnModCk7cmV0dXJuIGUmJiEhZS5jb21tb24ubGVuZ3RofWlzSW5Gcm9udE9mKHQpe2lmKHRoaXM9PT10KXJldHVybjtjb25zdCBlPXRoaXMuZmluZENvbW1vbkFuY2VzdG9ycyh0KTtpZihlLmZvcmsuaW5jbHVkZXModCkpcmV0dXJuITA7aWYoZS5vdGhlckZvcmsuaW5jbHVkZXModGhpcykpcmV0dXJuITE7Y29uc3Qgcz1lLmNvbW1vblswXXx8dGhpcy5jYW52YXM7aWYoIXMpcmV0dXJuO2NvbnN0IGk9ZS5mb3JrLnBvcCgpLHI9ZS5vdGhlckZvcmsucG9wKCksbj1zLl9vYmplY3RzLmluZGV4T2YoaSksbz1zLl9vYmplY3RzLmluZGV4T2Yocik7cmV0dXJuIG4+LTEmJm4+b310b09iamVjdCgpe2NvbnN0IHQ9KGFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTpbXSkuY29uY2F0KGUuY3VzdG9tUHJvcGVydGllcyx0aGlzLmNvbnN0cnVjdG9yLmN1c3RvbVByb3BlcnRpZXN8fFtdKTtsZXQgaTtjb25zdCByPW8uTlVNX0ZSQUNUSU9OX0RJR0lUUyx7Y2xpcFBhdGg6bixmaWxsOmEsc3Ryb2tlOmgsc2hhZG93OmMsc3Ryb2tlRGFzaEFycmF5OmwsbGVmdDp1LHRvcDpkLG9yaWdpblg6ZyxvcmlnaW5ZOmYsd2lkdGg6cCxoZWlnaHQ6bSxzdHJva2VXaWR0aDp2LHN0cm9rZUxpbmVDYXA6eSxzdHJva2VEYXNoT2Zmc2V0Ol8sc3Ryb2tlTGluZUpvaW46QyxzdHJva2VVbmlmb3JtOmIsc3Ryb2tlTWl0ZXJMaW1pdDp3LHNjYWxlWDpTLHNjYWxlWTpULGFuZ2xlOk8sZmxpcFg6ayxmbGlwWTpELG9wYWNpdHk6TSx2aXNpYmxlOlAsYmFja2dyb3VuZENvbG9yOkUsZmlsbFJ1bGU6QSxwYWludEZpcnN0OmosZ2xvYmFsQ29tcG9zaXRlT3BlcmF0aW9uOkYsc2tld1g6TCxza2V3WTpSfT10aGlzO24mJiFuLmV4Y2x1ZGVGcm9tRXhwb3J0JiYoaT1uLnRvT2JqZWN0KHQuY29uY2F0KFwiaW52ZXJ0ZWRcIixcImFic29sdXRlUG9zaXRpb25lZFwiKSkpO2NvbnN0IEk9dD0+cXQodCxyKSxCPXMocyh7fSxYdCh0aGlzLHQpKSx7fSx7dHlwZTp0aGlzLmNvbnN0cnVjdG9yLnR5cGUsdmVyc2lvbjp4LG9yaWdpblg6ZyxvcmlnaW5ZOmYsbGVmdDpJKHUpLHRvcDpJKGQpLHdpZHRoOkkocCksaGVpZ2h0OkkobSksZmlsbDp0ZShhKT9hLnRvT2JqZWN0KCk6YSxzdHJva2U6dGUoaCk/aC50b09iamVjdCgpOmgsc3Ryb2tlV2lkdGg6SSh2KSxzdHJva2VEYXNoQXJyYXk6bD9sLmNvbmNhdCgpOmwsc3Ryb2tlTGluZUNhcDp5LHN0cm9rZURhc2hPZmZzZXQ6XyxzdHJva2VMaW5lSm9pbjpDLHN0cm9rZVVuaWZvcm06YixzdHJva2VNaXRlckxpbWl0Okkodyksc2NhbGVYOkkoUyksc2NhbGVZOkkoVCksYW5nbGU6SShPKSxmbGlwWDprLGZsaXBZOkQsb3BhY2l0eTpJKE0pLHNoYWRvdzpjP2MudG9PYmplY3QoKTpjLHZpc2libGU6UCxiYWNrZ3JvdW5kQ29sb3I6RSxmaWxsUnVsZTpBLHBhaW50Rmlyc3Q6aixnbG9iYWxDb21wb3NpdGVPcGVyYXRpb246Rixza2V3WDpJKEwpLHNrZXdZOkkoUil9LGk/e2NsaXBQYXRoOml9Om51bGwpO3JldHVybiB0aGlzLmluY2x1ZGVEZWZhdWx0VmFsdWVzP0I6dGhpcy5fcmVtb3ZlRGVmYXVsdFZhbHVlcyhCKX10b0RhdGFsZXNzT2JqZWN0KHQpe3JldHVybiB0aGlzLnRvT2JqZWN0KHQpfV9yZW1vdmVEZWZhdWx0VmFsdWVzKHQpe2NvbnN0IGU9dGhpcy5jb25zdHJ1Y3Rvci5nZXREZWZhdWx0cygpLHM9T2JqZWN0LmtleXMoZSkubGVuZ3RoPjA/ZTpPYmplY3QuZ2V0UHJvdG90eXBlT2YodGhpcyk7cmV0dXJuIFl0KHQsKCh0LGUpPT57aWYoZT09PU18fGU9PT1QfHxcInR5cGVcIj09PWUpcmV0dXJuITA7Y29uc3QgaT1zW2VdO3JldHVybiB0IT09aSYmIShBcnJheS5pc0FycmF5KHQpJiZBcnJheS5pc0FycmF5KGkpJiYwPT09dC5sZW5ndGgmJjA9PT1pLmxlbmd0aCl9KSl9dG9TdHJpbmcoKXtyZXR1cm5cIiM8XCIuY29uY2F0KHRoaXMuY29uc3RydWN0b3IudHlwZSxcIj5cIil9c3RhdGljIF9mcm9tT2JqZWN0KHQpe2xldCBlPWkodCxScykscz1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06e30se2V4dHJhUGFyYW06cn09cyxuPWkocyxJcyk7cmV0dXJuIEJ0KGUsbikudGhlbigodD0+cj8oZGVsZXRlIHRbcl0sbmV3IHRoaXMoZVtyXSx0KSk6bmV3IHRoaXModCkpKX1zdGF0aWMgZnJvbU9iamVjdCh0LGUpe3JldHVybiB0aGlzLl9mcm9tT2JqZWN0KHQsZSl9fTt0KEJzLFwic3RhdGVQcm9wZXJ0aWVzXCIsZ3MpLHQoQnMsXCJjYWNoZVByb3BlcnRpZXNcIixmcyksdChCcyxcIm93bkRlZmF1bHRzXCIscHMpLHQoQnMsXCJ0eXBlXCIsXCJGYWJyaWNPYmplY3RcIiksdChCcyxcImNvbG9yUHJvcGVydGllc1wiLFtLLEosXCJiYWNrZ3JvdW5kQ29sb3JcIl0pLHQoQnMsXCJjdXN0b21Qcm9wZXJ0aWVzXCIsW10pLHR0LnNldENsYXNzKEJzKSx0dC5zZXRDbGFzcyhCcyxcIm9iamVjdFwiKTtjb25zdCBYcz0odCxlLGkpPT4ocixuLG8sYSk9Pntjb25zdCBoPWUocixuLG8sYSk7cmV0dXJuIGgmJmtlKHQscyhzKHt9LEZlKHIsbixvLGEpKSxpKSksaH07ZnVuY3Rpb24gWXModCl7cmV0dXJuKGUscyxpLHIpPT57Y29uc3R7dGFyZ2V0Om4sb3JpZ2luWDpvLG9yaWdpblk6YX09cyxoPW4uZ2V0UmVsYXRpdmVDZW50ZXJQb2ludCgpLGM9bi50cmFuc2xhdGVUb09yaWdpblBvaW50KGgsbyxhKSxsPXQoZSxzLGkscik7cmV0dXJuIG4uc2V0UG9zaXRpb25CeU9yaWdpbihjLHMub3JpZ2luWCxzLm9yaWdpblkpLGx9fWNvbnN0IFdzPVhzKFksWXMoKCh0LGUscyxpKT0+e2NvbnN0IHI9UmUoZSxlLm9yaWdpblgsZS5vcmlnaW5ZLHMsaSk7aWYoTWUoZS5vcmlnaW5YKT09PU1lKEQpfHxNZShlLm9yaWdpblgpPT09TWUoQSkmJnIueDwwfHxNZShlLm9yaWdpblgpPT09TWUoTSkmJnIueD4wKXtjb25zdHt0YXJnZXQ6dH09ZSxzPXQuc3Ryb2tlV2lkdGgvKHQuc3Ryb2tlVW5pZm9ybT90LnNjYWxlWDoxKSxpPUVlKGUpPzI6MSxuPXQud2lkdGgsbz1NYXRoLmFicyhyLngqaS90LnNjYWxlWCktcztyZXR1cm4gdC5zZXQoXCJ3aWR0aFwiLE1hdGgubWF4KG8sMSkpLG4hPT10LndpZHRofXJldHVybiExfSkpKTtmdW5jdGlvbiBWcyh0LGUscyxpLHIpe2k9aXx8e307Y29uc3Qgbj10aGlzLnNpemVYfHxpLmNvcm5lclNpemV8fHIuY29ybmVyU2l6ZSxvPXRoaXMuc2l6ZVl8fGkuY29ybmVyU2l6ZXx8ci5jb3JuZXJTaXplLGE9dm9pZCAwIT09aS50cmFuc3BhcmVudENvcm5lcnM/aS50cmFuc3BhcmVudENvcm5lcnM6ci50cmFuc3BhcmVudENvcm5lcnMsaD1hP0o6SyxjPSFhJiYoaS5jb3JuZXJTdHJva2VDb2xvcnx8ci5jb3JuZXJTdHJva2VDb2xvcik7bGV0IGwsdT1lLGQ9czt0LnNhdmUoKSx0LmZpbGxTdHlsZT1pLmNvcm5lckNvbG9yfHxyLmNvcm5lckNvbG9yfHxcIlwiLHQuc3Ryb2tlU3R5bGU9aS5jb3JuZXJTdHJva2VDb2xvcnx8ci5jb3JuZXJTdHJva2VDb2xvcnx8XCJcIixuPm8/KGw9bix0LnNjYWxlKDEsby9uKSxkPXMqbi9vKTpvPm4/KGw9byx0LnNjYWxlKG4vbywxKSx1PWUqby9uKTpsPW4sdC5iZWdpblBhdGgoKSx0LmFyYyh1LGQsbC8yLDAsdywhMSksdFtoXSgpLGMmJnQuc3Ryb2tlKCksdC5yZXN0b3JlKCl9ZnVuY3Rpb24genModCxlLHMsaSxyKXtpPWl8fHt9O2NvbnN0IG49dGhpcy5zaXplWHx8aS5jb3JuZXJTaXplfHxyLmNvcm5lclNpemUsbz10aGlzLnNpemVZfHxpLmNvcm5lclNpemV8fHIuY29ybmVyU2l6ZSxhPXZvaWQgMCE9PWkudHJhbnNwYXJlbnRDb3JuZXJzP2kudHJhbnNwYXJlbnRDb3JuZXJzOnIudHJhbnNwYXJlbnRDb3JuZXJzLGg9YT9KOkssYz0hYSYmKGkuY29ybmVyU3Ryb2tlQ29sb3J8fHIuY29ybmVyU3Ryb2tlQ29sb3IpLGw9bi8yLHU9by8yO3Quc2F2ZSgpLHQuZmlsbFN0eWxlPWkuY29ybmVyQ29sb3J8fHIuY29ybmVyQ29sb3J8fFwiXCIsdC5zdHJva2VTdHlsZT1pLmNvcm5lclN0cm9rZUNvbG9yfHxyLmNvcm5lclN0cm9rZUNvbG9yfHxcIlwiLHQudHJhbnNsYXRlKGUscyk7Y29uc3QgZD1yLmdldFRvdGFsQW5nbGUoKTt0LnJvdGF0ZShfdChkKSksdFtcIlwiLmNvbmNhdChoLFwiUmVjdFwiKV0oLWwsLXUsbixvKSxjJiZ0LnN0cm9rZVJlY3QoLWwsLXUsbixvKSx0LnJlc3RvcmUoKX1jbGFzcyBIc3tjb25zdHJ1Y3RvcihlKXt0KHRoaXMsXCJ2aXNpYmxlXCIsITApLHQodGhpcyxcImFjdGlvbk5hbWVcIixIKSx0KHRoaXMsXCJhbmdsZVwiLDApLHQodGhpcyxcInhcIiwwKSx0KHRoaXMsXCJ5XCIsMCksdCh0aGlzLFwib2Zmc2V0WFwiLDApLHQodGhpcyxcIm9mZnNldFlcIiwwKSx0KHRoaXMsXCJzaXplWFwiLDApLHQodGhpcyxcInNpemVZXCIsMCksdCh0aGlzLFwidG91Y2hTaXplWFwiLDApLHQodGhpcyxcInRvdWNoU2l6ZVlcIiwwKSx0KHRoaXMsXCJjdXJzb3JTdHlsZVwiLFwiY3Jvc3NoYWlyXCIpLHQodGhpcyxcIndpdGhDb25uZWN0aW9uXCIsITEpLE9iamVjdC5hc3NpZ24odGhpcyxlKX1zaG91bGRBY3RpdmF0ZSh0LGUscyxpKXt2YXIgcjtsZXR7dGw6bix0cjpvLGJyOmEsYmw6aH09aTtyZXR1cm4obnVsbD09PShyPWUuY2FudmFzKXx8dm9pZCAwPT09cj92b2lkIDA6ci5nZXRBY3RpdmVPYmplY3QoKSk9PT1lJiZlLmlzQ29udHJvbFZpc2libGUodCkmJkZzLmlzUG9pbnRJblBvbHlnb24ocyxbbixvLGEsaF0pfWdldEFjdGlvbkhhbmRsZXIodCxlLHMpe3JldHVybiB0aGlzLmFjdGlvbkhhbmRsZXJ9Z2V0TW91c2VEb3duSGFuZGxlcih0LGUscyl7cmV0dXJuIHRoaXMubW91c2VEb3duSGFuZGxlcn1nZXRNb3VzZVVwSGFuZGxlcih0LGUscyl7cmV0dXJuIHRoaXMubW91c2VVcEhhbmRsZXJ9Y3Vyc29yU3R5bGVIYW5kbGVyKHQsZSxzKXtyZXR1cm4gZS5jdXJzb3JTdHlsZX1nZXRBY3Rpb25OYW1lKHQsZSxzKXtyZXR1cm4gZS5hY3Rpb25OYW1lfWdldFZpc2liaWxpdHkodCxlKXt2YXIgcyxpO3JldHVybiBudWxsIT09KHM9bnVsbD09PShpPXQuX2NvbnRyb2xzVmlzaWJpbGl0eSl8fHZvaWQgMD09PWk/dm9pZCAwOmlbZV0pJiZ2b2lkIDAhPT1zP3M6dGhpcy52aXNpYmxlfXNldFZpc2liaWxpdHkodCxlLHMpe3RoaXMudmlzaWJsZT10fXBvc2l0aW9uSGFuZGxlcih0LGUscyxpKXtyZXR1cm4gbmV3IG90KHRoaXMueCp0LngrdGhpcy5vZmZzZXRYLHRoaXMueSp0LnkrdGhpcy5vZmZzZXRZKS50cmFuc2Zvcm0oZSl9Y2FsY0Nvcm5lckNvb3Jkcyh0LGUscyxpLHIsbil7Y29uc3Qgbz1UdChbRHQocyxpKSxNdCh7YW5nbGU6dH0pLFB0KChyP3RoaXMudG91Y2hTaXplWDp0aGlzLnNpemVYKXx8ZSwocj90aGlzLnRvdWNoU2l6ZVk6dGhpcy5zaXplWSl8fGUpXSk7cmV0dXJue3RsOm5ldyBvdCgtLjUsLS41KS50cmFuc2Zvcm0obyksdHI6bmV3IG90KC41LC0uNSkudHJhbnNmb3JtKG8pLGJyOm5ldyBvdCguNSwuNSkudHJhbnNmb3JtKG8pLGJsOm5ldyBvdCgtLjUsLjUpLnRyYW5zZm9ybShvKX19cmVuZGVyKHQsZSxzLGkscil7aWYoXCJjaXJjbGVcIj09PSgoaT1pfHx7fSkuY29ybmVyU3R5bGV8fHIuY29ybmVyU3R5bGUpKVZzLmNhbGwodGhpcyx0LGUscyxpLHIpO2Vsc2UgenMuY2FsbCh0aGlzLHQsZSxzLGkscil9fWNvbnN0IEdzPSh0LGUscyk9PnMubG9ja1JvdGF0aW9uP1BlOmUuY3Vyc29yU3R5bGUsTnM9WHMoSSxZcygoKHQsZSxzLGkpPT57bGV0e3RhcmdldDpyLGV4Om4sZXk6byx0aGV0YTphLG9yaWdpblg6aCxvcmlnaW5ZOmN9PWU7Y29uc3QgbD1yLnRyYW5zbGF0ZVRvT3JpZ2luUG9pbnQoci5nZXRSZWxhdGl2ZUNlbnRlclBvaW50KCksaCxjKTtpZihqZShyLFwibG9ja1JvdGF0aW9uXCIpKXJldHVybiExO2NvbnN0IHU9TWF0aC5hdGFuMihvLWwueSxuLWwueCksZD1NYXRoLmF0YW4yKGktbC55LHMtbC54KTtsZXQgZz14dChkLXUrYSk7aWYoci5zbmFwQW5nbGUmJnIuc25hcEFuZ2xlPjApe2NvbnN0IHQ9ci5zbmFwQW5nbGUsZT1yLnNuYXBUaHJlc2hvbGR8fHQscz1NYXRoLmNlaWwoZy90KSp0LGk9TWF0aC5mbG9vcihnL3QpKnQ7TWF0aC5hYnMoZy1pKTxlP2c9aTpNYXRoLmFicyhnLXMpPGUmJihnPXMpfWc8MCYmKGc9MzYwK2cpLGclPTM2MDtjb25zdCBmPXIuYW5nbGUhPT1nO3JldHVybiByLmFuZ2xlPWcsZn0pKSk7ZnVuY3Rpb24gVXModCxlKXtjb25zdCBzPWUuY2FudmFzLGk9dFtzLnVuaVNjYWxlS2V5XTtyZXR1cm4gcy51bmlmb3JtU2NhbGluZyYmIWl8fCFzLnVuaWZvcm1TY2FsaW5nJiZpfWZ1bmN0aW9uIHFzKHQsZSxzKXtjb25zdCBpPWplKHQsXCJsb2NrU2NhbGluZ1hcIikscj1qZSh0LFwibG9ja1NjYWxpbmdZXCIpO2lmKGkmJnIpcmV0dXJuITA7aWYoIWUmJihpfHxyKSYmcylyZXR1cm4hMDtpZihpJiZcInhcIj09PWUpcmV0dXJuITA7aWYociYmXCJ5XCI9PT1lKXJldHVybiEwO2NvbnN0e3dpZHRoOm4saGVpZ2h0Om8sc3Ryb2tlV2lkdGg6YX09dDtyZXR1cm4gMD09PW4mJjA9PT1hJiZcInlcIiE9PWV8fDA9PT1vJiYwPT09YSYmXCJ4XCIhPT1lfWNvbnN0IEtzPVtcImVcIixcInNlXCIsXCJzXCIsXCJzd1wiLFwid1wiLFwibndcIixcIm5cIixcIm5lXCIsXCJlXCJdLEpzPSh0LGUscyk9Pntjb25zdCBpPVVzKHQscyk7aWYocXMocywwIT09ZS54JiYwPT09ZS55P1wieFwiOjA9PT1lLngmJjAhPT1lLnk/XCJ5XCI6XCJcIixpKSlyZXR1cm4gUGU7Y29uc3Qgcj1MZShzLGUpO3JldHVyblwiXCIuY29uY2F0KEtzW3JdLFwiLXJlc2l6ZVwiKX07ZnVuY3Rpb24gUXModCxlLHMsaSl7bGV0IHI9YXJndW1lbnRzLmxlbmd0aD40JiZ2b2lkIDAhPT1hcmd1bWVudHNbNF0/YXJndW1lbnRzWzRdOnt9O2NvbnN0IG49ZS50YXJnZXQsbz1yLmJ5LGE9VXModCxuKTtsZXQgaCxjLGwsdSxkLGc7aWYocXMobixvLGEpKXJldHVybiExO2lmKGUuZ2VzdHVyZVNjYWxlKWM9ZS5zY2FsZVgqZS5nZXN0dXJlU2NhbGUsbD1lLnNjYWxlWSplLmdlc3R1cmVTY2FsZTtlbHNle2lmKGg9UmUoZSxlLm9yaWdpblgsZS5vcmlnaW5ZLHMsaSksZD1cInlcIiE9PW8/TWF0aC5zaWduKGgueHx8ZS5zaWduWHx8MSk6MSxnPVwieFwiIT09bz9NYXRoLnNpZ24oaC55fHxlLnNpZ25ZfHwxKToxLGUuc2lnblh8fChlLnNpZ25YPWQpLGUuc2lnbll8fChlLnNpZ25ZPWcpLGplKG4sXCJsb2NrU2NhbGluZ0ZsaXBcIikmJihlLnNpZ25YIT09ZHx8ZS5zaWduWSE9PWcpKXJldHVybiExO2lmKHU9bi5fZ2V0VHJhbnNmb3JtZWREaW1lbnNpb25zKCksYSYmIW8pe2NvbnN0IHQ9TWF0aC5hYnMoaC54KStNYXRoLmFicyhoLnkpLHtvcmlnaW5hbDpzfT1lLGk9dC8oTWF0aC5hYnModS54KnMuc2NhbGVYL24uc2NhbGVYKStNYXRoLmFicyh1Lnkqcy5zY2FsZVkvbi5zY2FsZVkpKTtjPXMuc2NhbGVYKmksbD1zLnNjYWxlWSppfWVsc2UgYz1NYXRoLmFicyhoLngqbi5zY2FsZVgvdS54KSxsPU1hdGguYWJzKGgueSpuLnNjYWxlWS91LnkpO0VlKGUpJiYoYyo9MixsKj0yKSxlLnNpZ25YIT09ZCYmXCJ5XCIhPT1vJiYoZS5vcmlnaW5YPUFlKGUub3JpZ2luWCksYyo9LTEsZS5zaWduWD1kKSxlLnNpZ25ZIT09ZyYmXCJ4XCIhPT1vJiYoZS5vcmlnaW5ZPUFlKGUub3JpZ2luWSksbCo9LTEsZS5zaWduWT1nKX1jb25zdCBmPW4uc2NhbGVYLHA9bi5zY2FsZVk7cmV0dXJuIG8/KFwieFwiPT09byYmbi5zZXQoRyxjKSxcInlcIj09PW8mJm4uc2V0KE4sbCkpOighamUobixcImxvY2tTY2FsaW5nWFwiKSYmbi5zZXQoRyxjKSwhamUobixcImxvY2tTY2FsaW5nWVwiKSYmbi5zZXQoTixsKSksZiE9PW4uc2NhbGVYfHxwIT09bi5zY2FsZVl9Y29uc3QgWnM9WHMoUixZcygoKHQsZSxzLGkpPT5Rcyh0LGUscyxpKSkpKSwkcz1YcyhSLFlzKCgodCxlLHMsaSk9PlFzKHQsZSxzLGkse2J5OlwieFwifSkpKSksdGk9WHMoUixZcygoKHQsZSxzLGkpPT5Rcyh0LGUscyxpLHtieTpcInlcIn0pKSkpLGVpPVtcInRhcmdldFwiLFwiZXhcIixcImV5XCIsXCJza2V3aW5nU2lkZVwiXSxzaT17eDp7Y291bnRlckF4aXM6XCJ5XCIsc2NhbGU6Ryxza2V3OlUsbG9ja1NrZXdpbmc6XCJsb2NrU2tld2luZ1hcIixvcmlnaW46XCJvcmlnaW5YXCIsZmxpcDpcImZsaXBYXCJ9LHk6e2NvdW50ZXJBeGlzOlwieFwiLHNjYWxlOk4sc2tldzpxLGxvY2tTa2V3aW5nOlwibG9ja1NrZXdpbmdZXCIsb3JpZ2luOlwib3JpZ2luWVwiLGZsaXA6XCJmbGlwWVwifX0saWk9W1wibnNcIixcIm5lc3dcIixcImV3XCIsXCJud3NlXCJdLHJpPSh0LGUscyk9PntpZigwIT09ZS54JiZqZShzLFwibG9ja1NrZXdpbmdZXCIpKXJldHVybiBQZTtpZigwIT09ZS55JiZqZShzLFwibG9ja1NrZXdpbmdYXCIpKXJldHVybiBQZTtjb25zdCBpPUxlKHMsZSklNDtyZXR1cm5cIlwiLmNvbmNhdChpaVtpXSxcIi1yZXNpemVcIil9O2Z1bmN0aW9uIG5pKHQsZSxyLG4sbyl7Y29uc3R7dGFyZ2V0OmF9PXIse2NvdW50ZXJBeGlzOmgsb3JpZ2luOmMsbG9ja1NrZXdpbmc6bCxza2V3OnUsZmxpcDpkfT1zaVt0XTtpZihqZShhLGwpKXJldHVybiExO2NvbnN0e29yaWdpbjpnLGZsaXA6Zn09c2lbaF0scD1NZShyW2ddKSooYVtmXT8tMToxKSxtPS1NYXRoLnNpZ24ocCkqKGFbZF0/LTE6MSksdj0uNSotKCgwPT09YVt1XSYmUmUocixELEQsbixvKVt0XT4wfHxhW3VdPjA/MTotMSkqbSkrLjUseT1YcyhYLFlzKCgoZSxzLHIsbik9PmZ1bmN0aW9uKHQsZSxzKXtsZXR7dGFyZ2V0OnIsZXg6bixleTpvLHNrZXdpbmdTaWRlOmF9PWUsaD1pKGUsZWkpO2NvbnN0e3NrZXc6Y309c2lbdF0sbD1zLnN1YnRyYWN0KG5ldyBvdChuLG8pKS5kaXZpZGUobmV3IG90KHIuc2NhbGVYLHIuc2NhbGVZKSlbdF0sdT1yW2NdLGQ9aFtjXSxnPU1hdGgudGFuKF90KGQpKSxmPVwieVwiPT09dD9yLl9nZXRUcmFuc2Zvcm1lZERpbWVuc2lvbnMoe3NjYWxlWDoxLHNjYWxlWToxLHNrZXdYOjB9KS54OnIuX2dldFRyYW5zZm9ybWVkRGltZW5zaW9ucyh7c2NhbGVYOjEsc2NhbGVZOjF9KS55LHA9MipsKmEvTWF0aC5tYXgoZiwxKStnLG09eHQoTWF0aC5hdGFuKHApKTtyLnNldChjLG0pO2NvbnN0IHY9dSE9PXJbY107aWYodiYmXCJ5XCI9PT10KXtjb25zdHtza2V3WDp0LHNjYWxlWDplfT1yLHM9ci5fZ2V0VHJhbnNmb3JtZWREaW1lbnNpb25zKHtza2V3WTp1fSksaT1yLl9nZXRUcmFuc2Zvcm1lZERpbWVuc2lvbnMoKSxuPTAhPT10P3MueC9pLng6MTsxIT09biYmci5zZXQoRyxuKmUpfXJldHVybiB2fSh0LHMsbmV3IG90KHIsbikpKSkpO3JldHVybiB5KGUscyhzKHt9LHIpLHt9LHtbY106dixza2V3aW5nU2lkZTptfSksbixvKX1jb25zdCBvaT0odCxlLHMsaSk9Pm5pKFwieFwiLHQsZSxzLGkpLGFpPSh0LGUscyxpKT0+bmkoXCJ5XCIsdCxlLHMsaSk7ZnVuY3Rpb24gaGkodCxlKXtyZXR1cm4gdFtlLmNhbnZhcy5hbHRBY3Rpb25LZXldfWNvbnN0IGNpPSh0LGUscyk9Pntjb25zdCBpPWhpKHQscyk7cmV0dXJuIDA9PT1lLng/aT9VOk46MD09PWUueT9pP3E6RzpcIlwifSxsaT0odCxlLHMpPT5oaSh0LHMpP3JpKDAsZSxzKTpKcyh0LGUscyksdWk9KHQsZSxzLGkpPT5oaSh0LGUudGFyZ2V0KT9haSh0LGUscyxpKTokcyh0LGUscyxpKSxkaT0odCxlLHMsaSk9PmhpKHQsZS50YXJnZXQpP29pKHQsZSxzLGkpOnRpKHQsZSxzLGkpLGdpPSgpPT4oe21sOm5ldyBIcyh7eDotLjUseTowLGN1cnNvclN0eWxlSGFuZGxlcjpsaSxhY3Rpb25IYW5kbGVyOnVpLGdldEFjdGlvbk5hbWU6Y2l9KSxtcjpuZXcgSHMoe3g6LjUseTowLGN1cnNvclN0eWxlSGFuZGxlcjpsaSxhY3Rpb25IYW5kbGVyOnVpLGdldEFjdGlvbk5hbWU6Y2l9KSxtYjpuZXcgSHMoe3g6MCx5Oi41LGN1cnNvclN0eWxlSGFuZGxlcjpsaSxhY3Rpb25IYW5kbGVyOmRpLGdldEFjdGlvbk5hbWU6Y2l9KSxtdDpuZXcgSHMoe3g6MCx5Oi0uNSxjdXJzb3JTdHlsZUhhbmRsZXI6bGksYWN0aW9uSGFuZGxlcjpkaSxnZXRBY3Rpb25OYW1lOmNpfSksdGw6bmV3IEhzKHt4Oi0uNSx5Oi0uNSxjdXJzb3JTdHlsZUhhbmRsZXI6SnMsYWN0aW9uSGFuZGxlcjpac30pLHRyOm5ldyBIcyh7eDouNSx5Oi0uNSxjdXJzb3JTdHlsZUhhbmRsZXI6SnMsYWN0aW9uSGFuZGxlcjpac30pLGJsOm5ldyBIcyh7eDotLjUseTouNSxjdXJzb3JTdHlsZUhhbmRsZXI6SnMsYWN0aW9uSGFuZGxlcjpac30pLGJyOm5ldyBIcyh7eDouNSx5Oi41LGN1cnNvclN0eWxlSGFuZGxlcjpKcyxhY3Rpb25IYW5kbGVyOlpzfSksbXRyOm5ldyBIcyh7eDowLHk6LS41LGFjdGlvbkhhbmRsZXI6TnMsY3Vyc29yU3R5bGVIYW5kbGVyOkdzLG9mZnNldFk6LTQwLHdpdGhDb25uZWN0aW9uOiEwLGFjdGlvbk5hbWU6Qn0pfSksZmk9KCk9Pih7bXI6bmV3IEhzKHt4Oi41LHk6MCxhY3Rpb25IYW5kbGVyOldzLGN1cnNvclN0eWxlSGFuZGxlcjpsaSxhY3Rpb25OYW1lOll9KSxtbDpuZXcgSHMoe3g6LS41LHk6MCxhY3Rpb25IYW5kbGVyOldzLGN1cnNvclN0eWxlSGFuZGxlcjpsaSxhY3Rpb25OYW1lOll9KX0pLHBpPSgpPT5zKHMoe30sZ2koKSksZmkoKSk7Y2xhc3MgbWkgZXh0ZW5kcyBCc3tzdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gcyhzKHt9LHN1cGVyLmdldERlZmF1bHRzKCkpLG1pLm93bkRlZmF1bHRzKX1jb25zdHJ1Y3Rvcih0KXtzdXBlcigpLE9iamVjdC5hc3NpZ24odGhpcyx0aGlzLmNvbnN0cnVjdG9yLmNyZWF0ZUNvbnRyb2xzKCksbWkub3duRGVmYXVsdHMpLHRoaXMuc2V0T3B0aW9ucyh0KX1zdGF0aWMgY3JlYXRlQ29udHJvbHMoKXtyZXR1cm57Y29udHJvbHM6Z2koKX19X3VwZGF0ZUNhY2hlQ2FudmFzKCl7Y29uc3QgdD10aGlzLmNhbnZhcztpZih0aGlzLm5vU2NhbGVDYWNoZSYmdCYmdC5fY3VycmVudFRyYW5zZm9ybSl7Y29uc3QgZT10Ll9jdXJyZW50VHJhbnNmb3JtLHM9ZS50YXJnZXQsaT1lLmFjdGlvbjtpZih0aGlzPT09cyYmaSYmaS5zdGFydHNXaXRoKEgpKXJldHVybiExfXJldHVybiBzdXBlci5fdXBkYXRlQ2FjaGVDYW52YXMoKX1nZXRBY3RpdmVDb250cm9sKCl7Y29uc3QgdD10aGlzLl9fY29ybmVyO3JldHVybiB0P3trZXk6dCxjb250cm9sOnRoaXMuY29udHJvbHNbdF0sY29vcmQ6dGhpcy5vQ29vcmRzW3RdfTp2b2lkIDB9ZmluZENvbnRyb2wodCl7bGV0IGU9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0mJmFyZ3VtZW50c1sxXTtpZighdGhpcy5oYXNDb250cm9sc3x8IXRoaXMuY2FudmFzKXJldHVybjt0aGlzLl9fY29ybmVyPXZvaWQgMDtjb25zdCBzPU9iamVjdC5lbnRyaWVzKHRoaXMub0Nvb3Jkcyk7Zm9yKGxldCBpPXMubGVuZ3RoLTE7aT49MDtpLS0pe2NvbnN0W3Isbl09c1tpXSxvPXRoaXMuY29udHJvbHNbcl07aWYoby5zaG91bGRBY3RpdmF0ZShyLHRoaXMsdCxlP24udG91Y2hDb3JuZXI6bi5jb3JuZXIpKXJldHVybiB0aGlzLl9fY29ybmVyPXIse2tleTpyLGNvbnRyb2w6byxjb29yZDp0aGlzLm9Db29yZHNbcl19fX1jYWxjT0Nvb3Jkcygpe2NvbnN0IHQ9dGhpcy5nZXRWaWV3cG9ydFRyYW5zZm9ybSgpLGU9dGhpcy5nZXRDZW50ZXJQb2ludCgpLHM9RHQoZS54LGUueSksaT1NdCh7YW5nbGU6dGhpcy5nZXRUb3RhbEFuZ2xlKCktKHRoaXMuZ3JvdXAmJnRoaXMuZmxpcFg/MTgwOjApfSkscj1TdChzLGkpLG49U3QodCxyKSxvPVN0KG4sWzEvdFswXSwwLDAsMS90WzNdLDAsMF0pLGE9dGhpcy5ncm91cD9rdCh0aGlzLmNhbGNUcmFuc2Zvcm1NYXRyaXgoKSk6dm9pZCAwO2EmJihhLnNjYWxlWD1NYXRoLmFicyhhLnNjYWxlWCksYS5zY2FsZVk9TWF0aC5hYnMoYS5zY2FsZVkpKTtjb25zdCBoPXRoaXMuX2NhbGN1bGF0ZUN1cnJlbnREaW1lbnNpb25zKGEpLGM9e307cmV0dXJuIHRoaXMuZm9yRWFjaENvbnRyb2woKCh0LGUpPT57Y29uc3Qgcz10LnBvc2l0aW9uSGFuZGxlcihoLG8sdGhpcyx0KTtjW2VdPU9iamVjdC5hc3NpZ24ocyx0aGlzLl9jYWxjQ29ybmVyQ29vcmRzKHQscykpfSkpLGN9X2NhbGNDb3JuZXJDb29yZHModCxlKXtjb25zdCBzPXRoaXMuZ2V0VG90YWxBbmdsZSgpO3JldHVybntjb3JuZXI6dC5jYWxjQ29ybmVyQ29vcmRzKHMsdGhpcy5jb3JuZXJTaXplLGUueCxlLnksITEsdGhpcyksdG91Y2hDb3JuZXI6dC5jYWxjQ29ybmVyQ29vcmRzKHMsdGhpcy50b3VjaENvcm5lclNpemUsZS54LGUueSwhMCx0aGlzKX19c2V0Q29vcmRzKCl7c3VwZXIuc2V0Q29vcmRzKCksdGhpcy5jYW52YXMmJih0aGlzLm9Db29yZHM9dGhpcy5jYWxjT0Nvb3JkcygpKX1mb3JFYWNoQ29udHJvbCh0KXtmb3IoY29uc3QgZSBpbiB0aGlzLmNvbnRyb2xzKXQodGhpcy5jb250cm9sc1tlXSxlLHRoaXMpfWRyYXdTZWxlY3Rpb25CYWNrZ3JvdW5kKHQpe2lmKCF0aGlzLnNlbGVjdGlvbkJhY2tncm91bmRDb2xvcnx8dGhpcy5jYW52YXMmJnRoaXMuY2FudmFzLl9hY3RpdmVPYmplY3QhPT10aGlzKXJldHVybjt0LnNhdmUoKTtjb25zdCBlPXRoaXMuZ2V0UmVsYXRpdmVDZW50ZXJQb2ludCgpLHM9dGhpcy5fY2FsY3VsYXRlQ3VycmVudERpbWVuc2lvbnMoKSxpPXRoaXMuZ2V0Vmlld3BvcnRUcmFuc2Zvcm0oKTt0LnRyYW5zbGF0ZShlLngsZS55KSx0LnNjYWxlKDEvaVswXSwxL2lbM10pLHQucm90YXRlKF90KHRoaXMuYW5nbGUpKSx0LmZpbGxTdHlsZT10aGlzLnNlbGVjdGlvbkJhY2tncm91bmRDb2xvcix0LmZpbGxSZWN0KC1zLngvMiwtcy55LzIscy54LHMueSksdC5yZXN0b3JlKCl9c3Ryb2tlQm9yZGVycyh0LGUpe3Quc3Ryb2tlUmVjdCgtZS54LzIsLWUueS8yLGUueCxlLnkpfV9kcmF3Qm9yZGVycyh0LGUpe2xldCBpPWFyZ3VtZW50cy5sZW5ndGg+MiYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTp7fTtjb25zdCByPXMoe2hhc0NvbnRyb2xzOnRoaXMuaGFzQ29udHJvbHMsYm9yZGVyQ29sb3I6dGhpcy5ib3JkZXJDb2xvcixib3JkZXJEYXNoQXJyYXk6dGhpcy5ib3JkZXJEYXNoQXJyYXl9LGkpO3Quc2F2ZSgpLHQuc3Ryb2tlU3R5bGU9ci5ib3JkZXJDb2xvcix0aGlzLl9zZXRMaW5lRGFzaCh0LHIuYm9yZGVyRGFzaEFycmF5KSx0aGlzLnN0cm9rZUJvcmRlcnModCxlKSxyLmhhc0NvbnRyb2xzJiZ0aGlzLmRyYXdDb250cm9sc0Nvbm5lY3RpbmdMaW5lcyh0LGUpLHQucmVzdG9yZSgpfV9yZW5kZXJDb250cm9scyh0KXtsZXQgZT1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06e307Y29uc3R7aGFzQm9yZGVyczppLGhhc0NvbnRyb2xzOnJ9PXRoaXMsbj1zKHtoYXNCb3JkZXJzOmksaGFzQ29udHJvbHM6cn0sZSksbz10aGlzLmdldFZpZXdwb3J0VHJhbnNmb3JtKCksYT1uLmhhc0JvcmRlcnMsaD1uLmhhc0NvbnRyb2xzLGM9U3Qobyx0aGlzLmNhbGNUcmFuc2Zvcm1NYXRyaXgoKSksbD1rdChjKTt0LnNhdmUoKSx0LnRyYW5zbGF0ZShsLnRyYW5zbGF0ZVgsbC50cmFuc2xhdGVZKSx0LmxpbmVXaWR0aD10aGlzLmJvcmRlclNjYWxlRmFjdG9yLHRoaXMuZ3JvdXA9PT10aGlzLnBhcmVudCYmKHQuZ2xvYmFsQWxwaGE9dGhpcy5pc01vdmluZz90aGlzLmJvcmRlck9wYWNpdHlXaGVuTW92aW5nOjEpLHRoaXMuZmxpcFgmJihsLmFuZ2xlLT0xODApLHQucm90YXRlKF90KHRoaXMuZ3JvdXA/bC5hbmdsZTp0aGlzLmFuZ2xlKSksYSYmdGhpcy5kcmF3Qm9yZGVycyh0LGwsZSksaCYmdGhpcy5kcmF3Q29udHJvbHModCxlKSx0LnJlc3RvcmUoKX1kcmF3Qm9yZGVycyh0LGUscyl7bGV0IGk7aWYocyYmcy5mb3JBY3RpdmVTZWxlY3Rpb258fHRoaXMuZ3JvdXApe2NvbnN0IHQ9YmUodGhpcy53aWR0aCx0aGlzLmhlaWdodCxGdChlKSkscz10aGlzLmlzU3Ryb2tlQWNjb3VudGVkRm9ySW5EaW1lbnNpb25zKCk/YXQ6KHRoaXMuc3Ryb2tlVW5pZm9ybT8obmV3IG90KS5zY2FsYXJBZGQodGhpcy5jYW52YXM/dGhpcy5jYW52YXMuZ2V0Wm9vbSgpOjEpOm5ldyBvdChlLnNjYWxlWCxlLnNjYWxlWSkpLnNjYWxhck11bHRpcGx5KHRoaXMuc3Ryb2tlV2lkdGgpO2k9dC5hZGQocykuc2NhbGFyQWRkKHRoaXMuYm9yZGVyU2NhbGVGYWN0b3IpLnNjYWxhckFkZCgyKnRoaXMucGFkZGluZyl9ZWxzZSBpPXRoaXMuX2NhbGN1bGF0ZUN1cnJlbnREaW1lbnNpb25zKCkuc2NhbGFyQWRkKHRoaXMuYm9yZGVyU2NhbGVGYWN0b3IpO3RoaXMuX2RyYXdCb3JkZXJzKHQsaSxzKX1kcmF3Q29udHJvbHNDb25uZWN0aW5nTGluZXModCxlKXtsZXQgcz0hMTt0LmJlZ2luUGF0aCgpLHRoaXMuZm9yRWFjaENvbnRyb2woKChpLHIpPT57aS53aXRoQ29ubmVjdGlvbiYmaS5nZXRWaXNpYmlsaXR5KHRoaXMscikmJihzPSEwLHQubW92ZVRvKGkueCplLngsaS55KmUueSksdC5saW5lVG8oaS54KmUueCtpLm9mZnNldFgsaS55KmUueStpLm9mZnNldFkpKX0pKSxzJiZ0LnN0cm9rZSgpfWRyYXdDb250cm9scyh0KXtsZXQgZT1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06e307dC5zYXZlKCk7Y29uc3QgaT10aGlzLmdldENhbnZhc1JldGluYVNjYWxpbmcoKSx7Y29ybmVyU3Ryb2tlQ29sb3I6cixjb3JuZXJEYXNoQXJyYXk6bixjb3JuZXJDb2xvcjpvfT10aGlzLGE9cyh7Y29ybmVyU3Ryb2tlQ29sb3I6cixjb3JuZXJEYXNoQXJyYXk6bixjb3JuZXJDb2xvcjpvfSxlKTt0LnNldFRyYW5zZm9ybShpLDAsMCxpLDAsMCksdC5zdHJva2VTdHlsZT10LmZpbGxTdHlsZT1hLmNvcm5lckNvbG9yLHRoaXMudHJhbnNwYXJlbnRDb3JuZXJzfHwodC5zdHJva2VTdHlsZT1hLmNvcm5lclN0cm9rZUNvbG9yKSx0aGlzLl9zZXRMaW5lRGFzaCh0LGEuY29ybmVyRGFzaEFycmF5KSx0aGlzLmZvckVhY2hDb250cm9sKCgoZSxzKT0+e2lmKGUuZ2V0VmlzaWJpbGl0eSh0aGlzLHMpKXtjb25zdCBpPXRoaXMub0Nvb3Jkc1tzXTtlLnJlbmRlcih0LGkueCxpLnksYSx0aGlzKX19KSksdC5yZXN0b3JlKCl9aXNDb250cm9sVmlzaWJsZSh0KXtyZXR1cm4gdGhpcy5jb250cm9sc1t0XSYmdGhpcy5jb250cm9sc1t0XS5nZXRWaXNpYmlsaXR5KHRoaXMsdCl9c2V0Q29udHJvbFZpc2libGUodCxlKXt0aGlzLl9jb250cm9sc1Zpc2liaWxpdHl8fCh0aGlzLl9jb250cm9sc1Zpc2liaWxpdHk9e30pLHRoaXMuX2NvbnRyb2xzVmlzaWJpbGl0eVt0XT1lfXNldENvbnRyb2xzVmlzaWJpbGl0eSgpe2xldCB0PWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fTtPYmplY3QuZW50cmllcyh0KS5mb3JFYWNoKCh0PT57bGV0W2Usc109dDtyZXR1cm4gdGhpcy5zZXRDb250cm9sVmlzaWJsZShlLHMpfSkpfWNsZWFyQ29udGV4dFRvcCh0KXtpZighdGhpcy5jYW52YXMpcmV0dXJuO2NvbnN0IGU9dGhpcy5jYW52YXMuY29udGV4dFRvcDtpZighZSlyZXR1cm47Y29uc3Qgcz10aGlzLmNhbnZhcy52aWV3cG9ydFRyYW5zZm9ybTtlLnNhdmUoKSxlLnRyYW5zZm9ybShzWzBdLHNbMV0sc1syXSxzWzNdLHNbNF0sc1s1XSksdGhpcy50cmFuc2Zvcm0oZSk7Y29uc3QgaT10aGlzLndpZHRoKzQscj10aGlzLmhlaWdodCs0O3JldHVybiBlLmNsZWFyUmVjdCgtaS8yLC1yLzIsaSxyKSx0fHxlLnJlc3RvcmUoKSxlfW9uRGVzZWxlY3QodCl7cmV0dXJuITF9b25TZWxlY3QodCl7cmV0dXJuITF9c2hvdWxkU3RhcnREcmFnZ2luZyh0KXtyZXR1cm4hMX1vbkRyYWdTdGFydCh0KXtyZXR1cm4hMX1jYW5Ecm9wKHQpe3JldHVybiExfXJlbmRlckRyYWdTb3VyY2VFZmZlY3QodCl7fXJlbmRlckRyb3BUYXJnZXRFZmZlY3QodCl7fX1mdW5jdGlvbiB2aSh0LGUpe3JldHVybiBlLmZvckVhY2goKGU9PntPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhlLnByb3RvdHlwZSkuZm9yRWFjaCgocz0+e1wiY29uc3RydWN0b3JcIiE9PXMmJk9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LnByb3RvdHlwZSxzLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZS5wcm90b3R5cGUscyl8fE9iamVjdC5jcmVhdGUobnVsbCkpfSkpfSkpLHR9dChtaSxcIm93bkRlZmF1bHRzXCIse25vU2NhbGVDYWNoZTohMCxsb2NrTW92ZW1lbnRYOiExLGxvY2tNb3ZlbWVudFk6ITEsbG9ja1JvdGF0aW9uOiExLGxvY2tTY2FsaW5nWDohMSxsb2NrU2NhbGluZ1k6ITEsbG9ja1NrZXdpbmdYOiExLGxvY2tTa2V3aW5nWTohMSxsb2NrU2NhbGluZ0ZsaXA6ITEsY29ybmVyU2l6ZToxMyx0b3VjaENvcm5lclNpemU6MjQsdHJhbnNwYXJlbnRDb3JuZXJzOiEwLGNvcm5lckNvbG9yOlwicmdiKDE3OCwyMDQsMjU1KVwiLGNvcm5lclN0cm9rZUNvbG9yOlwiXCIsY29ybmVyU3R5bGU6XCJyZWN0XCIsY29ybmVyRGFzaEFycmF5Om51bGwsaGFzQ29udHJvbHM6ITAsYm9yZGVyQ29sb3I6XCJyZ2IoMTc4LDIwNCwyNTUpXCIsYm9yZGVyRGFzaEFycmF5Om51bGwsYm9yZGVyT3BhY2l0eVdoZW5Nb3Zpbmc6LjQsYm9yZGVyU2NhbGVGYWN0b3I6MSxoYXNCb3JkZXJzOiEwLHNlbGVjdGlvbkJhY2tncm91bmRDb2xvcjpcIlwiLHNlbGVjdGFibGU6ITAsZXZlbnRlZDohMCxwZXJQaXhlbFRhcmdldEZpbmQ6ITEsYWN0aXZlT246XCJkb3duXCIsaG92ZXJDdXJzb3I6bnVsbCxtb3ZlQ3Vyc29yOm51bGx9KTtjbGFzcyB5aSBleHRlbmRzIG1pe312aSh5aSxbQmVdKSx0dC5zZXRDbGFzcyh5aSksdHQuc2V0Q2xhc3MoeWksXCJvYmplY3RcIik7Y29uc3QgX2k9KHQsZSxzLGkpPT57Y29uc3Qgcj0yKihpPU1hdGgucm91bmQoaSkpKzEse2RhdGE6bn09dC5nZXRJbWFnZURhdGEoZS1pLHMtaSxyLHIpO2ZvcihsZXQgdD0zO3Q8bi5sZW5ndGg7dCs9NCl7aWYoblt0XT4wKXJldHVybiExfXJldHVybiEwfTtjbGFzcyB4aXtjb25zdHJ1Y3Rvcih0KXt0aGlzLm9wdGlvbnM9dCx0aGlzLnN0cm9rZVByb2plY3Rpb25NYWduaXR1ZGU9dGhpcy5vcHRpb25zLnN0cm9rZVdpZHRoLzIsdGhpcy5zY2FsZT1uZXcgb3QodGhpcy5vcHRpb25zLnNjYWxlWCx0aGlzLm9wdGlvbnMuc2NhbGVZKSx0aGlzLnN0cm9rZVVuaWZvcm1TY2FsYXI9dGhpcy5vcHRpb25zLnN0cm9rZVVuaWZvcm0/bmV3IG90KDEvdGhpcy5vcHRpb25zLnNjYWxlWCwxL3RoaXMub3B0aW9ucy5zY2FsZVkpOm5ldyBvdCgxLDEpfWNyZWF0ZVNpZGVWZWN0b3IodCxlKXtjb25zdCBzPXRzKHQsZSk7cmV0dXJuIHRoaXMub3B0aW9ucy5zdHJva2VVbmlmb3JtP3MubXVsdGlwbHkodGhpcy5zY2FsZSk6c31wcm9qZWN0T3J0aG9nb25hbGx5KHQsZSxzKXtyZXR1cm4gdGhpcy5hcHBseVNrZXcodC5hZGQodGhpcy5jYWxjT3J0aG9nb25hbFByb2plY3Rpb24odCxlLHMpKSl9aXNTa2V3ZWQoKXtyZXR1cm4gMCE9PXRoaXMub3B0aW9ucy5za2V3WHx8MCE9PXRoaXMub3B0aW9ucy5za2V3WX1hcHBseVNrZXcodCl7Y29uc3QgZT1uZXcgb3QodCk7cmV0dXJuIGUueSs9ZS54Kk1hdGgudGFuKF90KHRoaXMub3B0aW9ucy5za2V3WSkpLGUueCs9ZS55Kk1hdGgudGFuKF90KHRoaXMub3B0aW9ucy5za2V3WCkpLGV9c2NhbGVVbml0VmVjdG9yKHQsZSl7cmV0dXJuIHQubXVsdGlwbHkodGhpcy5zdHJva2VVbmlmb3JtU2NhbGFyKS5zY2FsYXJNdWx0aXBseShlKX19Y29uc3QgQ2k9bmV3IG90O2NsYXNzIGJpIGV4dGVuZHMgeGl7c3RhdGljIGdldE9ydGhvZ29uYWxSb3RhdGlvbkZhY3Rvcih0LGUpe2NvbnN0IHM9ZT9zcyh0LGUpOmlzKHQpO3JldHVybiBNYXRoLmFicyhzKTxiPy0xOjF9Y29uc3RydWN0b3IoZSxzLGkscil7c3VwZXIociksdCh0aGlzLFwiQUJcIix2b2lkIDApLHQodGhpcyxcIkFDXCIsdm9pZCAwKSx0KHRoaXMsXCJhbHBoYVwiLHZvaWQgMCksdCh0aGlzLFwiYmlzZWN0b3JcIix2b2lkIDApLHRoaXMuQT1uZXcgb3QoZSksdGhpcy5CPW5ldyBvdChzKSx0aGlzLkM9bmV3IG90KGkpLHRoaXMuQUI9dGhpcy5jcmVhdGVTaWRlVmVjdG9yKHRoaXMuQSx0aGlzLkIpLHRoaXMuQUM9dGhpcy5jcmVhdGVTaWRlVmVjdG9yKHRoaXMuQSx0aGlzLkMpLHRoaXMuYWxwaGE9c3ModGhpcy5BQix0aGlzLkFDKSx0aGlzLmJpc2VjdG9yPXJzKCRlKHRoaXMuQUIuZXEoQ2kpP3RoaXMuQUM6dGhpcy5BQix0aGlzLmFscGhhLzIpKX1jYWxjT3J0aG9nb25hbFByb2plY3Rpb24odCxlKXtsZXQgcz1hcmd1bWVudHMubGVuZ3RoPjImJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06dGhpcy5zdHJva2VQcm9qZWN0aW9uTWFnbml0dWRlO2NvbnN0IGk9dGhpcy5jcmVhdGVTaWRlVmVjdG9yKHQsZSkscj1ucyhpKSxuPWJpLmdldE9ydGhvZ29uYWxSb3RhdGlvbkZhY3RvcihyLHRoaXMuYmlzZWN0b3IpO3JldHVybiB0aGlzLnNjYWxlVW5pdFZlY3RvcihyLHMqbil9cHJvamVjdEJldmVsKCl7Y29uc3QgdD1bXTtyZXR1cm4odGhpcy5hbHBoYSV3PT0wP1t0aGlzLkJdOlt0aGlzLkIsdGhpcy5DXSkuZm9yRWFjaCgoZT0+e3QucHVzaCh0aGlzLnByb2plY3RPcnRob2dvbmFsbHkodGhpcy5BLGUpKSx0LnB1c2godGhpcy5wcm9qZWN0T3J0aG9nb25hbGx5KHRoaXMuQSxlLC10aGlzLnN0cm9rZVByb2plY3Rpb25NYWduaXR1ZGUpKX0pKSx0fXByb2plY3RNaXRlcigpe2NvbnN0IHQ9W10sZT1NYXRoLmFicyh0aGlzLmFscGhhKSxzPTEvTWF0aC5zaW4oZS8yKSxpPXRoaXMuc2NhbGVVbml0VmVjdG9yKHRoaXMuYmlzZWN0b3IsLXRoaXMuc3Ryb2tlUHJvamVjdGlvbk1hZ25pdHVkZSpzKSxyPXRoaXMub3B0aW9ucy5zdHJva2VVbmlmb3JtP2VzKHRoaXMuc2NhbGVVbml0VmVjdG9yKHRoaXMuYmlzZWN0b3IsdGhpcy5vcHRpb25zLnN0cm9rZU1pdGVyTGltaXQpKTp0aGlzLm9wdGlvbnMuc3Ryb2tlTWl0ZXJMaW1pdDtyZXR1cm4gZXMoaSkvdGhpcy5zdHJva2VQcm9qZWN0aW9uTWFnbml0dWRlPD1yJiZ0LnB1c2godGhpcy5hcHBseVNrZXcodGhpcy5BLmFkZChpKSkpLHQucHVzaCguLi50aGlzLnByb2plY3RCZXZlbCgpKSx0fXByb2plY3RSb3VuZE5vU2tldyh0LGUpe2NvbnN0IHM9W10saT1uZXcgb3QoYmkuZ2V0T3J0aG9nb25hbFJvdGF0aW9uRmFjdG9yKHRoaXMuYmlzZWN0b3IpLGJpLmdldE9ydGhvZ29uYWxSb3RhdGlvbkZhY3RvcihuZXcgb3QodGhpcy5iaXNlY3Rvci55LHRoaXMuYmlzZWN0b3IueCkpKTtyZXR1cm5bbmV3IG90KDEsMCkuc2NhbGFyTXVsdGlwbHkodGhpcy5zdHJva2VQcm9qZWN0aW9uTWFnbml0dWRlKS5tdWx0aXBseSh0aGlzLnN0cm9rZVVuaWZvcm1TY2FsYXIpLm11bHRpcGx5KGkpLG5ldyBvdCgwLDEpLnNjYWxhck11bHRpcGx5KHRoaXMuc3Ryb2tlUHJvamVjdGlvbk1hZ25pdHVkZSkubXVsdGlwbHkodGhpcy5zdHJva2VVbmlmb3JtU2NhbGFyKS5tdWx0aXBseShpKV0uZm9yRWFjaCgoaT0+e2hzKGksdCxlKSYmcy5wdXNoKHRoaXMuQS5hZGQoaSkpfSkpLHN9cHJvamVjdFJvdW5kV2l0aFNrZXcodCxlKXtjb25zdCBzPVtdLHtza2V3WDppLHNrZXdZOnIsc2NhbGVYOm4sc2NhbGVZOm8sc3Ryb2tlVW5pZm9ybTphfT10aGlzLm9wdGlvbnMsaD1uZXcgb3QoTWF0aC50YW4oX3QoaSkpLE1hdGgudGFuKF90KHIpKSksYz10aGlzLnN0cm9rZVByb2plY3Rpb25NYWduaXR1ZGUsbD1hP2Mvby9NYXRoLnNxcnQoMS9vKioyKzEvbioqMipoLnkqKjIpOmMvTWF0aC5zcXJ0KDEraC55KioyKSx1PW5ldyBvdChNYXRoLnNxcnQoTWF0aC5tYXgoYyoqMi1sKioyLDApKSxsKSxkPWE/Yy9NYXRoLnNxcnQoMStoLngqKjIqKDEvbykqKjIvKDEvbisxL24qaC54KmgueSkqKjIpOmMvTWF0aC5zcXJ0KDEraC54KioyLygxK2gueCpoLnkpKioyKSxnPW5ldyBvdChkLE1hdGguc3FydChNYXRoLm1heChjKioyLWQqKjIsMCkpKTtyZXR1cm5bZyxnLnNjYWxhck11bHRpcGx5KC0xKSx1LHUuc2NhbGFyTXVsdGlwbHkoLTEpXS5tYXAoKHQ9PnRoaXMuYXBwbHlTa2V3KGE/dC5tdWx0aXBseSh0aGlzLnN0cm9rZVVuaWZvcm1TY2FsYXIpOnQpKSkuZm9yRWFjaCgoaT0+e2hzKGksdCxlKSYmcy5wdXNoKHRoaXMuYXBwbHlTa2V3KHRoaXMuQSkuYWRkKGkpKX0pKSxzfXByb2plY3RSb3VuZCgpe2NvbnN0IHQ9W107dC5wdXNoKC4uLnRoaXMucHJvamVjdEJldmVsKCkpO2NvbnN0IGU9dGhpcy5hbHBoYSV3PT0wLHM9dGhpcy5hcHBseVNrZXcodGhpcy5BKSxpPXRbZT8wOjJdLnN1YnRyYWN0KHMpLHI9dFtlPzE6MF0uc3VidHJhY3Qocyksbj1lP3RoaXMuYXBwbHlTa2V3KHRoaXMuQUIuc2NhbGFyTXVsdGlwbHkoLTEpKTp0aGlzLmFwcGx5U2tldyh0aGlzLmJpc2VjdG9yLm11bHRpcGx5KHRoaXMuc3Ryb2tlVW5pZm9ybVNjYWxhcikuc2NhbGFyTXVsdGlwbHkoLTEpKSxvPW9zKGksbik+MCxhPW8/aTpyLGg9bz9yOmk7cmV0dXJuIHRoaXMuaXNTa2V3ZWQoKT90LnB1c2goLi4udGhpcy5wcm9qZWN0Um91bmRXaXRoU2tldyhhLGgpKTp0LnB1c2goLi4udGhpcy5wcm9qZWN0Um91bmROb1NrZXcoYSxoKSksdH1wcm9qZWN0UG9pbnRzKCl7c3dpdGNoKHRoaXMub3B0aW9ucy5zdHJva2VMaW5lSm9pbil7Y2FzZVwibWl0ZXJcIjpyZXR1cm4gdGhpcy5wcm9qZWN0TWl0ZXIoKTtjYXNlXCJyb3VuZFwiOnJldHVybiB0aGlzLnByb2plY3RSb3VuZCgpO2RlZmF1bHQ6cmV0dXJuIHRoaXMucHJvamVjdEJldmVsKCl9fXByb2plY3QoKXtyZXR1cm4gdGhpcy5wcm9qZWN0UG9pbnRzKCkubWFwKCh0PT4oe29yaWdpblBvaW50OnRoaXMuQSxwcm9qZWN0ZWRQb2ludDp0LGFuZ2xlOnRoaXMuYWxwaGEsYmlzZWN0b3I6dGhpcy5iaXNlY3Rvcn0pKSl9fWNsYXNzIHdpIGV4dGVuZHMgeGl7Y29uc3RydWN0b3IodCxlLHMpe3N1cGVyKHMpLHRoaXMuQT1uZXcgb3QodCksdGhpcy5UPW5ldyBvdChlKX1jYWxjT3J0aG9nb25hbFByb2plY3Rpb24odCxlKXtsZXQgcz1hcmd1bWVudHMubGVuZ3RoPjImJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06dGhpcy5zdHJva2VQcm9qZWN0aW9uTWFnbml0dWRlO2NvbnN0IGk9dGhpcy5jcmVhdGVTaWRlVmVjdG9yKHQsZSk7cmV0dXJuIHRoaXMuc2NhbGVVbml0VmVjdG9yKG5zKGkpLHMpfXByb2plY3RCdXR0KCl7cmV0dXJuW3RoaXMucHJvamVjdE9ydGhvZ29uYWxseSh0aGlzLkEsdGhpcy5ULHRoaXMuc3Ryb2tlUHJvamVjdGlvbk1hZ25pdHVkZSksdGhpcy5wcm9qZWN0T3J0aG9nb25hbGx5KHRoaXMuQSx0aGlzLlQsLXRoaXMuc3Ryb2tlUHJvamVjdGlvbk1hZ25pdHVkZSldfXByb2plY3RSb3VuZCgpe2NvbnN0IHQ9W107aWYoIXRoaXMuaXNTa2V3ZWQoKSYmdGhpcy5BLmVxKHRoaXMuVCkpe2NvbnN0IGU9bmV3IG90KDEsMSkuc2NhbGFyTXVsdGlwbHkodGhpcy5zdHJva2VQcm9qZWN0aW9uTWFnbml0dWRlKS5tdWx0aXBseSh0aGlzLnN0cm9rZVVuaWZvcm1TY2FsYXIpO3QucHVzaCh0aGlzLmFwcGx5U2tldyh0aGlzLkEuYWRkKGUpKSx0aGlzLmFwcGx5U2tldyh0aGlzLkEuc3VidHJhY3QoZSkpKX1lbHNlIHQucHVzaCguLi5uZXcgYmkodGhpcy5BLHRoaXMuVCx0aGlzLlQsdGhpcy5vcHRpb25zKS5wcm9qZWN0Um91bmQoKSk7cmV0dXJuIHR9cHJvamVjdFNxdWFyZSgpe2NvbnN0IHQ9W107aWYodGhpcy5BLmVxKHRoaXMuVCkpe2NvbnN0IGU9bmV3IG90KDEsMSkuc2NhbGFyTXVsdGlwbHkodGhpcy5zdHJva2VQcm9qZWN0aW9uTWFnbml0dWRlKS5tdWx0aXBseSh0aGlzLnN0cm9rZVVuaWZvcm1TY2FsYXIpO3QucHVzaCh0aGlzLkEuYWRkKGUpLHRoaXMuQS5zdWJ0cmFjdChlKSl9ZWxzZXtjb25zdCBlPXRoaXMuY2FsY09ydGhvZ29uYWxQcm9qZWN0aW9uKHRoaXMuQSx0aGlzLlQsdGhpcy5zdHJva2VQcm9qZWN0aW9uTWFnbml0dWRlKSxzPXRoaXMuc2NhbGVVbml0VmVjdG9yKHJzKHRoaXMuY3JlYXRlU2lkZVZlY3Rvcih0aGlzLkEsdGhpcy5UKSksLXRoaXMuc3Ryb2tlUHJvamVjdGlvbk1hZ25pdHVkZSksaT10aGlzLkEuYWRkKHMpO3QucHVzaChpLmFkZChlKSxpLnN1YnRyYWN0KGUpKX1yZXR1cm4gdC5tYXAoKHQ9PnRoaXMuYXBwbHlTa2V3KHQpKSl9cHJvamVjdFBvaW50cygpe3N3aXRjaCh0aGlzLm9wdGlvbnMuc3Ryb2tlTGluZUNhcCl7Y2FzZVwicm91bmRcIjpyZXR1cm4gdGhpcy5wcm9qZWN0Um91bmQoKTtjYXNlXCJzcXVhcmVcIjpyZXR1cm4gdGhpcy5wcm9qZWN0U3F1YXJlKCk7ZGVmYXVsdDpyZXR1cm4gdGhpcy5wcm9qZWN0QnV0dCgpfX1wcm9qZWN0KCl7cmV0dXJuIHRoaXMucHJvamVjdFBvaW50cygpLm1hcCgodD0+KHtvcmlnaW5Qb2ludDp0aGlzLkEscHJvamVjdGVkUG9pbnQ6dH0pKSl9fWNvbnN0IFNpPWZ1bmN0aW9uKHQsZSl7bGV0IHM9YXJndW1lbnRzLmxlbmd0aD4yJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0mJmFyZ3VtZW50c1syXTtjb25zdCBpPVtdO2lmKDA9PT10Lmxlbmd0aClyZXR1cm4gaTtjb25zdCByPXQucmVkdWNlKCgodCxlKT0+KHRbdC5sZW5ndGgtMV0uZXEoZSl8fHQucHVzaChuZXcgb3QoZSkpLHQpKSxbbmV3IG90KHRbMF0pXSk7aWYoMT09PXIubGVuZ3RoKXM9ITA7ZWxzZSBpZighcyl7Y29uc3QgdD1yWzBdLGU9KCh0LGUpPT57Zm9yKGxldCBzPXQubGVuZ3RoLTE7cz49MDtzLS0paWYoZSh0W3NdLHMsdCkpcmV0dXJuIHM7cmV0dXJuLTF9KShyLChlPT4hZS5lcSh0KSkpO3Iuc3BsaWNlKGUrMSl9cmV0dXJuIHIuZm9yRWFjaCgoKHQscixuKT0+e2xldCBvLGE7MD09PXI/KGE9blsxXSxvPXM/dDpuW24ubGVuZ3RoLTFdKTpyPT09bi5sZW5ndGgtMT8obz1uW3ItMV0sYT1zP3Q6blswXSk6KG89bltyLTFdLGE9bltyKzFdKSxzJiYxPT09bi5sZW5ndGg/aS5wdXNoKC4uLm5ldyB3aSh0LHQsZSkucHJvamVjdCgpKTohc3x8MCE9PXImJnIhPT1uLmxlbmd0aC0xP2kucHVzaCguLi5uZXcgYmkodCxvLGEsZSkucHJvamVjdCgpKTppLnB1c2goLi4ubmV3IHdpKHQsMD09PXI/YTpvLGUpLnByb2plY3QoKSl9KSksaX0sVGk9dD0+e2NvbnN0IGU9e307cmV0dXJuIE9iamVjdC5rZXlzKHQpLmZvckVhY2goKGk9PntlW2ldPXt9LE9iamVjdC5rZXlzKHRbaV0pLmZvckVhY2goKHI9PntlW2ldW3JdPXMoe30sdFtpXVtyXSl9KSl9KSksZX0sT2k9dD0+dC5yZXBsYWNlKC8mL2csXCImYW1wO1wiKS5yZXBsYWNlKC9cIi9nLFwiJnF1b3Q7XCIpLnJlcGxhY2UoLycvZyxcIiZhcG9zO1wiKS5yZXBsYWNlKC88L2csXCImbHQ7XCIpLnJlcGxhY2UoLz4vZyxcIiZndDtcIiksa2k9dD0+e2NvbnN0IGU9W107Zm9yKGxldCBzLGk9MDtpPHQubGVuZ3RoO2krKykhMSE9PShzPURpKHQsaSkpJiZlLnB1c2gocyk7cmV0dXJuIGV9LERpPSh0LGUpPT57Y29uc3Qgcz10LmNoYXJDb2RlQXQoZSk7aWYoaXNOYU4ocykpcmV0dXJuXCJcIjtpZihzPDU1Mjk2fHxzPjU3MzQzKXJldHVybiB0LmNoYXJBdChlKTtpZig1NTI5Njw9cyYmczw9NTYzMTkpe2lmKHQubGVuZ3RoPD1lKzEpdGhyb3dcIkhpZ2ggc3Vycm9nYXRlIHdpdGhvdXQgZm9sbG93aW5nIGxvdyBzdXJyb2dhdGVcIjtjb25zdCBzPXQuY2hhckNvZGVBdChlKzEpO2lmKDU2MzIwPnN8fHM+NTczNDMpdGhyb3dcIkhpZ2ggc3Vycm9nYXRlIHdpdGhvdXQgZm9sbG93aW5nIGxvdyBzdXJyb2dhdGVcIjtyZXR1cm4gdC5jaGFyQXQoZSkrdC5jaGFyQXQoZSsxKX1pZigwPT09ZSl0aHJvd1wiTG93IHN1cnJvZ2F0ZSB3aXRob3V0IHByZWNlZGluZyBoaWdoIHN1cnJvZ2F0ZVwiO2NvbnN0IGk9dC5jaGFyQ29kZUF0KGUtMSk7aWYoNTUyOTY+aXx8aT41NjMxOSl0aHJvd1wiTG93IHN1cnJvZ2F0ZSB3aXRob3V0IHByZWNlZGluZyBoaWdoIHN1cnJvZ2F0ZVwiO3JldHVybiExfTt2YXIgTWk9T2JqZWN0LmZyZWV6ZSh7X19wcm90b19fOm51bGwsY2FwaXRhbGl6ZTpmdW5jdGlvbih0KXtsZXQgZT1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXSYmYXJndW1lbnRzWzFdO3JldHVyblwiXCIuY29uY2F0KHQuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkpLmNvbmNhdChlP3Quc2xpY2UoMSk6dC5zbGljZSgxKS50b0xvd2VyQ2FzZSgpKX0sZXNjYXBlWG1sOk9pLGdyYXBoZW1lU3BsaXQ6a2l9KTtjb25zdCBQaT1mdW5jdGlvbih0LGUpe2xldCBzPWFyZ3VtZW50cy5sZW5ndGg+MiYmdm9pZCAwIT09YXJndW1lbnRzWzJdJiZhcmd1bWVudHNbMl07cmV0dXJuIHQuZmlsbCE9PWUuZmlsbHx8dC5zdHJva2UhPT1lLnN0cm9rZXx8dC5zdHJva2VXaWR0aCE9PWUuc3Ryb2tlV2lkdGh8fHQuZm9udFNpemUhPT1lLmZvbnRTaXplfHx0LmZvbnRGYW1pbHkhPT1lLmZvbnRGYW1pbHl8fHQuZm9udFdlaWdodCE9PWUuZm9udFdlaWdodHx8dC5mb250U3R5bGUhPT1lLmZvbnRTdHlsZXx8dC50ZXh0QmFja2dyb3VuZENvbG9yIT09ZS50ZXh0QmFja2dyb3VuZENvbG9yfHx0LmRlbHRhWSE9PWUuZGVsdGFZfHxzJiYodC5vdmVybGluZSE9PWUub3ZlcmxpbmV8fHQudW5kZXJsaW5lIT09ZS51bmRlcmxpbmV8fHQubGluZXRocm91Z2ghPT1lLmxpbmV0aHJvdWdoKX0sRWk9KHQsZSk9Pntjb25zdCBzPWUuc3BsaXQoXCJcXG5cIiksaT1bXTtsZXQgcj0tMSxuPXt9O3Q9VGkodCk7Zm9yKGxldCBlPTA7ZTxzLmxlbmd0aDtlKyspe2NvbnN0IG89a2koc1tlXSk7aWYodFtlXSlmb3IobGV0IHM9MDtzPG8ubGVuZ3RoO3MrKyl7cisrO2NvbnN0IG89dFtlXVtzXTtvJiZPYmplY3Qua2V5cyhvKS5sZW5ndGg+MCYmKFBpKG4sbywhMCk/aS5wdXNoKHtzdGFydDpyLGVuZDpyKzEsc3R5bGU6b30pOmlbaS5sZW5ndGgtMV0uZW5kKyspLG49b3x8e319ZWxzZSByKz1vLmxlbmd0aCxuPXt9fXJldHVybiBpfSxBaT0odCxlKT0+e2lmKCFBcnJheS5pc0FycmF5KHQpKXJldHVybiBUaSh0KTtjb25zdCBpPWUuc3BsaXQoRikscj17fTtsZXQgbj0tMSxvPTA7Zm9yKGxldCBlPTA7ZTxpLmxlbmd0aDtlKyspe2NvbnN0IGE9a2koaVtlXSk7Zm9yKGxldCBpPTA7aTxhLmxlbmd0aDtpKyspbisrLHRbb10mJnRbb10uc3RhcnQ8PW4mJm48dFtvXS5lbmQmJihyW2VdPXJbZV18fHt9LHJbZV1baV09cyh7fSx0W29dLnN0eWxlKSxuPT09dFtvXS5lbmQtMSYmbysrKX1yZXR1cm4gcn0samk9W1wiZGlzcGxheVwiLFwidHJhbnNmb3JtXCIsSyxcImZpbGwtb3BhY2l0eVwiLFwiZmlsbC1ydWxlXCIsXCJvcGFjaXR5XCIsSixcInN0cm9rZS1kYXNoYXJyYXlcIixcInN0cm9rZS1saW5lY2FwXCIsXCJzdHJva2UtZGFzaG9mZnNldFwiLFwic3Ryb2tlLWxpbmVqb2luXCIsXCJzdHJva2UtbWl0ZXJsaW1pdFwiLFwic3Ryb2tlLW9wYWNpdHlcIixcInN0cm9rZS13aWR0aFwiLFwiaWRcIixcInBhaW50LW9yZGVyXCIsXCJ2ZWN0b3ItZWZmZWN0XCIsXCJpbnN0YW50aWF0ZWRfYnlfdXNlXCIsXCJjbGlwLXBhdGhcIl07ZnVuY3Rpb24gRmkodCxlKXtjb25zdCBzPXQubm9kZU5hbWUsaT10LmdldEF0dHJpYnV0ZShcImNsYXNzXCIpLHI9dC5nZXRBdHRyaWJ1dGUoXCJpZFwiKSxuPVwiKD8hW2EtekEtWlxcXFwtXSspXCI7bGV0IG87aWYobz1uZXcgUmVnRXhwKFwiXlwiK3MsXCJpXCIpLGU9ZS5yZXBsYWNlKG8sXCJcIiksciYmZS5sZW5ndGgmJihvPW5ldyBSZWdFeHAoXCIjXCIrcituLFwiaVwiKSxlPWUucmVwbGFjZShvLFwiXCIpKSxpJiZlLmxlbmd0aCl7Y29uc3QgdD1pLnNwbGl0KFwiIFwiKTtmb3IobGV0IHM9dC5sZW5ndGg7cy0tOylvPW5ldyBSZWdFeHAoXCJcXFxcLlwiK3Rbc10rbixcImlcIiksZT1lLnJlcGxhY2UobyxcIlwiKX1yZXR1cm4gMD09PWUubGVuZ3RofWZ1bmN0aW9uIExpKHQsZSl7bGV0IHM9ITA7Y29uc3QgaT1GaSh0LGUucG9wKCkpO3JldHVybiBpJiZlLmxlbmd0aCYmKHM9ZnVuY3Rpb24odCxlKXtsZXQgcyxpPSEwO2Zvcig7dC5wYXJlbnRFbGVtZW50JiYxPT09dC5wYXJlbnRFbGVtZW50Lm5vZGVUeXBlJiZlLmxlbmd0aDspaSYmKHM9ZS5wb3AoKSksaT1GaSh0PXQucGFyZW50RWxlbWVudCxzKTtyZXR1cm4gMD09PWUubGVuZ3RofSh0LGUpKSxpJiZzJiYwPT09ZS5sZW5ndGh9Y29uc3QgUmk9dD0+e3ZhciBlO3JldHVybiBudWxsIT09KGU9SGVbdF0pJiZ2b2lkIDAhPT1lP2U6dH0sSWk9bmV3IFJlZ0V4cChcIihcIi5jb25jYXQoV2UsXCIpXCIpLFwiZ2lcIiksQmk9dD0+dC5yZXBsYWNlKElpLFwiICQxIFwiKS5yZXBsYWNlKC8sL2dpLFwiIFwiKS5yZXBsYWNlKC9cXHMrL2dpLFwiIFwiKTt2YXIgWGksWWksV2ksVmksemksSGksR2k7Y29uc3QgTmk9XCIoXCIuY29uY2F0KFdlLFwiKVwiKSxVaT1TdHJpbmcucmF3KFhpfHwoWGk9cihbXCIoc2tld1gpKFwiLFwiKVwiXSxbXCIoc2tld1gpXFxcXChcIixcIlxcXFwpXCJdKSksTmkpLHFpPVN0cmluZy5yYXcoWWl8fChZaT1yKFtcIihza2V3WSkoXCIsXCIpXCJdLFtcIihza2V3WSlcXFxcKFwiLFwiXFxcXClcIl0pKSxOaSksS2k9U3RyaW5nLnJhdyhXaXx8KFdpPXIoW1wiKHJvdGF0ZSkoXCIsXCIoPzogXCIsXCIgXCIsXCIpPylcIl0sW1wiKHJvdGF0ZSlcXFxcKFwiLFwiKD86IFwiLFwiIFwiLFwiKT9cXFxcKVwiXSkpLE5pLE5pLE5pKSxKaT1TdHJpbmcucmF3KFZpfHwoVmk9cihbXCIoc2NhbGUpKFwiLFwiKD86IFwiLFwiKT8pXCJdLFtcIihzY2FsZSlcXFxcKFwiLFwiKD86IFwiLFwiKT9cXFxcKVwiXSkpLE5pLE5pKSxRaT1TdHJpbmcucmF3KHppfHwoemk9cihbXCIodHJhbnNsYXRlKShcIixcIig/OiBcIixcIik/KVwiXSxbXCIodHJhbnNsYXRlKVxcXFwoXCIsXCIoPzogXCIsXCIpP1xcXFwpXCJdKSksTmksTmkpLFppPVN0cmluZy5yYXcoSGl8fChIaT1yKFtcIihtYXRyaXgpKFwiLFwiIFwiLFwiIFwiLFwiIFwiLFwiIFwiLFwiIFwiLFwiKVwiXSxbXCIobWF0cml4KVxcXFwoXCIsXCIgXCIsXCIgXCIsXCIgXCIsXCIgXCIsXCIgXCIsXCJcXFxcKVwiXSkpLE5pLE5pLE5pLE5pLE5pLE5pKSwkaT1cIig/OlwiLmNvbmNhdChaaSxcInxcIikuY29uY2F0KFFpLFwifFwiKS5jb25jYXQoS2ksXCJ8XCIpLmNvbmNhdChKaSxcInxcIikuY29uY2F0KFVpLFwifFwiKS5jb25jYXQocWksXCIpXCIpLHRyPVwiKD86XCIuY29uY2F0KCRpLFwiKilcIiksZXI9U3RyaW5nLnJhdyhHaXx8KEdpPXIoW1wiXnMqKD86XCIsXCI/KXMqJFwiXSxbXCJeXFxcXHMqKD86XCIsXCI/KVxcXFxzKiRcIl0pKSx0ciksc3I9bmV3IFJlZ0V4cChlciksaXI9bmV3IFJlZ0V4cCgkaSkscnI9bmV3IFJlZ0V4cCgkaSxcImdcIik7ZnVuY3Rpb24gbnIodCl7Y29uc3QgZT1bXTtpZighKHQ9QmkodCkucmVwbGFjZSgvXFxzKihbKCldKVxccyovZ2ksXCIkMVwiKSl8fHQmJiFzci50ZXN0KHQpKXJldHVyblsuLi5UXTtmb3IoY29uc3QgcyBvZiB0Lm1hdGNoQWxsKHJyKSl7Y29uc3QgdD1pci5leGVjKHNbMF0pO2lmKCF0KWNvbnRpbnVlO2xldCBpPVQ7Y29uc3Qgcj10LmZpbHRlcigodD0+ISF0KSksWyxuLC4uLm9dPXIsW2EsaCxjLGwsdSxkXT1vLm1hcCgodD0+cGFyc2VGbG9hdCh0KSkpO3N3aXRjaChuKXtjYXNlXCJ0cmFuc2xhdGVcIjppPUR0KGEsaCk7YnJlYWs7Y2FzZSBCOmk9TXQoe2FuZ2xlOmF9LHt4OmgseTpjfSk7YnJlYWs7Y2FzZSBIOmk9UHQoYSxoKTticmVhaztjYXNlIFU6aT1BdChhKTticmVhaztjYXNlIHE6aT1qdChhKTticmVhaztjYXNlXCJtYXRyaXhcIjppPVthLGgsYyxsLHUsZF19ZS5wdXNoKGkpfXJldHVybiBUdChlKX1mdW5jdGlvbiBvcih0LGUscyxpKXtjb25zdCByPUFycmF5LmlzQXJyYXkoZSk7bGV0IG4sbz1lO2lmKHQhPT1LJiZ0IT09Snx8ZSE9PWope2lmKFwic3Ryb2tlVW5pZm9ybVwiPT09dClyZXR1cm5cIm5vbi1zY2FsaW5nLXN0cm9rZVwiPT09ZTtpZihcInN0cm9rZURhc2hBcnJheVwiPT09dClvPWU9PT1qP251bGw6ZS5yZXBsYWNlKC8sL2csXCIgXCIpLnNwbGl0KC9cXHMrLykubWFwKHBhcnNlRmxvYXQpO2Vsc2UgaWYoXCJ0cmFuc2Zvcm1NYXRyaXhcIj09PXQpbz1zJiZzLnRyYW5zZm9ybU1hdHJpeD9TdChzLnRyYW5zZm9ybU1hdHJpeCxucihlKSk6bnIoZSk7ZWxzZSBpZihcInZpc2libGVcIj09PXQpbz1lIT09aiYmXCJoaWRkZW5cIiE9PWUscyYmITE9PT1zLnZpc2libGUmJihvPSExKTtlbHNlIGlmKFwib3BhY2l0eVwiPT09dClvPXBhcnNlRmxvYXQoZSkscyYmdm9pZCAwIT09cy5vcGFjaXR5JiYobyo9cy5vcGFjaXR5KTtlbHNlIGlmKFwidGV4dEFuY2hvclwiPT09dClvPVwic3RhcnRcIj09PWU/TTpcImVuZFwiPT09ZT9BOkQ7ZWxzZSBpZihcImNoYXJTcGFjaW5nXCI9PT10KW49S3QoZSxpKS9pKjFlMztlbHNlIGlmKFwicGFpbnRGaXJzdFwiPT09dCl7Y29uc3QgdD1lLmluZGV4T2YoSykscz1lLmluZGV4T2YoSik7bz1LLCh0Pi0xJiZzPi0xJiZzPHR8fC0xPT09dCYmcz4tMSkmJihvPUopfWVsc2V7aWYoXCJocmVmXCI9PT10fHxcInhsaW5rOmhyZWZcIj09PXR8fFwiZm9udFwiPT09dHx8XCJpZFwiPT09dClyZXR1cm4gZTtpZihcImltYWdlU21vb3RoaW5nXCI9PT10KXJldHVyblwib3B0aW1pemVRdWFsaXR5XCI9PT1lO249cj9lLm1hcChLdCk6S3QoZSxpKX19ZWxzZSBvPVwiXCI7cmV0dXJuIXImJmlzTmFOKG4pP286bn1mdW5jdGlvbiBhcih0LGUpe2NvbnN0IHM9dC5tYXRjaCh6ZSk7aWYoIXMpcmV0dXJuO2NvbnN0IGk9c1sxXSxyPXNbM10sbj1zWzRdLG89c1s1XSxhPXNbNl07aSYmKGUuZm9udFN0eWxlPWkpLHImJihlLmZvbnRXZWlnaHQ9aXNOYU4ocGFyc2VGbG9hdChyKSk/cjpwYXJzZUZsb2F0KHIpKSxuJiYoZS5mb250U2l6ZT1LdChuKSksYSYmKGUuZm9udEZhbWlseT1hKSxvJiYoZS5saW5lSGVpZ2h0PVwibm9ybWFsXCI9PT1vPzE6byl9ZnVuY3Rpb24gaHIodCxlKXt0LnJlcGxhY2UoLztcXHMqJC8sXCJcIikuc3BsaXQoXCI7XCIpLmZvckVhY2goKHQ9PntpZighdClyZXR1cm47Y29uc3RbcyxpXT10LnNwbGl0KFwiOlwiKTtlW3MudHJpbSgpLnRvTG93ZXJDYXNlKCldPWkudHJpbSgpfSkpfWZ1bmN0aW9uIGNyKHQpe2NvbnN0IGU9e30scz10LmdldEF0dHJpYnV0ZShcInN0eWxlXCIpO3JldHVybiBzPyhcInN0cmluZ1wiPT10eXBlb2Ygcz9ocihzLGUpOmZ1bmN0aW9uKHQsZSl7T2JqZWN0LmVudHJpZXModCkuZm9yRWFjaCgodD0+e2xldFtzLGldPXQ7dm9pZCAwIT09aSYmKGVbcy50b0xvd2VyQ2FzZSgpXT1pKX0pKX0ocyxlKSxlKTplfWNvbnN0IGxyPXtzdHJva2U6XCJzdHJva2VPcGFjaXR5XCIsZmlsbDpcImZpbGxPcGFjaXR5XCJ9O2Z1bmN0aW9uIHVyKHQsZSxpKXtpZighdClyZXR1cm57fTtsZXQgcixuPXt9LG89Tzt0LnBhcmVudE5vZGUmJktlLnRlc3QodC5wYXJlbnROb2RlLm5vZGVOYW1lKSYmKG49dXIodC5wYXJlbnRFbGVtZW50LGUsaSksbi5mb250U2l6ZSYmKHI9bz1LdChuLmZvbnRTaXplKSkpO2NvbnN0IGE9cyhzKHMoe30sZS5yZWR1Y2UoKChlLHMpPT57Y29uc3QgaT10LmdldEF0dHJpYnV0ZShzKTtyZXR1cm4gaSYmKGVbc109aSksZX0pLHt9KSksZnVuY3Rpb24odCl7bGV0IGU9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOnt9LGk9e307Zm9yKGNvbnN0IHIgaW4gZSlMaSh0LHIuc3BsaXQoXCIgXCIpKSYmKGk9cyhzKHt9LGkpLGVbcl0pKTtyZXR1cm4gaX0odCxpKSksY3IodCkpO2FbTmVdJiZ0LnNldEF0dHJpYnV0ZShOZSxhW05lXSksYVtHZV0mJihyPUt0KGFbR2VdLG8pLGFbR2VdPVwiXCIuY29uY2F0KHIpKTtjb25zdCBoPXt9O2Zvcihjb25zdCB0IGluIGEpe2NvbnN0IGU9UmkodCkscz1vcihlLGFbdF0sbixyKTtoW2VdPXN9aCYmaC5mb250JiZhcihoLmZvbnQsaCk7Y29uc3QgYz1zKHMoe30sbiksaCk7cmV0dXJuIEtlLnRlc3QodC5ub2RlTmFtZSk/YzpmdW5jdGlvbih0KXtjb25zdCBlPXlpLmdldERlZmF1bHRzKCk7cmV0dXJuIE9iamVjdC5lbnRyaWVzKGxyKS5mb3JFYWNoKChzPT57bGV0W2kscl09cztpZih2b2lkIDA9PT10W3JdfHxcIlwiPT09dFtpXSlyZXR1cm47aWYodm9pZCAwPT09dFtpXSl7aWYoIWVbaV0pcmV0dXJuO3RbaV09ZVtpXX1pZigwPT09dFtpXS5pbmRleE9mKFwidXJsKFwiKSlyZXR1cm47Y29uc3Qgbj1uZXcgVXQodFtpXSk7dFtpXT1uLnNldEFscGhhKHF0KG4uZ2V0QWxwaGEoKSp0W3JdLDIpKS50b1JnYmEoKX0pKSx0fShjKX1jb25zdCBkcj1bXCJsZWZ0XCIsXCJ0b3BcIixcIndpZHRoXCIsXCJoZWlnaHRcIixcInZpc2libGVcIl0sZ3I9W1wicnhcIixcInJ5XCJdO2NsYXNzIGZyIGV4dGVuZHMgeWl7c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJuIHMocyh7fSxzdXBlci5nZXREZWZhdWx0cygpKSxmci5vd25EZWZhdWx0cyl9Y29uc3RydWN0b3IodCl7c3VwZXIoKSxPYmplY3QuYXNzaWduKHRoaXMsZnIub3duRGVmYXVsdHMpLHRoaXMuc2V0T3B0aW9ucyh0KSx0aGlzLl9pbml0UnhSeSgpfV9pbml0UnhSeSgpe2NvbnN0e3J4OnQscnk6ZX09dGhpczt0JiYhZT90aGlzLnJ5PXQ6ZSYmIXQmJih0aGlzLnJ4PWUpfV9yZW5kZXIodCl7Y29uc3R7d2lkdGg6ZSxoZWlnaHQ6c309dGhpcyxpPS1lLzIscj0tcy8yLG49dGhpcy5yeD9NYXRoLm1pbih0aGlzLnJ4LGUvMik6MCxvPXRoaXMucnk/TWF0aC5taW4odGhpcy5yeSxzLzIpOjAsYT0wIT09bnx8MCE9PW87dC5iZWdpblBhdGgoKSx0Lm1vdmVUbyhpK24sciksdC5saW5lVG8oaStlLW4sciksYSYmdC5iZXppZXJDdXJ2ZVRvKGkrZS1rKm4scixpK2UscitrKm8saStlLHIrbyksdC5saW5lVG8oaStlLHIrcy1vKSxhJiZ0LmJlemllckN1cnZlVG8oaStlLHIrcy1rKm8saStlLWsqbixyK3MsaStlLW4scitzKSx0LmxpbmVUbyhpK24scitzKSxhJiZ0LmJlemllckN1cnZlVG8oaStrKm4scitzLGkscitzLWsqbyxpLHIrcy1vKSx0LmxpbmVUbyhpLHIrbyksYSYmdC5iZXppZXJDdXJ2ZVRvKGkscitrKm8saStrKm4scixpK24sciksdC5jbG9zZVBhdGgoKSx0aGlzLl9yZW5kZXJQYWludEluT3JkZXIodCl9dG9PYmplY3QoKXtsZXQgdD1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06W107cmV0dXJuIHN1cGVyLnRvT2JqZWN0KFsuLi5nciwuLi50XSl9X3RvU1ZHKCl7Y29uc3R7d2lkdGg6dCxoZWlnaHQ6ZSxyeDpzLHJ5Oml9PXRoaXM7cmV0dXJuW1wiPHJlY3QgXCIsXCJDT01NT05fUEFSVFNcIiwneD1cIicuY29uY2F0KC10LzIsJ1wiIHk9XCInKS5jb25jYXQoLWUvMiwnXCIgcng9XCInKS5jb25jYXQocywnXCIgcnk9XCInKS5jb25jYXQoaSwnXCIgd2lkdGg9XCInKS5jb25jYXQodCwnXCIgaGVpZ2h0PVwiJykuY29uY2F0KGUsJ1wiIC8+XFxuJyldfXN0YXRpYyBhc3luYyBmcm9tRWxlbWVudCh0LGUscil7Y29uc3Qgbj11cih0LHRoaXMuQVRUUklCVVRFX05BTUVTLHIpLHtsZWZ0Om89MCx0b3A6YT0wLHdpZHRoOmg9MCxoZWlnaHQ6Yz0wLHZpc2libGU6bD0hMH09bix1PWkobixkcik7cmV0dXJuIG5ldyB0aGlzKHMocyhzKHt9LGUpLHUpLHt9LHtsZWZ0Om8sdG9wOmEsd2lkdGg6aCxoZWlnaHQ6Yyx2aXNpYmxlOkJvb2xlYW4obCYmaCYmYyl9KSl9fXQoZnIsXCJ0eXBlXCIsXCJSZWN0XCIpLHQoZnIsXCJjYWNoZVByb3BlcnRpZXNcIixbLi4uZnMsLi4uZ3JdKSx0KGZyLFwib3duRGVmYXVsdHNcIix7cng6MCxyeTowfSksdChmcixcIkFUVFJJQlVURV9OQU1FU1wiLFsuLi5qaSxcInhcIixcInlcIixcInJ4XCIsXCJyeVwiLFwid2lkdGhcIixcImhlaWdodFwiXSksdHQuc2V0Q2xhc3MoZnIpLHR0LnNldFNWR0NsYXNzKGZyKTtjb25zdCBwcj1cImluaXRpYWxpemF0aW9uXCIsbXI9XCJhZGRlZFwiLHZyPVwicmVtb3ZlZFwiLHlyPVwiaW1wZXJhdGl2ZVwiLF9yPSh0LGUpPT57Y29uc3R7c3Ryb2tlVW5pZm9ybTpzLHN0cm9rZVdpZHRoOmksd2lkdGg6cixoZWlnaHQ6bixncm91cDpvfT1lLGE9byYmbyE9PXQ/d2Uoby5jYWxjVHJhbnNmb3JtTWF0cml4KCksdC5jYWxjVHJhbnNmb3JtTWF0cml4KCkpOm51bGwsaD1hP2UuZ2V0UmVsYXRpdmVDZW50ZXJQb2ludCgpLnRyYW5zZm9ybShhKTplLmdldFJlbGF0aXZlQ2VudGVyUG9pbnQoKSxjPSFlLmlzU3Ryb2tlQWNjb3VudGVkRm9ySW5EaW1lbnNpb25zKCksbD1zJiZjP1RlKG5ldyBvdChpLGkpLHZvaWQgMCx0LmNhbGNUcmFuc2Zvcm1NYXRyaXgoKSk6YXQsdT0hcyYmYz9pOjAsZD1iZShyK3Usbit1LFR0KFthLGUuY2FsY093bk1hdHJpeCgpXSwhMCkpLmFkZChsKS5zY2FsYXJEaXZpZGUoMik7cmV0dXJuW2guc3VidHJhY3QoZCksaC5hZGQoZCldfTtjbGFzcyB4cntjYWxjTGF5b3V0UmVzdWx0KHQsZSl7aWYodGhpcy5zaG91bGRQZXJmb3JtTGF5b3V0KHQpKXJldHVybiB0aGlzLmNhbGNCb3VuZGluZ0JveChlLHQpfXNob3VsZFBlcmZvcm1MYXlvdXQodCl7bGV0e3R5cGU6ZSxwcmV2U3RyYXRlZ3k6cyxzdHJhdGVneTppfT10O3JldHVybiBlPT09cHJ8fGU9PT15cnx8ISFzJiZpIT09c31zaG91bGRMYXlvdXRDbGlwUGF0aCh0KXtsZXR7dHlwZTplLHRhcmdldDp7Y2xpcFBhdGg6c319PXQ7cmV0dXJuIGUhPT1wciYmcyYmIXMuYWJzb2x1dGVQb3NpdGlvbmVkfWdldEluaXRpYWxTaXplKHQsZSl7cmV0dXJuIGUuc2l6ZX1jYWxjQm91bmRpbmdCb3godCxlKXtjb25zdHt0eXBlOnMsdGFyZ2V0Oml9PWU7aWYocz09PXlyJiZlLm92ZXJyaWRlcylyZXR1cm4gZS5vdmVycmlkZXM7aWYoMD09PXQubGVuZ3RoKXJldHVybjtjb25zdHtsZWZ0OnIsdG9wOm4sd2lkdGg6byxoZWlnaHQ6YX09bWUodC5tYXAoKHQ9Pl9yKGksdCkpKS5yZWR1Y2UoKCh0LGUpPT50LmNvbmNhdChlKSksW10pKSxoPW5ldyBvdChvLGEpLGM9bmV3IG90KHIsbikuYWRkKGguc2NhbGFyRGl2aWRlKDIpKTtpZihzPT09cHIpe2NvbnN0IHQ9dGhpcy5nZXRJbml0aWFsU2l6ZShlLHtzaXplOmgsY2VudGVyOmN9KTtyZXR1cm57Y2VudGVyOmMscmVsYXRpdmVDb3JyZWN0aW9uOm5ldyBvdCgwLDApLHNpemU6dH19cmV0dXJue2NlbnRlcjpjLnRyYW5zZm9ybShpLmNhbGNPd25NYXRyaXgoKSksc2l6ZTpofX19dCh4cixcInR5cGVcIixcInN0cmF0ZWd5XCIpO2NsYXNzIENyIGV4dGVuZHMgeHJ7c2hvdWxkUGVyZm9ybUxheW91dCh0KXtyZXR1cm4hMH19dChDcixcInR5cGVcIixcImZpdC1jb250ZW50XCIpLHR0LnNldENsYXNzKENyKTtjb25zdCBicj1bXCJzdHJhdGVneVwiXSx3cj1bXCJ0YXJnZXRcIixcInN0cmF0ZWd5XCIsXCJidWJibGVzXCIsXCJwcmV2U3RyYXRlZ3lcIl0sU3I9XCJsYXlvdXRNYW5hZ2VyXCI7Y2xhc3MgVHJ7Y29uc3RydWN0b3IoKXtsZXQgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06bmV3IENyO3QodGhpcyxcInN0cmF0ZWd5XCIsdm9pZCAwKSx0aGlzLnN0cmF0ZWd5PWUsdGhpcy5fc3Vic2NyaXB0aW9ucz1uZXcgTWFwfXBlcmZvcm1MYXlvdXQodCl7Y29uc3QgZT1zKHMoe2J1YmJsZXM6ITAsc3RyYXRlZ3k6dGhpcy5zdHJhdGVneX0sdCkse30se3ByZXZTdHJhdGVneTp0aGlzLl9wcmV2TGF5b3V0U3RyYXRlZ3ksc3RvcFByb3BhZ2F0aW9uKCl7dGhpcy5idWJibGVzPSExfX0pO3RoaXMub25CZWZvcmVMYXlvdXQoZSk7Y29uc3QgaT10aGlzLmdldExheW91dFJlc3VsdChlKTtpJiZ0aGlzLmNvbW1pdExheW91dChlLGkpLHRoaXMub25BZnRlckxheW91dChlLGkpLHRoaXMuX3ByZXZMYXlvdXRTdHJhdGVneT1lLnN0cmF0ZWd5fWF0dGFjaEhhbmRsZXJzKHQsZSl7Y29uc3R7dGFyZ2V0OnN9PWU7cmV0dXJuW1EsTCxZLEksUixYLHosVyxWXS5tYXAoKGU9PnQub24oZSwodD0+dGhpcy5wZXJmb3JtTGF5b3V0KGU9PT1RP3t0eXBlOlwib2JqZWN0X21vZGlmaWVkXCIsdHJpZ2dlcjplLGU6dCx0YXJnZXQ6c306e3R5cGU6XCJvYmplY3RfbW9kaWZ5aW5nXCIsdHJpZ2dlcjplLGU6dCx0YXJnZXQ6c30pKSkpKX1zdWJzY3JpYmUodCxlKXt0aGlzLnVuc3Vic2NyaWJlKHQsZSk7Y29uc3Qgcz10aGlzLmF0dGFjaEhhbmRsZXJzKHQsZSk7dGhpcy5fc3Vic2NyaXB0aW9ucy5zZXQodCxzKX11bnN1YnNjcmliZSh0LGUpeyh0aGlzLl9zdWJzY3JpcHRpb25zLmdldCh0KXx8W10pLmZvckVhY2goKHQ9PnQoKSkpLHRoaXMuX3N1YnNjcmlwdGlvbnMuZGVsZXRlKHQpfXVuc3Vic2NyaWJlVGFyZ2V0cyh0KXt0LnRhcmdldHMuZm9yRWFjaCgoZT0+dGhpcy51bnN1YnNjcmliZShlLHQpKSl9c3Vic2NyaWJlVGFyZ2V0cyh0KXt0LnRhcmdldHMuZm9yRWFjaCgoZT0+dGhpcy5zdWJzY3JpYmUoZSx0KSkpfW9uQmVmb3JlTGF5b3V0KHQpe2NvbnN0e3RhcmdldDplLHR5cGU6cn09dCx7Y2FudmFzOm59PWU7aWYocj09PXByfHxyPT09bXI/dGhpcy5zdWJzY3JpYmVUYXJnZXRzKHQpOnI9PT12ciYmdGhpcy51bnN1YnNjcmliZVRhcmdldHModCksZS5maXJlKFwibGF5b3V0OmJlZm9yZVwiLHtjb250ZXh0OnR9KSxuJiZuLmZpcmUoXCJvYmplY3Q6bGF5b3V0OmJlZm9yZVwiLHt0YXJnZXQ6ZSxjb250ZXh0OnR9KSxyPT09eXImJnQuZGVlcCl7Y29uc3Qgcj1pKHQsYnIpO2UuZm9yRWFjaE9iamVjdCgodD0+dC5sYXlvdXRNYW5hZ2VyJiZ0LmxheW91dE1hbmFnZXIucGVyZm9ybUxheW91dChzKHMoe30scikse30se2J1YmJsZXM6ITEsdGFyZ2V0OnR9KSkpKX19Z2V0TGF5b3V0UmVzdWx0KHQpe2NvbnN0e3RhcmdldDplLHN0cmF0ZWd5OnMsdHlwZTppfT10LHI9cy5jYWxjTGF5b3V0UmVzdWx0KHQsZS5nZXRPYmplY3RzKCkpO2lmKCFyKXJldHVybjtjb25zdCBuPWk9PT1wcj9uZXcgb3Q6ZS5nZXRSZWxhdGl2ZUNlbnRlclBvaW50KCkse2NlbnRlcjpvLGNvcnJlY3Rpb246YT1uZXcgb3QscmVsYXRpdmVDb3JyZWN0aW9uOmg9bmV3IG90fT1yLGM9bi5zdWJ0cmFjdChvKS5hZGQoYSkudHJhbnNmb3JtKGk9PT1wcj9UOnd0KGUuY2FsY093bk1hdHJpeCgpKSwhMCkuYWRkKGgpO3JldHVybntyZXN1bHQ6cixwcmV2Q2VudGVyOm4sbmV4dENlbnRlcjpvLG9mZnNldDpjfX1jb21taXRMYXlvdXQodCxlKXtjb25zdHt0YXJnZXQ6c309dCx7cmVzdWx0OntzaXplOml9LG5leHRDZW50ZXI6cn09ZTt2YXIgbixvOyhzLnNldCh7d2lkdGg6aS54LGhlaWdodDppLnl9KSx0aGlzLmxheW91dE9iamVjdHModCxlKSx0LnR5cGU9PT1wcik/cy5zZXQoe2xlZnQ6bnVsbCE9PShuPXQueCkmJnZvaWQgMCE9PW4/bjpyLngraS54Kk1lKHMub3JpZ2luWCksdG9wOm51bGwhPT0obz10LnkpJiZ2b2lkIDAhPT1vP286ci55K2kueSpNZShzLm9yaWdpblkpfSk6KHMuc2V0UG9zaXRpb25CeU9yaWdpbihyLEQsRCkscy5zZXRDb29yZHMoKSxzLnNldChcImRpcnR5XCIsITApKX1sYXlvdXRPYmplY3RzKHQsZSl7Y29uc3R7dGFyZ2V0OnN9PXQ7cy5mb3JFYWNoT2JqZWN0KChpPT57aS5ncm91cD09PXMmJnRoaXMubGF5b3V0T2JqZWN0KHQsZSxpKX0pKSx0LnN0cmF0ZWd5LnNob3VsZExheW91dENsaXBQYXRoKHQpJiZ0aGlzLmxheW91dE9iamVjdCh0LGUscy5jbGlwUGF0aCl9bGF5b3V0T2JqZWN0KHQsZSxzKXtsZXR7b2Zmc2V0Oml9PWU7cy5zZXQoe2xlZnQ6cy5sZWZ0K2kueCx0b3A6cy50b3AraS55fSl9b25BZnRlckxheW91dCh0LGUpe2NvbnN0e3RhcmdldDpyLHN0cmF0ZWd5Om4sYnViYmxlczpvLHByZXZTdHJhdGVneTphfT10LGg9aSh0LHdyKSx7Y2FudmFzOmN9PXI7ci5maXJlKFwibGF5b3V0OmFmdGVyXCIse2NvbnRleHQ6dCxyZXN1bHQ6ZX0pLGMmJmMuZmlyZShcIm9iamVjdDpsYXlvdXQ6YWZ0ZXJcIix7Y29udGV4dDp0LHJlc3VsdDplLHRhcmdldDpyfSk7Y29uc3QgbD1yLnBhcmVudDtvJiZudWxsIT1sJiZsLmxheW91dE1hbmFnZXImJigoaC5wYXRofHwoaC5wYXRoPVtdKSkucHVzaChyKSxsLmxheW91dE1hbmFnZXIucGVyZm9ybUxheW91dChzKHMoe30saCkse30se3RhcmdldDpsfSkpKSxyLnNldChcImRpcnR5XCIsITApfWRpc3Bvc2UoKXtjb25zdHtfc3Vic2NyaXB0aW9uczp0fT10aGlzO3QuZm9yRWFjaCgodD0+dC5mb3JFYWNoKCh0PT50KCkpKSkpLHQuY2xlYXIoKX10b09iamVjdCgpe3JldHVybnt0eXBlOlNyLHN0cmF0ZWd5OnRoaXMuc3RyYXRlZ3kuY29uc3RydWN0b3IudHlwZX19dG9KU09OKCl7cmV0dXJuIHRoaXMudG9PYmplY3QoKX19dHQuc2V0Q2xhc3MoVHIsU3IpO2NvbnN0IE9yPVtcInR5cGVcIixcIm9iamVjdHNcIixcImxheW91dE1hbmFnZXJcIl07Y2xhc3Mga3IgZXh0ZW5kcyBUcntwZXJmb3JtTGF5b3V0KCl7fX1jbGFzcyBEciBleHRlbmRzKGN0KHlpKSl7c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJuIHMocyh7fSxzdXBlci5nZXREZWZhdWx0cygpKSxEci5vd25EZWZhdWx0cyl9Y29uc3RydWN0b3IoKXtsZXQgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06W10scz1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06e307c3VwZXIoKSx0KHRoaXMsXCJfYWN0aXZlT2JqZWN0c1wiLFtdKSx0KHRoaXMsXCJfX29iamVjdFNlbGVjdGlvblRyYWNrZXJcIix2b2lkIDApLHQodGhpcyxcIl9fb2JqZWN0U2VsZWN0aW9uRGlzcG9zZXJcIix2b2lkIDApLE9iamVjdC5hc3NpZ24odGhpcyxEci5vd25EZWZhdWx0cyksdGhpcy5zZXRPcHRpb25zKHMpLHRoaXMuZ3JvdXBJbml0KGUscyl9Z3JvdXBJbml0KHQsZSl7dmFyIHM7dGhpcy5fb2JqZWN0cz1bLi4udF0sdGhpcy5fX29iamVjdFNlbGVjdGlvblRyYWNrZXI9dGhpcy5fX29iamVjdFNlbGVjdGlvbk1vbml0b3IuYmluZCh0aGlzLCEwKSx0aGlzLl9fb2JqZWN0U2VsZWN0aW9uRGlzcG9zZXI9dGhpcy5fX29iamVjdFNlbGVjdGlvbk1vbml0b3IuYmluZCh0aGlzLCExKSx0aGlzLmZvckVhY2hPYmplY3QoKHQ9Pnt0aGlzLmVudGVyR3JvdXAodCwhMSl9KSksdGhpcy5sYXlvdXRNYW5hZ2VyPW51bGwhPT0ocz1lLmxheW91dE1hbmFnZXIpJiZ2b2lkIDAhPT1zP3M6bmV3IFRyLHRoaXMubGF5b3V0TWFuYWdlci5wZXJmb3JtTGF5b3V0KHt0eXBlOnByLHRhcmdldDp0aGlzLHRhcmdldHM6Wy4uLnRdLHg6ZS5sZWZ0LHk6ZS50b3B9KX1jYW5FbnRlckdyb3VwKHQpe3JldHVybiB0PT09dGhpc3x8dGhpcy5pc0Rlc2NlbmRhbnRPZih0KT8oYShcImVycm9yXCIsXCJHcm91cDogY2lyY3VsYXIgb2JqZWN0IHRyZWVzIGFyZSBub3Qgc3VwcG9ydGVkLCB0aGlzIGNhbGwgaGFzIG5vIGVmZmVjdFwiKSwhMSk6LTE9PT10aGlzLl9vYmplY3RzLmluZGV4T2YodCl8fChhKFwiZXJyb3JcIixcIkdyb3VwOiBkdXBsaWNhdGUgb2JqZWN0cyBhcmUgbm90IHN1cHBvcnRlZCBpbnNpZGUgZ3JvdXAsIHRoaXMgY2FsbCBoYXMgbm8gZWZmZWN0XCIpLCExKX1fZmlsdGVyT2JqZWN0c0JlZm9yZUVudGVyaW5nR3JvdXAodCl7cmV0dXJuIHQuZmlsdGVyKCgodCxlLHMpPT50aGlzLmNhbkVudGVyR3JvdXAodCkmJnMuaW5kZXhPZih0KT09PWUpKX1hZGQoKXtmb3IodmFyIHQ9YXJndW1lbnRzLmxlbmd0aCxlPW5ldyBBcnJheSh0KSxzPTA7czx0O3MrKyllW3NdPWFyZ3VtZW50c1tzXTtjb25zdCBpPXRoaXMuX2ZpbHRlck9iamVjdHNCZWZvcmVFbnRlcmluZ0dyb3VwKGUpLHI9c3VwZXIuYWRkKC4uLmkpO3JldHVybiB0aGlzLl9vbkFmdGVyT2JqZWN0c0NoYW5nZShtcixpKSxyfWluc2VydEF0KHQpe2Zvcih2YXIgZT1hcmd1bWVudHMubGVuZ3RoLHM9bmV3IEFycmF5KGU+MT9lLTE6MCksaT0xO2k8ZTtpKyspc1tpLTFdPWFyZ3VtZW50c1tpXTtjb25zdCByPXRoaXMuX2ZpbHRlck9iamVjdHNCZWZvcmVFbnRlcmluZ0dyb3VwKHMpLG49c3VwZXIuaW5zZXJ0QXQodCwuLi5yKTtyZXR1cm4gdGhpcy5fb25BZnRlck9iamVjdHNDaGFuZ2UobXIsciksbn1yZW1vdmUoKXtjb25zdCB0PXN1cGVyLnJlbW92ZSguLi5hcmd1bWVudHMpO3JldHVybiB0aGlzLl9vbkFmdGVyT2JqZWN0c0NoYW5nZSh2cix0KSx0fV9vbk9iamVjdEFkZGVkKHQpe3RoaXMuZW50ZXJHcm91cCh0LCEwKSx0aGlzLmZpcmUoXCJvYmplY3Q6YWRkZWRcIix7dGFyZ2V0OnR9KSx0LmZpcmUoXCJhZGRlZFwiLHt0YXJnZXQ6dGhpc30pfV9vbk9iamVjdFJlbW92ZWQodCxlKXt0aGlzLmV4aXRHcm91cCh0LGUpLHRoaXMuZmlyZShcIm9iamVjdDpyZW1vdmVkXCIse3RhcmdldDp0fSksdC5maXJlKFwicmVtb3ZlZFwiLHt0YXJnZXQ6dGhpc30pfV9vbkFmdGVyT2JqZWN0c0NoYW5nZSh0LGUpe3RoaXMubGF5b3V0TWFuYWdlci5wZXJmb3JtTGF5b3V0KHt0eXBlOnQsdGFyZ2V0czplLHRhcmdldDp0aGlzfSl9X29uU3RhY2tPcmRlckNoYW5nZWQoKXt0aGlzLl9zZXQoXCJkaXJ0eVwiLCEwKX1fc2V0KHQsZSl7Y29uc3Qgcz10aGlzW3RdO3JldHVybiBzdXBlci5fc2V0KHQsZSksXCJjYW52YXNcIj09PXQmJnMhPT1lJiYodGhpcy5fb2JqZWN0c3x8W10pLmZvckVhY2goKHM9PntzLl9zZXQodCxlKX0pKSx0aGlzfV9zaG91bGRTZXROZXN0ZWRDb29yZHMoKXtyZXR1cm4gdGhpcy5zdWJUYXJnZXRDaGVja31yZW1vdmVBbGwoKXtyZXR1cm4gdGhpcy5fYWN0aXZlT2JqZWN0cz1bXSx0aGlzLnJlbW92ZSguLi50aGlzLl9vYmplY3RzKX1fX29iamVjdFNlbGVjdGlvbk1vbml0b3IodCxlKXtsZXR7dGFyZ2V0OnN9PWU7Y29uc3QgaT10aGlzLl9hY3RpdmVPYmplY3RzO2lmKHQpaS5wdXNoKHMpLHRoaXMuX3NldChcImRpcnR5XCIsITApO2Vsc2UgaWYoaS5sZW5ndGg+MCl7Y29uc3QgdD1pLmluZGV4T2Yocyk7dD4tMSYmKGkuc3BsaWNlKHQsMSksdGhpcy5fc2V0KFwiZGlydHlcIiwhMCkpfX1fd2F0Y2hPYmplY3QodCxlKXt0JiZ0aGlzLl93YXRjaE9iamVjdCghMSxlKSx0PyhlLm9uKFwic2VsZWN0ZWRcIix0aGlzLl9fb2JqZWN0U2VsZWN0aW9uVHJhY2tlciksZS5vbihcImRlc2VsZWN0ZWRcIix0aGlzLl9fb2JqZWN0U2VsZWN0aW9uRGlzcG9zZXIpKTooZS5vZmYoXCJzZWxlY3RlZFwiLHRoaXMuX19vYmplY3RTZWxlY3Rpb25UcmFja2VyKSxlLm9mZihcImRlc2VsZWN0ZWRcIix0aGlzLl9fb2JqZWN0U2VsZWN0aW9uRGlzcG9zZXIpKX1lbnRlckdyb3VwKHQsZSl7dC5ncm91cCYmdC5ncm91cC5yZW1vdmUodCksdC5fc2V0KFwicGFyZW50XCIsdGhpcyksdGhpcy5fZW50ZXJHcm91cCh0LGUpfV9lbnRlckdyb3VwKHQsZSl7ZSYmX2UodCxTdCh3dCh0aGlzLmNhbGNUcmFuc2Zvcm1NYXRyaXgoKSksdC5jYWxjVHJhbnNmb3JtTWF0cml4KCkpKSx0aGlzLl9zaG91bGRTZXROZXN0ZWRDb29yZHMoKSYmdC5zZXRDb29yZHMoKSx0Ll9zZXQoXCJncm91cFwiLHRoaXMpLHQuX3NldChcImNhbnZhc1wiLHRoaXMuY2FudmFzKSx0aGlzLl93YXRjaE9iamVjdCghMCx0KTtjb25zdCBzPXRoaXMuY2FudmFzJiZ0aGlzLmNhbnZhcy5nZXRBY3RpdmVPYmplY3QmJnRoaXMuY2FudmFzLmdldEFjdGl2ZU9iamVjdCgpO3MmJihzPT09dHx8dC5pc0Rlc2NlbmRhbnRPZihzKSkmJnRoaXMuX2FjdGl2ZU9iamVjdHMucHVzaCh0KX1leGl0R3JvdXAodCxlKXt0aGlzLl9leGl0R3JvdXAodCxlKSx0Ll9zZXQoXCJwYXJlbnRcIix2b2lkIDApLHQuX3NldChcImNhbnZhc1wiLHZvaWQgMCl9X2V4aXRHcm91cCh0LGUpe3QuX3NldChcImdyb3VwXCIsdm9pZCAwKSxlfHwoX2UodCxTdCh0aGlzLmNhbGNUcmFuc2Zvcm1NYXRyaXgoKSx0LmNhbGNUcmFuc2Zvcm1NYXRyaXgoKSkpLHQuc2V0Q29vcmRzKCkpLHRoaXMuX3dhdGNoT2JqZWN0KCExLHQpO2NvbnN0IHM9dGhpcy5fYWN0aXZlT2JqZWN0cy5sZW5ndGg+MD90aGlzLl9hY3RpdmVPYmplY3RzLmluZGV4T2YodCk6LTE7cz4tMSYmdGhpcy5fYWN0aXZlT2JqZWN0cy5zcGxpY2UocywxKX1zaG91bGRDYWNoZSgpe2NvbnN0IHQ9eWkucHJvdG90eXBlLnNob3VsZENhY2hlLmNhbGwodGhpcyk7aWYodClmb3IobGV0IHQ9MDt0PHRoaXMuX29iamVjdHMubGVuZ3RoO3QrKylpZih0aGlzLl9vYmplY3RzW3RdLndpbGxEcmF3U2hhZG93KCkpcmV0dXJuIHRoaXMub3duQ2FjaGluZz0hMSwhMTtyZXR1cm4gdH13aWxsRHJhd1NoYWRvdygpe2lmKHN1cGVyLndpbGxEcmF3U2hhZG93KCkpcmV0dXJuITA7Zm9yKGxldCB0PTA7dDx0aGlzLl9vYmplY3RzLmxlbmd0aDt0KyspaWYodGhpcy5fb2JqZWN0c1t0XS53aWxsRHJhd1NoYWRvdygpKXJldHVybiEwO3JldHVybiExfWlzT25BQ2FjaGUoKXtyZXR1cm4gdGhpcy5vd25DYWNoaW5nfHwhIXRoaXMucGFyZW50JiZ0aGlzLnBhcmVudC5pc09uQUNhY2hlKCl9ZHJhd09iamVjdCh0LGUscyl7dGhpcy5fcmVuZGVyQmFja2dyb3VuZCh0KTtmb3IobGV0IGU9MDtlPHRoaXMuX29iamVjdHMubGVuZ3RoO2UrKyl7dmFyIGk7Y29uc3Qgcz10aGlzLl9vYmplY3RzW2VdO251bGwhPT0oaT10aGlzLmNhbnZhcykmJnZvaWQgMCE9PWkmJmkucHJlc2VydmVPYmplY3RTdGFja2luZyYmcy5ncm91cCE9PXRoaXM/KHQuc2F2ZSgpLHQudHJhbnNmb3JtKC4uLnd0KHRoaXMuY2FsY1RyYW5zZm9ybU1hdHJpeCgpKSkscy5yZW5kZXIodCksdC5yZXN0b3JlKCkpOnMuZ3JvdXA9PT10aGlzJiZzLnJlbmRlcih0KX10aGlzLl9kcmF3Q2xpcFBhdGgodCx0aGlzLmNsaXBQYXRoLHMpfXNldENvb3Jkcygpe3N1cGVyLnNldENvb3JkcygpLHRoaXMuX3Nob3VsZFNldE5lc3RlZENvb3JkcygpJiZ0aGlzLmZvckVhY2hPYmplY3QoKHQ9PnQuc2V0Q29vcmRzKCkpKX10cmlnZ2VyTGF5b3V0KCl7bGV0IHQ9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9O3RoaXMubGF5b3V0TWFuYWdlci5wZXJmb3JtTGF5b3V0KHMoe3RhcmdldDp0aGlzLHR5cGU6eXJ9LHQpKX1yZW5kZXIodCl7dGhpcy5fdHJhbnNmb3JtRG9uZT0hMCxzdXBlci5yZW5kZXIodCksdGhpcy5fdHJhbnNmb3JtRG9uZT0hMX1fX3NlcmlhbGl6ZU9iamVjdHModCxlKXtjb25zdCBzPXRoaXMuaW5jbHVkZURlZmF1bHRWYWx1ZXM7cmV0dXJuIHRoaXMuX29iamVjdHMuZmlsdGVyKChmdW5jdGlvbih0KXtyZXR1cm4hdC5leGNsdWRlRnJvbUV4cG9ydH0pKS5tYXAoKGZ1bmN0aW9uKGkpe2NvbnN0IHI9aS5pbmNsdWRlRGVmYXVsdFZhbHVlcztpLmluY2x1ZGVEZWZhdWx0VmFsdWVzPXM7Y29uc3Qgbj1pW3R8fFwidG9PYmplY3RcIl0oZSk7cmV0dXJuIGkuaW5jbHVkZURlZmF1bHRWYWx1ZXM9cixufSkpfXRvT2JqZWN0KCl7bGV0IHQ9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOltdO2NvbnN0IGU9dGhpcy5sYXlvdXRNYW5hZ2VyLnRvT2JqZWN0KCk7cmV0dXJuIHMocyhzKHt9LHN1cGVyLnRvT2JqZWN0KFtcInN1YlRhcmdldENoZWNrXCIsXCJpbnRlcmFjdGl2ZVwiLC4uLnRdKSksXCJmaXQtY29udGVudFwiIT09ZS5zdHJhdGVneXx8dGhpcy5pbmNsdWRlRGVmYXVsdFZhbHVlcz97bGF5b3V0TWFuYWdlcjplfTp7fSkse30se29iamVjdHM6dGhpcy5fX3NlcmlhbGl6ZU9iamVjdHMoXCJ0b09iamVjdFwiLHQpfSl9dG9TdHJpbmcoKXtyZXR1cm5cIiM8R3JvdXA6IChcIi5jb25jYXQodGhpcy5jb21wbGV4aXR5KCksXCIpPlwiKX1kaXNwb3NlKCl7dGhpcy5sYXlvdXRNYW5hZ2VyLnVuc3Vic2NyaWJlVGFyZ2V0cyh7dGFyZ2V0czp0aGlzLmdldE9iamVjdHMoKSx0YXJnZXQ6dGhpc30pLHRoaXMuX2FjdGl2ZU9iamVjdHM9W10sdGhpcy5mb3JFYWNoT2JqZWN0KCh0PT57dGhpcy5fd2F0Y2hPYmplY3QoITEsdCksdC5kaXNwb3NlKCl9KSksc3VwZXIuZGlzcG9zZSgpfV9jcmVhdGVTVkdCZ1JlY3QodCl7aWYoIXRoaXMuYmFja2dyb3VuZENvbG9yKXJldHVyblwiXCI7Y29uc3QgZT1mci5wcm90b3R5cGUuX3RvU1ZHLmNhbGwodGhpcykscz1lLmluZGV4T2YoXCJDT01NT05fUEFSVFNcIik7ZVtzXT0nZm9yPVwiZ3JvdXBcIiAnO2NvbnN0IGk9ZS5qb2luKFwiXCIpO3JldHVybiB0P3QoaSk6aX1fdG9TVkcodCl7Y29uc3QgZT1bXCI8ZyBcIixcIkNPTU1PTl9QQVJUU1wiLFwiID5cXG5cIl0scz10aGlzLl9jcmVhdGVTVkdCZ1JlY3QodCk7cyYmZS5wdXNoKFwiXFx0XFx0XCIscyk7Zm9yKGxldCBzPTA7czx0aGlzLl9vYmplY3RzLmxlbmd0aDtzKyspZS5wdXNoKFwiXFx0XFx0XCIsdGhpcy5fb2JqZWN0c1tzXS50b1NWRyh0KSk7cmV0dXJuIGUucHVzaChcIjwvZz5cXG5cIiksZX1nZXRTdmdTdHlsZXMoKXtjb25zdCB0PXZvaWQgMCE9PXRoaXMub3BhY2l0eSYmMSE9PXRoaXMub3BhY2l0eT9cIm9wYWNpdHk6IFwiLmNvbmNhdCh0aGlzLm9wYWNpdHksXCI7XCIpOlwiXCIsZT10aGlzLnZpc2libGU/XCJcIjpcIiB2aXNpYmlsaXR5OiBoaWRkZW47XCI7cmV0dXJuW3QsdGhpcy5nZXRTdmdGaWx0ZXIoKSxlXS5qb2luKFwiXCIpfXRvQ2xpcFBhdGhTVkcodCl7Y29uc3QgZT1bXSxzPXRoaXMuX2NyZWF0ZVNWR0JnUmVjdCh0KTtzJiZlLnB1c2goXCJcXHRcIixzKTtmb3IobGV0IHM9MDtzPHRoaXMuX29iamVjdHMubGVuZ3RoO3MrKyllLnB1c2goXCJcXHRcIix0aGlzLl9vYmplY3RzW3NdLnRvQ2xpcFBhdGhTVkcodCkpO3JldHVybiB0aGlzLl9jcmVhdGVCYXNlQ2xpcFBhdGhTVkdNYXJrdXAoZSx7cmV2aXZlcjp0fSl9c3RhdGljIGZyb21PYmplY3QodCxlKXtsZXR7dHlwZTpyLG9iamVjdHM6bj1bXSxsYXlvdXRNYW5hZ2VyOm99PXQsYT1pKHQsT3IpO3JldHVybiBQcm9taXNlLmFsbChbSXQobixlKSxCdChhLGUpXSkudGhlbigodD0+e2xldFtlLGldPXQ7Y29uc3Qgcj1uZXcgdGhpcyhlLHMocyhzKHt9LGEpLGkpLHt9LHtsYXlvdXRNYW5hZ2VyOm5ldyBrcn0pKTtpZihvKXtjb25zdCB0PXR0LmdldENsYXNzKG8udHlwZSksZT10dC5nZXRDbGFzcyhvLnN0cmF0ZWd5KTtyLmxheW91dE1hbmFnZXI9bmV3IHQobmV3IGUpfWVsc2Ugci5sYXlvdXRNYW5hZ2VyPW5ldyBUcjtyZXR1cm4gci5sYXlvdXRNYW5hZ2VyLnN1YnNjcmliZVRhcmdldHMoe3R5cGU6cHIsdGFyZ2V0OnIsdGFyZ2V0czpyLmdldE9iamVjdHMoKX0pLHIuc2V0Q29vcmRzKCkscn0pKX19dChEcixcInR5cGVcIixcIkdyb3VwXCIpLHQoRHIsXCJvd25EZWZhdWx0c1wiLHtzdHJva2VXaWR0aDowLHN1YlRhcmdldENoZWNrOiExLGludGVyYWN0aXZlOiExfSksdHQuc2V0Q2xhc3MoRHIpO2NvbnN0IE1yPSh0LGUpPT5NYXRoLm1pbihlLndpZHRoL3Qud2lkdGgsZS5oZWlnaHQvdC5oZWlnaHQpLFByPSh0LGUpPT5NYXRoLm1heChlLndpZHRoL3Qud2lkdGgsZS5oZWlnaHQvdC5oZWlnaHQpLEVyPVwiXFxcXHMqLD9cXFxccypcIixBcj1cIlwiLmNvbmNhdChFcixcIihcIikuY29uY2F0KFdlLFwiKVwiKSxqcj1cIlwiLmNvbmNhdChBcikuY29uY2F0KEFyKS5jb25jYXQoQXIpLmNvbmNhdChFcixcIihbMDFdKVwiKS5jb25jYXQoRXIsXCIoWzAxXSlcIikuY29uY2F0KEFyKS5jb25jYXQoQXIpLEZyPXttOlwibFwiLE06XCJMXCJ9LExyPSh0LGUscyxpLHIsbixvLGEsaCxjLGwpPT57Y29uc3QgdT1ydCh0KSxkPW50KHQpLGc9cnQoZSksZj1udChlKSxwPXMqcipnLWkqbipmK28sbT1pKnIqZytzKm4qZithO3JldHVybltcIkNcIixjK2gqKC1zKnIqZC1pKm4qdSksbCtoKigtaSpyKmQrcypuKnUpLHAraCoocypyKmYraSpuKmcpLG0raCooaSpyKmYtcypuKmcpLHAsbV19LFJyPSh0LGUscyxpKT0+e2NvbnN0IHI9TWF0aC5hdGFuMihlLHQpLG49TWF0aC5hdGFuMihpLHMpO3JldHVybiBuPj1yP24tcjoyKk1hdGguUEktKHItbil9O2Z1bmN0aW9uIElyKHQsZSxzLGkscixuLGEsaCl7bGV0IGM7aWYoby5jYWNoZXNCb3VuZHNPZkN1cnZlJiYoYz1bLi4uYXJndW1lbnRzXS5qb2luKCksXy5ib3VuZHNPZkN1cnZlQ2FjaGVbY10pKXJldHVybiBfLmJvdW5kc09mQ3VydmVDYWNoZVtjXTtjb25zdCBsPU1hdGguc3FydCx1PU1hdGguYWJzLGQ9W10sZz1bWzAsMF0sWzAsMF1dO2xldCBmPTYqdC0xMipzKzYqcixwPS0zKnQrOSpzLTkqciszKmEsbT0zKnMtMyp0O2ZvcihsZXQgdD0wO3Q8MjsrK3Qpe2lmKHQ+MCYmKGY9NiplLTEyKmkrNipuLHA9LTMqZSs5KmktOSpuKzMqaCxtPTMqaS0zKmUpLHUocCk8MWUtMTIpe2lmKHUoZik8MWUtMTIpY29udGludWU7Y29uc3QgdD0tbS9mOzA8dCYmdDwxJiZkLnB1c2godCk7Y29udGludWV9Y29uc3Qgcz1mKmYtNCptKnA7aWYoczwwKWNvbnRpbnVlO2NvbnN0IHI9bChzKSxvPSgtZityKS8oMipwKTswPG8mJm88MSYmZC5wdXNoKG8pO2NvbnN0IGE9KC1mLXIpLygyKnApOzA8YSYmYTwxJiZkLnB1c2goYSl9bGV0IHY9ZC5sZW5ndGg7Y29uc3QgeT12LHg9V3IodCxlLHMsaSxyLG4sYSxoKTtmb3IoO3YtLTspe2NvbnN0e3g6dCx5OmV9PXgoZFt2XSk7Z1swXVt2XT10LGdbMV1bdl09ZX1nWzBdW3ldPXQsZ1sxXVt5XT1lLGdbMF1beSsxXT1hLGdbMV1beSsxXT1oO2NvbnN0IEM9W25ldyBvdChNYXRoLm1pbiguLi5nWzBdKSxNYXRoLm1pbiguLi5nWzFdKSksbmV3IG90KE1hdGgubWF4KC4uLmdbMF0pLE1hdGgubWF4KC4uLmdbMV0pKV07cmV0dXJuIG8uY2FjaGVzQm91bmRzT2ZDdXJ2ZSYmKF8uYm91bmRzT2ZDdXJ2ZUNhY2hlW2NdPUMpLEN9Y29uc3QgQnI9KHQsZSxzKT0+e2xldFtpLHIsbixvLGEsaCxjLGxdPXM7Y29uc3QgdT0oKHQsZSxzLGkscixuLG8pPT57aWYoMD09PXN8fDA9PT1pKXJldHVybltdO2xldCBhPTAsaD0wLGM9MDtjb25zdCBsPU1hdGguUEksdT1vKlMsZD1udCh1KSxnPXJ0KHUpLGY9LjUqKC1nKnQtZCplKSxwPS41KigtZyplK2QqdCksbT1zKioyLHY9aSoqMix5PXAqKjIsXz1mKioyLHg9bSp2LW0qeS12Kl87bGV0IEM9TWF0aC5hYnMocyksYj1NYXRoLmFicyhpKTtpZih4PDApe2NvbnN0IHQ9TWF0aC5zcXJ0KDEteC8obSp2KSk7Qyo9dCxiKj10fWVsc2UgYz0ocj09PW4/LTE6MSkqTWF0aC5zcXJ0KHgvKG0qeSt2Kl8pKTtjb25zdCB3PWMqQypwL2IsVD0tYypiKmYvQyxPPWcqdy1kKlQrLjUqdCxrPWQqdytnKlQrLjUqZTtsZXQgRD1ScigxLDAsKGYtdykvQywocC1UKS9iKSxNPVJyKChmLXcpL0MsKHAtVCkvYiwoLWYtdykvQywoLXAtVCkvYik7MD09PW4mJk0+MD9NLT0yKmw6MT09PW4mJk08MCYmKE0rPTIqbCk7Y29uc3QgUD1NYXRoLmNlaWwoTWF0aC5hYnMoTS9sKjIpKSxFPVtdLEE9TS9QLGo9OC8zKk1hdGguc2luKEEvNCkqTWF0aC5zaW4oQS80KS9NYXRoLnNpbihBLzIpO2xldCBGPUQrQTtmb3IobGV0IHQ9MDt0PFA7dCsrKUVbdF09THIoRCxGLGcsZCxDLGIsTyxrLGosYSxoKSxhPUVbdF1bNV0saD1FW3RdWzZdLEQ9RixGKz1BO3JldHVybiBFfSkoYy10LGwtZSxyLG4sYSxoLG8pO2ZvcihsZXQgcz0wLGk9dS5sZW5ndGg7czxpO3MrKyl1W3NdWzFdKz10LHVbc11bMl0rPWUsdVtzXVszXSs9dCx1W3NdWzRdKz1lLHVbc11bNV0rPXQsdVtzXVs2XSs9ZTtyZXR1cm4gdX0sWHI9dD0+e2xldCBlPTAscz0wLGk9MCxyPTA7Y29uc3Qgbj1bXTtsZXQgbyxhPTAsaD0wO2Zvcihjb25zdCBjIG9mIHQpe2NvbnN0IHQ9Wy4uLmNdO2xldCBsO3N3aXRjaCh0WzBdKXtjYXNlXCJsXCI6dFsxXSs9ZSx0WzJdKz1zO2Nhc2VcIkxcIjplPXRbMV0scz10WzJdLGw9W1wiTFwiLGUsc107YnJlYWs7Y2FzZVwiaFwiOnRbMV0rPWU7Y2FzZVwiSFwiOmU9dFsxXSxsPVtcIkxcIixlLHNdO2JyZWFrO2Nhc2VcInZcIjp0WzFdKz1zO2Nhc2VcIlZcIjpzPXRbMV0sbD1bXCJMXCIsZSxzXTticmVhaztjYXNlXCJtXCI6dFsxXSs9ZSx0WzJdKz1zO2Nhc2VcIk1cIjplPXRbMV0scz10WzJdLGk9dFsxXSxyPXRbMl0sbD1bXCJNXCIsZSxzXTticmVhaztjYXNlXCJjXCI6dFsxXSs9ZSx0WzJdKz1zLHRbM10rPWUsdFs0XSs9cyx0WzVdKz1lLHRbNl0rPXM7Y2FzZVwiQ1wiOmE9dFszXSxoPXRbNF0sZT10WzVdLHM9dFs2XSxsPVtcIkNcIix0WzFdLHRbMl0sYSxoLGUsc107YnJlYWs7Y2FzZVwic1wiOnRbMV0rPWUsdFsyXSs9cyx0WzNdKz1lLHRbNF0rPXM7Y2FzZVwiU1wiOlwiQ1wiPT09bz8oYT0yKmUtYSxoPTIqcy1oKTooYT1lLGg9cyksZT10WzNdLHM9dFs0XSxsPVtcIkNcIixhLGgsdFsxXSx0WzJdLGUsc10sYT1sWzNdLGg9bFs0XTticmVhaztjYXNlXCJxXCI6dFsxXSs9ZSx0WzJdKz1zLHRbM10rPWUsdFs0XSs9cztjYXNlXCJRXCI6YT10WzFdLGg9dFsyXSxlPXRbM10scz10WzRdLGw9W1wiUVwiLGEsaCxlLHNdO2JyZWFrO2Nhc2VcInRcIjp0WzFdKz1lLHRbMl0rPXM7Y2FzZVwiVFwiOlwiUVwiPT09bz8oYT0yKmUtYSxoPTIqcy1oKTooYT1lLGg9cyksZT10WzFdLHM9dFsyXSxsPVtcIlFcIixhLGgsZSxzXTticmVhaztjYXNlXCJhXCI6dFs2XSs9ZSx0WzddKz1zO2Nhc2VcIkFcIjpCcihlLHMsdCkuZm9yRWFjaCgodD0+bi5wdXNoKHQpKSksZT10WzZdLHM9dFs3XTticmVhaztjYXNlXCJ6XCI6Y2FzZVwiWlwiOmU9aSxzPXIsbD1bXCJaXCJdfWw/KG4ucHVzaChsKSxvPWxbMF0pOm89XCJcIn1yZXR1cm4gbn0sWXI9KHQsZSxzLGkpPT5NYXRoLnNxcnQoKHMtdCkqKjIrKGktZSkqKjIpLFdyPSh0LGUscyxpLHIsbixvLGEpPT5oPT57Y29uc3QgYz1oKiozLGw9KHQ9PjMqdCoqMiooMS10KSkoaCksdT0odD0+Myp0KigxLXQpKioyKShoKSxkPSh0PT4oMS10KSoqMykoaCk7cmV0dXJuIG5ldyBvdChvKmMrcipsK3MqdSt0KmQsYSpjK24qbCtpKnUrZSpkKX0sVnI9dD0+dCoqMix6cj10PT4yKnQqKDEtdCksSHI9dD0+KDEtdCkqKjIsR3I9KHQsZSxzLGkscixuLG8sYSk9Pmg9Pntjb25zdCBjPVZyKGgpLGw9enIoaCksdT1IcihoKSxkPTMqKHUqKHMtdCkrbCooci1zKStjKihvLXIpKSxnPTMqKHUqKGktZSkrbCoobi1pKStjKihhLW4pKTtyZXR1cm4gTWF0aC5hdGFuMihnLGQpfSxOcj0odCxlLHMsaSxyLG4pPT5vPT57Y29uc3QgYT1WcihvKSxoPXpyKG8pLGM9SHIobyk7cmV0dXJuIG5ldyBvdChyKmErcypoK3QqYyxuKmEraSpoK2UqYyl9LFVyPSh0LGUscyxpLHIsbik9Pm89Pntjb25zdCBhPTEtbyxoPTIqKGEqKHMtdCkrbyooci1zKSksYz0yKihhKihpLWUpK28qKG4taSkpO3JldHVybiBNYXRoLmF0YW4yKGMsaCl9LHFyPSh0LGUscyk9PntsZXQgaT1uZXcgb3QoZSxzKSxyPTA7Zm9yKGxldCBlPTE7ZTw9MTAwO2UrPTEpe2NvbnN0IHM9dChlLzEwMCk7cis9WXIoaS54LGkueSxzLngscy55KSxpPXN9cmV0dXJuIHJ9LEtyPSh0LGUpPT57bGV0IGkscj0wLG49MCxvPXt4OnQueCx5OnQueX0sYT1zKHt9LG8pLGg9LjAxLGM9MDtjb25zdCBsPXQuaXRlcmF0b3IsdT10LmFuZ2xlRmluZGVyO2Zvcig7bjxlJiZoPjFlLTQ7KWE9bChyKSxjPXIsaT1ZcihvLngsby55LGEueCxhLnkpLGkrbj5lPyhyLT1oLGgvPTIpOihvPWEscis9aCxuKz1pKTtyZXR1cm4gcyhzKHt9LGEpLHt9LHthbmdsZTp1KGMpfSl9LEpyPXQ9PntsZXQgZSxzLGk9MCxyPTAsbj0wLG89MCxhPTA7Y29uc3QgaD1bXTtmb3IoY29uc3QgYyBvZiB0KXtjb25zdCB0PXt4OnIseTpuLGNvbW1hbmQ6Y1swXSxsZW5ndGg6MH07c3dpdGNoKGNbMF0pe2Nhc2VcIk1cIjpzPXQscy54PW89cj1jWzFdLHMueT1hPW49Y1syXTticmVhaztjYXNlXCJMXCI6cz10LHMubGVuZ3RoPVlyKHIsbixjWzFdLGNbMl0pLHI9Y1sxXSxuPWNbMl07YnJlYWs7Y2FzZVwiQ1wiOmU9V3IocixuLGNbMV0sY1syXSxjWzNdLGNbNF0sY1s1XSxjWzZdKSxzPXQscy5pdGVyYXRvcj1lLHMuYW5nbGVGaW5kZXI9R3IocixuLGNbMV0sY1syXSxjWzNdLGNbNF0sY1s1XSxjWzZdKSxzLmxlbmd0aD1xcihlLHIsbikscj1jWzVdLG49Y1s2XTticmVhaztjYXNlXCJRXCI6ZT1OcihyLG4sY1sxXSxjWzJdLGNbM10sY1s0XSkscz10LHMuaXRlcmF0b3I9ZSxzLmFuZ2xlRmluZGVyPVVyKHIsbixjWzFdLGNbMl0sY1szXSxjWzRdKSxzLmxlbmd0aD1xcihlLHIsbikscj1jWzNdLG49Y1s0XTticmVhaztjYXNlXCJaXCI6cz10LHMuZGVzdFg9byxzLmRlc3RZPWEscy5sZW5ndGg9WXIocixuLG8sYSkscj1vLG49YX1pKz1zLmxlbmd0aCxoLnB1c2gocyl9cmV0dXJuIGgucHVzaCh7bGVuZ3RoOmkseDpyLHk6bn0pLGh9LFFyPWZ1bmN0aW9uKHQsZSl7bGV0IGk9YXJndW1lbnRzLmxlbmd0aD4yJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOkpyKHQpLHI9MDtmb3IoO2UtaVtyXS5sZW5ndGg+MCYmcjxpLmxlbmd0aC0yOyllLT1pW3JdLmxlbmd0aCxyKys7Y29uc3Qgbj1pW3JdLG89ZS9uLmxlbmd0aCxhPXRbcl07c3dpdGNoKG4uY29tbWFuZCl7Y2FzZVwiTVwiOnJldHVybnt4Om4ueCx5Om4ueSxhbmdsZTowfTtjYXNlXCJaXCI6cmV0dXJuIHMocyh7fSxuZXcgb3Qobi54LG4ueSkubGVycChuZXcgb3Qobi5kZXN0WCxuLmRlc3RZKSxvKSkse30se2FuZ2xlOk1hdGguYXRhbjIobi5kZXN0WS1uLnksbi5kZXN0WC1uLngpfSk7Y2FzZVwiTFwiOnJldHVybiBzKHMoe30sbmV3IG90KG4ueCxuLnkpLmxlcnAobmV3IG90KGFbMV0sYVsyXSksbykpLHt9LHthbmdsZTpNYXRoLmF0YW4yKGFbMl0tbi55LGFbMV0tbi54KX0pO2Nhc2VcIkNcIjpjYXNlXCJRXCI6cmV0dXJuIEtyKG4sZSl9fSxacj1uZXcgUmVnRXhwKFwiW216bGh2Y3NxdGFdW15temxodmNzcXRhXSpcIixcImdpXCIpLCRyPW5ldyBSZWdFeHAoanIsXCJnXCIpLHRuPW5ldyBSZWdFeHAoV2UsXCJnaVwiKSxlbj17bToyLGw6MixoOjEsdjoxLGM6NixzOjQscTo0LHQ6MixhOjd9LHNuPXQ9Pnt2YXIgZTtjb25zdCBzPVtdLGk9bnVsbCE9PShlPXQubWF0Y2goWnIpKSYmdm9pZCAwIT09ZT9lOltdO2Zvcihjb25zdCB0IG9mIGkpe2NvbnN0IGU9dFswXTtpZihcInpcIj09PWV8fFwiWlwiPT09ZSl7cy5wdXNoKFtlXSk7Y29udGludWV9Y29uc3QgaT1lbltlLnRvTG93ZXJDYXNlKCldO2xldCByPVtdO2lmKFwiYVwiPT09ZXx8XCJBXCI9PT1lKXskci5sYXN0SW5kZXg9MDtmb3IobGV0IGU9bnVsbDtlPSRyLmV4ZWModCk7KXIucHVzaCguLi5lLnNsaWNlKDEpKX1lbHNlIHI9dC5tYXRjaCh0bil8fFtdO2ZvcihsZXQgdD0wO3Q8ci5sZW5ndGg7dCs9aSl7Y29uc3Qgbj1uZXcgQXJyYXkoaSksbz1GcltlXTtuWzBdPXQ+MCYmbz9vOmU7Zm9yKGxldCBlPTA7ZTxpO2UrKyluW2UrMV09cGFyc2VGbG9hdChyW3QrZV0pO3MucHVzaChuKX19cmV0dXJuIHN9LHJuPWZ1bmN0aW9uKHQpe2xldCBlPWFyZ3VtZW50cy5sZW5ndGg+MSYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXTowLHM9bmV3IG90KHRbMF0pLGk9bmV3IG90KHRbMV0pLHI9MSxuPTA7Y29uc3Qgbz1bXSxhPXQubGVuZ3RoLGg9YT4yO2xldCBjO2ZvcihoJiYocj10WzJdLng8aS54Py0xOnRbMl0ueD09PWkueD8wOjEsbj10WzJdLnk8aS55Py0xOnRbMl0ueT09PWkueT8wOjEpLG8ucHVzaChbXCJNXCIscy54LXIqZSxzLnktbiplXSksYz0xO2M8YTtjKyspe2lmKCFzLmVxKGkpKXtjb25zdCB0PXMubWlkUG9pbnRGcm9tKGkpO28ucHVzaChbXCJRXCIscy54LHMueSx0LngsdC55XSl9cz10W2NdLGMrMTx0Lmxlbmd0aCYmKGk9dFtjKzFdKX1yZXR1cm4gaCYmKHI9cy54PnRbYy0yXS54PzE6cy54PT09dFtjLTJdLng/MDotMSxuPXMueT50W2MtMl0ueT8xOnMueT09PXRbYy0yXS55PzA6LTEpLG8ucHVzaChbXCJMXCIscy54K3IqZSxzLnkrbiplXSksb30sbm49KHQsZSk9PnQubWFwKCh0PT50Lm1hcCgoKHQscyk9PjA9PT1zfHx2b2lkIDA9PT1lP3Q6cXQodCxlKSkpLmpvaW4oXCIgXCIpKSkuam9pbihcIiBcIik7ZnVuY3Rpb24gb24odCxlKXtjb25zdCBzPXQuc3R5bGU7cyYmZSYmKFwic3RyaW5nXCI9PXR5cGVvZiBlP3MuY3NzVGV4dCs9XCI7XCIrZTpPYmplY3QuZW50cmllcyhlKS5mb3JFYWNoKCh0PT57bGV0W2UsaV09dDtyZXR1cm4gcy5zZXRQcm9wZXJ0eShlLGkpfSkpKX1jb25zdCBhbj0odCxlKT0+TWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpKihlLXQrMSkpK3Q7ZnVuY3Rpb24gaG4odCl7bGV0IGU9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOnt9O2NvbnN0IHM9ZS5vbkNvbXBsZXRlfHxDLGk9bmV3KHYoKS5YTUxIdHRwUmVxdWVzdCkscj1lLnNpZ25hbCxuPWZ1bmN0aW9uKCl7aS5hYm9ydCgpfSxvPWZ1bmN0aW9uKCl7ciYmci5yZW1vdmVFdmVudExpc3RlbmVyKFwiYWJvcnRcIixuKSxpLm9uZXJyb3I9aS5vbnRpbWVvdXQ9Q307aWYociYmci5hYm9ydGVkKXRocm93IG5ldyBjKFwicmVxdWVzdFwiKTtyZXR1cm4gciYmci5hZGRFdmVudExpc3RlbmVyKFwiYWJvcnRcIixuLHtvbmNlOiEwfSksaS5vbnJlYWR5c3RhdGVjaGFuZ2U9ZnVuY3Rpb24oKXs0PT09aS5yZWFkeVN0YXRlJiYobygpLHMoaSksaS5vbnJlYWR5c3RhdGVjaGFuZ2U9Qyl9LGkub25lcnJvcj1pLm9udGltZW91dD1vLGkub3BlbihcImdldFwiLHQsITApLGkuc2VuZCgpLGl9Y29uc3QgY249KHQsZSk9PntsZXQgcz10Ll9maW5kQ2VudGVyRnJvbUVsZW1lbnQoKTt0LnRyYW5zZm9ybU1hdHJpeCYmKCh0PT57aWYodC50cmFuc2Zvcm1NYXRyaXgpe2NvbnN0e3NjYWxlWDplLHNjYWxlWTpzLGFuZ2xlOmksc2tld1g6cn09a3QodC50cmFuc2Zvcm1NYXRyaXgpO3QuZmxpcFg9ITEsdC5mbGlwWT0hMSx0LnNldChHLGUpLHQuc2V0KE4scyksdC5hbmdsZT1pLHQuc2tld1g9cix0LnNrZXdZPTB9fSkodCkscz1zLnRyYW5zZm9ybSh0LnRyYW5zZm9ybU1hdHJpeCkpLGRlbGV0ZSB0LnRyYW5zZm9ybU1hdHJpeCxlJiYodC5zY2FsZVgqPWUuc2NhbGVYLHQuc2NhbGVZKj1lLnNjYWxlWSx0LmNyb3BYPWUuY3JvcFgsdC5jcm9wWT1lLmNyb3BZLHMueCs9ZS5vZmZzZXRMZWZ0LHMueSs9ZS5vZmZzZXRUb3AsdC53aWR0aD1lLndpZHRoLHQuaGVpZ2h0PWUuaGVpZ2h0KSx0LnNldFBvc2l0aW9uQnlPcmlnaW4ocyxELEQpfTt2YXIgbG49T2JqZWN0LmZyZWV6ZSh7X19wcm90b19fOm51bGwsYWRkVHJhbnNmb3JtVG9PYmplY3Q6eWUsYW5pbWF0ZTpBcyxhbmltYXRlQ29sb3I6anMsYXBwbHlUcmFuc2Zvcm1Ub09iamVjdDpfZSxjYWxjQW5nbGVCZXR3ZWVuVmVjdG9yczpzcyxjYWxjRGltZW5zaW9uc01hdHJpeDpGdCxjYWxjUGxhbmVDaGFuZ2VNYXRyaXg6d2UsY2FsY1ZlY3RvclJvdGF0aW9uOmlzLGNhbmNlbEFuaW1GcmFtZTpkdCxjYXBWYWx1ZTpkcyxjb21wb3NlTWF0cml4Okx0LGNvcHlDYW52YXNFbGVtZW50OnQ9Pnt2YXIgZTtjb25zdCBzPXZ0KHQpO3JldHVybiBudWxsPT09KGU9cy5nZXRDb250ZXh0KFwiMmRcIikpfHx2b2lkIDA9PT1lfHxlLmRyYXdJbWFnZSh0LDAsMCksc30sY29zOnJ0LGNyZWF0ZUNhbnZhc0VsZW1lbnQ6cHQsY3JlYXRlSW1hZ2U6bXQsY3JlYXRlUm90YXRlTWF0cml4Ok10LGNyZWF0ZVNjYWxlTWF0cml4OlB0LGNyZWF0ZVNrZXdYTWF0cml4OkF0LGNyZWF0ZVNrZXdZTWF0cml4Omp0LGNyZWF0ZVRyYW5zbGF0ZU1hdHJpeDpEdCxjcmVhdGVWZWN0b3I6dHMsY3Jvc3NQcm9kdWN0Om9zLGRlZ3JlZXNUb1JhZGlhbnM6X3QsZG90UHJvZHVjdDphcyxlYXNlOkNzLGVubGl2ZW5PYmplY3RFbmxpdmFibGVzOkJ0LGVubGl2ZW5PYmplY3RzOkl0LGZpbmRTY2FsZVRvQ292ZXI6UHIsZmluZFNjYWxlVG9GaXQ6TXIsZ2V0Qm91bmRzT2ZDdXJ2ZTpJcixnZXRPcnRob25vcm1hbFZlY3RvcjpucyxnZXRQYXRoU2VnbWVudHNJbmZvOkpyLGdldFBvaW50T25QYXRoOlFyLGdldFBvaW50ZXI6Z2UsZ2V0UmFuZG9tSW50OmFuLGdldFJlZ3VsYXJQb2x5Z29uUGF0aDoodCxlKT0+e2NvbnN0IHM9MipNYXRoLlBJL3Q7bGV0IGk9LWI7dCUyPT0wJiYoaSs9cy8yKTtjb25zdCByPW5ldyBBcnJheSh0KzEpO2ZvcihsZXQgbj0wO248dDtuKyspe2NvbnN0IHQ9bipzK2kse3g6byx5OmF9PW5ldyBvdChydCh0KSxudCh0KSkuc2NhbGFyTXVsdGlwbHkoZSk7cltuXT1bMD09PW4/XCJNXCI6XCJMXCIsbyxhXX1yZXR1cm4gclt0XT1bXCJaXCJdLHJ9LGdldFNtb290aFBhdGhGcm9tUG9pbnRzOnJuLGdldFN2Z0F0dHJpYnV0ZXM6dD0+e2NvbnN0IGU9W1wiaW5zdGFudGlhdGVkX2J5X3VzZVwiLFwic3R5bGVcIixcImlkXCIsXCJjbGFzc1wiXTtzd2l0Y2godCl7Y2FzZVwibGluZWFyR3JhZGllbnRcIjpyZXR1cm4gZS5jb25jYXQoW1wieDFcIixcInkxXCIsXCJ4MlwiLFwieTJcIixcImdyYWRpZW50VW5pdHNcIixcImdyYWRpZW50VHJhbnNmb3JtXCJdKTtjYXNlXCJyYWRpYWxHcmFkaWVudFwiOnJldHVybiBlLmNvbmNhdChbXCJncmFkaWVudFVuaXRzXCIsXCJncmFkaWVudFRyYW5zZm9ybVwiLFwiY3hcIixcImN5XCIsXCJyXCIsXCJmeFwiLFwiZnlcIixcImZyXCJdKTtjYXNlXCJzdG9wXCI6cmV0dXJuIGUuY29uY2F0KFtcIm9mZnNldFwiLFwic3RvcC1jb2xvclwiLFwic3RvcC1vcGFjaXR5XCJdKX1yZXR1cm4gZX0sZ2V0VW5pdFZlY3Rvcjpycyxncm91cFNWR0VsZW1lbnRzOih0LGUpPT50JiYxPT09dC5sZW5ndGg/dFswXTpuZXcgRHIodCxlKSxoYXNTdHlsZUNoYW5nZWQ6UGksaW52ZXJ0VHJhbnNmb3JtOnd0LGlzQmV0d2VlblZlY3RvcnM6aHMsaXNJZGVudGl0eU1hdHJpeDpDdCxpc1RvdWNoRXZlbnQ6ZmUsaXNUcmFuc3BhcmVudDpfaSxqb2luUGF0aDpubixsb2FkSW1hZ2U6UnQsbWFnbml0dWRlOmVzLG1ha2VCb3VuZGluZ0JveEZyb21Qb2ludHM6bWUsbWFrZVBhdGhTaW1wbGVyOlhyLG1hdHJpeFRvU1ZHOlF0LG1lcmdlQ2xpcFBhdGhzOih0LGUpPT57dmFyIHM7bGV0IGk9dCxyPWU7aS5pbnZlcnRlZCYmIXIuaW52ZXJ0ZWQmJihpPWUscj10KSxPZShyLG51bGw9PT0ocz1yLmdyb3VwKXx8dm9pZCAwPT09cz92b2lkIDA6cy5jYWxjVHJhbnNmb3JtTWF0cml4KCksaS5jYWxjVHJhbnNmb3JtTWF0cml4KCkpO2NvbnN0IG49aS5pbnZlcnRlZCYmci5pbnZlcnRlZDtyZXR1cm4gbiYmKGkuaW52ZXJ0ZWQ9ci5pbnZlcnRlZD0hMSksbmV3IERyKFtpXSx7Y2xpcFBhdGg6cixpbnZlcnRlZDpufSl9LG11bHRpcGx5VHJhbnNmb3JtTWF0cmljZXM6U3QsbXVsdGlwbHlUcmFuc2Zvcm1NYXRyaXhBcnJheTpUdCxwYXJzZVBhdGg6c24scGFyc2VQcmVzZXJ2ZUFzcGVjdFJhdGlvQXR0cmlidXRlOkp0LHBhcnNlVW5pdDpLdCxwaWNrOlh0LHByb2plY3RTdHJva2VPblBvaW50czpTaSxxckRlY29tcG9zZTprdCxyYWRpYW5zVG9EZWdyZWVzOnh0LHJlbW92ZUZyb21BcnJheTppdCxyZW1vdmVUcmFuc2Zvcm1Gcm9tT2JqZWN0Oih0LGUpPT57Y29uc3Qgcz13dChlKSxpPVN0KHMsdC5jYWxjT3duTWF0cml4KCkpO19lKHQsaSl9LHJlbW92ZVRyYW5zZm9ybU1hdHJpeEZvclN2Z1BhcnNpbmc6Y24scmVxdWVzdDpobixyZXF1ZXN0QW5pbUZyYW1lOnV0LHJlc2V0T2JqZWN0VHJhbnNmb3JtOnhlLHJvdGF0ZVBvaW50Oih0LGUscyk9PnQucm90YXRlKHMsZSkscm90YXRlVmVjdG9yOiRlLHNhdmVPYmplY3RUcmFuc2Zvcm06Q2Usc2VuZE9iamVjdFRvUGxhbmU6T2Usc2VuZFBvaW50VG9QbGFuZTpTZSxzZW5kVmVjdG9yVG9QbGFuZTpUZSxzZXRTdHlsZTpvbixzaW46bnQsc2l6ZUFmdGVyVHJhbnNmb3JtOmJlLHN0cmluZzpNaSxzdHlsZXNGcm9tQXJyYXk6QWksc3R5bGVzVG9BcnJheTpFaSx0b0RhdGFVUkw6eXQsdG9GaXhlZDpxdCx0cmFuc2Zvcm1QYXRoOih0LGUscyk9PihzJiYoZT1TdChlLFsxLDAsMCwxLC1zLngsLXMueV0pKSx0Lm1hcCgodD0+e2NvbnN0IHM9Wy4uLnRdO2ZvcihsZXQgaT0xO2k8dC5sZW5ndGgtMTtpKz0yKXtjb25zdHt4OnIseTpufT1idCh7eDp0W2ldLHk6dFtpKzFdfSxlKTtzW2ldPXIsc1tpKzFdPW59cmV0dXJuIHN9KSkpLHRyYW5zZm9ybVBvaW50OmJ0fSk7Y2xhc3MgdW4gZXh0ZW5kcyBjZXtjb25zdHJ1Y3RvcihlKXtsZXR7YWxsb3dUb3VjaFNjcm9sbGluZzpzPSExLGNvbnRhaW5lckNsYXNzOmk9XCJcIn09YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOnt9O3N1cGVyKGUpLHQodGhpcyxcInVwcGVyXCIsdm9pZCAwKSx0KHRoaXMsXCJjb250YWluZXJcIix2b2lkIDApO2NvbnN0e2VsOnJ9PXRoaXMubG93ZXIsbj10aGlzLmNyZWF0ZVVwcGVyQ2FudmFzKCk7dGhpcy51cHBlcj17ZWw6bixjdHg6bi5nZXRDb250ZXh0KFwiMmRcIil9LHRoaXMuYXBwbHlDYW52YXNTdHlsZShyLHthbGxvd1RvdWNoU2Nyb2xsaW5nOnN9KSx0aGlzLmFwcGx5Q2FudmFzU3R5bGUobix7YWxsb3dUb3VjaFNjcm9sbGluZzpzLHN0eWxlczp7cG9zaXRpb246XCJhYnNvbHV0ZVwiLGxlZnQ6XCIwXCIsdG9wOlwiMFwifX0pO2NvbnN0IG89dGhpcy5jcmVhdGVDb250YWluZXJFbGVtZW50KCk7by5jbGFzc0xpc3QuYWRkKGkpLHIucGFyZW50Tm9kZSYmci5wYXJlbnROb2RlLnJlcGxhY2VDaGlsZChvLHIpLG8uYXBwZW5kKHIsbiksdGhpcy5jb250YWluZXI9b31jcmVhdGVVcHBlckNhbnZhcygpe2NvbnN0e2VsOnR9PXRoaXMubG93ZXIsZT1wdCgpO3JldHVybiBlLmNsYXNzTmFtZT10LmNsYXNzTmFtZSxlLmNsYXNzTGlzdC5yZW1vdmUoXCJsb3dlci1jYW52YXNcIiksZS5jbGFzc0xpc3QuYWRkKFwidXBwZXItY2FudmFzXCIpLGUuc2V0QXR0cmlidXRlKFwiZGF0YS1mYWJyaWNcIixcInRvcFwiKSxlLnN0eWxlLmNzc1RleHQ9dC5zdHlsZS5jc3NUZXh0LGUuc2V0QXR0cmlidXRlKFwiZHJhZ2dhYmxlXCIsXCJ0cnVlXCIpLGV9Y3JlYXRlQ29udGFpbmVyRWxlbWVudCgpe2NvbnN0IHQ9bSgpLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7cmV0dXJuIHQuc2V0QXR0cmlidXRlKFwiZGF0YS1mYWJyaWNcIixcIndyYXBwZXJcIiksb24odCx7cG9zaXRpb246XCJyZWxhdGl2ZVwifSksaGUodCksdH1hcHBseUNhbnZhc1N0eWxlKHQsZSl7Y29uc3R7c3R5bGVzOmksYWxsb3dUb3VjaFNjcm9sbGluZzpyfT1lO29uKHQscyhzKHt9LGkpLHt9LHtcInRvdWNoLWFjdGlvblwiOnI/XCJtYW5pcHVsYXRpb25cIjpqfSkpLGhlKHQpfXNldERpbWVuc2lvbnModCxlKXtzdXBlci5zZXREaW1lbnNpb25zKHQsZSk7Y29uc3R7ZWw6cyxjdHg6aX09dGhpcy51cHBlcjtvZShzLGksdCxlKX1zZXRDU1NEaW1lbnNpb25zKHQpe3N1cGVyLnNldENTU0RpbWVuc2lvbnModCksYWUodGhpcy51cHBlci5lbCx0KSxhZSh0aGlzLmNvbnRhaW5lcix0KX1jbGVhbnVwRE9NKHQpe2NvbnN0IGU9dGhpcy5jb250YWluZXIse2VsOnN9PXRoaXMubG93ZXIse2VsOml9PXRoaXMudXBwZXI7c3VwZXIuY2xlYW51cERPTSh0KSxlLnJlbW92ZUNoaWxkKGkpLGUucmVtb3ZlQ2hpbGQocyksZS5wYXJlbnROb2RlJiZlLnBhcmVudE5vZGUucmVwbGFjZUNoaWxkKHMsZSl9ZGlzcG9zZSgpe3N1cGVyLmRpc3Bvc2UoKSxwKCkuZGlzcG9zZSh0aGlzLnVwcGVyLmVsKSxkZWxldGUgdGhpcy51cHBlcixkZWxldGUgdGhpcy5jb250YWluZXJ9fWNsYXNzIGRuIGV4dGVuZHMgdWV7Y29uc3RydWN0b3IoKXtzdXBlciguLi5hcmd1bWVudHMpLHQodGhpcyxcInRhcmdldHNcIixbXSksdCh0aGlzLFwiX2hvdmVyZWRUYXJnZXRzXCIsW10pLHQodGhpcyxcIl9vYmplY3RzVG9SZW5kZXJcIix2b2lkIDApLHQodGhpcyxcIl9jdXJyZW50VHJhbnNmb3JtXCIsbnVsbCksdCh0aGlzLFwiX2dyb3VwU2VsZWN0b3JcIixudWxsKSx0KHRoaXMsXCJjb250ZXh0VG9wRGlydHlcIiwhMSl9c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJuIHMocyh7fSxzdXBlci5nZXREZWZhdWx0cygpKSxkbi5vd25EZWZhdWx0cyl9Z2V0IHVwcGVyQ2FudmFzRWwoKXt2YXIgdDtyZXR1cm4gbnVsbD09PSh0PXRoaXMuZWxlbWVudHMudXBwZXIpfHx2b2lkIDA9PT10P3ZvaWQgMDp0LmVsfWdldCBjb250ZXh0VG9wKCl7dmFyIHQ7cmV0dXJuIG51bGw9PT0odD10aGlzLmVsZW1lbnRzLnVwcGVyKXx8dm9pZCAwPT09dD92b2lkIDA6dC5jdHh9Z2V0IHdyYXBwZXJFbCgpe3JldHVybiB0aGlzLmVsZW1lbnRzLmNvbnRhaW5lcn1pbml0RWxlbWVudHModCl7dGhpcy5lbGVtZW50cz1uZXcgdW4odCx7YWxsb3dUb3VjaFNjcm9sbGluZzp0aGlzLmFsbG93VG91Y2hTY3JvbGxpbmcsY29udGFpbmVyQ2xhc3M6dGhpcy5jb250YWluZXJDbGFzc30pLHRoaXMuX2NyZWF0ZUNhY2hlQ2FudmFzKCl9X29uT2JqZWN0QWRkZWQodCl7dGhpcy5fb2JqZWN0c1RvUmVuZGVyPXZvaWQgMCxzdXBlci5fb25PYmplY3RBZGRlZCh0KX1fb25PYmplY3RSZW1vdmVkKHQpe3RoaXMuX29iamVjdHNUb1JlbmRlcj12b2lkIDAsdD09PXRoaXMuX2FjdGl2ZU9iamVjdCYmKHRoaXMuZmlyZShcImJlZm9yZTpzZWxlY3Rpb246Y2xlYXJlZFwiLHtkZXNlbGVjdGVkOlt0XX0pLHRoaXMuX2Rpc2NhcmRBY3RpdmVPYmplY3QoKSx0aGlzLmZpcmUoXCJzZWxlY3Rpb246Y2xlYXJlZFwiLHtkZXNlbGVjdGVkOlt0XX0pLHQuZmlyZShcImRlc2VsZWN0ZWRcIix7dGFyZ2V0OnR9KSksdD09PXRoaXMuX2hvdmVyZWRUYXJnZXQmJih0aGlzLl9ob3ZlcmVkVGFyZ2V0PXZvaWQgMCx0aGlzLl9ob3ZlcmVkVGFyZ2V0cz1bXSksc3VwZXIuX29uT2JqZWN0UmVtb3ZlZCh0KX1fb25TdGFja09yZGVyQ2hhbmdlZCgpe3RoaXMuX29iamVjdHNUb1JlbmRlcj12b2lkIDAsc3VwZXIuX29uU3RhY2tPcmRlckNoYW5nZWQoKX1fY2hvb3NlT2JqZWN0c1RvUmVuZGVyKCl7Y29uc3QgdD10aGlzLl9hY3RpdmVPYmplY3Q7cmV0dXJuIXRoaXMucHJlc2VydmVPYmplY3RTdGFja2luZyYmdD90aGlzLl9vYmplY3RzLmZpbHRlcigoZT0+IWUuZ3JvdXAmJmUhPT10KSkuY29uY2F0KHQpOnRoaXMuX29iamVjdHN9cmVuZGVyQWxsKCl7dGhpcy5jYW5jZWxSZXF1ZXN0ZWRSZW5kZXIoKSx0aGlzLmRlc3Ryb3llZHx8KCF0aGlzLmNvbnRleHRUb3BEaXJ0eXx8dGhpcy5fZ3JvdXBTZWxlY3Rvcnx8dGhpcy5pc0RyYXdpbmdNb2RlfHwodGhpcy5jbGVhckNvbnRleHQodGhpcy5jb250ZXh0VG9wKSx0aGlzLmNvbnRleHRUb3BEaXJ0eT0hMSksdGhpcy5oYXNMb3N0Q29udGV4dCYmKHRoaXMucmVuZGVyVG9wTGF5ZXIodGhpcy5jb250ZXh0VG9wKSx0aGlzLmhhc0xvc3RDb250ZXh0PSExKSwhdGhpcy5fb2JqZWN0c1RvUmVuZGVyJiYodGhpcy5fb2JqZWN0c1RvUmVuZGVyPXRoaXMuX2Nob29zZU9iamVjdHNUb1JlbmRlcigpKSx0aGlzLnJlbmRlckNhbnZhcyh0aGlzLmdldENvbnRleHQoKSx0aGlzLl9vYmplY3RzVG9SZW5kZXIpKX1yZW5kZXJUb3BMYXllcih0KXt0LnNhdmUoKSx0aGlzLmlzRHJhd2luZ01vZGUmJnRoaXMuX2lzQ3VycmVudGx5RHJhd2luZyYmKHRoaXMuZnJlZURyYXdpbmdCcnVzaCYmdGhpcy5mcmVlRHJhd2luZ0JydXNoLl9yZW5kZXIoKSx0aGlzLmNvbnRleHRUb3BEaXJ0eT0hMCksdGhpcy5zZWxlY3Rpb24mJnRoaXMuX2dyb3VwU2VsZWN0b3ImJih0aGlzLl9kcmF3U2VsZWN0aW9uKHQpLHRoaXMuY29udGV4dFRvcERpcnR5PSEwKSx0LnJlc3RvcmUoKX1yZW5kZXJUb3AoKXtjb25zdCB0PXRoaXMuY29udGV4dFRvcDt0aGlzLmNsZWFyQ29udGV4dCh0KSx0aGlzLnJlbmRlclRvcExheWVyKHQpLHRoaXMuZmlyZShcImFmdGVyOnJlbmRlclwiLHtjdHg6dH0pfXNldFRhcmdldEZpbmRUb2xlcmFuY2UodCl7dD1NYXRoLnJvdW5kKHQpLHRoaXMudGFyZ2V0RmluZFRvbGVyYW5jZT10O2NvbnN0IGU9dGhpcy5nZXRSZXRpbmFTY2FsaW5nKCkscz1NYXRoLmNlaWwoKDIqdCsxKSplKTt0aGlzLnBpeGVsRmluZENhbnZhc0VsLndpZHRoPXRoaXMucGl4ZWxGaW5kQ2FudmFzRWwuaGVpZ2h0PXMsdGhpcy5waXhlbEZpbmRDb250ZXh0LnNjYWxlKGUsZSl9aXNUYXJnZXRUcmFuc3BhcmVudCh0LGUscyl7Y29uc3QgaT10aGlzLnRhcmdldEZpbmRUb2xlcmFuY2Uscj10aGlzLnBpeGVsRmluZENvbnRleHQ7dGhpcy5jbGVhckNvbnRleHQociksci5zYXZlKCksci50cmFuc2xhdGUoLWUraSwtcytpKSxyLnRyYW5zZm9ybSguLi50aGlzLnZpZXdwb3J0VHJhbnNmb3JtKTtjb25zdCBuPXQuc2VsZWN0aW9uQmFja2dyb3VuZENvbG9yO3Quc2VsZWN0aW9uQmFja2dyb3VuZENvbG9yPVwiXCIsdC5yZW5kZXIociksdC5zZWxlY3Rpb25CYWNrZ3JvdW5kQ29sb3I9bixyLnJlc3RvcmUoKTtjb25zdCBvPU1hdGgucm91bmQoaSp0aGlzLmdldFJldGluYVNjYWxpbmcoKSk7cmV0dXJuIF9pKHIsbyxvLG8pfV9pc1NlbGVjdGlvbktleVByZXNzZWQodCl7Y29uc3QgZT10aGlzLnNlbGVjdGlvbktleTtyZXR1cm4hIWUmJihBcnJheS5pc0FycmF5KGUpPyEhZS5maW5kKChlPT4hIWUmJiEwPT09dFtlXSkpOnRbZV0pfV9zaG91bGRDbGVhclNlbGVjdGlvbih0LGUpe2NvbnN0IHM9dGhpcy5nZXRBY3RpdmVPYmplY3RzKCksaT10aGlzLl9hY3RpdmVPYmplY3Q7cmV0dXJuISEoIWV8fGUmJmkmJnMubGVuZ3RoPjEmJi0xPT09cy5pbmRleE9mKGUpJiZpIT09ZSYmIXRoaXMuX2lzU2VsZWN0aW9uS2V5UHJlc3NlZCh0KXx8ZSYmIWUuZXZlbnRlZHx8ZSYmIWUuc2VsZWN0YWJsZSYmaSYmaSE9PWUpfV9zaG91bGRDZW50ZXJUcmFuc2Zvcm0odCxlLHMpe2lmKCF0KXJldHVybjtsZXQgaTtyZXR1cm4gZT09PUh8fGU9PT1HfHxlPT09Tnx8ZT09PVk/aT10aGlzLmNlbnRlcmVkU2NhbGluZ3x8dC5jZW50ZXJlZFNjYWxpbmc6ZT09PUImJihpPXRoaXMuY2VudGVyZWRSb3RhdGlvbnx8dC5jZW50ZXJlZFJvdGF0aW9uKSxpPyFzOnN9X2dldE9yaWdpbkZyb21Db3JuZXIodCxlKXtjb25zdCBzPXt4OnQub3JpZ2luWCx5OnQub3JpZ2luWX07cmV0dXJuIGU/KFtcIm1sXCIsXCJ0bFwiLFwiYmxcIl0uaW5jbHVkZXMoZSk/cy54PUE6W1wibXJcIixcInRyXCIsXCJiclwiXS5pbmNsdWRlcyhlKSYmKHMueD1NKSxbXCJ0bFwiLFwibXRcIixcInRyXCJdLmluY2x1ZGVzKGUpP3MueT1FOltcImJsXCIsXCJtYlwiLFwiYnJcIl0uaW5jbHVkZXMoZSkmJihzLnk9UCkscyk6c31fc2V0dXBDdXJyZW50VHJhbnNmb3JtKHQsZSxpKXt2YXIgcjtjb25zdCBuPWUuZ3JvdXA/U2UodGhpcy5nZXRTY2VuZVBvaW50KHQpLHZvaWQgMCxlLmdyb3VwLmNhbGNUcmFuc2Zvcm1NYXRyaXgoKSk6dGhpcy5nZXRTY2VuZVBvaW50KHQpLHtrZXk6bz1cIlwiLGNvbnRyb2w6YX09ZS5nZXRBY3RpdmVDb250cm9sKCl8fHt9LGg9aSYmYT9udWxsPT09KHI9YS5nZXRBY3Rpb25IYW5kbGVyKHQsZSxhKSl8fHZvaWQgMD09PXI/dm9pZCAwOnIuYmluZChhKTpJZSxjPSgodCxlLHMsaSk9PntpZighZXx8IXQpcmV0dXJuXCJkcmFnXCI7Y29uc3Qgcj1pLmNvbnRyb2xzW2VdO3JldHVybiByLmdldEFjdGlvbk5hbWUocyxyLGkpfSkoaSxvLHQsZSksbD10W3RoaXMuY2VudGVyZWRLZXldLHU9dGhpcy5fc2hvdWxkQ2VudGVyVHJhbnNmb3JtKGUsYyxsKT97eDpELHk6RH06dGhpcy5fZ2V0T3JpZ2luRnJvbUNvcm5lcihlLG8pLGQ9e3RhcmdldDplLGFjdGlvbjpjLGFjdGlvbkhhbmRsZXI6aCxhY3Rpb25QZXJmb3JtZWQ6ITEsY29ybmVyOm8sc2NhbGVYOmUuc2NhbGVYLHNjYWxlWTplLnNjYWxlWSxza2V3WDplLnNrZXdYLHNrZXdZOmUuc2tld1ksb2Zmc2V0WDpuLngtZS5sZWZ0LG9mZnNldFk6bi55LWUudG9wLG9yaWdpblg6dS54LG9yaWdpblk6dS55LGV4Om4ueCxleTpuLnksbGFzdFg6bi54LGxhc3RZOm4ueSx0aGV0YTpfdChlLmFuZ2xlKSx3aWR0aDplLndpZHRoLGhlaWdodDplLmhlaWdodCxzaGlmdEtleTp0LnNoaWZ0S2V5LGFsdEtleTpsLG9yaWdpbmFsOnMocyh7fSxDZShlKSkse30se29yaWdpblg6dS54LG9yaWdpblk6dS55fSl9O3RoaXMuX2N1cnJlbnRUcmFuc2Zvcm09ZCx0aGlzLmZpcmUoXCJiZWZvcmU6dHJhbnNmb3JtXCIse2U6dCx0cmFuc2Zvcm06ZH0pfXNldEN1cnNvcih0KXt0aGlzLnVwcGVyQ2FudmFzRWwuc3R5bGUuY3Vyc29yPXR9X2RyYXdTZWxlY3Rpb24odCl7Y29uc3R7eDplLHk6cyxkZWx0YVg6aSxkZWx0YVk6cn09dGhpcy5fZ3JvdXBTZWxlY3RvcixuPW5ldyBvdChlLHMpLnRyYW5zZm9ybSh0aGlzLnZpZXdwb3J0VHJhbnNmb3JtKSxvPW5ldyBvdChlK2kscytyKS50cmFuc2Zvcm0odGhpcy52aWV3cG9ydFRyYW5zZm9ybSksYT10aGlzLnNlbGVjdGlvbkxpbmVXaWR0aC8yO2xldCBoPU1hdGgubWluKG4ueCxvLngpLGM9TWF0aC5taW4obi55LG8ueSksbD1NYXRoLm1heChuLngsby54KSx1PU1hdGgubWF4KG4ueSxvLnkpO3RoaXMuc2VsZWN0aW9uQ29sb3ImJih0LmZpbGxTdHlsZT10aGlzLnNlbGVjdGlvbkNvbG9yLHQuZmlsbFJlY3QoaCxjLGwtaCx1LWMpKSx0aGlzLnNlbGVjdGlvbkxpbmVXaWR0aCYmdGhpcy5zZWxlY3Rpb25Cb3JkZXJDb2xvciYmKHQubGluZVdpZHRoPXRoaXMuc2VsZWN0aW9uTGluZVdpZHRoLHQuc3Ryb2tlU3R5bGU9dGhpcy5zZWxlY3Rpb25Cb3JkZXJDb2xvcixoKz1hLGMrPWEsbC09YSx1LT1hLHlpLnByb3RvdHlwZS5fc2V0TGluZURhc2guY2FsbCh0aGlzLHQsdGhpcy5zZWxlY3Rpb25EYXNoQXJyYXkpLHQuc3Ryb2tlUmVjdChoLGMsbC1oLHUtYykpfWZpbmRUYXJnZXQodCl7aWYodGhpcy5za2lwVGFyZ2V0RmluZClyZXR1cm47Y29uc3QgZT10aGlzLmdldFZpZXdwb3J0UG9pbnQodCkscz10aGlzLl9hY3RpdmVPYmplY3QsaT10aGlzLmdldEFjdGl2ZU9iamVjdHMoKTtpZih0aGlzLnRhcmdldHM9W10scyYmaS5sZW5ndGg+PTEpe2lmKHMuZmluZENvbnRyb2woZSxmZSh0KSkpcmV0dXJuIHM7aWYoaS5sZW5ndGg+MSYmdGhpcy5zZWFyY2hQb3NzaWJsZVRhcmdldHMoW3NdLGUpKXJldHVybiBzO2lmKHM9PT10aGlzLnNlYXJjaFBvc3NpYmxlVGFyZ2V0cyhbc10sZSkpe2lmKHRoaXMucHJlc2VydmVPYmplY3RTdGFja2luZyl7Y29uc3QgaT10aGlzLnRhcmdldHM7dGhpcy50YXJnZXRzPVtdO2NvbnN0IHI9dGhpcy5zZWFyY2hQb3NzaWJsZVRhcmdldHModGhpcy5fb2JqZWN0cyxlKTtyZXR1cm4gdFt0aGlzLmFsdFNlbGVjdGlvbktleV0mJnImJnIhPT1zPyh0aGlzLnRhcmdldHM9aSxzKTpyfXJldHVybiBzfX1yZXR1cm4gdGhpcy5zZWFyY2hQb3NzaWJsZVRhcmdldHModGhpcy5fb2JqZWN0cyxlKX1fcG9pbnRJc0luT2JqZWN0U2VsZWN0aW9uQXJlYSh0LGUpe2xldCBzPXQuZ2V0Q29vcmRzKCk7Y29uc3QgaT10aGlzLmdldFpvb20oKSxyPXQucGFkZGluZy9pO2lmKHIpe2NvbnN0W3QsZSxpLG5dPXMsbz1NYXRoLmF0YW4yKGUueS10LnksZS54LXQueCksYT1ydChvKSpyLGg9bnQobykqcixjPWEraCxsPWEtaDtzPVtuZXcgb3QodC54LWwsdC55LWMpLG5ldyBvdChlLngrYyxlLnktbCksbmV3IG90KGkueCtsLGkueStjKSxuZXcgb3Qobi54LWMsbi55K2wpXX1yZXR1cm4gRnMuaXNQb2ludEluUG9seWdvbihlLHMpfV9jaGVja1RhcmdldCh0LGUpe2lmKHQmJnQudmlzaWJsZSYmdC5ldmVudGVkJiZ0aGlzLl9wb2ludElzSW5PYmplY3RTZWxlY3Rpb25BcmVhKHQsU2UoZSx2b2lkIDAsdGhpcy52aWV3cG9ydFRyYW5zZm9ybSkpKXtpZighdGhpcy5wZXJQaXhlbFRhcmdldEZpbmQmJiF0LnBlclBpeGVsVGFyZ2V0RmluZHx8dC5pc0VkaXRpbmcpcmV0dXJuITA7aWYoIXRoaXMuaXNUYXJnZXRUcmFuc3BhcmVudCh0LGUueCxlLnkpKXJldHVybiEwfXJldHVybiExfV9zZWFyY2hQb3NzaWJsZVRhcmdldHModCxlKXtsZXQgcz10Lmxlbmd0aDtmb3IoO3MtLTspe2NvbnN0IGk9dFtzXTtpZih0aGlzLl9jaGVja1RhcmdldChpLGUpKXtpZihodChpKSYmaS5zdWJUYXJnZXRDaGVjayl7Y29uc3QgdD10aGlzLl9zZWFyY2hQb3NzaWJsZVRhcmdldHMoaS5fb2JqZWN0cyxlKTt0JiZ0aGlzLnRhcmdldHMucHVzaCh0KX1yZXR1cm4gaX19fXNlYXJjaFBvc3NpYmxlVGFyZ2V0cyh0LGUpe2NvbnN0IHM9dGhpcy5fc2VhcmNoUG9zc2libGVUYXJnZXRzKHQsZSk7aWYocyYmaHQocykmJnMuaW50ZXJhY3RpdmUmJnRoaXMudGFyZ2V0c1swXSl7Y29uc3QgdD10aGlzLnRhcmdldHM7Zm9yKGxldCBlPXQubGVuZ3RoLTE7ZT4wO2UtLSl7Y29uc3Qgcz10W2VdO2lmKCFodChzKXx8IXMuaW50ZXJhY3RpdmUpcmV0dXJuIHN9cmV0dXJuIHRbMF19cmV0dXJuIHN9Z2V0Vmlld3BvcnRQb2ludCh0KXtyZXR1cm4gdGhpcy5fcG9pbnRlcj90aGlzLl9wb2ludGVyOnRoaXMuZ2V0UG9pbnRlcih0LCEwKX1nZXRTY2VuZVBvaW50KHQpe3JldHVybiB0aGlzLl9hYnNvbHV0ZVBvaW50ZXI/dGhpcy5fYWJzb2x1dGVQb2ludGVyOnRoaXMuZ2V0UG9pbnRlcih0KX1nZXRQb2ludGVyKHQpe2xldCBlPWFyZ3VtZW50cy5sZW5ndGg+MSYmdm9pZCAwIT09YXJndW1lbnRzWzFdJiZhcmd1bWVudHNbMV07Y29uc3Qgcz10aGlzLnVwcGVyQ2FudmFzRWwsaT1zLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO2xldCByPWdlKHQpLG49aS53aWR0aHx8MCxvPWkuaGVpZ2h0fHwwO24mJm98fChQIGluIGkmJkUgaW4gaSYmKG89TWF0aC5hYnMoaS50b3AtaS5ib3R0b20pKSxBIGluIGkmJk0gaW4gaSYmKG49TWF0aC5hYnMoaS5yaWdodC1pLmxlZnQpKSksdGhpcy5jYWxjT2Zmc2V0KCksci54PXIueC10aGlzLl9vZmZzZXQubGVmdCxyLnk9ci55LXRoaXMuX29mZnNldC50b3AsZXx8KHI9U2Uocix2b2lkIDAsdGhpcy52aWV3cG9ydFRyYW5zZm9ybSkpO2NvbnN0IGE9dGhpcy5nZXRSZXRpbmFTY2FsaW5nKCk7MSE9PWEmJihyLngvPWEsci55Lz1hKTtjb25zdCBoPTA9PT1ufHwwPT09bz9uZXcgb3QoMSwxKTpuZXcgb3Qocy53aWR0aC9uLHMuaGVpZ2h0L28pO3JldHVybiByLm11bHRpcGx5KGgpfV9zZXREaW1lbnNpb25zSW1wbCh0LGUpe3RoaXMuX3Jlc2V0VHJhbnNmb3JtRXZlbnREYXRhKCksc3VwZXIuX3NldERpbWVuc2lvbnNJbXBsKHQsZSksdGhpcy5faXNDdXJyZW50bHlEcmF3aW5nJiZ0aGlzLmZyZWVEcmF3aW5nQnJ1c2gmJnRoaXMuZnJlZURyYXdpbmdCcnVzaC5fc2V0QnJ1c2hTdHlsZXModGhpcy5jb250ZXh0VG9wKX1fY3JlYXRlQ2FjaGVDYW52YXMoKXt0aGlzLnBpeGVsRmluZENhbnZhc0VsPXB0KCksdGhpcy5waXhlbEZpbmRDb250ZXh0PXRoaXMucGl4ZWxGaW5kQ2FudmFzRWwuZ2V0Q29udGV4dChcIjJkXCIse3dpbGxSZWFkRnJlcXVlbnRseTohMH0pLHRoaXMuc2V0VGFyZ2V0RmluZFRvbGVyYW5jZSh0aGlzLnRhcmdldEZpbmRUb2xlcmFuY2UpfWdldFRvcENvbnRleHQoKXtyZXR1cm4gdGhpcy5lbGVtZW50cy51cHBlci5jdHh9Z2V0U2VsZWN0aW9uQ29udGV4dCgpe3JldHVybiB0aGlzLmVsZW1lbnRzLnVwcGVyLmN0eH1nZXRTZWxlY3Rpb25FbGVtZW50KCl7cmV0dXJuIHRoaXMuZWxlbWVudHMudXBwZXIuZWx9Z2V0QWN0aXZlT2JqZWN0KCl7cmV0dXJuIHRoaXMuX2FjdGl2ZU9iamVjdH1nZXRBY3RpdmVPYmplY3RzKCl7Y29uc3QgdD10aGlzLl9hY3RpdmVPYmplY3Q7cmV0dXJuIHNlKHQpP3QuZ2V0T2JqZWN0cygpOnQ/W3RdOltdfV9maXJlU2VsZWN0aW9uRXZlbnRzKHQsZSl7bGV0IHM9ITEsaT0hMTtjb25zdCByPXRoaXMuZ2V0QWN0aXZlT2JqZWN0cygpLG49W10sbz1bXTt0LmZvckVhY2goKHQ9PntyLmluY2x1ZGVzKHQpfHwocz0hMCx0LmZpcmUoXCJkZXNlbGVjdGVkXCIse2U6ZSx0YXJnZXQ6dH0pLG8ucHVzaCh0KSl9KSksci5mb3JFYWNoKChpPT57dC5pbmNsdWRlcyhpKXx8KHM9ITAsaS5maXJlKFwic2VsZWN0ZWRcIix7ZTplLHRhcmdldDppfSksbi5wdXNoKGkpKX0pKSx0Lmxlbmd0aD4wJiZyLmxlbmd0aD4wPyhpPSEwLHMmJnRoaXMuZmlyZShcInNlbGVjdGlvbjp1cGRhdGVkXCIse2U6ZSxzZWxlY3RlZDpuLGRlc2VsZWN0ZWQ6b30pKTpyLmxlbmd0aD4wPyhpPSEwLHRoaXMuZmlyZShcInNlbGVjdGlvbjpjcmVhdGVkXCIse2U6ZSxzZWxlY3RlZDpufSkpOnQubGVuZ3RoPjAmJihpPSEwLHRoaXMuZmlyZShcInNlbGVjdGlvbjpjbGVhcmVkXCIse2U6ZSxkZXNlbGVjdGVkOm99KSksaSYmKHRoaXMuX29iamVjdHNUb1JlbmRlcj12b2lkIDApfXNldEFjdGl2ZU9iamVjdCh0LGUpe2NvbnN0IHM9dGhpcy5nZXRBY3RpdmVPYmplY3RzKCksaT10aGlzLl9zZXRBY3RpdmVPYmplY3QodCxlKTtyZXR1cm4gdGhpcy5fZmlyZVNlbGVjdGlvbkV2ZW50cyhzLGUpLGl9X3NldEFjdGl2ZU9iamVjdCh0LGUpe2NvbnN0IHM9dGhpcy5fYWN0aXZlT2JqZWN0O3JldHVybiBzIT09dCYmKCEoIXRoaXMuX2Rpc2NhcmRBY3RpdmVPYmplY3QoZSx0KSYmdGhpcy5fYWN0aXZlT2JqZWN0KSYmKCF0Lm9uU2VsZWN0KHtlOmV9KSYmKHRoaXMuX2FjdGl2ZU9iamVjdD10LHNlKHQpJiZzIT09dCYmdC5zZXQoXCJjYW52YXNcIix0aGlzKSx0LnNldENvb3JkcygpLCEwKSkpfV9kaXNjYXJkQWN0aXZlT2JqZWN0KHQsZSl7Y29uc3Qgcz10aGlzLl9hY3RpdmVPYmplY3Q7cmV0dXJuISFzJiYoIXMub25EZXNlbGVjdCh7ZTp0LG9iamVjdDplfSkmJih0aGlzLl9jdXJyZW50VHJhbnNmb3JtJiZ0aGlzLl9jdXJyZW50VHJhbnNmb3JtLnRhcmdldD09PXMmJnRoaXMuZW5kQ3VycmVudFRyYW5zZm9ybSh0KSxzZShzKSYmcz09PXRoaXMuX2hvdmVyZWRUYXJnZXQmJih0aGlzLl9ob3ZlcmVkVGFyZ2V0PXZvaWQgMCksdGhpcy5fYWN0aXZlT2JqZWN0PXZvaWQgMCwhMCkpfWRpc2NhcmRBY3RpdmVPYmplY3QodCl7Y29uc3QgZT10aGlzLmdldEFjdGl2ZU9iamVjdHMoKSxzPXRoaXMuZ2V0QWN0aXZlT2JqZWN0KCk7ZS5sZW5ndGgmJnRoaXMuZmlyZShcImJlZm9yZTpzZWxlY3Rpb246Y2xlYXJlZFwiLHtlOnQsZGVzZWxlY3RlZDpbc119KTtjb25zdCBpPXRoaXMuX2Rpc2NhcmRBY3RpdmVPYmplY3QodCk7cmV0dXJuIHRoaXMuX2ZpcmVTZWxlY3Rpb25FdmVudHMoZSx0KSxpfWVuZEN1cnJlbnRUcmFuc2Zvcm0odCl7Y29uc3QgZT10aGlzLl9jdXJyZW50VHJhbnNmb3JtO3RoaXMuX2ZpbmFsaXplQ3VycmVudFRyYW5zZm9ybSh0KSxlJiZlLnRhcmdldCYmKGUudGFyZ2V0LmlzTW92aW5nPSExKSx0aGlzLl9jdXJyZW50VHJhbnNmb3JtPW51bGx9X2ZpbmFsaXplQ3VycmVudFRyYW5zZm9ybSh0KXtjb25zdCBlPXRoaXMuX2N1cnJlbnRUcmFuc2Zvcm0scz1lLnRhcmdldCxpPXtlOnQsdGFyZ2V0OnMsdHJhbnNmb3JtOmUsYWN0aW9uOmUuYWN0aW9ufTtzLl9zY2FsaW5nJiYocy5fc2NhbGluZz0hMSkscy5zZXRDb29yZHMoKSxlLmFjdGlvblBlcmZvcm1lZCYmKHRoaXMuZmlyZShcIm9iamVjdDptb2RpZmllZFwiLGkpLHMuZmlyZShRLGkpKX1zZXRWaWV3cG9ydFRyYW5zZm9ybSh0KXtzdXBlci5zZXRWaWV3cG9ydFRyYW5zZm9ybSh0KTtjb25zdCBlPXRoaXMuX2FjdGl2ZU9iamVjdDtlJiZlLnNldENvb3JkcygpfWRlc3Ryb3koKXtjb25zdCB0PXRoaXMuX2FjdGl2ZU9iamVjdDtzZSh0KSYmKHQucmVtb3ZlQWxsKCksdC5kaXNwb3NlKCkpLGRlbGV0ZSB0aGlzLl9hY3RpdmVPYmplY3Qsc3VwZXIuZGVzdHJveSgpLHRoaXMucGl4ZWxGaW5kQ29udGV4dD1udWxsLHRoaXMucGl4ZWxGaW5kQ2FudmFzRWw9dm9pZCAwfWNsZWFyKCl7dGhpcy5kaXNjYXJkQWN0aXZlT2JqZWN0KCksdGhpcy5fYWN0aXZlT2JqZWN0PXZvaWQgMCx0aGlzLmNsZWFyQ29udGV4dCh0aGlzLmNvbnRleHRUb3ApLHN1cGVyLmNsZWFyKCl9ZHJhd0NvbnRyb2xzKHQpe2NvbnN0IGU9dGhpcy5fYWN0aXZlT2JqZWN0O2UmJmUuX3JlbmRlckNvbnRyb2xzKHQpfV90b09iamVjdCh0LGUscyl7Y29uc3QgaT10aGlzLl9yZWFsaXplR3JvdXBUcmFuc2Zvcm1Pbk9iamVjdCh0KSxyPXN1cGVyLl90b09iamVjdCh0LGUscyk7cmV0dXJuIHQuc2V0KGkpLHJ9X3JlYWxpemVHcm91cFRyYW5zZm9ybU9uT2JqZWN0KHQpe2NvbnN0e2dyb3VwOmV9PXQ7aWYoZSYmc2UoZSkmJnRoaXMuX2FjdGl2ZU9iamVjdD09PWUpe2NvbnN0IHM9WHQodCxbXCJhbmdsZVwiLFwiZmxpcFhcIixcImZsaXBZXCIsTSxHLE4sVSxxLFBdKTtyZXR1cm4geWUodCxlLmNhbGNPd25NYXRyaXgoKSksc31yZXR1cm57fX1fc2V0U1ZHT2JqZWN0KHQsZSxzKXtjb25zdCBpPXRoaXMuX3JlYWxpemVHcm91cFRyYW5zZm9ybU9uT2JqZWN0KGUpO3N1cGVyLl9zZXRTVkdPYmplY3QodCxlLHMpLGUuc2V0KGkpfX10KGRuLFwib3duRGVmYXVsdHNcIix7dW5pZm9ybVNjYWxpbmc6ITAsdW5pU2NhbGVLZXk6XCJzaGlmdEtleVwiLGNlbnRlcmVkU2NhbGluZzohMSxjZW50ZXJlZFJvdGF0aW9uOiExLGNlbnRlcmVkS2V5OlwiYWx0S2V5XCIsYWx0QWN0aW9uS2V5Olwic2hpZnRLZXlcIixzZWxlY3Rpb246ITAsc2VsZWN0aW9uS2V5Olwic2hpZnRLZXlcIixzZWxlY3Rpb25Db2xvcjpcInJnYmEoMTAwLCAxMDAsIDI1NSwgMC4zKVwiLHNlbGVjdGlvbkRhc2hBcnJheTpbXSxzZWxlY3Rpb25Cb3JkZXJDb2xvcjpcInJnYmEoMjU1LCAyNTUsIDI1NSwgMC4zKVwiLHNlbGVjdGlvbkxpbmVXaWR0aDoxLHNlbGVjdGlvbkZ1bGx5Q29udGFpbmVkOiExLGhvdmVyQ3Vyc29yOlwibW92ZVwiLG1vdmVDdXJzb3I6XCJtb3ZlXCIsZGVmYXVsdEN1cnNvcjpcImRlZmF1bHRcIixmcmVlRHJhd2luZ0N1cnNvcjpcImNyb3NzaGFpclwiLG5vdEFsbG93ZWRDdXJzb3I6XCJub3QtYWxsb3dlZFwiLHBlclBpeGVsVGFyZ2V0RmluZDohMSx0YXJnZXRGaW5kVG9sZXJhbmNlOjAsc2tpcFRhcmdldEZpbmQ6ITEsc3RvcENvbnRleHRNZW51OiExLGZpcmVSaWdodENsaWNrOiExLGZpcmVNaWRkbGVDbGljazohMSxlbmFibGVQb2ludGVyRXZlbnRzOiExLGNvbnRhaW5lckNsYXNzOlwiY2FudmFzLWNvbnRhaW5lclwiLHByZXNlcnZlT2JqZWN0U3RhY2tpbmc6ITF9KTtjbGFzcyBnbntjb25zdHJ1Y3RvcihlKXt0KHRoaXMsXCJ0YXJnZXRzXCIsW10pLHQodGhpcyxcIl9fZGlzcG9zZXJcIix2b2lkIDApO2NvbnN0IHM9KCk9Pntjb25zdHtoaWRkZW5UZXh0YXJlYTp0fT1lLmdldEFjdGl2ZU9iamVjdCgpfHx7fTt0JiZ0LmZvY3VzKCl9LGk9ZS51cHBlckNhbnZhc0VsO2kuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIscyksdGhpcy5fX2Rpc3Bvc2VyPSgpPT5pLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLHMpfWV4aXRUZXh0RWRpdGluZygpe3RoaXMudGFyZ2V0PXZvaWQgMCx0aGlzLnRhcmdldHMuZm9yRWFjaCgodD0+e3QuaXNFZGl0aW5nJiZ0LmV4aXRFZGl0aW5nKCl9KSl9YWRkKHQpe3RoaXMudGFyZ2V0cy5wdXNoKHQpfXJlbW92ZSh0KXt0aGlzLnVucmVnaXN0ZXIodCksaXQodGhpcy50YXJnZXRzLHQpfXJlZ2lzdGVyKHQpe3RoaXMudGFyZ2V0PXR9dW5yZWdpc3Rlcih0KXt0PT09dGhpcy50YXJnZXQmJih0aGlzLnRhcmdldD12b2lkIDApfW9uTW91c2VNb3ZlKHQpe3ZhciBlOyhudWxsPT09KGU9dGhpcy50YXJnZXQpfHx2b2lkIDA9PT1lP3ZvaWQgMDplLmlzRWRpdGluZykmJnRoaXMudGFyZ2V0LnVwZGF0ZVNlbGVjdGlvbk9uTW91c2VNb3ZlKHQpfWNsZWFyKCl7dGhpcy50YXJnZXRzPVtdLHRoaXMudGFyZ2V0PXZvaWQgMH1kaXNwb3NlKCl7dGhpcy5jbGVhcigpLHRoaXMuX19kaXNwb3NlcigpLGRlbGV0ZSB0aGlzLl9fZGlzcG9zZXJ9fWNvbnN0IGZuPVtcInRhcmdldFwiLFwib2xkVGFyZ2V0XCIsXCJmaXJlQ2FudmFzXCIsXCJlXCJdLHBuPXtwYXNzaXZlOiExfSxtbj0odCxlKT0+e2NvbnN0IHM9dC5nZXRWaWV3cG9ydFBvaW50KGUpLGk9dC5nZXRTY2VuZVBvaW50KGUpO3JldHVybnt2aWV3cG9ydFBvaW50OnMsc2NlbmVQb2ludDppLHBvaW50ZXI6cyxhYnNvbHV0ZVBvaW50ZXI6aX19LHZuPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1hcmd1bWVudHMubGVuZ3RoLHM9bmV3IEFycmF5KGU+MT9lLTE6MCksaT0xO2k8ZTtpKyspc1tpLTFdPWFyZ3VtZW50c1tpXTtyZXR1cm4gdC5hZGRFdmVudExpc3RlbmVyKC4uLnMpfSx5bj1mdW5jdGlvbih0KXtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aCxzPW5ldyBBcnJheShlPjE/ZS0xOjApLGk9MTtpPGU7aSsrKXNbaS0xXT1hcmd1bWVudHNbaV07cmV0dXJuIHQucmVtb3ZlRXZlbnRMaXN0ZW5lciguLi5zKX0sX249e21vdXNlOntpbjpcIm92ZXJcIixvdXQ6XCJvdXRcIix0YXJnZXRJbjpcIm1vdXNlb3ZlclwiLHRhcmdldE91dDpcIm1vdXNlb3V0XCIsY2FudmFzSW46XCJtb3VzZTpvdmVyXCIsY2FudmFzT3V0OlwibW91c2U6b3V0XCJ9LGRyYWc6e2luOlwiZW50ZXJcIixvdXQ6XCJsZWF2ZVwiLHRhcmdldEluOlwiZHJhZ2VudGVyXCIsdGFyZ2V0T3V0OlwiZHJhZ2xlYXZlXCIsY2FudmFzSW46XCJkcmFnOmVudGVyXCIsY2FudmFzT3V0OlwiZHJhZzpsZWF2ZVwifX07Y2xhc3MgeG4gZXh0ZW5kcyBkbntjb25zdHJ1Y3RvcihlKXtzdXBlcihlLGFyZ3VtZW50cy5sZW5ndGg+MSYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXTp7fSksdCh0aGlzLFwiX2lzQ2xpY2tcIix2b2lkIDApLHQodGhpcyxcInRleHRFZGl0aW5nTWFuYWdlclwiLG5ldyBnbih0aGlzKSksW1wiX29uTW91c2VEb3duXCIsXCJfb25Ub3VjaFN0YXJ0XCIsXCJfb25Nb3VzZU1vdmVcIixcIl9vbk1vdXNlVXBcIixcIl9vblRvdWNoRW5kXCIsXCJfb25SZXNpemVcIixcIl9vbk1vdXNlV2hlZWxcIixcIl9vbk1vdXNlT3V0XCIsXCJfb25Nb3VzZUVudGVyXCIsXCJfb25Db250ZXh0TWVudVwiLFwiX29uRG91YmxlQ2xpY2tcIixcIl9vbkRyYWdTdGFydFwiLFwiX29uRHJhZ0VuZFwiLFwiX29uRHJhZ1Byb2dyZXNzXCIsXCJfb25EcmFnT3ZlclwiLFwiX29uRHJhZ0VudGVyXCIsXCJfb25EcmFnTGVhdmVcIixcIl9vbkRyb3BcIl0uZm9yRWFjaCgodD0+e3RoaXNbdF09dGhpc1t0XS5iaW5kKHRoaXMpfSkpLHRoaXMuYWRkT3JSZW1vdmUodm4sXCJhZGRcIil9X2dldEV2ZW50UHJlZml4KCl7cmV0dXJuIHRoaXMuZW5hYmxlUG9pbnRlckV2ZW50cz9cInBvaW50ZXJcIjpcIm1vdXNlXCJ9YWRkT3JSZW1vdmUodCxlKXtjb25zdCBzPXRoaXMudXBwZXJDYW52YXNFbCxpPXRoaXMuX2dldEV2ZW50UHJlZml4KCk7dChuZShzKSxcInJlc2l6ZVwiLHRoaXMuX29uUmVzaXplKSx0KHMsaStcImRvd25cIix0aGlzLl9vbk1vdXNlRG93biksdChzLFwiXCIuY29uY2F0KGksXCJtb3ZlXCIpLHRoaXMuX29uTW91c2VNb3ZlLHBuKSx0KHMsXCJcIi5jb25jYXQoaSxcIm91dFwiKSx0aGlzLl9vbk1vdXNlT3V0KSx0KHMsXCJcIi5jb25jYXQoaSxcImVudGVyXCIpLHRoaXMuX29uTW91c2VFbnRlciksdChzLFwid2hlZWxcIix0aGlzLl9vbk1vdXNlV2hlZWwpLHQocyxcImNvbnRleHRtZW51XCIsdGhpcy5fb25Db250ZXh0TWVudSksdChzLFwiZGJsY2xpY2tcIix0aGlzLl9vbkRvdWJsZUNsaWNrKSx0KHMsXCJkcmFnc3RhcnRcIix0aGlzLl9vbkRyYWdTdGFydCksdChzLFwiZHJhZ2VuZFwiLHRoaXMuX29uRHJhZ0VuZCksdChzLFwiZHJhZ292ZXJcIix0aGlzLl9vbkRyYWdPdmVyKSx0KHMsXCJkcmFnZW50ZXJcIix0aGlzLl9vbkRyYWdFbnRlciksdChzLFwiZHJhZ2xlYXZlXCIsdGhpcy5fb25EcmFnTGVhdmUpLHQocyxcImRyb3BcIix0aGlzLl9vbkRyb3ApLHRoaXMuZW5hYmxlUG9pbnRlckV2ZW50c3x8dChzLFwidG91Y2hzdGFydFwiLHRoaXMuX29uVG91Y2hTdGFydCxwbil9cmVtb3ZlTGlzdGVuZXJzKCl7dGhpcy5hZGRPclJlbW92ZSh5bixcInJlbW92ZVwiKTtjb25zdCB0PXRoaXMuX2dldEV2ZW50UHJlZml4KCksZT1yZSh0aGlzLnVwcGVyQ2FudmFzRWwpO3luKGUsXCJcIi5jb25jYXQodCxcInVwXCIpLHRoaXMuX29uTW91c2VVcCkseW4oZSxcInRvdWNoZW5kXCIsdGhpcy5fb25Ub3VjaEVuZCxwbikseW4oZSxcIlwiLmNvbmNhdCh0LFwibW92ZVwiKSx0aGlzLl9vbk1vdXNlTW92ZSxwbikseW4oZSxcInRvdWNobW92ZVwiLHRoaXMuX29uTW91c2VNb3ZlLHBuKSxjbGVhclRpbWVvdXQodGhpcy5fd2lsbEFkZE1vdXNlRG93bil9X29uTW91c2VXaGVlbCh0KXt0aGlzLl9fb25Nb3VzZVdoZWVsKHQpfV9vbk1vdXNlT3V0KHQpe2NvbnN0IGU9dGhpcy5faG92ZXJlZFRhcmdldCxpPXMoe2U6dH0sbW4odGhpcyx0KSk7dGhpcy5maXJlKFwibW91c2U6b3V0XCIscyhzKHt9LGkpLHt9LHt0YXJnZXQ6ZX0pKSx0aGlzLl9ob3ZlcmVkVGFyZ2V0PXZvaWQgMCxlJiZlLmZpcmUoXCJtb3VzZW91dFwiLHMoe30saSkpLHRoaXMuX2hvdmVyZWRUYXJnZXRzLmZvckVhY2goKHQ9Pnt0aGlzLmZpcmUoXCJtb3VzZTpvdXRcIixzKHMoe30saSkse30se3RhcmdldDp0fSkpLHQmJnQuZmlyZShcIm1vdXNlb3V0XCIscyh7fSxpKSl9KSksdGhpcy5faG92ZXJlZFRhcmdldHM9W119X29uTW91c2VFbnRlcih0KXt0aGlzLl9jdXJyZW50VHJhbnNmb3JtfHx0aGlzLmZpbmRUYXJnZXQodCl8fCh0aGlzLmZpcmUoXCJtb3VzZTpvdmVyXCIscyh7ZTp0fSxtbih0aGlzLHQpKSksdGhpcy5faG92ZXJlZFRhcmdldD12b2lkIDAsdGhpcy5faG92ZXJlZFRhcmdldHM9W10pfV9vbkRyYWdTdGFydCh0KXt0aGlzLl9pc0NsaWNrPSExO2NvbnN0IGU9dGhpcy5nZXRBY3RpdmVPYmplY3QoKTtpZihlJiZlLm9uRHJhZ1N0YXJ0KHQpKXt0aGlzLl9kcmFnU291cmNlPWU7Y29uc3Qgcz17ZTp0LHRhcmdldDplfTtyZXR1cm4gdGhpcy5maXJlKFwiZHJhZ3N0YXJ0XCIscyksZS5maXJlKFwiZHJhZ3N0YXJ0XCIscyksdm9pZCB2bih0aGlzLnVwcGVyQ2FudmFzRWwsXCJkcmFnXCIsdGhpcy5fb25EcmFnUHJvZ3Jlc3MpfXBlKHQpfV9yZW5kZXJEcmFnRWZmZWN0cyh0LGUscyl7bGV0IGk9ITE7Y29uc3Qgcj10aGlzLl9kcm9wVGFyZ2V0O3ImJnIhPT1lJiZyIT09cyYmKHIuY2xlYXJDb250ZXh0VG9wKCksaT0hMCksbnVsbD09ZXx8ZS5jbGVhckNvbnRleHRUb3AoKSxzIT09ZSYmKG51bGw9PXN8fHMuY2xlYXJDb250ZXh0VG9wKCkpO2NvbnN0IG49dGhpcy5jb250ZXh0VG9wO24uc2F2ZSgpLG4udHJhbnNmb3JtKC4uLnRoaXMudmlld3BvcnRUcmFuc2Zvcm0pLGUmJihuLnNhdmUoKSxlLnRyYW5zZm9ybShuKSxlLnJlbmRlckRyYWdTb3VyY2VFZmZlY3QodCksbi5yZXN0b3JlKCksaT0hMCkscyYmKG4uc2F2ZSgpLHMudHJhbnNmb3JtKG4pLHMucmVuZGVyRHJvcFRhcmdldEVmZmVjdCh0KSxuLnJlc3RvcmUoKSxpPSEwKSxuLnJlc3RvcmUoKSxpJiYodGhpcy5jb250ZXh0VG9wRGlydHk9ITApfV9vbkRyYWdFbmQodCl7Y29uc3QgZT0hIXQuZGF0YVRyYW5zZmVyJiZ0LmRhdGFUcmFuc2Zlci5kcm9wRWZmZWN0IT09aixzPWU/dGhpcy5fYWN0aXZlT2JqZWN0OnZvaWQgMCxpPXtlOnQsdGFyZ2V0OnRoaXMuX2RyYWdTb3VyY2Usc3ViVGFyZ2V0czp0aGlzLnRhcmdldHMsZHJhZ1NvdXJjZTp0aGlzLl9kcmFnU291cmNlLGRpZERyb3A6ZSxkcm9wVGFyZ2V0OnN9O3luKHRoaXMudXBwZXJDYW52YXNFbCxcImRyYWdcIix0aGlzLl9vbkRyYWdQcm9ncmVzcyksdGhpcy5maXJlKFwiZHJhZ2VuZFwiLGkpLHRoaXMuX2RyYWdTb3VyY2UmJnRoaXMuX2RyYWdTb3VyY2UuZmlyZShcImRyYWdlbmRcIixpKSxkZWxldGUgdGhpcy5fZHJhZ1NvdXJjZSx0aGlzLl9vbk1vdXNlVXAodCl9X29uRHJhZ1Byb2dyZXNzKHQpe2NvbnN0IGU9e2U6dCx0YXJnZXQ6dGhpcy5fZHJhZ1NvdXJjZSxkcmFnU291cmNlOnRoaXMuX2RyYWdTb3VyY2UsZHJvcFRhcmdldDp0aGlzLl9kcmFnZ2Vkb3ZlclRhcmdldH07dGhpcy5maXJlKFwiZHJhZ1wiLGUpLHRoaXMuX2RyYWdTb3VyY2UmJnRoaXMuX2RyYWdTb3VyY2UuZmlyZShcImRyYWdcIixlKX1maW5kRHJhZ1RhcmdldHModCl7dGhpcy50YXJnZXRzPVtdO3JldHVybnt0YXJnZXQ6dGhpcy5fc2VhcmNoUG9zc2libGVUYXJnZXRzKHRoaXMuX29iamVjdHMsdGhpcy5nZXRWaWV3cG9ydFBvaW50KHQpKSx0YXJnZXRzOlsuLi50aGlzLnRhcmdldHNdfX1fb25EcmFnT3Zlcih0KXtjb25zdCBlPVwiZHJhZ292ZXJcIix7dGFyZ2V0OnMsdGFyZ2V0czppfT10aGlzLmZpbmREcmFnVGFyZ2V0cyh0KSxyPXRoaXMuX2RyYWdTb3VyY2Usbj17ZTp0LHRhcmdldDpzLHN1YlRhcmdldHM6aSxkcmFnU291cmNlOnIsY2FuRHJvcDohMSxkcm9wVGFyZ2V0OnZvaWQgMH07bGV0IG87dGhpcy5maXJlKGUsbiksdGhpcy5fZmlyZUVudGVyTGVhdmVFdmVudHMocyxuKSxzJiYocy5jYW5Ecm9wKHQpJiYobz1zKSxzLmZpcmUoZSxuKSk7Zm9yKGxldCBzPTA7czxpLmxlbmd0aDtzKyspe2NvbnN0IHI9aVtzXTtyLmNhbkRyb3AodCkmJihvPXIpLHIuZmlyZShlLG4pfXRoaXMuX3JlbmRlckRyYWdFZmZlY3RzKHQscixvKSx0aGlzLl9kcm9wVGFyZ2V0PW99X29uRHJhZ0VudGVyKHQpe2NvbnN0e3RhcmdldDplLHRhcmdldHM6c309dGhpcy5maW5kRHJhZ1RhcmdldHModCksaT17ZTp0LHRhcmdldDplLHN1YlRhcmdldHM6cyxkcmFnU291cmNlOnRoaXMuX2RyYWdTb3VyY2V9O3RoaXMuZmlyZShcImRyYWdlbnRlclwiLGkpLHRoaXMuX2ZpcmVFbnRlckxlYXZlRXZlbnRzKGUsaSl9X29uRHJhZ0xlYXZlKHQpe2NvbnN0IGU9e2U6dCx0YXJnZXQ6dGhpcy5fZHJhZ2dlZG92ZXJUYXJnZXQsc3ViVGFyZ2V0czp0aGlzLnRhcmdldHMsZHJhZ1NvdXJjZTp0aGlzLl9kcmFnU291cmNlfTt0aGlzLmZpcmUoXCJkcmFnbGVhdmVcIixlKSx0aGlzLl9maXJlRW50ZXJMZWF2ZUV2ZW50cyh2b2lkIDAsZSksdGhpcy5fcmVuZGVyRHJhZ0VmZmVjdHModCx0aGlzLl9kcmFnU291cmNlKSx0aGlzLl9kcm9wVGFyZ2V0PXZvaWQgMCx0aGlzLnRhcmdldHM9W10sdGhpcy5faG92ZXJlZFRhcmdldHM9W119X29uRHJvcCh0KXtjb25zdHt0YXJnZXQ6ZSx0YXJnZXRzOml9PXRoaXMuZmluZERyYWdUYXJnZXRzKHQpLHI9dGhpcy5fYmFzaWNFdmVudEhhbmRsZXIoXCJkcm9wOmJlZm9yZVwiLHMoe2U6dCx0YXJnZXQ6ZSxzdWJUYXJnZXRzOmksZHJhZ1NvdXJjZTp0aGlzLl9kcmFnU291cmNlfSxtbih0aGlzLHQpKSk7ci5kaWREcm9wPSExLHIuZHJvcFRhcmdldD12b2lkIDAsdGhpcy5fYmFzaWNFdmVudEhhbmRsZXIoXCJkcm9wXCIsciksdGhpcy5maXJlKFwiZHJvcDphZnRlclwiLHIpfV9vbkNvbnRleHRNZW51KHQpe2NvbnN0IGU9dGhpcy5maW5kVGFyZ2V0KHQpLHM9dGhpcy50YXJnZXRzfHxbXSxpPXRoaXMuX2Jhc2ljRXZlbnRIYW5kbGVyKFwiY29udGV4dG1lbnU6YmVmb3JlXCIse2U6dCx0YXJnZXQ6ZSxzdWJUYXJnZXRzOnN9KTtyZXR1cm4gdGhpcy5zdG9wQ29udGV4dE1lbnUmJnBlKHQpLHRoaXMuX2Jhc2ljRXZlbnRIYW5kbGVyKFwiY29udGV4dG1lbnVcIixpKSwhMX1fb25Eb3VibGVDbGljayh0KXt0aGlzLl9jYWNoZVRyYW5zZm9ybUV2ZW50RGF0YSh0KSx0aGlzLl9oYW5kbGVFdmVudCh0LFwiZGJsY2xpY2tcIiksdGhpcy5fcmVzZXRUcmFuc2Zvcm1FdmVudERhdGEoKX1nZXRQb2ludGVySWQodCl7Y29uc3QgZT10LmNoYW5nZWRUb3VjaGVzO3JldHVybiBlP2VbMF0mJmVbMF0uaWRlbnRpZmllcjp0aGlzLmVuYWJsZVBvaW50ZXJFdmVudHM/dC5wb2ludGVySWQ6LTF9X2lzTWFpbkV2ZW50KHQpe3JldHVybiEwPT09dC5pc1ByaW1hcnl8fCExIT09dC5pc1ByaW1hcnkmJihcInRvdWNoZW5kXCI9PT10LnR5cGUmJjA9PT10LnRvdWNoZXMubGVuZ3RofHwoIXQuY2hhbmdlZFRvdWNoZXN8fHQuY2hhbmdlZFRvdWNoZXNbMF0uaWRlbnRpZmllcj09PXRoaXMubWFpblRvdWNoSWQpKX1fb25Ub3VjaFN0YXJ0KHQpe2xldCBlPSF0aGlzLmFsbG93VG91Y2hTY3JvbGxpbmc7Y29uc3Qgcz10aGlzLl9hY3RpdmVPYmplY3Q7dm9pZCAwPT09dGhpcy5tYWluVG91Y2hJZCYmKHRoaXMubWFpblRvdWNoSWQ9dGhpcy5nZXRQb2ludGVySWQodCkpLHRoaXMuX19vbk1vdXNlRG93bih0KSwodGhpcy5pc0RyYXdpbmdNb2RlfHxzJiZ0aGlzLl90YXJnZXQ9PT1zKSYmKGU9ITApLGUmJnQucHJldmVudERlZmF1bHQoKSx0aGlzLl9yZXNldFRyYW5zZm9ybUV2ZW50RGF0YSgpO2NvbnN0IGk9dGhpcy51cHBlckNhbnZhc0VsLHI9dGhpcy5fZ2V0RXZlbnRQcmVmaXgoKSxuPXJlKGkpO3ZuKG4sXCJ0b3VjaGVuZFwiLHRoaXMuX29uVG91Y2hFbmQscG4pLGUmJnZuKG4sXCJ0b3VjaG1vdmVcIix0aGlzLl9vbk1vdXNlTW92ZSxwbikseW4oaSxcIlwiLmNvbmNhdChyLFwiZG93blwiKSx0aGlzLl9vbk1vdXNlRG93bil9X29uTW91c2VEb3duKHQpe3RoaXMuX19vbk1vdXNlRG93bih0KSx0aGlzLl9yZXNldFRyYW5zZm9ybUV2ZW50RGF0YSgpO2NvbnN0IGU9dGhpcy51cHBlckNhbnZhc0VsLHM9dGhpcy5fZ2V0RXZlbnRQcmVmaXgoKTt5bihlLFwiXCIuY29uY2F0KHMsXCJtb3ZlXCIpLHRoaXMuX29uTW91c2VNb3ZlLHBuKTtjb25zdCBpPXJlKGUpO3ZuKGksXCJcIi5jb25jYXQocyxcInVwXCIpLHRoaXMuX29uTW91c2VVcCksdm4oaSxcIlwiLmNvbmNhdChzLFwibW92ZVwiKSx0aGlzLl9vbk1vdXNlTW92ZSxwbil9X29uVG91Y2hFbmQodCl7aWYodC50b3VjaGVzLmxlbmd0aD4wKXJldHVybjt0aGlzLl9fb25Nb3VzZVVwKHQpLHRoaXMuX3Jlc2V0VHJhbnNmb3JtRXZlbnREYXRhKCksZGVsZXRlIHRoaXMubWFpblRvdWNoSWQ7Y29uc3QgZT10aGlzLl9nZXRFdmVudFByZWZpeCgpLHM9cmUodGhpcy51cHBlckNhbnZhc0VsKTt5bihzLFwidG91Y2hlbmRcIix0aGlzLl9vblRvdWNoRW5kLHBuKSx5bihzLFwidG91Y2htb3ZlXCIsdGhpcy5fb25Nb3VzZU1vdmUscG4pLHRoaXMuX3dpbGxBZGRNb3VzZURvd24mJmNsZWFyVGltZW91dCh0aGlzLl93aWxsQWRkTW91c2VEb3duKSx0aGlzLl93aWxsQWRkTW91c2VEb3duPXNldFRpbWVvdXQoKCgpPT57dm4odGhpcy51cHBlckNhbnZhc0VsLFwiXCIuY29uY2F0KGUsXCJkb3duXCIpLHRoaXMuX29uTW91c2VEb3duKSx0aGlzLl93aWxsQWRkTW91c2VEb3duPTB9KSw0MDApfV9vbk1vdXNlVXAodCl7dGhpcy5fX29uTW91c2VVcCh0KSx0aGlzLl9yZXNldFRyYW5zZm9ybUV2ZW50RGF0YSgpO2NvbnN0IGU9dGhpcy51cHBlckNhbnZhc0VsLHM9dGhpcy5fZ2V0RXZlbnRQcmVmaXgoKTtpZih0aGlzLl9pc01haW5FdmVudCh0KSl7Y29uc3QgdD1yZSh0aGlzLnVwcGVyQ2FudmFzRWwpO3luKHQsXCJcIi5jb25jYXQocyxcInVwXCIpLHRoaXMuX29uTW91c2VVcCkseW4odCxcIlwiLmNvbmNhdChzLFwibW92ZVwiKSx0aGlzLl9vbk1vdXNlTW92ZSxwbiksdm4oZSxcIlwiLmNvbmNhdChzLFwibW92ZVwiKSx0aGlzLl9vbk1vdXNlTW92ZSxwbil9fV9vbk1vdXNlTW92ZSh0KXtjb25zdCBlPXRoaXMuZ2V0QWN0aXZlT2JqZWN0KCk7IXRoaXMuYWxsb3dUb3VjaFNjcm9sbGluZyYmKCFlfHwhZS5zaG91bGRTdGFydERyYWdnaW5nKHQpKSYmdC5wcmV2ZW50RGVmYXVsdCYmdC5wcmV2ZW50RGVmYXVsdCgpLHRoaXMuX19vbk1vdXNlTW92ZSh0KX1fb25SZXNpemUoKXt0aGlzLmNhbGNPZmZzZXQoKSx0aGlzLl9yZXNldFRyYW5zZm9ybUV2ZW50RGF0YSgpfV9zaG91bGRSZW5kZXIodCl7Y29uc3QgZT10aGlzLmdldEFjdGl2ZU9iamVjdCgpO3JldHVybiEhZSE9ISF0fHxlJiZ0JiZlIT09dH1fX29uTW91c2VVcCh0KXt2YXIgZTt0aGlzLl9jYWNoZVRyYW5zZm9ybUV2ZW50RGF0YSh0KSx0aGlzLl9oYW5kbGVFdmVudCh0LFwidXA6YmVmb3JlXCIpO2NvbnN0IHM9dGhpcy5fY3VycmVudFRyYW5zZm9ybSxpPXRoaXMuX2lzQ2xpY2sscj10aGlzLl90YXJnZXQse2J1dHRvbjpufT10O2lmKG4pcmV0dXJuKHRoaXMuZmlyZU1pZGRsZUNsaWNrJiYxPT09bnx8dGhpcy5maXJlUmlnaHRDbGljayYmMj09PW4pJiZ0aGlzLl9oYW5kbGVFdmVudCh0LFwidXBcIiksdm9pZCB0aGlzLl9yZXNldFRyYW5zZm9ybUV2ZW50RGF0YSgpO2lmKHRoaXMuaXNEcmF3aW5nTW9kZSYmdGhpcy5faXNDdXJyZW50bHlEcmF3aW5nKXJldHVybiB2b2lkIHRoaXMuX29uTW91c2VVcEluRHJhd2luZ01vZGUodCk7aWYoIXRoaXMuX2lzTWFpbkV2ZW50KHQpKXJldHVybjtsZXQgbyxhLGg9ITE7aWYocyYmKHRoaXMuX2ZpbmFsaXplQ3VycmVudFRyYW5zZm9ybSh0KSxoPXMuYWN0aW9uUGVyZm9ybWVkKSwhaSl7Y29uc3QgZT1yPT09dGhpcy5fYWN0aXZlT2JqZWN0O3RoaXMuaGFuZGxlU2VsZWN0aW9uKHQpLGh8fChoPXRoaXMuX3Nob3VsZFJlbmRlcihyKXx8IWUmJnI9PT10aGlzLl9hY3RpdmVPYmplY3QpfWlmKHIpe2NvbnN0IGU9ci5maW5kQ29udHJvbCh0aGlzLmdldFZpZXdwb3J0UG9pbnQodCksZmUodCkpLHtrZXk6aSxjb250cm9sOm59PWV8fHt9O2lmKGE9aSxyLnNlbGVjdGFibGUmJnIhPT10aGlzLl9hY3RpdmVPYmplY3QmJlwidXBcIj09PXIuYWN0aXZlT24pdGhpcy5zZXRBY3RpdmVPYmplY3Qocix0KSxoPSEwO2Vsc2UgaWYobil7Y29uc3QgZT1uLmdldE1vdXNlVXBIYW5kbGVyKHQscixuKTtlJiYobz10aGlzLmdldFNjZW5lUG9pbnQodCksZS5jYWxsKG4sdCxzLG8ueCxvLnkpKX1yLmlzTW92aW5nPSExfWlmKHMmJihzLnRhcmdldCE9PXJ8fHMuY29ybmVyIT09YSkpe2NvbnN0IGU9cy50YXJnZXQmJnMudGFyZ2V0LmNvbnRyb2xzW3MuY29ybmVyXSxpPWUmJmUuZ2V0TW91c2VVcEhhbmRsZXIodCxzLnRhcmdldCxlKTtvPW98fHRoaXMuZ2V0U2NlbmVQb2ludCh0KSxpJiZpLmNhbGwoZSx0LHMsby54LG8ueSl9dGhpcy5fc2V0Q3Vyc29yRnJvbUV2ZW50KHQsciksdGhpcy5faGFuZGxlRXZlbnQodCxcInVwXCIpLHRoaXMuX2dyb3VwU2VsZWN0b3I9bnVsbCx0aGlzLl9jdXJyZW50VHJhbnNmb3JtPW51bGwsciYmKHIuX19jb3JuZXI9dm9pZCAwKSxoP3RoaXMucmVxdWVzdFJlbmRlckFsbCgpOml8fG51bGwhPT0oZT10aGlzLl9hY3RpdmVPYmplY3QpJiZ2b2lkIDAhPT1lJiZlLmlzRWRpdGluZ3x8dGhpcy5yZW5kZXJUb3AoKX1fYmFzaWNFdmVudEhhbmRsZXIodCxlKXtjb25zdHt0YXJnZXQ6cyxzdWJUYXJnZXRzOmk9W119PWU7dGhpcy5maXJlKHQsZSkscyYmcy5maXJlKHQsZSk7Zm9yKGxldCByPTA7cjxpLmxlbmd0aDtyKyspaVtyXSE9PXMmJmlbcl0uZmlyZSh0LGUpO3JldHVybiBlfV9oYW5kbGVFdmVudCh0LGUpe2NvbnN0IGk9dGhpcy5fdGFyZ2V0LHI9dGhpcy50YXJnZXRzfHxbXSxuPXMocyh7ZTp0LHRhcmdldDppLHN1YlRhcmdldHM6cn0sbW4odGhpcyx0KSkse30se3RyYW5zZm9ybTp0aGlzLl9jdXJyZW50VHJhbnNmb3JtfSxcInVwOmJlZm9yZVwiPT09ZXx8XCJ1cFwiPT09ZT97aXNDbGljazp0aGlzLl9pc0NsaWNrLGN1cnJlbnRUYXJnZXQ6dGhpcy5maW5kVGFyZ2V0KHQpLGN1cnJlbnRTdWJUYXJnZXRzOnRoaXMudGFyZ2V0c306e30pO3RoaXMuZmlyZShcIm1vdXNlOlwiLmNvbmNhdChlKSxuKSxpJiZpLmZpcmUoXCJtb3VzZVwiLmNvbmNhdChlKSxuKTtmb3IobGV0IHQ9MDt0PHIubGVuZ3RoO3QrKylyW3RdIT09aSYmclt0XS5maXJlKFwibW91c2VcIi5jb25jYXQoZSksbil9X29uTW91c2VEb3duSW5EcmF3aW5nTW9kZSh0KXt0aGlzLl9pc0N1cnJlbnRseURyYXdpbmc9ITAsdGhpcy5nZXRBY3RpdmVPYmplY3QoKSYmKHRoaXMuZGlzY2FyZEFjdGl2ZU9iamVjdCh0KSx0aGlzLnJlcXVlc3RSZW5kZXJBbGwoKSk7Y29uc3QgZT10aGlzLmdldFNjZW5lUG9pbnQodCk7dGhpcy5mcmVlRHJhd2luZ0JydXNoJiZ0aGlzLmZyZWVEcmF3aW5nQnJ1c2gub25Nb3VzZURvd24oZSx7ZTp0LHBvaW50ZXI6ZX0pLHRoaXMuX2hhbmRsZUV2ZW50KHQsXCJkb3duXCIpfV9vbk1vdXNlTW92ZUluRHJhd2luZ01vZGUodCl7aWYodGhpcy5faXNDdXJyZW50bHlEcmF3aW5nKXtjb25zdCBlPXRoaXMuZ2V0U2NlbmVQb2ludCh0KTt0aGlzLmZyZWVEcmF3aW5nQnJ1c2gmJnRoaXMuZnJlZURyYXdpbmdCcnVzaC5vbk1vdXNlTW92ZShlLHtlOnQscG9pbnRlcjplfSl9dGhpcy5zZXRDdXJzb3IodGhpcy5mcmVlRHJhd2luZ0N1cnNvciksdGhpcy5faGFuZGxlRXZlbnQodCxcIm1vdmVcIil9X29uTW91c2VVcEluRHJhd2luZ01vZGUodCl7Y29uc3QgZT10aGlzLmdldFNjZW5lUG9pbnQodCk7dGhpcy5mcmVlRHJhd2luZ0JydXNoP3RoaXMuX2lzQ3VycmVudGx5RHJhd2luZz0hIXRoaXMuZnJlZURyYXdpbmdCcnVzaC5vbk1vdXNlVXAoe2U6dCxwb2ludGVyOmV9KTp0aGlzLl9pc0N1cnJlbnRseURyYXdpbmc9ITEsdGhpcy5faGFuZGxlRXZlbnQodCxcInVwXCIpfV9fb25Nb3VzZURvd24odCl7dGhpcy5faXNDbGljaz0hMCx0aGlzLl9jYWNoZVRyYW5zZm9ybUV2ZW50RGF0YSh0KSx0aGlzLl9oYW5kbGVFdmVudCh0LFwiZG93bjpiZWZvcmVcIik7bGV0IGU9dGhpcy5fdGFyZ2V0O2NvbnN0e2J1dHRvbjpzfT10O2lmKHMpcmV0dXJuKHRoaXMuZmlyZU1pZGRsZUNsaWNrJiYxPT09c3x8dGhpcy5maXJlUmlnaHRDbGljayYmMj09PXMpJiZ0aGlzLl9oYW5kbGVFdmVudCh0LFwiZG93blwiKSx2b2lkIHRoaXMuX3Jlc2V0VHJhbnNmb3JtRXZlbnREYXRhKCk7aWYodGhpcy5pc0RyYXdpbmdNb2RlKXJldHVybiB2b2lkIHRoaXMuX29uTW91c2VEb3duSW5EcmF3aW5nTW9kZSh0KTtpZighdGhpcy5faXNNYWluRXZlbnQodCkpcmV0dXJuO2lmKHRoaXMuX2N1cnJlbnRUcmFuc2Zvcm0pcmV0dXJuO2xldCBpPXRoaXMuX3Nob3VsZFJlbmRlcihlKSxyPSExO2lmKHRoaXMuaGFuZGxlTXVsdGlTZWxlY3Rpb24odCxlKT8oZT10aGlzLl9hY3RpdmVPYmplY3Qscj0hMCxpPSEwKTp0aGlzLl9zaG91bGRDbGVhclNlbGVjdGlvbih0LGUpJiZ0aGlzLmRpc2NhcmRBY3RpdmVPYmplY3QodCksdGhpcy5zZWxlY3Rpb24mJighZXx8IWUuc2VsZWN0YWJsZSYmIWUuaXNFZGl0aW5nJiZlIT09dGhpcy5fYWN0aXZlT2JqZWN0KSl7Y29uc3QgZT10aGlzLmdldFNjZW5lUG9pbnQodCk7dGhpcy5fZ3JvdXBTZWxlY3Rvcj17eDplLngseTplLnksZGVsdGFZOjAsZGVsdGFYOjB9fWlmKGUpe2NvbnN0IHM9ZT09PXRoaXMuX2FjdGl2ZU9iamVjdDtlLnNlbGVjdGFibGUmJlwiZG93blwiPT09ZS5hY3RpdmVPbiYmdGhpcy5zZXRBY3RpdmVPYmplY3QoZSx0KTtjb25zdCBpPWUuZmluZENvbnRyb2wodGhpcy5nZXRWaWV3cG9ydFBvaW50KHQpLGZlKHQpKTtpZihlPT09dGhpcy5fYWN0aXZlT2JqZWN0JiYoaXx8IXIpKXt0aGlzLl9zZXR1cEN1cnJlbnRUcmFuc2Zvcm0odCxlLHMpO2NvbnN0IHI9aT9pLmNvbnRyb2w6dm9pZCAwLG49dGhpcy5nZXRTY2VuZVBvaW50KHQpLG89ciYmci5nZXRNb3VzZURvd25IYW5kbGVyKHQsZSxyKTtvJiZvLmNhbGwocix0LHRoaXMuX2N1cnJlbnRUcmFuc2Zvcm0sbi54LG4ueSl9fWkmJih0aGlzLl9vYmplY3RzVG9SZW5kZXI9dm9pZCAwKSx0aGlzLl9oYW5kbGVFdmVudCh0LFwiZG93blwiKSxpJiZ0aGlzLnJlcXVlc3RSZW5kZXJBbGwoKX1fcmVzZXRUcmFuc2Zvcm1FdmVudERhdGEoKXt0aGlzLl90YXJnZXQ9dGhpcy5fcG9pbnRlcj10aGlzLl9hYnNvbHV0ZVBvaW50ZXI9dm9pZCAwfV9jYWNoZVRyYW5zZm9ybUV2ZW50RGF0YSh0KXt0aGlzLl9yZXNldFRyYW5zZm9ybUV2ZW50RGF0YSgpLHRoaXMuX3BvaW50ZXI9dGhpcy5nZXRWaWV3cG9ydFBvaW50KHQpLHRoaXMuX2Fic29sdXRlUG9pbnRlcj1TZSh0aGlzLl9wb2ludGVyLHZvaWQgMCx0aGlzLnZpZXdwb3J0VHJhbnNmb3JtKSx0aGlzLl90YXJnZXQ9dGhpcy5fY3VycmVudFRyYW5zZm9ybT90aGlzLl9jdXJyZW50VHJhbnNmb3JtLnRhcmdldDp0aGlzLmZpbmRUYXJnZXQodCl9X19vbk1vdXNlTW92ZSh0KXtpZih0aGlzLl9pc0NsaWNrPSExLHRoaXMuX2NhY2hlVHJhbnNmb3JtRXZlbnREYXRhKHQpLHRoaXMuX2hhbmRsZUV2ZW50KHQsXCJtb3ZlOmJlZm9yZVwiKSx0aGlzLmlzRHJhd2luZ01vZGUpcmV0dXJuIHZvaWQgdGhpcy5fb25Nb3VzZU1vdmVJbkRyYXdpbmdNb2RlKHQpO2lmKCF0aGlzLl9pc01haW5FdmVudCh0KSlyZXR1cm47Y29uc3QgZT10aGlzLl9ncm91cFNlbGVjdG9yO2lmKGUpe2NvbnN0IHM9dGhpcy5nZXRTY2VuZVBvaW50KHQpO2UuZGVsdGFYPXMueC1lLngsZS5kZWx0YVk9cy55LWUueSx0aGlzLnJlbmRlclRvcCgpfWVsc2UgaWYodGhpcy5fY3VycmVudFRyYW5zZm9ybSl0aGlzLl90cmFuc2Zvcm1PYmplY3QodCk7ZWxzZXtjb25zdCBlPXRoaXMuZmluZFRhcmdldCh0KTt0aGlzLl9zZXRDdXJzb3JGcm9tRXZlbnQodCxlKSx0aGlzLl9maXJlT3Zlck91dEV2ZW50cyh0LGUpfXRoaXMudGV4dEVkaXRpbmdNYW5hZ2VyLm9uTW91c2VNb3ZlKHQpLHRoaXMuX2hhbmRsZUV2ZW50KHQsXCJtb3ZlXCIpLHRoaXMuX3Jlc2V0VHJhbnNmb3JtRXZlbnREYXRhKCl9X2ZpcmVPdmVyT3V0RXZlbnRzKHQsZSl7Y29uc3Qgcz10aGlzLl9ob3ZlcmVkVGFyZ2V0LGk9dGhpcy5faG92ZXJlZFRhcmdldHMscj10aGlzLnRhcmdldHMsbj1NYXRoLm1heChpLmxlbmd0aCxyLmxlbmd0aCk7dGhpcy5maXJlU3ludGhldGljSW5PdXRFdmVudHMoXCJtb3VzZVwiLHtlOnQsdGFyZ2V0OmUsb2xkVGFyZ2V0OnMsZmlyZUNhbnZhczohMH0pO2ZvcihsZXQgZT0wO2U8bjtlKyspdGhpcy5maXJlU3ludGhldGljSW5PdXRFdmVudHMoXCJtb3VzZVwiLHtlOnQsdGFyZ2V0OnJbZV0sb2xkVGFyZ2V0OmlbZV19KTt0aGlzLl9ob3ZlcmVkVGFyZ2V0PWUsdGhpcy5faG92ZXJlZFRhcmdldHM9dGhpcy50YXJnZXRzLmNvbmNhdCgpfV9maXJlRW50ZXJMZWF2ZUV2ZW50cyh0LGUpe2NvbnN0IGk9dGhpcy5fZHJhZ2dlZG92ZXJUYXJnZXQscj10aGlzLl9ob3ZlcmVkVGFyZ2V0cyxuPXRoaXMudGFyZ2V0cyxvPU1hdGgubWF4KHIubGVuZ3RoLG4ubGVuZ3RoKTt0aGlzLmZpcmVTeW50aGV0aWNJbk91dEV2ZW50cyhcImRyYWdcIixzKHMoe30sZSkse30se3RhcmdldDp0LG9sZFRhcmdldDppLGZpcmVDYW52YXM6ITB9KSk7Zm9yKGxldCB0PTA7dDxvO3QrKyl0aGlzLmZpcmVTeW50aGV0aWNJbk91dEV2ZW50cyhcImRyYWdcIixzKHMoe30sZSkse30se3RhcmdldDpuW3RdLG9sZFRhcmdldDpyW3RdfSkpO3RoaXMuX2RyYWdnZWRvdmVyVGFyZ2V0PXR9ZmlyZVN5bnRoZXRpY0luT3V0RXZlbnRzKHQsZSl7bGV0e3RhcmdldDpyLG9sZFRhcmdldDpuLGZpcmVDYW52YXM6byxlOmF9PWUsaD1pKGUsZm4pO2NvbnN0e3RhcmdldEluOmMsdGFyZ2V0T3V0OmwsY2FudmFzSW46dSxjYW52YXNPdXQ6ZH09X25bdF0sZz1uIT09cjtpZihuJiZnKXtjb25zdCB0PXMocyh7fSxoKSx7fSx7ZTphLHRhcmdldDpuLG5leHRUYXJnZXQ6cn0sbW4odGhpcyxhKSk7byYmdGhpcy5maXJlKGQsdCksbi5maXJlKGwsdCl9aWYociYmZyl7Y29uc3QgdD1zKHMoe30saCkse30se2U6YSx0YXJnZXQ6cixwcmV2aW91c1RhcmdldDpufSxtbih0aGlzLGEpKTtvJiZ0aGlzLmZpcmUodSx0KSxyLmZpcmUoYyx0KX19X19vbk1vdXNlV2hlZWwodCl7dGhpcy5fY2FjaGVUcmFuc2Zvcm1FdmVudERhdGEodCksdGhpcy5faGFuZGxlRXZlbnQodCxcIndoZWVsXCIpLHRoaXMuX3Jlc2V0VHJhbnNmb3JtRXZlbnREYXRhKCl9X3RyYW5zZm9ybU9iamVjdCh0KXtjb25zdCBlPXRoaXMuZ2V0U2NlbmVQb2ludCh0KSxzPXRoaXMuX2N1cnJlbnRUcmFuc2Zvcm0saT1zLnRhcmdldCxyPWkuZ3JvdXA/U2UoZSx2b2lkIDAsaS5ncm91cC5jYWxjVHJhbnNmb3JtTWF0cml4KCkpOmU7cy5zaGlmdEtleT10LnNoaWZ0S2V5LHMuYWx0S2V5PSEhdGhpcy5jZW50ZXJlZEtleSYmdFt0aGlzLmNlbnRlcmVkS2V5XSx0aGlzLl9wZXJmb3JtVHJhbnNmb3JtQWN0aW9uKHQscyxyKSxzLmFjdGlvblBlcmZvcm1lZCYmdGhpcy5yZXF1ZXN0UmVuZGVyQWxsKCl9X3BlcmZvcm1UcmFuc2Zvcm1BY3Rpb24odCxlLHMpe2NvbnN0e2FjdGlvbjppLGFjdGlvbkhhbmRsZXI6cix0YXJnZXQ6bn09ZSxvPSEhciYmcih0LGUscy54LHMueSk7byYmbi5zZXRDb29yZHMoKSxcImRyYWdcIj09PWkmJm8mJihlLnRhcmdldC5pc01vdmluZz0hMCx0aGlzLnNldEN1cnNvcihlLnRhcmdldC5tb3ZlQ3Vyc29yfHx0aGlzLm1vdmVDdXJzb3IpKSxlLmFjdGlvblBlcmZvcm1lZD1lLmFjdGlvblBlcmZvcm1lZHx8b31fc2V0Q3Vyc29yRnJvbUV2ZW50KHQsZSl7aWYoIWUpcmV0dXJuIHZvaWQgdGhpcy5zZXRDdXJzb3IodGhpcy5kZWZhdWx0Q3Vyc29yKTtsZXQgcz1lLmhvdmVyQ3Vyc29yfHx0aGlzLmhvdmVyQ3Vyc29yO2NvbnN0IGk9c2UodGhpcy5fYWN0aXZlT2JqZWN0KT90aGlzLl9hY3RpdmVPYmplY3Q6bnVsbCxyPSghaXx8ZS5ncm91cCE9PWkpJiZlLmZpbmRDb250cm9sKHRoaXMuZ2V0Vmlld3BvcnRQb2ludCh0KSk7aWYocil7Y29uc3Qgcz1yLmNvbnRyb2w7dGhpcy5zZXRDdXJzb3Iocy5jdXJzb3JTdHlsZUhhbmRsZXIodCxzLGUpKX1lbHNlIGUuc3ViVGFyZ2V0Q2hlY2smJnRoaXMudGFyZ2V0cy5jb25jYXQoKS5yZXZlcnNlKCkubWFwKCh0PT57cz10LmhvdmVyQ3Vyc29yfHxzfSkpLHRoaXMuc2V0Q3Vyc29yKHMpfWhhbmRsZU11bHRpU2VsZWN0aW9uKHQsZSl7Y29uc3Qgcz10aGlzLl9hY3RpdmVPYmplY3QsaT1zZShzKTtpZihzJiZ0aGlzLl9pc1NlbGVjdGlvbktleVByZXNzZWQodCkmJnRoaXMuc2VsZWN0aW9uJiZlJiZlLnNlbGVjdGFibGUmJihzIT09ZXx8aSkmJihpfHwhZS5pc0Rlc2NlbmRhbnRPZihzKSYmIXMuaXNEZXNjZW5kYW50T2YoZSkpJiYhZS5vblNlbGVjdCh7ZTp0fSkmJiFzLmdldEFjdGl2ZUNvbnRyb2woKSl7aWYoaSl7Y29uc3QgaT1zLmdldE9iamVjdHMoKTtpZihlPT09cyl7Y29uc3Qgcz10aGlzLmdldFZpZXdwb3J0UG9pbnQodCk7aWYoIShlPXRoaXMuc2VhcmNoUG9zc2libGVUYXJnZXRzKGkscyl8fHRoaXMuc2VhcmNoUG9zc2libGVUYXJnZXRzKHRoaXMuX29iamVjdHMscykpfHwhZS5zZWxlY3RhYmxlKXJldHVybiExfWUuZ3JvdXA9PT1zPyhzLnJlbW92ZShlKSx0aGlzLl9ob3ZlcmVkVGFyZ2V0PWUsdGhpcy5faG92ZXJlZFRhcmdldHM9Wy4uLnRoaXMudGFyZ2V0c10sMT09PXMuc2l6ZSgpJiZ0aGlzLl9zZXRBY3RpdmVPYmplY3Qocy5pdGVtKDApLHQpKToocy5tdWx0aVNlbGVjdEFkZChlKSx0aGlzLl9ob3ZlcmVkVGFyZ2V0PXMsdGhpcy5faG92ZXJlZFRhcmdldHM9Wy4uLnRoaXMudGFyZ2V0c10pLHRoaXMuX2ZpcmVTZWxlY3Rpb25FdmVudHMoaSx0KX1lbHNle3MuaXNFZGl0aW5nJiZzLmV4aXRFZGl0aW5nKCk7Y29uc3QgaT1uZXcodHQuZ2V0Q2xhc3MoXCJBY3RpdmVTZWxlY3Rpb25cIikpKFtdLHtjYW52YXM6dGhpc30pO2kubXVsdGlTZWxlY3RBZGQocyxlKSx0aGlzLl9ob3ZlcmVkVGFyZ2V0PWksdGhpcy5fc2V0QWN0aXZlT2JqZWN0KGksdCksdGhpcy5fZmlyZVNlbGVjdGlvbkV2ZW50cyhbc10sdCl9cmV0dXJuITB9cmV0dXJuITF9aGFuZGxlU2VsZWN0aW9uKHQpe2lmKCF0aGlzLnNlbGVjdGlvbnx8IXRoaXMuX2dyb3VwU2VsZWN0b3IpcmV0dXJuITE7Y29uc3R7eDplLHk6cyxkZWx0YVg6aSxkZWx0YVk6cn09dGhpcy5fZ3JvdXBTZWxlY3RvcixuPW5ldyBvdChlLHMpLG89bi5hZGQobmV3IG90KGkscikpLGE9bi5taW4obyksaD1uLm1heChvKS5zdWJ0cmFjdChhKSxjPXRoaXMuY29sbGVjdE9iamVjdHMoe2xlZnQ6YS54LHRvcDphLnksd2lkdGg6aC54LGhlaWdodDpoLnl9LHtpbmNsdWRlSW50ZXJzZWN0aW5nOiF0aGlzLnNlbGVjdGlvbkZ1bGx5Q29udGFpbmVkfSksbD1uLmVxKG8pP2NbMF0/W2NbMF1dOltdOmMubGVuZ3RoPjE/Yy5maWx0ZXIoKGU9PiFlLm9uU2VsZWN0KHtlOnR9KSkpLnJldmVyc2UoKTpjO2lmKDE9PT1sLmxlbmd0aCl0aGlzLnNldEFjdGl2ZU9iamVjdChsWzBdLHQpO2Vsc2UgaWYobC5sZW5ndGg+MSl7Y29uc3QgZT10dC5nZXRDbGFzcyhcIkFjdGl2ZVNlbGVjdGlvblwiKTt0aGlzLnNldEFjdGl2ZU9iamVjdChuZXcgZShsLHtjYW52YXM6dGhpc30pLHQpfXJldHVybiB0aGlzLl9ncm91cFNlbGVjdG9yPW51bGwsITB9Y2xlYXIoKXt0aGlzLnRleHRFZGl0aW5nTWFuYWdlci5jbGVhcigpLHN1cGVyLmNsZWFyKCl9ZGVzdHJveSgpe3RoaXMucmVtb3ZlTGlzdGVuZXJzKCksdGhpcy50ZXh0RWRpdGluZ01hbmFnZXIuZGlzcG9zZSgpLHN1cGVyLmRlc3Ryb3koKX19Y29uc3QgQ249e3gxOjAseTE6MCx4MjowLHkyOjB9LGJuPXMocyh7fSxDbikse30se3IxOjAscjI6MH0pLHduPSh0LGUpPT5pc05hTih0KSYmXCJudW1iZXJcIj09dHlwZW9mIGU/ZTp0LFNuPS9eKFxcZCtcXC5cXGQrKSV8KFxcZCspJSQvO2Z1bmN0aW9uIFRuKHQpe3JldHVybiB0JiZTbi50ZXN0KHQpfWZ1bmN0aW9uIE9uKHQsZSl7Y29uc3Qgcz1cIm51bWJlclwiPT10eXBlb2YgdD90Olwic3RyaW5nXCI9PXR5cGVvZiB0P3BhcnNlRmxvYXQodCkvKFRuKHQpPzEwMDoxKTpOYU47cmV0dXJuIGRzKDAsd24ocyxlKSwxKX1jb25zdCBrbj0vXFxzKjtcXHMqLyxEbj0vXFxzKjpcXHMqLztmdW5jdGlvbiBNbih0LGUpe2xldCBzLGk7Y29uc3Qgcj10LmdldEF0dHJpYnV0ZShcInN0eWxlXCIpO2lmKHIpe2NvbnN0IHQ9ci5zcGxpdChrbik7XCJcIj09PXRbdC5sZW5ndGgtMV0mJnQucG9wKCk7Zm9yKGxldCBlPXQubGVuZ3RoO2UtLTspe2NvbnN0W3Isbl09dFtlXS5zcGxpdChEbikubWFwKCh0PT50LnRyaW0oKSkpO1wic3RvcC1jb2xvclwiPT09cj9zPW46XCJzdG9wLW9wYWNpdHlcIj09PXImJihpPW4pfX1jb25zdCBuPW5ldyBVdChzfHx0LmdldEF0dHJpYnV0ZShcInN0b3AtY29sb3JcIil8fFwicmdiKDAsMCwwKVwiKTtyZXR1cm57b2Zmc2V0Ok9uKHQuZ2V0QXR0cmlidXRlKFwib2Zmc2V0XCIpLDApLGNvbG9yOm4udG9SZ2IoKSxvcGFjaXR5OnduKHBhcnNlRmxvYXQoaXx8dC5nZXRBdHRyaWJ1dGUoXCJzdG9wLW9wYWNpdHlcIil8fFwiXCIpLDEpKm4uZ2V0QWxwaGEoKSplfX1mdW5jdGlvbiBQbih0LGUpe2NvbnN0IHM9W10saT10LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic3RvcFwiKSxyPU9uKGUsMSk7Zm9yKGxldCB0PWkubGVuZ3RoO3QtLTspcy5wdXNoKE1uKGlbdF0scikpO3JldHVybiBzfWZ1bmN0aW9uIEVuKHQpe3JldHVyblwibGluZWFyR3JhZGllbnRcIj09PXQubm9kZU5hbWV8fFwiTElORUFSR1JBRElFTlRcIj09PXQubm9kZU5hbWU/XCJsaW5lYXJcIjpcInJhZGlhbFwifWZ1bmN0aW9uIEFuKHQpe3JldHVyblwidXNlclNwYWNlT25Vc2VcIj09PXQuZ2V0QXR0cmlidXRlKFwiZ3JhZGllbnRVbml0c1wiKT9cInBpeGVsc1wiOlwicGVyY2VudGFnZVwifWZ1bmN0aW9uIGpuKHQsZSl7cmV0dXJuIHQuZ2V0QXR0cmlidXRlKGUpfWZ1bmN0aW9uIEZuKHQsZSl7cmV0dXJuIGZ1bmN0aW9uKHQsZSl7bGV0IHMse3dpZHRoOmksaGVpZ2h0OnIsZ3JhZGllbnRVbml0czpufT1lO3JldHVybiBPYmplY3Qua2V5cyh0KS5yZWR1Y2UoKChlLG8pPT57Y29uc3QgYT10W29dO3JldHVyblwiSW5maW5pdHlcIj09PWE/cz0xOlwiLUluZmluaXR5XCI9PT1hP3M9MDoocz1cInN0cmluZ1wiPT10eXBlb2YgYT9wYXJzZUZsb2F0KGEpOmEsXCJzdHJpbmdcIj09dHlwZW9mIGEmJlRuKGEpJiYocyo9LjAxLFwicGl4ZWxzXCI9PT1uJiYoXCJ4MVwiIT09byYmXCJ4MlwiIT09byYmXCJyMlwiIT09b3x8KHMqPWkpLFwieTFcIiE9PW8mJlwieTJcIiE9PW98fChzKj1yKSkpKSxlW29dPXMsZX0pLHt9KX0oXCJsaW5lYXJcIj09PUVuKHQpP2Z1bmN0aW9uKHQpe3JldHVybnt4MTpqbih0LFwieDFcIil8fDAseTE6am4odCxcInkxXCIpfHwwLHgyOmpuKHQsXCJ4MlwiKXx8XCIxMDAlXCIseTI6am4odCxcInkyXCIpfHwwfX0odCk6ZnVuY3Rpb24odCl7cmV0dXJue3gxOmpuKHQsXCJmeFwiKXx8am4odCxcImN4XCIpfHxcIjUwJVwiLHkxOmpuKHQsXCJmeVwiKXx8am4odCxcImN5XCIpfHxcIjUwJVwiLHIxOjAseDI6am4odCxcImN4XCIpfHxcIjUwJVwiLHkyOmpuKHQsXCJjeVwiKXx8XCI1MCVcIixyMjpqbih0LFwiclwiKXx8XCI1MCVcIn19KHQpLHMocyh7fSxlKSx7fSx7Z3JhZGllbnRVbml0czpBbih0KX0pKX1jbGFzcyBMbntjb25zdHJ1Y3Rvcih0KXtjb25zdHt0eXBlOmU9XCJsaW5lYXJcIixncmFkaWVudFVuaXRzOmk9XCJwaXhlbHNcIixjb29yZHM6cj17fSxjb2xvclN0b3BzOm49W10sb2Zmc2V0WDpvPTAsb2Zmc2V0WTphPTAsZ3JhZGllbnRUcmFuc2Zvcm06aCxpZDpjfT10fHx7fTtPYmplY3QuYXNzaWduKHRoaXMse3R5cGU6ZSxncmFkaWVudFVuaXRzOmksY29vcmRzOnMocyh7fSxcInJhZGlhbFwiPT09ZT9ibjpDbiksciksY29sb3JTdG9wczpuLG9mZnNldFg6byxvZmZzZXRZOmEsZ3JhZGllbnRUcmFuc2Zvcm06aCxpZDpjP1wiXCIuY29uY2F0KGMsXCJfXCIpLmNvbmNhdChmdCgpKTpmdCgpfSl9YWRkQ29sb3JTdG9wKHQpe2Zvcihjb25zdCBlIGluIHQpe2NvbnN0IHM9bmV3IFV0KHRbZV0pO3RoaXMuY29sb3JTdG9wcy5wdXNoKHtvZmZzZXQ6cGFyc2VGbG9hdChlKSxjb2xvcjpzLnRvUmdiKCksb3BhY2l0eTpzLmdldEFscGhhKCl9KX1yZXR1cm4gdGhpc310b09iamVjdCh0KXtyZXR1cm4gcyhzKHt9LFh0KHRoaXMsdCkpLHt9LHt0eXBlOnRoaXMudHlwZSxjb29yZHM6cyh7fSx0aGlzLmNvb3JkcyksY29sb3JTdG9wczp0aGlzLmNvbG9yU3RvcHMubWFwKCh0PT5zKHt9LHQpKSksb2Zmc2V0WDp0aGlzLm9mZnNldFgsb2Zmc2V0WTp0aGlzLm9mZnNldFksZ3JhZGllbnRVbml0czp0aGlzLmdyYWRpZW50VW5pdHMsZ3JhZGllbnRUcmFuc2Zvcm06dGhpcy5ncmFkaWVudFRyYW5zZm9ybT9bLi4udGhpcy5ncmFkaWVudFRyYW5zZm9ybV06dm9pZCAwfSl9dG9TVkcodCl7bGV0e2FkZGl0aW9uYWxUcmFuc2Zvcm06ZX09YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOnt9O2NvbnN0IGk9W10scj10aGlzLmdyYWRpZW50VHJhbnNmb3JtP3RoaXMuZ3JhZGllbnRUcmFuc2Zvcm0uY29uY2F0KCk6VC5jb25jYXQoKSxuPVwicGl4ZWxzXCI9PT10aGlzLmdyYWRpZW50VW5pdHM/XCJ1c2VyU3BhY2VPblVzZVwiOlwib2JqZWN0Qm91bmRpbmdCb3hcIixvPXRoaXMuY29sb3JTdG9wcy5tYXAoKHQ9PnMoe30sdCkpKS5zb3J0KCgodCxlKT0+dC5vZmZzZXQtZS5vZmZzZXQpKTtsZXQgYT0tdGhpcy5vZmZzZXRYLGg9LXRoaXMub2Zmc2V0WTt2YXIgYztcIm9iamVjdEJvdW5kaW5nQm94XCI9PT1uPyhhLz10LndpZHRoLGgvPXQuaGVpZ2h0KTooYSs9dC53aWR0aC8yLGgrPXQuaGVpZ2h0LzIpLChjPXQpJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBjLl9yZW5kZXJQYXRoQ29tbWFuZHMmJlwicGVyY2VudGFnZVwiIT09dGhpcy5ncmFkaWVudFVuaXRzJiYoYS09dC5wYXRoT2Zmc2V0LngsaC09dC5wYXRoT2Zmc2V0LnkpLHJbNF0tPWEscls1XS09aDtjb25zdCBsPVsnaWQ9XCJTVkdJRF8nLmNvbmNhdCh0aGlzLmlkLCdcIicpLCdncmFkaWVudFVuaXRzPVwiJy5jb25jYXQobiwnXCInKSwnZ3JhZGllbnRUcmFuc2Zvcm09XCInLmNvbmNhdChlP2UrXCIgXCI6XCJcIikuY29uY2F0KFF0KHIpLCdcIicpLFwiXCJdLmpvaW4oXCIgXCIpO2lmKFwibGluZWFyXCI9PT10aGlzLnR5cGUpe2NvbnN0e3gxOnQseTE6ZSx4MjpzLHkyOnJ9PXRoaXMuY29vcmRzO2kucHVzaChcIjxsaW5lYXJHcmFkaWVudCBcIixsLCcgeDE9XCInLHQsJ1wiIHkxPVwiJyxlLCdcIiB4Mj1cIicscywnXCIgeTI9XCInLHIsJ1wiPlxcbicpfWVsc2UgaWYoXCJyYWRpYWxcIj09PXRoaXMudHlwZSl7Y29uc3R7eDE6dCx5MTplLHgyOnMseTI6cixyMTpuLHIyOmF9PXRoaXMuY29vcmRzLGg9bj5hO2kucHVzaChcIjxyYWRpYWxHcmFkaWVudCBcIixsLCcgY3g9XCInLGg/dDpzLCdcIiBjeT1cIicsaD9lOnIsJ1wiIHI9XCInLGg/bjphLCdcIiBmeD1cIicsaD9zOnQsJ1wiIGZ5PVwiJyxoP3I6ZSwnXCI+XFxuJyksaCYmKG8ucmV2ZXJzZSgpLG8uZm9yRWFjaCgodD0+e3Qub2Zmc2V0PTEtdC5vZmZzZXR9KSkpO2NvbnN0IGM9TWF0aC5taW4obixhKTtpZihjPjApe2NvbnN0IHQ9Yy9NYXRoLm1heChuLGEpO28uZm9yRWFjaCgoZT0+e2Uub2Zmc2V0Kz10KigxLWUub2Zmc2V0KX0pKX19cmV0dXJuIG8uZm9yRWFjaCgodD0+e2xldHtjb2xvcjplLG9mZnNldDpzLG9wYWNpdHk6cn09dDtpLnB1c2goXCI8c3RvcCBcIiwnb2Zmc2V0PVwiJywxMDAqcytcIiVcIiwnXCIgc3R5bGU9XCJzdG9wLWNvbG9yOicsZSx2b2lkIDAhPT1yP1wiO3N0b3Atb3BhY2l0eTogXCIrcjpcIjtcIiwnXCIvPlxcbicpfSkpLGkucHVzaChcImxpbmVhclwiPT09dGhpcy50eXBlP1wiPC9saW5lYXJHcmFkaWVudD5cIjpcIjwvcmFkaWFsR3JhZGllbnQ+XCIsXCJcXG5cIiksaS5qb2luKFwiXCIpfXRvTGl2ZSh0KXtjb25zdHt4MTplLHkxOnMseDI6aSx5MjpyLHIxOm4scjI6b309dGhpcy5jb29yZHMsYT1cImxpbmVhclwiPT09dGhpcy50eXBlP3QuY3JlYXRlTGluZWFyR3JhZGllbnQoZSxzLGkscik6dC5jcmVhdGVSYWRpYWxHcmFkaWVudChlLHMsbixpLHIsbyk7cmV0dXJuIHRoaXMuY29sb3JTdG9wcy5mb3JFYWNoKCh0PT57bGV0e2NvbG9yOmUsb3BhY2l0eTpzLG9mZnNldDppfT10O2EuYWRkQ29sb3JTdG9wKGksdm9pZCAwIT09cz9uZXcgVXQoZSkuc2V0QWxwaGEocykudG9SZ2JhKCk6ZSl9KSksYX1zdGF0aWMgYXN5bmMgZnJvbU9iamVjdCh0KXtjb25zdHtjb2xvclN0b3BzOmUsZ3JhZGllbnRUcmFuc2Zvcm06aX09dDtyZXR1cm4gbmV3IHRoaXMocyhzKHt9LHQpLHt9LHtjb2xvclN0b3BzOmU/ZS5tYXAoKHQ9PnMoe30sdCkpKTp2b2lkIDAsZ3JhZGllbnRUcmFuc2Zvcm06aT9bLi4uaV06dm9pZCAwfSkpfXN0YXRpYyBmcm9tRWxlbWVudCh0LGUsaSl7Y29uc3Qgcj1Bbih0KSxuPWUuX2ZpbmRDZW50ZXJGcm9tRWxlbWVudCgpO3JldHVybiBuZXcgdGhpcyhzKHtpZDp0LmdldEF0dHJpYnV0ZShcImlkXCIpfHx2b2lkIDAsdHlwZTpFbih0KSxjb29yZHM6Rm4odCx7d2lkdGg6aS52aWV3Qm94V2lkdGh8fGkud2lkdGgsaGVpZ2h0Omkudmlld0JveEhlaWdodHx8aS5oZWlnaHR9KSxjb2xvclN0b3BzOlBuKHQsaS5vcGFjaXR5KSxncmFkaWVudFVuaXRzOnIsZ3JhZGllbnRUcmFuc2Zvcm06bnIodC5nZXRBdHRyaWJ1dGUoXCJncmFkaWVudFRyYW5zZm9ybVwiKXx8XCJcIil9LFwicGl4ZWxzXCI9PT1yP3tvZmZzZXRYOmUud2lkdGgvMi1uLngsb2Zmc2V0WTplLmhlaWdodC8yLW4ueX06e29mZnNldFg6MCxvZmZzZXRZOjB9KSl9fXQoTG4sXCJ0eXBlXCIsXCJHcmFkaWVudFwiKSx0dC5zZXRDbGFzcyhMbixcImdyYWRpZW50XCIpLHR0LnNldENsYXNzKExuLFwibGluZWFyXCIpLHR0LnNldENsYXNzKExuLFwicmFkaWFsXCIpO2NvbnN0IFJuPVtcInR5cGVcIixcInNvdXJjZVwiLFwicGF0dGVyblRyYW5zZm9ybVwiXTtjbGFzcyBJbntnZXQgdHlwZSgpe3JldHVyblwicGF0dGVyblwifXNldCB0eXBlKHQpe2EoXCJ3YXJuXCIsXCJTZXR0aW5nIHR5cGUgaGFzIG5vIGVmZmVjdFwiLHQpfWNvbnN0cnVjdG9yKGUpe3QodGhpcyxcInJlcGVhdFwiLFwicmVwZWF0XCIpLHQodGhpcyxcIm9mZnNldFhcIiwwKSx0KHRoaXMsXCJvZmZzZXRZXCIsMCksdCh0aGlzLFwiY3Jvc3NPcmlnaW5cIixcIlwiKSx0aGlzLmlkPWZ0KCksT2JqZWN0LmFzc2lnbih0aGlzLGUpfWlzSW1hZ2VTb3VyY2UoKXtyZXR1cm4hIXRoaXMuc291cmNlJiZcInN0cmluZ1wiPT10eXBlb2YgdGhpcy5zb3VyY2Uuc3JjfWlzQ2FudmFzU291cmNlKCl7cmV0dXJuISF0aGlzLnNvdXJjZSYmISF0aGlzLnNvdXJjZS50b0RhdGFVUkx9c291cmNlVG9TdHJpbmcoKXtyZXR1cm4gdGhpcy5pc0ltYWdlU291cmNlKCk/dGhpcy5zb3VyY2Uuc3JjOnRoaXMuaXNDYW52YXNTb3VyY2UoKT90aGlzLnNvdXJjZS50b0RhdGFVUkwoKTpcIlwifXRvTGl2ZSh0KXtyZXR1cm4gdGhpcy5zb3VyY2UmJighdGhpcy5pc0ltYWdlU291cmNlKCl8fHRoaXMuc291cmNlLmNvbXBsZXRlJiYwIT09dGhpcy5zb3VyY2UubmF0dXJhbFdpZHRoJiYwIT09dGhpcy5zb3VyY2UubmF0dXJhbEhlaWdodCk/dC5jcmVhdGVQYXR0ZXJuKHRoaXMuc291cmNlLHRoaXMucmVwZWF0KTpudWxsfXRvT2JqZWN0KCl7bGV0IHQ9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOltdO2NvbnN0e3JlcGVhdDplLGNyb3NzT3JpZ2luOml9PXRoaXM7cmV0dXJuIHMocyh7fSxYdCh0aGlzLHQpKSx7fSx7dHlwZTpcInBhdHRlcm5cIixzb3VyY2U6dGhpcy5zb3VyY2VUb1N0cmluZygpLHJlcGVhdDplLGNyb3NzT3JpZ2luOmksb2Zmc2V0WDpxdCh0aGlzLm9mZnNldFgsby5OVU1fRlJBQ1RJT05fRElHSVRTKSxvZmZzZXRZOnF0KHRoaXMub2Zmc2V0WSxvLk5VTV9GUkFDVElPTl9ESUdJVFMpLHBhdHRlcm5UcmFuc2Zvcm06dGhpcy5wYXR0ZXJuVHJhbnNmb3JtP1suLi50aGlzLnBhdHRlcm5UcmFuc2Zvcm1dOm51bGx9KX10b1NWRyh0KXtsZXR7d2lkdGg6ZSxoZWlnaHQ6c309dDtjb25zdHtzb3VyY2U6aSxyZXBlYXQ6cixpZDpufT10aGlzLG89d24odGhpcy5vZmZzZXRYL2UsMCksYT13bih0aGlzLm9mZnNldFkvcywwKSxoPVwicmVwZWF0LXlcIj09PXJ8fFwibm8tcmVwZWF0XCI9PT1yPzErTWF0aC5hYnMob3x8MCk6d24oaS53aWR0aC9lLDApLGM9XCJyZXBlYXQteFwiPT09cnx8XCJuby1yZXBlYXRcIj09PXI/MStNYXRoLmFicyhhfHwwKTp3bihpLmhlaWdodC9zLDApO3JldHVyblsnPHBhdHRlcm4gaWQ9XCJTVkdJRF8nLmNvbmNhdChuLCdcIiB4PVwiJykuY29uY2F0KG8sJ1wiIHk9XCInKS5jb25jYXQoYSwnXCIgd2lkdGg9XCInKS5jb25jYXQoaCwnXCIgaGVpZ2h0PVwiJykuY29uY2F0KGMsJ1wiPicpLCc8aW1hZ2UgeD1cIjBcIiB5PVwiMFwiIHdpZHRoPVwiJy5jb25jYXQoaS53aWR0aCwnXCIgaGVpZ2h0PVwiJykuY29uY2F0KGkuaGVpZ2h0LCdcIiB4bGluazpocmVmPVwiJykuY29uY2F0KHRoaXMuc291cmNlVG9TdHJpbmcoKSwnXCI+PC9pbWFnZT4nKSxcIjwvcGF0dGVybj5cIixcIlwiXS5qb2luKFwiXFxuXCIpfXN0YXRpYyBhc3luYyBmcm9tT2JqZWN0KHQsZSl7bGV0e3R5cGU6cixzb3VyY2U6bixwYXR0ZXJuVHJhbnNmb3JtOm99PXQsYT1pKHQsUm4pO2NvbnN0IGg9YXdhaXQgUnQobixzKHMoe30sZSkse30se2Nyb3NzT3JpZ2luOmEuY3Jvc3NPcmlnaW59KSk7cmV0dXJuIG5ldyB0aGlzKHMocyh7fSxhKSx7fSx7cGF0dGVyblRyYW5zZm9ybTpvJiZvLnNsaWNlKDApLHNvdXJjZTpofSkpfX10KEluLFwidHlwZVwiLFwiUGF0dGVyblwiKSx0dC5zZXRDbGFzcyhJbiksdHQuc2V0Q2xhc3MoSW4sXCJwYXR0ZXJuXCIpO2NsYXNzIEJue2NvbnN0cnVjdG9yKGUpe3QodGhpcyxcImNvbG9yXCIsXCJyZ2IoMCwgMCwgMClcIiksdCh0aGlzLFwid2lkdGhcIiwxKSx0KHRoaXMsXCJzaGFkb3dcIixudWxsKSx0KHRoaXMsXCJzdHJva2VMaW5lQ2FwXCIsXCJyb3VuZFwiKSx0KHRoaXMsXCJzdHJva2VMaW5lSm9pblwiLFwicm91bmRcIiksdCh0aGlzLFwic3Ryb2tlTWl0ZXJMaW1pdFwiLDEwKSx0KHRoaXMsXCJzdHJva2VEYXNoQXJyYXlcIixudWxsKSx0KHRoaXMsXCJsaW1pdGVkVG9DYW52YXNTaXplXCIsITEpLHRoaXMuY2FudmFzPWV9X3NldEJydXNoU3R5bGVzKHQpe3Quc3Ryb2tlU3R5bGU9dGhpcy5jb2xvcix0LmxpbmVXaWR0aD10aGlzLndpZHRoLHQubGluZUNhcD10aGlzLnN0cm9rZUxpbmVDYXAsdC5taXRlckxpbWl0PXRoaXMuc3Ryb2tlTWl0ZXJMaW1pdCx0LmxpbmVKb2luPXRoaXMuc3Ryb2tlTGluZUpvaW4sdC5zZXRMaW5lRGFzaCh0aGlzLnN0cm9rZURhc2hBcnJheXx8W10pfV9zYXZlQW5kVHJhbnNmb3JtKHQpe2NvbnN0IGU9dGhpcy5jYW52YXMudmlld3BvcnRUcmFuc2Zvcm07dC5zYXZlKCksdC50cmFuc2Zvcm0oZVswXSxlWzFdLGVbMl0sZVszXSxlWzRdLGVbNV0pfW5lZWRzRnVsbFJlbmRlcigpe3JldHVybiBuZXcgVXQodGhpcy5jb2xvcikuZ2V0QWxwaGEoKTwxfHwhIXRoaXMuc2hhZG93fV9zZXRTaGFkb3coKXtpZighdGhpcy5zaGFkb3d8fCF0aGlzLmNhbnZhcylyZXR1cm47Y29uc3QgdD10aGlzLmNhbnZhcyxlPXRoaXMuc2hhZG93LHM9dC5jb250ZXh0VG9wLGk9dC5nZXRab29tKCkqdC5nZXRSZXRpbmFTY2FsaW5nKCk7cy5zaGFkb3dDb2xvcj1lLmNvbG9yLHMuc2hhZG93Qmx1cj1lLmJsdXIqaSxzLnNoYWRvd09mZnNldFg9ZS5vZmZzZXRYKmkscy5zaGFkb3dPZmZzZXRZPWUub2Zmc2V0WSppfV9yZXNldFNoYWRvdygpe2NvbnN0IHQ9dGhpcy5jYW52YXMuY29udGV4dFRvcDt0LnNoYWRvd0NvbG9yPVwiXCIsdC5zaGFkb3dCbHVyPXQuc2hhZG93T2Zmc2V0WD10LnNoYWRvd09mZnNldFk9MH1faXNPdXRTaWRlQ2FudmFzKHQpe3JldHVybiB0Lng8MHx8dC54PnRoaXMuY2FudmFzLmdldFdpZHRoKCl8fHQueTwwfHx0Lnk+dGhpcy5jYW52YXMuZ2V0SGVpZ2h0KCl9fWNvbnN0IFhuPVtcInBhdGhcIixcImxlZnRcIixcInRvcFwiXSxZbj1bXCJkXCJdO2NsYXNzIFduIGV4dGVuZHMgeWl7Y29uc3RydWN0b3IodCl7bGV0IGU9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOnt9LHtwYXRoOnMsbGVmdDpyLHRvcDpufT1lLG89aShlLFhuKTtzdXBlcigpLE9iamVjdC5hc3NpZ24odGhpcyxXbi5vd25EZWZhdWx0cyksdGhpcy5zZXRPcHRpb25zKG8pLHRoaXMuX3NldFBhdGgodHx8W10sITApLFwibnVtYmVyXCI9PXR5cGVvZiByJiZ0aGlzLnNldChNLHIpLFwibnVtYmVyXCI9PXR5cGVvZiBuJiZ0aGlzLnNldChQLG4pfV9zZXRQYXRoKHQsZSl7dGhpcy5wYXRoPVhyKEFycmF5LmlzQXJyYXkodCk/dDpzbih0KSksdGhpcy5zZXRCb3VuZGluZ0JveChlKX1fZmluZENlbnRlckZyb21FbGVtZW50KCl7Y29uc3QgdD10aGlzLl9jYWxjQm91bmRzRnJvbVBhdGgoKTtyZXR1cm4gbmV3IG90KHQubGVmdCt0LndpZHRoLzIsdC50b3ArdC5oZWlnaHQvMil9X3JlbmRlclBhdGhDb21tYW5kcyh0KXtjb25zdCBlPS10aGlzLnBhdGhPZmZzZXQueCxzPS10aGlzLnBhdGhPZmZzZXQueTt0LmJlZ2luUGF0aCgpO2Zvcihjb25zdCBpIG9mIHRoaXMucGF0aClzd2l0Y2goaVswXSl7Y2FzZVwiTFwiOnQubGluZVRvKGlbMV0rZSxpWzJdK3MpO2JyZWFrO2Nhc2VcIk1cIjp0Lm1vdmVUbyhpWzFdK2UsaVsyXStzKTticmVhaztjYXNlXCJDXCI6dC5iZXppZXJDdXJ2ZVRvKGlbMV0rZSxpWzJdK3MsaVszXStlLGlbNF0rcyxpWzVdK2UsaVs2XStzKTticmVhaztjYXNlXCJRXCI6dC5xdWFkcmF0aWNDdXJ2ZVRvKGlbMV0rZSxpWzJdK3MsaVszXStlLGlbNF0rcyk7YnJlYWs7Y2FzZVwiWlwiOnQuY2xvc2VQYXRoKCl9fV9yZW5kZXIodCl7dGhpcy5fcmVuZGVyUGF0aENvbW1hbmRzKHQpLHRoaXMuX3JlbmRlclBhaW50SW5PcmRlcih0KX10b1N0cmluZygpe3JldHVyblwiIzxQYXRoIChcIi5jb25jYXQodGhpcy5jb21wbGV4aXR5KCksJyk6IHsgXCJ0b3BcIjogJykuY29uY2F0KHRoaXMudG9wLCcsIFwibGVmdFwiOiAnKS5jb25jYXQodGhpcy5sZWZ0LFwiIH0+XCIpfXRvT2JqZWN0KCl7bGV0IHQ9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOltdO3JldHVybiBzKHMoe30sc3VwZXIudG9PYmplY3QodCkpLHt9LHtwYXRoOnRoaXMucGF0aC5tYXAoKHQ9PnQuc2xpY2UoKSkpfSl9dG9EYXRhbGVzc09iamVjdCgpe2xldCB0PWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTpbXTtjb25zdCBlPXRoaXMudG9PYmplY3QodCk7cmV0dXJuIHRoaXMuc291cmNlUGF0aCYmKGRlbGV0ZSBlLnBhdGgsZS5zb3VyY2VQYXRoPXRoaXMuc291cmNlUGF0aCksZX1fdG9TVkcoKXtjb25zdCB0PW5uKHRoaXMucGF0aCxvLk5VTV9GUkFDVElPTl9ESUdJVFMpO3JldHVybltcIjxwYXRoIFwiLFwiQ09NTU9OX1BBUlRTXCIsJ2Q9XCInLmNvbmNhdCh0LCdcIiBzdHJva2UtbGluZWNhcD1cInJvdW5kXCIgLz5cXG4nKV19X2dldE9mZnNldFRyYW5zZm9ybSgpe2NvbnN0IHQ9by5OVU1fRlJBQ1RJT05fRElHSVRTO3JldHVyblwiIHRyYW5zbGF0ZShcIi5jb25jYXQocXQoLXRoaXMucGF0aE9mZnNldC54LHQpLFwiLCBcIikuY29uY2F0KHF0KC10aGlzLnBhdGhPZmZzZXQueSx0KSxcIilcIil9dG9DbGlwUGF0aFNWRyh0KXtjb25zdCBlPXRoaXMuX2dldE9mZnNldFRyYW5zZm9ybSgpO3JldHVyblwiXFx0XCIrdGhpcy5fY3JlYXRlQmFzZUNsaXBQYXRoU1ZHTWFya3VwKHRoaXMuX3RvU1ZHKCkse3Jldml2ZXI6dCxhZGRpdGlvbmFsVHJhbnNmb3JtOmV9KX10b1NWRyh0KXtjb25zdCBlPXRoaXMuX2dldE9mZnNldFRyYW5zZm9ybSgpO3JldHVybiB0aGlzLl9jcmVhdGVCYXNlU1ZHTWFya3VwKHRoaXMuX3RvU1ZHKCkse3Jldml2ZXI6dCxhZGRpdGlvbmFsVHJhbnNmb3JtOmV9KX1jb21wbGV4aXR5KCl7cmV0dXJuIHRoaXMucGF0aC5sZW5ndGh9c2V0RGltZW5zaW9ucygpe3RoaXMuc2V0Qm91bmRpbmdCb3goKX1zZXRCb3VuZGluZ0JveCh0KXtjb25zdHt3aWR0aDplLGhlaWdodDpzLHBhdGhPZmZzZXQ6aX09dGhpcy5fY2FsY0RpbWVuc2lvbnMoKTt0aGlzLnNldCh7d2lkdGg6ZSxoZWlnaHQ6cyxwYXRoT2Zmc2V0Oml9KSx0JiZ0aGlzLnNldFBvc2l0aW9uQnlPcmlnaW4oaSxELEQpfV9jYWxjQm91bmRzRnJvbVBhdGgoKXtjb25zdCB0PVtdO2xldCBlPTAscz0wLGk9MCxyPTA7Zm9yKGNvbnN0IG4gb2YgdGhpcy5wYXRoKXN3aXRjaChuWzBdKXtjYXNlXCJMXCI6aT1uWzFdLHI9blsyXSx0LnB1c2goe3g6ZSx5OnN9LHt4OmkseTpyfSk7YnJlYWs7Y2FzZVwiTVwiOmk9blsxXSxyPW5bMl0sZT1pLHM9cjticmVhaztjYXNlXCJDXCI6dC5wdXNoKC4uLklyKGkscixuWzFdLG5bMl0sblszXSxuWzRdLG5bNV0sbls2XSkpLGk9bls1XSxyPW5bNl07YnJlYWs7Y2FzZVwiUVwiOnQucHVzaCguLi5JcihpLHIsblsxXSxuWzJdLG5bMV0sblsyXSxuWzNdLG5bNF0pKSxpPW5bM10scj1uWzRdO2JyZWFrO2Nhc2VcIlpcIjppPWUscj1zfXJldHVybiBtZSh0KX1fY2FsY0RpbWVuc2lvbnMoKXtjb25zdCB0PXRoaXMuX2NhbGNCb3VuZHNGcm9tUGF0aCgpO3JldHVybiBzKHMoe30sdCkse30se3BhdGhPZmZzZXQ6bmV3IG90KHQubGVmdCt0LndpZHRoLzIsdC50b3ArdC5oZWlnaHQvMil9KX1zdGF0aWMgZnJvbU9iamVjdCh0KXtyZXR1cm4gdGhpcy5fZnJvbU9iamVjdCh0LHtleHRyYVBhcmFtOlwicGF0aFwifSl9c3RhdGljIGFzeW5jIGZyb21FbGVtZW50KHQsZSxyKXtjb25zdCBuPXVyKHQsdGhpcy5BVFRSSUJVVEVfTkFNRVMscikse2Q6b309bjtyZXR1cm4gbmV3IHRoaXMobyxzKHMocyh7fSxpKG4sWW4pKSxlKSx7fSx7bGVmdDp2b2lkIDAsdG9wOnZvaWQgMH0pKX19dChXbixcInR5cGVcIixcIlBhdGhcIiksdChXbixcImNhY2hlUHJvcGVydGllc1wiLFsuLi5mcyxcInBhdGhcIixcImZpbGxSdWxlXCJdKSx0KFduLFwiQVRUUklCVVRFX05BTUVTXCIsWy4uLmppLFwiZFwiXSksdHQuc2V0Q2xhc3MoV24pLHR0LnNldFNWR0NsYXNzKFduKTtjbGFzcyBWbiBleHRlbmRzIEJue2NvbnN0cnVjdG9yKGUpe3N1cGVyKGUpLHQodGhpcyxcImRlY2ltYXRlXCIsLjQpLHQodGhpcyxcImRyYXdTdHJhaWdodExpbmVcIiwhMSksdCh0aGlzLFwic3RyYWlnaHRMaW5lS2V5XCIsXCJzaGlmdEtleVwiKSx0aGlzLl9wb2ludHM9W10sdGhpcy5faGFzU3RyYWlnaHRMaW5lPSExfW5lZWRzRnVsbFJlbmRlcigpe3JldHVybiBzdXBlci5uZWVkc0Z1bGxSZW5kZXIoKXx8dGhpcy5faGFzU3RyYWlnaHRMaW5lfXN0YXRpYyBkcmF3U2VnbWVudCh0LGUscyl7Y29uc3QgaT1lLm1pZFBvaW50RnJvbShzKTtyZXR1cm4gdC5xdWFkcmF0aWNDdXJ2ZVRvKGUueCxlLnksaS54LGkueSksaX1vbk1vdXNlRG93bih0LGUpe2xldHtlOnN9PWU7dGhpcy5jYW52YXMuX2lzTWFpbkV2ZW50KHMpJiYodGhpcy5kcmF3U3RyYWlnaHRMaW5lPSEhdGhpcy5zdHJhaWdodExpbmVLZXkmJnNbdGhpcy5zdHJhaWdodExpbmVLZXldLHRoaXMuX3ByZXBhcmVGb3JEcmF3aW5nKHQpLHRoaXMuX2FkZFBvaW50KHQpLHRoaXMuX3JlbmRlcigpKX1vbk1vdXNlTW92ZSh0LGUpe2xldHtlOnN9PWU7aWYodGhpcy5jYW52YXMuX2lzTWFpbkV2ZW50KHMpJiYodGhpcy5kcmF3U3RyYWlnaHRMaW5lPSEhdGhpcy5zdHJhaWdodExpbmVLZXkmJnNbdGhpcy5zdHJhaWdodExpbmVLZXldLCghMCE9PXRoaXMubGltaXRlZFRvQ2FudmFzU2l6ZXx8IXRoaXMuX2lzT3V0U2lkZUNhbnZhcyh0KSkmJnRoaXMuX2FkZFBvaW50KHQpJiZ0aGlzLl9wb2ludHMubGVuZ3RoPjEpKWlmKHRoaXMubmVlZHNGdWxsUmVuZGVyKCkpdGhpcy5jYW52YXMuY2xlYXJDb250ZXh0KHRoaXMuY2FudmFzLmNvbnRleHRUb3ApLHRoaXMuX3JlbmRlcigpO2Vsc2V7Y29uc3QgdD10aGlzLl9wb2ludHMsZT10Lmxlbmd0aCxzPXRoaXMuY2FudmFzLmNvbnRleHRUb3A7dGhpcy5fc2F2ZUFuZFRyYW5zZm9ybShzKSx0aGlzLm9sZEVuZCYmKHMuYmVnaW5QYXRoKCkscy5tb3ZlVG8odGhpcy5vbGRFbmQueCx0aGlzLm9sZEVuZC55KSksdGhpcy5vbGRFbmQ9Vm4uZHJhd1NlZ21lbnQocyx0W2UtMl0sdFtlLTFdKSxzLnN0cm9rZSgpLHMucmVzdG9yZSgpfX1vbk1vdXNlVXAodCl7bGV0e2U6ZX09dDtyZXR1cm4hdGhpcy5jYW52YXMuX2lzTWFpbkV2ZW50KGUpfHwodGhpcy5kcmF3U3RyYWlnaHRMaW5lPSExLHRoaXMub2xkRW5kPXZvaWQgMCx0aGlzLl9maW5hbGl6ZUFuZEFkZFBhdGgoKSwhMSl9X3ByZXBhcmVGb3JEcmF3aW5nKHQpe3RoaXMuX3Jlc2V0KCksdGhpcy5fYWRkUG9pbnQodCksdGhpcy5jYW52YXMuY29udGV4dFRvcC5tb3ZlVG8odC54LHQueSl9X2FkZFBvaW50KHQpe3JldHVybiEodGhpcy5fcG9pbnRzLmxlbmd0aD4xJiZ0LmVxKHRoaXMuX3BvaW50c1t0aGlzLl9wb2ludHMubGVuZ3RoLTFdKSkmJih0aGlzLmRyYXdTdHJhaWdodExpbmUmJnRoaXMuX3BvaW50cy5sZW5ndGg+MSYmKHRoaXMuX2hhc1N0cmFpZ2h0TGluZT0hMCx0aGlzLl9wb2ludHMucG9wKCkpLHRoaXMuX3BvaW50cy5wdXNoKHQpLCEwKX1fcmVzZXQoKXt0aGlzLl9wb2ludHM9W10sdGhpcy5fc2V0QnJ1c2hTdHlsZXModGhpcy5jYW52YXMuY29udGV4dFRvcCksdGhpcy5fc2V0U2hhZG93KCksdGhpcy5faGFzU3RyYWlnaHRMaW5lPSExfV9yZW5kZXIoKXtsZXQgdD1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06dGhpcy5jYW52YXMuY29udGV4dFRvcCxlPXRoaXMuX3BvaW50c1swXSxzPXRoaXMuX3BvaW50c1sxXTtpZih0aGlzLl9zYXZlQW5kVHJhbnNmb3JtKHQpLHQuYmVnaW5QYXRoKCksMj09PXRoaXMuX3BvaW50cy5sZW5ndGgmJmUueD09PXMueCYmZS55PT09cy55KXtjb25zdCB0PXRoaXMud2lkdGgvMWUzO2UueC09dCxzLngrPXR9dC5tb3ZlVG8oZS54LGUueSk7Zm9yKGxldCBpPTE7aTx0aGlzLl9wb2ludHMubGVuZ3RoO2krKylWbi5kcmF3U2VnbWVudCh0LGUscyksZT10aGlzLl9wb2ludHNbaV0scz10aGlzLl9wb2ludHNbaSsxXTt0LmxpbmVUbyhlLngsZS55KSx0LnN0cm9rZSgpLHQucmVzdG9yZSgpfWNvbnZlcnRQb2ludHNUb1NWR1BhdGgodCl7Y29uc3QgZT10aGlzLndpZHRoLzFlMztyZXR1cm4gcm4odCxlKX1jcmVhdGVQYXRoKHQpe2NvbnN0IGU9bmV3IFduKHQse2ZpbGw6bnVsbCxzdHJva2U6dGhpcy5jb2xvcixzdHJva2VXaWR0aDp0aGlzLndpZHRoLHN0cm9rZUxpbmVDYXA6dGhpcy5zdHJva2VMaW5lQ2FwLHN0cm9rZU1pdGVyTGltaXQ6dGhpcy5zdHJva2VNaXRlckxpbWl0LHN0cm9rZUxpbmVKb2luOnRoaXMuc3Ryb2tlTGluZUpvaW4sc3Ryb2tlRGFzaEFycmF5OnRoaXMuc3Ryb2tlRGFzaEFycmF5fSk7cmV0dXJuIHRoaXMuc2hhZG93JiYodGhpcy5zaGFkb3cuYWZmZWN0U3Ryb2tlPSEwLGUuc2hhZG93PW5ldyB1cyh0aGlzLnNoYWRvdykpLGV9ZGVjaW1hdGVQb2ludHModCxlKXtpZih0Lmxlbmd0aDw9MilyZXR1cm4gdDtsZXQgcyxpPXRbMF07Y29uc3Qgcj10aGlzLmNhbnZhcy5nZXRab29tKCksbj1NYXRoLnBvdyhlL3IsMiksbz10Lmxlbmd0aC0xLGE9W2ldO2ZvcihsZXQgZT0xO2U8by0xO2UrKylzPU1hdGgucG93KGkueC10W2VdLngsMikrTWF0aC5wb3coaS55LXRbZV0ueSwyKSxzPj1uJiYoaT10W2VdLGEucHVzaChpKSk7cmV0dXJuIGEucHVzaCh0W29dKSxhfV9maW5hbGl6ZUFuZEFkZFBhdGgoKXt0aGlzLmNhbnZhcy5jb250ZXh0VG9wLmNsb3NlUGF0aCgpLHRoaXMuZGVjaW1hdGUmJih0aGlzLl9wb2ludHM9dGhpcy5kZWNpbWF0ZVBvaW50cyh0aGlzLl9wb2ludHMsdGhpcy5kZWNpbWF0ZSkpO2NvbnN0IHQ9dGhpcy5jb252ZXJ0UG9pbnRzVG9TVkdQYXRoKHRoaXMuX3BvaW50cyk7aWYoZnVuY3Rpb24odCl7cmV0dXJuXCJNIDAgMCBRIDAgMCAwIDAgTCAwIDBcIj09PW5uKHQpfSh0KSlyZXR1cm4gdm9pZCB0aGlzLmNhbnZhcy5yZXF1ZXN0UmVuZGVyQWxsKCk7Y29uc3QgZT10aGlzLmNyZWF0ZVBhdGgodCk7dGhpcy5jYW52YXMuY2xlYXJDb250ZXh0KHRoaXMuY2FudmFzLmNvbnRleHRUb3ApLHRoaXMuY2FudmFzLmZpcmUoXCJiZWZvcmU6cGF0aDpjcmVhdGVkXCIse3BhdGg6ZX0pLHRoaXMuY2FudmFzLmFkZChlKSx0aGlzLmNhbnZhcy5yZXF1ZXN0UmVuZGVyQWxsKCksZS5zZXRDb29yZHMoKSx0aGlzLl9yZXNldFNoYWRvdygpLHRoaXMuY2FudmFzLmZpcmUoXCJwYXRoOmNyZWF0ZWRcIix7cGF0aDplfSl9fWNvbnN0IHpuPVtcImxlZnRcIixcInRvcFwiLFwicmFkaXVzXCJdLEhuPVtcInJhZGl1c1wiLFwic3RhcnRBbmdsZVwiLFwiZW5kQW5nbGVcIixcImNvdW50ZXJDbG9ja3dpc2VcIl07Y2xhc3MgR24gZXh0ZW5kcyB5aXtzdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gcyhzKHt9LHN1cGVyLmdldERlZmF1bHRzKCkpLEduLm93bkRlZmF1bHRzKX1jb25zdHJ1Y3Rvcih0KXtzdXBlcigpLE9iamVjdC5hc3NpZ24odGhpcyxHbi5vd25EZWZhdWx0cyksdGhpcy5zZXRPcHRpb25zKHQpfV9zZXQodCxlKXtyZXR1cm4gc3VwZXIuX3NldCh0LGUpLFwicmFkaXVzXCI9PT10JiZ0aGlzLnNldFJhZGl1cyhlKSx0aGlzfV9yZW5kZXIodCl7dC5iZWdpblBhdGgoKSx0LmFyYygwLDAsdGhpcy5yYWRpdXMsX3QodGhpcy5zdGFydEFuZ2xlKSxfdCh0aGlzLmVuZEFuZ2xlKSx0aGlzLmNvdW50ZXJDbG9ja3dpc2UpLHRoaXMuX3JlbmRlclBhaW50SW5PcmRlcih0KX1nZXRSYWRpdXNYKCl7cmV0dXJuIHRoaXMuZ2V0KFwicmFkaXVzXCIpKnRoaXMuZ2V0KEcpfWdldFJhZGl1c1koKXtyZXR1cm4gdGhpcy5nZXQoXCJyYWRpdXNcIikqdGhpcy5nZXQoTil9c2V0UmFkaXVzKHQpe3RoaXMucmFkaXVzPXQsdGhpcy5zZXQoe3dpZHRoOjIqdCxoZWlnaHQ6Mip0fSl9dG9PYmplY3QoKXtsZXQgdD1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06W107cmV0dXJuIHN1cGVyLnRvT2JqZWN0KFsuLi5IbiwuLi50XSl9X3RvU1ZHKCl7Y29uc3QgdD0odGhpcy5lbmRBbmdsZS10aGlzLnN0YXJ0QW5nbGUpJTM2MDtpZigwPT09dClyZXR1cm5bXCI8Y2lyY2xlIFwiLFwiQ09NTU9OX1BBUlRTXCIsJ2N4PVwiMFwiIGN5PVwiMFwiICcsJ3I9XCInLFwiXCIuY29uY2F0KHRoaXMucmFkaXVzKSwnXCIgLz5cXG4nXTt7Y29uc3R7cmFkaXVzOmV9PXRoaXMscz1fdCh0aGlzLnN0YXJ0QW5nbGUpLGk9X3QodGhpcy5lbmRBbmdsZSkscj1ydChzKSplLG49bnQocykqZSxvPXJ0KGkpKmUsYT1udChpKSplLGg9dD4xODA/MTowLGM9dGhpcy5jb3VudGVyQ2xvY2t3aXNlPzA6MTtyZXR1cm5bJzxwYXRoIGQ9XCJNICcuY29uY2F0KHIsXCIgXCIpLmNvbmNhdChuLFwiIEEgXCIpLmNvbmNhdChlLFwiIFwiKS5jb25jYXQoZSxcIiAwIFwiKS5jb25jYXQoaCxcIiBcIikuY29uY2F0KGMsXCIgXCIpLmNvbmNhdChvLFwiIFwiKS5jb25jYXQoYSwnXCIgJyksXCJDT01NT05fUEFSVFNcIixcIiAvPlxcblwiXX19c3RhdGljIGFzeW5jIGZyb21FbGVtZW50KHQsZSxyKXtjb25zdCBuPXVyKHQsdGhpcy5BVFRSSUJVVEVfTkFNRVMscikse2xlZnQ6bz0wLHRvcDphPTAscmFkaXVzOmg9MH09bjtyZXR1cm4gbmV3IHRoaXMocyhzKHt9LGkobix6bikpLHt9LHtyYWRpdXM6aCxsZWZ0Om8taCx0b3A6YS1ofSkpfXN0YXRpYyBmcm9tT2JqZWN0KHQpe3JldHVybiBzdXBlci5fZnJvbU9iamVjdCh0KX19dChHbixcInR5cGVcIixcIkNpcmNsZVwiKSx0KEduLFwiY2FjaGVQcm9wZXJ0aWVzXCIsWy4uLmZzLC4uLkhuXSksdChHbixcIm93bkRlZmF1bHRzXCIse3JhZGl1czowLHN0YXJ0QW5nbGU6MCxlbmRBbmdsZTozNjAsY291bnRlckNsb2Nrd2lzZTohMX0pLHQoR24sXCJBVFRSSUJVVEVfTkFNRVNcIixbXCJjeFwiLFwiY3lcIixcInJcIiwuLi5qaV0pLHR0LnNldENsYXNzKEduKSx0dC5zZXRTVkdDbGFzcyhHbik7Y2xhc3MgTm4gZXh0ZW5kcyBCbntjb25zdHJ1Y3RvcihlKXtzdXBlcihlKSx0KHRoaXMsXCJ3aWR0aFwiLDEwKSx0aGlzLnBvaW50cz1bXX1kcmF3RG90KHQpe2NvbnN0IGU9dGhpcy5hZGRQb2ludCh0KSxzPXRoaXMuY2FudmFzLmNvbnRleHRUb3A7dGhpcy5fc2F2ZUFuZFRyYW5zZm9ybShzKSx0aGlzLmRvdChzLGUpLHMucmVzdG9yZSgpfWRvdCh0LGUpe3QuZmlsbFN0eWxlPWUuZmlsbCx0LmJlZ2luUGF0aCgpLHQuYXJjKGUueCxlLnksZS5yYWRpdXMsMCwyKk1hdGguUEksITEpLHQuY2xvc2VQYXRoKCksdC5maWxsKCl9b25Nb3VzZURvd24odCl7dGhpcy5wb2ludHM9W10sdGhpcy5jYW52YXMuY2xlYXJDb250ZXh0KHRoaXMuY2FudmFzLmNvbnRleHRUb3ApLHRoaXMuX3NldFNoYWRvdygpLHRoaXMuZHJhd0RvdCh0KX1fcmVuZGVyKCl7Y29uc3QgdD10aGlzLmNhbnZhcy5jb250ZXh0VG9wLGU9dGhpcy5wb2ludHM7dGhpcy5fc2F2ZUFuZFRyYW5zZm9ybSh0KTtmb3IobGV0IHM9MDtzPGUubGVuZ3RoO3MrKyl0aGlzLmRvdCh0LGVbc10pO3QucmVzdG9yZSgpfW9uTW91c2VNb3ZlKHQpeyEwPT09dGhpcy5saW1pdGVkVG9DYW52YXNTaXplJiZ0aGlzLl9pc091dFNpZGVDYW52YXModCl8fCh0aGlzLm5lZWRzRnVsbFJlbmRlcigpPyh0aGlzLmNhbnZhcy5jbGVhckNvbnRleHQodGhpcy5jYW52YXMuY29udGV4dFRvcCksdGhpcy5hZGRQb2ludCh0KSx0aGlzLl9yZW5kZXIoKSk6dGhpcy5kcmF3RG90KHQpKX1vbk1vdXNlVXAoKXtjb25zdCB0PXRoaXMuY2FudmFzLnJlbmRlck9uQWRkUmVtb3ZlO3RoaXMuY2FudmFzLnJlbmRlck9uQWRkUmVtb3ZlPSExO2NvbnN0IGU9W107Zm9yKGxldCB0PTA7dDx0aGlzLnBvaW50cy5sZW5ndGg7dCsrKXtjb25zdCBzPXRoaXMucG9pbnRzW3RdLGk9bmV3IEduKHtyYWRpdXM6cy5yYWRpdXMsbGVmdDpzLngsdG9wOnMueSxvcmlnaW5YOkQsb3JpZ2luWTpELGZpbGw6cy5maWxsfSk7dGhpcy5zaGFkb3cmJihpLnNoYWRvdz1uZXcgdXModGhpcy5zaGFkb3cpKSxlLnB1c2goaSl9Y29uc3Qgcz1uZXcgRHIoZSx7Y2FudmFzOnRoaXMuY2FudmFzfSk7dGhpcy5jYW52YXMuZmlyZShcImJlZm9yZTpwYXRoOmNyZWF0ZWRcIix7cGF0aDpzfSksdGhpcy5jYW52YXMuYWRkKHMpLHRoaXMuY2FudmFzLmZpcmUoXCJwYXRoOmNyZWF0ZWRcIix7cGF0aDpzfSksdGhpcy5jYW52YXMuY2xlYXJDb250ZXh0KHRoaXMuY2FudmFzLmNvbnRleHRUb3ApLHRoaXMuX3Jlc2V0U2hhZG93KCksdGhpcy5jYW52YXMucmVuZGVyT25BZGRSZW1vdmU9dCx0aGlzLmNhbnZhcy5yZXF1ZXN0UmVuZGVyQWxsKCl9YWRkUG9pbnQodCl7bGV0e3g6ZSx5OnN9PXQ7Y29uc3QgaT17eDplLHk6cyxyYWRpdXM6YW4oTWF0aC5tYXgoMCx0aGlzLndpZHRoLTIwKSx0aGlzLndpZHRoKzIwKS8yLGZpbGw6bmV3IFV0KHRoaXMuY29sb3IpLnNldEFscGhhKGFuKDAsMTAwKS8xMDApLnRvUmdiYSgpfTtyZXR1cm4gdGhpcy5wb2ludHMucHVzaChpKSxpfX1jbGFzcyBVbiBleHRlbmRzIEJue2NvbnN0cnVjdG9yKGUpe3N1cGVyKGUpLHQodGhpcyxcIndpZHRoXCIsMTApLHQodGhpcyxcImRlbnNpdHlcIiwyMCksdCh0aGlzLFwiZG90V2lkdGhcIiwxKSx0KHRoaXMsXCJkb3RXaWR0aFZhcmlhbmNlXCIsMSksdCh0aGlzLFwicmFuZG9tT3BhY2l0eVwiLCExKSx0KHRoaXMsXCJvcHRpbWl6ZU92ZXJsYXBwaW5nXCIsITApLHRoaXMuc3ByYXlDaHVua3M9W10sdGhpcy5zcHJheUNodW5rPVtdfW9uTW91c2VEb3duKHQpe3RoaXMuc3ByYXlDaHVua3M9W10sdGhpcy5jYW52YXMuY2xlYXJDb250ZXh0KHRoaXMuY2FudmFzLmNvbnRleHRUb3ApLHRoaXMuX3NldFNoYWRvdygpLHRoaXMuYWRkU3ByYXlDaHVuayh0KSx0aGlzLnJlbmRlckNodW5jayh0aGlzLnNwcmF5Q2h1bmspfW9uTW91c2VNb3ZlKHQpeyEwPT09dGhpcy5saW1pdGVkVG9DYW52YXNTaXplJiZ0aGlzLl9pc091dFNpZGVDYW52YXModCl8fCh0aGlzLmFkZFNwcmF5Q2h1bmsodCksdGhpcy5yZW5kZXJDaHVuY2sodGhpcy5zcHJheUNodW5rKSl9b25Nb3VzZVVwKCl7Y29uc3QgdD10aGlzLmNhbnZhcy5yZW5kZXJPbkFkZFJlbW92ZTt0aGlzLmNhbnZhcy5yZW5kZXJPbkFkZFJlbW92ZT0hMTtjb25zdCBlPVtdO2ZvcihsZXQgdD0wO3Q8dGhpcy5zcHJheUNodW5rcy5sZW5ndGg7dCsrKXtjb25zdCBzPXRoaXMuc3ByYXlDaHVua3NbdF07Zm9yKGxldCB0PTA7dDxzLmxlbmd0aDt0Kyspe2NvbnN0IGk9c1t0XSxyPW5ldyBmcih7d2lkdGg6aS53aWR0aCxoZWlnaHQ6aS53aWR0aCxsZWZ0OmkueCsxLHRvcDppLnkrMSxvcmlnaW5YOkQsb3JpZ2luWTpELGZpbGw6dGhpcy5jb2xvcn0pO2UucHVzaChyKX19Y29uc3Qgcz1uZXcgRHIodGhpcy5vcHRpbWl6ZU92ZXJsYXBwaW5nP2Z1bmN0aW9uKHQpe2NvbnN0IGU9e30scz1bXTtmb3IobGV0IGkscj0wO3I8dC5sZW5ndGg7cisrKWk9XCJcIi5jb25jYXQodFtyXS5sZWZ0KS5jb25jYXQodFtyXS50b3ApLGVbaV18fChlW2ldPSEwLHMucHVzaCh0W3JdKSk7cmV0dXJuIHN9KGUpOmUse29iamVjdENhY2hpbmc6ITAsc3ViVGFyZ2V0Q2hlY2s6ITEsaW50ZXJhY3RpdmU6ITF9KTt0aGlzLnNoYWRvdyYmcy5zZXQoXCJzaGFkb3dcIixuZXcgdXModGhpcy5zaGFkb3cpKSx0aGlzLmNhbnZhcy5maXJlKFwiYmVmb3JlOnBhdGg6Y3JlYXRlZFwiLHtwYXRoOnN9KSx0aGlzLmNhbnZhcy5hZGQocyksdGhpcy5jYW52YXMuZmlyZShcInBhdGg6Y3JlYXRlZFwiLHtwYXRoOnN9KSx0aGlzLmNhbnZhcy5jbGVhckNvbnRleHQodGhpcy5jYW52YXMuY29udGV4dFRvcCksdGhpcy5fcmVzZXRTaGFkb3coKSx0aGlzLmNhbnZhcy5yZW5kZXJPbkFkZFJlbW92ZT10LHRoaXMuY2FudmFzLnJlcXVlc3RSZW5kZXJBbGwoKX1yZW5kZXJDaHVuY2sodCl7Y29uc3QgZT10aGlzLmNhbnZhcy5jb250ZXh0VG9wO2UuZmlsbFN0eWxlPXRoaXMuY29sb3IsdGhpcy5fc2F2ZUFuZFRyYW5zZm9ybShlKTtmb3IobGV0IHM9MDtzPHQubGVuZ3RoO3MrKyl7Y29uc3QgaT10W3NdO2UuZ2xvYmFsQWxwaGE9aS5vcGFjaXR5LGUuZmlsbFJlY3QoaS54LGkueSxpLndpZHRoLGkud2lkdGgpfWUucmVzdG9yZSgpfV9yZW5kZXIoKXtjb25zdCB0PXRoaXMuY2FudmFzLmNvbnRleHRUb3A7dC5maWxsU3R5bGU9dGhpcy5jb2xvcix0aGlzLl9zYXZlQW5kVHJhbnNmb3JtKHQpO2ZvcihsZXQgdD0wO3Q8dGhpcy5zcHJheUNodW5rcy5sZW5ndGg7dCsrKXRoaXMucmVuZGVyQ2h1bmNrKHRoaXMuc3ByYXlDaHVua3NbdF0pO3QucmVzdG9yZSgpfWFkZFNwcmF5Q2h1bmsodCl7dGhpcy5zcHJheUNodW5rPVtdO2NvbnN0IGU9dGhpcy53aWR0aC8yO2ZvcihsZXQgcz0wO3M8dGhpcy5kZW5zaXR5O3MrKyl0aGlzLnNwcmF5Q2h1bmsucHVzaCh7eDphbih0LngtZSx0LngrZSkseTphbih0LnktZSx0LnkrZSksd2lkdGg6dGhpcy5kb3RXaWR0aFZhcmlhbmNlP2FuKE1hdGgubWF4KDEsdGhpcy5kb3RXaWR0aC10aGlzLmRvdFdpZHRoVmFyaWFuY2UpLHRoaXMuZG90V2lkdGgrdGhpcy5kb3RXaWR0aFZhcmlhbmNlKTp0aGlzLmRvdFdpZHRoLG9wYWNpdHk6dGhpcy5yYW5kb21PcGFjaXR5P2FuKDAsMTAwKS8xMDA6MX0pO3RoaXMuc3ByYXlDaHVua3MucHVzaCh0aGlzLnNwcmF5Q2h1bmspfX1jbGFzcyBxbiBleHRlbmRzIFZue2NvbnN0cnVjdG9yKHQpe3N1cGVyKHQpfWdldFBhdHRlcm5TcmMoKXtjb25zdCB0PXB0KCksZT10LmdldENvbnRleHQoXCIyZFwiKTtyZXR1cm4gdC53aWR0aD10LmhlaWdodD0yNSxlJiYoZS5maWxsU3R5bGU9dGhpcy5jb2xvcixlLmJlZ2luUGF0aCgpLGUuYXJjKDEwLDEwLDEwLDAsMipNYXRoLlBJLCExKSxlLmNsb3NlUGF0aCgpLGUuZmlsbCgpKSx0fWdldFBhdHRlcm4odCl7cmV0dXJuIHQuY3JlYXRlUGF0dGVybih0aGlzLnNvdXJjZXx8dGhpcy5nZXRQYXR0ZXJuU3JjKCksXCJyZXBlYXRcIil9X3NldEJydXNoU3R5bGVzKHQpe3N1cGVyLl9zZXRCcnVzaFN0eWxlcyh0KTtjb25zdCBlPXRoaXMuZ2V0UGF0dGVybih0KTtlJiYodC5zdHJva2VTdHlsZT1lKX1jcmVhdGVQYXRoKHQpe2NvbnN0IGU9c3VwZXIuY3JlYXRlUGF0aCh0KSxzPWUuX2dldExlZnRUb3BDb29yZHMoKS5zY2FsYXJBZGQoZS5zdHJva2VXaWR0aC8yKTtyZXR1cm4gZS5zdHJva2U9bmV3IEluKHtzb3VyY2U6dGhpcy5zb3VyY2V8fHRoaXMuZ2V0UGF0dGVyblNyYygpLG9mZnNldFg6LXMueCxvZmZzZXRZOi1zLnl9KSxlfX1jb25zdCBLbj1bXCJ4MVwiLFwieTFcIixcIngyXCIsXCJ5MlwiXSxKbj1bXCJ4MVwiLFwieTFcIixcIngyXCIsXCJ5MlwiXSxRbj1bXCJ4MVwiLFwieDJcIixcInkxXCIsXCJ5MlwiXTtjbGFzcyBabiBleHRlbmRzIHlpe2NvbnN0cnVjdG9yKCl7bGV0W3QsZSxzLGldPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTpbMCwwLDAsMF0scj1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06e307c3VwZXIoKSxPYmplY3QuYXNzaWduKHRoaXMsWm4ub3duRGVmYXVsdHMpLHRoaXMuc2V0T3B0aW9ucyhyKSx0aGlzLngxPXQsdGhpcy54Mj1zLHRoaXMueTE9ZSx0aGlzLnkyPWksdGhpcy5fc2V0V2lkdGhIZWlnaHQoKTtjb25zdHtsZWZ0Om4sdG9wOm99PXI7XCJudW1iZXJcIj09dHlwZW9mIG4mJnRoaXMuc2V0KE0sbiksXCJudW1iZXJcIj09dHlwZW9mIG8mJnRoaXMuc2V0KFAsbyl9X3NldFdpZHRoSGVpZ2h0KCl7Y29uc3R7eDE6dCx5MTplLHgyOnMseTI6aX09dGhpczt0aGlzLndpZHRoPU1hdGguYWJzKHMtdCksdGhpcy5oZWlnaHQ9TWF0aC5hYnMoaS1lKTtjb25zdHtsZWZ0OnIsdG9wOm4sd2lkdGg6byxoZWlnaHQ6YX09bWUoW3t4OnQseTplfSx7eDpzLHk6aX1dKSxoPW5ldyBvdChyK28vMixuK2EvMik7dGhpcy5zZXRQb3NpdGlvbkJ5T3JpZ2luKGgsRCxEKX1fc2V0KHQsZSl7cmV0dXJuIHN1cGVyLl9zZXQodCxlKSxRbi5pbmNsdWRlcyh0KSYmdGhpcy5fc2V0V2lkdGhIZWlnaHQoKSx0aGlzfV9yZW5kZXIodCl7dC5iZWdpblBhdGgoKTtjb25zdCBlPXRoaXMuY2FsY0xpbmVQb2ludHMoKTt0Lm1vdmVUbyhlLngxLGUueTEpLHQubGluZVRvKGUueDIsZS55MiksdC5saW5lV2lkdGg9dGhpcy5zdHJva2VXaWR0aDtjb25zdCBzPXQuc3Ryb2tlU3R5bGU7dmFyIGk7JHQodGhpcy5zdHJva2UpP3Quc3Ryb2tlU3R5bGU9dGhpcy5zdHJva2UudG9MaXZlKHQpOnQuc3Ryb2tlU3R5bGU9bnVsbCE9PShpPXRoaXMuc3Ryb2tlKSYmdm9pZCAwIT09aT9pOnQuZmlsbFN0eWxlO3RoaXMuc3Ryb2tlJiZ0aGlzLl9yZW5kZXJTdHJva2UodCksdC5zdHJva2VTdHlsZT1zfV9maW5kQ2VudGVyRnJvbUVsZW1lbnQoKXtyZXR1cm4gbmV3IG90KCh0aGlzLngxK3RoaXMueDIpLzIsKHRoaXMueTErdGhpcy55MikvMil9dG9PYmplY3QoKXtsZXQgdD1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06W107cmV0dXJuIHMocyh7fSxzdXBlci50b09iamVjdCh0KSksdGhpcy5jYWxjTGluZVBvaW50cygpKX1fZ2V0Tm9uVHJhbnNmb3JtZWREaW1lbnNpb25zKCl7Y29uc3QgdD1zdXBlci5fZ2V0Tm9uVHJhbnNmb3JtZWREaW1lbnNpb25zKCk7cmV0dXJuXCJidXR0XCI9PT10aGlzLnN0cm9rZUxpbmVDYXAmJigwPT09dGhpcy53aWR0aCYmKHQueS09dGhpcy5zdHJva2VXaWR0aCksMD09PXRoaXMuaGVpZ2h0JiYodC54LT10aGlzLnN0cm9rZVdpZHRoKSksdH1jYWxjTGluZVBvaW50cygpe2NvbnN0e3gxOnQseDI6ZSx5MTpzLHkyOmksd2lkdGg6cixoZWlnaHQ6bn09dGhpcyxvPXQ8PWU/LTE6MSxhPXM8PWk/LTE6MTtyZXR1cm57eDE6bypyLzIseDI6byotci8yLHkxOmEqbi8yLHkyOmEqLW4vMn19X3RvU1ZHKCl7Y29uc3R7eDE6dCx4MjplLHkxOnMseTI6aX09dGhpcy5jYWxjTGluZVBvaW50cygpO3JldHVybltcIjxsaW5lIFwiLFwiQ09NTU9OX1BBUlRTXCIsJ3gxPVwiJy5jb25jYXQodCwnXCIgeTE9XCInKS5jb25jYXQocywnXCIgeDI9XCInKS5jb25jYXQoZSwnXCIgeTI9XCInKS5jb25jYXQoaSwnXCIgLz5cXG4nKV19c3RhdGljIGFzeW5jIGZyb21FbGVtZW50KHQsZSxzKXtjb25zdCByPXVyKHQsdGhpcy5BVFRSSUJVVEVfTkFNRVMscykse3gxOm49MCx5MTpvPTAseDI6YT0wLHkyOmg9MH09cjtyZXR1cm4gbmV3IHRoaXMoW24sbyxhLGhdLGkocixLbikpfXN0YXRpYyBmcm9tT2JqZWN0KHQpe2xldHt4MTplLHkxOnIseDI6bix5MjpvfT10LGE9aSh0LEpuKTtyZXR1cm4gdGhpcy5fZnJvbU9iamVjdChzKHMoe30sYSkse30se3BvaW50czpbZSxyLG4sb119KSx7ZXh0cmFQYXJhbTpcInBvaW50c1wifSl9fXQoWm4sXCJ0eXBlXCIsXCJMaW5lXCIpLHQoWm4sXCJjYWNoZVByb3BlcnRpZXNcIixbLi4uZnMsLi4uUW5dKSx0KFpuLFwiQVRUUklCVVRFX05BTUVTXCIsamkuY29uY2F0KFFuKSksdHQuc2V0Q2xhc3MoWm4pLHR0LnNldFNWR0NsYXNzKFpuKTtjbGFzcyAkbiBleHRlbmRzIHlpe3N0YXRpYyBnZXREZWZhdWx0cygpe3JldHVybiBzKHMoe30sc3VwZXIuZ2V0RGVmYXVsdHMoKSksJG4ub3duRGVmYXVsdHMpfWNvbnN0cnVjdG9yKHQpe3N1cGVyKCksT2JqZWN0LmFzc2lnbih0aGlzLCRuLm93bkRlZmF1bHRzKSx0aGlzLnNldE9wdGlvbnModCl9X3JlbmRlcih0KXtjb25zdCBlPXRoaXMud2lkdGgvMixzPXRoaXMuaGVpZ2h0LzI7dC5iZWdpblBhdGgoKSx0Lm1vdmVUbygtZSxzKSx0LmxpbmVUbygwLC1zKSx0LmxpbmVUbyhlLHMpLHQuY2xvc2VQYXRoKCksdGhpcy5fcmVuZGVyUGFpbnRJbk9yZGVyKHQpfV90b1NWRygpe2NvbnN0IHQ9dGhpcy53aWR0aC8yLGU9dGhpcy5oZWlnaHQvMjtyZXR1cm5bXCI8cG9seWdvbiBcIixcIkNPTU1PTl9QQVJUU1wiLCdwb2ludHM9XCInLFwiXCIuY29uY2F0KC10LFwiIFwiKS5jb25jYXQoZSxcIiwwIFwiKS5jb25jYXQoLWUsXCIsXCIpLmNvbmNhdCh0LFwiIFwiKS5jb25jYXQoZSksJ1wiIC8+J119fXQoJG4sXCJ0eXBlXCIsXCJUcmlhbmdsZVwiKSx0KCRuLFwib3duRGVmYXVsdHNcIix7d2lkdGg6MTAwLGhlaWdodDoxMDB9KSx0dC5zZXRDbGFzcygkbiksdHQuc2V0U1ZHQ2xhc3MoJG4pO2NvbnN0IHRvPVtcInJ4XCIsXCJyeVwiXTtjbGFzcyBlbyBleHRlbmRzIHlpe3N0YXRpYyBnZXREZWZhdWx0cygpe3JldHVybiBzKHMoe30sc3VwZXIuZ2V0RGVmYXVsdHMoKSksZW8ub3duRGVmYXVsdHMpfWNvbnN0cnVjdG9yKHQpe3N1cGVyKCksT2JqZWN0LmFzc2lnbih0aGlzLGVvLm93bkRlZmF1bHRzKSx0aGlzLnNldE9wdGlvbnModCl9X3NldCh0LGUpe3N3aXRjaChzdXBlci5fc2V0KHQsZSksdCl7Y2FzZVwicnhcIjp0aGlzLnJ4PWUsdGhpcy5zZXQoXCJ3aWR0aFwiLDIqZSk7YnJlYWs7Y2FzZVwicnlcIjp0aGlzLnJ5PWUsdGhpcy5zZXQoXCJoZWlnaHRcIiwyKmUpfXJldHVybiB0aGlzfWdldFJ4KCl7cmV0dXJuIHRoaXMuZ2V0KFwicnhcIikqdGhpcy5nZXQoRyl9Z2V0UnkoKXtyZXR1cm4gdGhpcy5nZXQoXCJyeVwiKSp0aGlzLmdldChOKX10b09iamVjdCgpe2xldCB0PWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTpbXTtyZXR1cm4gc3VwZXIudG9PYmplY3QoWy4uLnRvLC4uLnRdKX1fdG9TVkcoKXtyZXR1cm5bXCI8ZWxsaXBzZSBcIixcIkNPTU1PTl9QQVJUU1wiLCdjeD1cIjBcIiBjeT1cIjBcIiByeD1cIicuY29uY2F0KHRoaXMucngsJ1wiIHJ5PVwiJykuY29uY2F0KHRoaXMucnksJ1wiIC8+XFxuJyldfV9yZW5kZXIodCl7dC5iZWdpblBhdGgoKSx0LnNhdmUoKSx0LnRyYW5zZm9ybSgxLDAsMCx0aGlzLnJ5L3RoaXMucngsMCwwKSx0LmFyYygwLDAsdGhpcy5yeCwwLHcsITEpLHQucmVzdG9yZSgpLHRoaXMuX3JlbmRlclBhaW50SW5PcmRlcih0KX1zdGF0aWMgYXN5bmMgZnJvbUVsZW1lbnQodCxlLHMpe2NvbnN0IGk9dXIodCx0aGlzLkFUVFJJQlVURV9OQU1FUyxzKTtyZXR1cm4gaS5sZWZ0PShpLmxlZnR8fDApLWkucngsaS50b3A9KGkudG9wfHwwKS1pLnJ5LG5ldyB0aGlzKGkpfX1mdW5jdGlvbiBzbyh0KXtpZighdClyZXR1cm5bXTtjb25zdCBlPXQucmVwbGFjZSgvLC9nLFwiIFwiKS50cmltKCkuc3BsaXQoL1xccysvKSxzPVtdO2ZvcihsZXQgdD0wO3Q8ZS5sZW5ndGg7dCs9MilzLnB1c2goe3g6cGFyc2VGbG9hdChlW3RdKSx5OnBhcnNlRmxvYXQoZVt0KzFdKX0pO3JldHVybiBzfXQoZW8sXCJ0eXBlXCIsXCJFbGxpcHNlXCIpLHQoZW8sXCJjYWNoZVByb3BlcnRpZXNcIixbLi4uZnMsLi4udG9dKSx0KGVvLFwib3duRGVmYXVsdHNcIix7cng6MCxyeTowfSksdChlbyxcIkFUVFJJQlVURV9OQU1FU1wiLFsuLi5qaSxcImN4XCIsXCJjeVwiLFwicnhcIixcInJ5XCJdKSx0dC5zZXRDbGFzcyhlbyksdHQuc2V0U1ZHQ2xhc3MoZW8pO2NvbnN0IGlvPVtcImxlZnRcIixcInRvcFwiXSxybz17ZXhhY3RCb3VuZGluZ0JveDohMX07Y2xhc3Mgbm8gZXh0ZW5kcyB5aXtzdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gcyhzKHt9LHN1cGVyLmdldERlZmF1bHRzKCkpLG5vLm93bkRlZmF1bHRzKX1jb25zdHJ1Y3Rvcigpe2xldCBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTpbXSxzPWFyZ3VtZW50cy5sZW5ndGg+MSYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXTp7fTtzdXBlcigpLHQodGhpcyxcInN0cm9rZURpZmZcIix2b2lkIDApLE9iamVjdC5hc3NpZ24odGhpcyxuby5vd25EZWZhdWx0cyksdGhpcy5zZXRPcHRpb25zKHMpLHRoaXMucG9pbnRzPWU7Y29uc3R7bGVmdDppLHRvcDpyfT1zO3RoaXMuaW5pdGlhbGl6ZWQ9ITAsdGhpcy5zZXRCb3VuZGluZ0JveCghMCksXCJudW1iZXJcIj09dHlwZW9mIGkmJnRoaXMuc2V0KE0saSksXCJudW1iZXJcIj09dHlwZW9mIHImJnRoaXMuc2V0KFAscil9aXNPcGVuKCl7cmV0dXJuITB9X3Byb2plY3RTdHJva2VPblBvaW50cyh0KXtyZXR1cm4gU2kodGhpcy5wb2ludHMsdCx0aGlzLmlzT3BlbigpKX1fY2FsY0RpbWVuc2lvbnModCl7dD1zKHtzY2FsZVg6dGhpcy5zY2FsZVgsc2NhbGVZOnRoaXMuc2NhbGVZLHNrZXdYOnRoaXMuc2tld1gsc2tld1k6dGhpcy5za2V3WSxzdHJva2VMaW5lQ2FwOnRoaXMuc3Ryb2tlTGluZUNhcCxzdHJva2VMaW5lSm9pbjp0aGlzLnN0cm9rZUxpbmVKb2luLHN0cm9rZU1pdGVyTGltaXQ6dGhpcy5zdHJva2VNaXRlckxpbWl0LHN0cm9rZVVuaWZvcm06dGhpcy5zdHJva2VVbmlmb3JtLHN0cm9rZVdpZHRoOnRoaXMuc3Ryb2tlV2lkdGh9LHR8fHt9KTtjb25zdCBlPXRoaXMuZXhhY3RCb3VuZGluZ0JveD90aGlzLl9wcm9qZWN0U3Ryb2tlT25Qb2ludHModCkubWFwKCh0PT50LnByb2plY3RlZFBvaW50KSk6dGhpcy5wb2ludHM7aWYoMD09PWUubGVuZ3RoKXJldHVybntsZWZ0OjAsdG9wOjAsd2lkdGg6MCxoZWlnaHQ6MCxwYXRoT2Zmc2V0Om5ldyBvdCxzdHJva2VPZmZzZXQ6bmV3IG90LHN0cm9rZURpZmY6bmV3IG90fTtjb25zdCBpPW1lKGUpLHI9RnQocyhzKHt9LHQpLHt9LHtzY2FsZVg6MSxzY2FsZVk6MX0pKSxuPW1lKHRoaXMucG9pbnRzLm1hcCgodD0+YnQodCxyLCEwKSkpKSxvPW5ldyBvdCh0aGlzLnNjYWxlWCx0aGlzLnNjYWxlWSk7bGV0IGE9aS5sZWZ0K2kud2lkdGgvMixoPWkudG9wK2kuaGVpZ2h0LzI7cmV0dXJuIHRoaXMuZXhhY3RCb3VuZGluZ0JveCYmKGEtPWgqTWF0aC50YW4oX3QodGhpcy5za2V3WCkpLGgtPWEqTWF0aC50YW4oX3QodGhpcy5za2V3WSkpKSxzKHMoe30saSkse30se3BhdGhPZmZzZXQ6bmV3IG90KGEsaCksc3Ryb2tlT2Zmc2V0Om5ldyBvdChuLmxlZnQsbi50b3ApLnN1YnRyYWN0KG5ldyBvdChpLmxlZnQsaS50b3ApKS5tdWx0aXBseShvKSxzdHJva2VEaWZmOm5ldyBvdChpLndpZHRoLGkuaGVpZ2h0KS5zdWJ0cmFjdChuZXcgb3Qobi53aWR0aCxuLmhlaWdodCkpLm11bHRpcGx5KG8pfSl9X2ZpbmRDZW50ZXJGcm9tRWxlbWVudCgpe2NvbnN0IHQ9bWUodGhpcy5wb2ludHMpO3JldHVybiBuZXcgb3QodC5sZWZ0K3Qud2lkdGgvMix0LnRvcCt0LmhlaWdodC8yKX1zZXREaW1lbnNpb25zKCl7dGhpcy5zZXRCb3VuZGluZ0JveCgpfXNldEJvdW5kaW5nQm94KHQpe2NvbnN0e2xlZnQ6ZSx0b3A6cyx3aWR0aDppLGhlaWdodDpyLHBhdGhPZmZzZXQ6bixzdHJva2VPZmZzZXQ6byxzdHJva2VEaWZmOmF9PXRoaXMuX2NhbGNEaW1lbnNpb25zKCk7dGhpcy5zZXQoe3dpZHRoOmksaGVpZ2h0OnIscGF0aE9mZnNldDpuLHN0cm9rZU9mZnNldDpvLHN0cm9rZURpZmY6YX0pLHQmJnRoaXMuc2V0UG9zaXRpb25CeU9yaWdpbihuZXcgb3QoZStpLzIscytyLzIpLEQsRCl9aXNTdHJva2VBY2NvdW50ZWRGb3JJbkRpbWVuc2lvbnMoKXtyZXR1cm4gdGhpcy5leGFjdEJvdW5kaW5nQm94fV9nZXROb25UcmFuc2Zvcm1lZERpbWVuc2lvbnMoKXtyZXR1cm4gdGhpcy5leGFjdEJvdW5kaW5nQm94P25ldyBvdCh0aGlzLndpZHRoLHRoaXMuaGVpZ2h0KTpzdXBlci5fZ2V0Tm9uVHJhbnNmb3JtZWREaW1lbnNpb25zKCl9X2dldFRyYW5zZm9ybWVkRGltZW5zaW9ucygpe2xldCB0PWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fTtpZih0aGlzLmV4YWN0Qm91bmRpbmdCb3gpe2xldCBuO2lmKE9iamVjdC5rZXlzKHQpLnNvbWUoKHQ9PnRoaXMuc3Ryb2tlVW5pZm9ybXx8dGhpcy5jb25zdHJ1Y3Rvci5sYXlvdXRQcm9wZXJ0aWVzLmluY2x1ZGVzKHQpKSkpe3ZhciBlLHM7Y29uc3R7d2lkdGg6aSxoZWlnaHQ6cn09dGhpcy5fY2FsY0RpbWVuc2lvbnModCk7bj1uZXcgb3QobnVsbCE9PShlPXQud2lkdGgpJiZ2b2lkIDAhPT1lP2U6aSxudWxsIT09KHM9dC5oZWlnaHQpJiZ2b2lkIDAhPT1zP3M6cil9ZWxzZXt2YXIgaSxyO249bmV3IG90KG51bGwhPT0oaT10LndpZHRoKSYmdm9pZCAwIT09aT9pOnRoaXMud2lkdGgsbnVsbCE9PShyPXQuaGVpZ2h0KSYmdm9pZCAwIT09cj9yOnRoaXMuaGVpZ2h0KX1yZXR1cm4gbi5tdWx0aXBseShuZXcgb3QodC5zY2FsZVh8fHRoaXMuc2NhbGVYLHQuc2NhbGVZfHx0aGlzLnNjYWxlWSkpfXJldHVybiBzdXBlci5fZ2V0VHJhbnNmb3JtZWREaW1lbnNpb25zKHQpfV9zZXQodCxlKXtjb25zdCBzPXRoaXMuaW5pdGlhbGl6ZWQmJnRoaXNbdF0hPT1lLGk9c3VwZXIuX3NldCh0LGUpO3JldHVybiB0aGlzLmV4YWN0Qm91bmRpbmdCb3gmJnMmJigodD09PUd8fHQ9PT1OKSYmdGhpcy5zdHJva2VVbmlmb3JtJiZ0aGlzLmNvbnN0cnVjdG9yLmxheW91dFByb3BlcnRpZXMuaW5jbHVkZXMoXCJzdHJva2VVbmlmb3JtXCIpfHx0aGlzLmNvbnN0cnVjdG9yLmxheW91dFByb3BlcnRpZXMuaW5jbHVkZXModCkpJiZ0aGlzLnNldERpbWVuc2lvbnMoKSxpfXRvT2JqZWN0KCl7bGV0IHQ9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOltdO3JldHVybiBzKHMoe30sc3VwZXIudG9PYmplY3QodCkpLHt9LHtwb2ludHM6dGhpcy5wb2ludHMubWFwKCh0PT57bGV0e3g6ZSx5OnN9PXQ7cmV0dXJue3g6ZSx5OnN9fSkpfSl9X3RvU1ZHKCl7Y29uc3QgdD1bXSxlPXRoaXMucGF0aE9mZnNldC54LHM9dGhpcy5wYXRoT2Zmc2V0LnksaT1vLk5VTV9GUkFDVElPTl9ESUdJVFM7Zm9yKGxldCByPTAsbj10aGlzLnBvaW50cy5sZW5ndGg7cjxuO3IrKyl0LnB1c2gocXQodGhpcy5wb2ludHNbcl0ueC1lLGkpLFwiLFwiLHF0KHRoaXMucG9pbnRzW3JdLnktcyxpKSxcIiBcIik7cmV0dXJuW1wiPFwiLmNvbmNhdCh0aGlzLmNvbnN0cnVjdG9yLnR5cGUudG9Mb3dlckNhc2UoKSxcIiBcIiksXCJDT01NT05fUEFSVFNcIiwncG9pbnRzPVwiJy5jb25jYXQodC5qb2luKFwiXCIpLCdcIiAvPlxcbicpXX1fcmVuZGVyKHQpe2NvbnN0IGU9dGhpcy5wb2ludHMubGVuZ3RoLHM9dGhpcy5wYXRoT2Zmc2V0LngsaT10aGlzLnBhdGhPZmZzZXQueTtpZihlJiYhaXNOYU4odGhpcy5wb2ludHNbZS0xXS55KSl7dC5iZWdpblBhdGgoKSx0Lm1vdmVUbyh0aGlzLnBvaW50c1swXS54LXMsdGhpcy5wb2ludHNbMF0ueS1pKTtmb3IobGV0IHI9MDtyPGU7cisrKXtjb25zdCBlPXRoaXMucG9pbnRzW3JdO3QubGluZVRvKGUueC1zLGUueS1pKX0hdGhpcy5pc09wZW4oKSYmdC5jbG9zZVBhdGgoKSx0aGlzLl9yZW5kZXJQYWludEluT3JkZXIodCl9fWNvbXBsZXhpdHkoKXtyZXR1cm4gdGhpcy5wb2ludHMubGVuZ3RofXN0YXRpYyBhc3luYyBmcm9tRWxlbWVudCh0LGUscil7cmV0dXJuIG5ldyB0aGlzKHNvKHQuZ2V0QXR0cmlidXRlKFwicG9pbnRzXCIpKSxzKHMoe30saSh1cih0LHRoaXMuQVRUUklCVVRFX05BTUVTLHIpLGlvKSksZSkpfXN0YXRpYyBmcm9tT2JqZWN0KHQpe3JldHVybiB0aGlzLl9mcm9tT2JqZWN0KHQse2V4dHJhUGFyYW06XCJwb2ludHNcIn0pfX10KG5vLFwib3duRGVmYXVsdHNcIixybyksdChubyxcInR5cGVcIixcIlBvbHlsaW5lXCIpLHQobm8sXCJsYXlvdXRQcm9wZXJ0aWVzXCIsW1UscSxcInN0cm9rZUxpbmVDYXBcIixcInN0cm9rZUxpbmVKb2luXCIsXCJzdHJva2VNaXRlckxpbWl0XCIsXCJzdHJva2VXaWR0aFwiLFwic3Ryb2tlVW5pZm9ybVwiLFwicG9pbnRzXCJdKSx0KG5vLFwiY2FjaGVQcm9wZXJ0aWVzXCIsWy4uLmZzLFwicG9pbnRzXCJdKSx0KG5vLFwiQVRUUklCVVRFX05BTUVTXCIsWy4uLmppXSksdHQuc2V0Q2xhc3Mobm8pLHR0LnNldFNWR0NsYXNzKG5vKTtjbGFzcyBvbyBleHRlbmRzIG5ve2lzT3Blbigpe3JldHVybiExfX10KG9vLFwib3duRGVmYXVsdHNcIixybyksdChvbyxcInR5cGVcIixcIlBvbHlnb25cIiksdHQuc2V0Q2xhc3Mob28pLHR0LnNldFNWR0NsYXNzKG9vKTtjb25zdCBhbz1bXCJmb250U2l6ZVwiLFwiZm9udFdlaWdodFwiLFwiZm9udEZhbWlseVwiLFwiZm9udFN0eWxlXCJdLGhvPVtcInVuZGVybGluZVwiLFwib3ZlcmxpbmVcIixcImxpbmV0aHJvdWdoXCJdLGNvPVsuLi5hbyxcImxpbmVIZWlnaHRcIixcInRleHRcIixcImNoYXJTcGFjaW5nXCIsXCJ0ZXh0QWxpZ25cIixcInN0eWxlc1wiLFwicGF0aFwiLFwicGF0aFN0YXJ0T2Zmc2V0XCIsXCJwYXRoU2lkZVwiLFwicGF0aEFsaWduXCJdLGxvPVsuLi5jbywuLi5obyxcInRleHRCYWNrZ3JvdW5kQ29sb3JcIixcImRpcmVjdGlvblwiXSx1bz1bLi4uYW8sLi4uaG8sSixcInN0cm9rZVdpZHRoXCIsSyxcImRlbHRhWVwiLFwidGV4dEJhY2tncm91bmRDb2xvclwiXSxnbz17X3JlTmV3bGluZTpGLF9yZVNwYWNlc0FuZFRhYnM6L1sgXFx0XFxyXS9nLF9yZVNwYWNlQW5kVGFiOi9bIFxcdFxccl0vLF9yZVdvcmRzOi9cXFMrL2csZm9udFNpemU6NDAsZm9udFdlaWdodDpcIm5vcm1hbFwiLGZvbnRGYW1pbHk6XCJUaW1lcyBOZXcgUm9tYW5cIix1bmRlcmxpbmU6ITEsb3ZlcmxpbmU6ITEsbGluZXRocm91Z2g6ITEsdGV4dEFsaWduOk0sZm9udFN0eWxlOlwibm9ybWFsXCIsbGluZUhlaWdodDoxLjE2LHN1cGVyc2NyaXB0OntzaXplOi42LGJhc2VsaW5lOi0uMzV9LHN1YnNjcmlwdDp7c2l6ZTouNixiYXNlbGluZTouMTF9LHRleHRCYWNrZ3JvdW5kQ29sb3I6XCJcIixzdHJva2U6bnVsbCxzaGFkb3c6bnVsbCxwYXRoOnZvaWQgMCxwYXRoU3RhcnRPZmZzZXQ6MCxwYXRoU2lkZTpNLHBhdGhBbGlnbjpcImJhc2VsaW5lXCIsX2ZvbnRTaXplRnJhY3Rpb246LjIyMixvZmZzZXRzOnt1bmRlcmxpbmU6LjEsbGluZXRocm91Z2g6LS4zMTUsb3ZlcmxpbmU6LS44OH0sX2ZvbnRTaXplTXVsdDoxLjEzLGNoYXJTcGFjaW5nOjAsZGVsdGFZOjAsZGlyZWN0aW9uOlwibHRyXCIsQ0FDSEVfRk9OVF9TSVpFOjQwMCxNSU5fVEVYVF9XSURUSDoyfSxmbz1cImp1c3RpZnlcIixwbz1cImp1c3RpZnktbGVmdFwiLG1vPVwianVzdGlmeS1yaWdodFwiLHZvPVwianVzdGlmeS1jZW50ZXJcIjtjbGFzcyB5byBleHRlbmRzIHlpe2lzRW1wdHlTdHlsZXModCl7aWYoIXRoaXMuc3R5bGVzKXJldHVybiEwO2lmKHZvaWQgMCE9PXQmJiF0aGlzLnN0eWxlc1t0XSlyZXR1cm4hMDtjb25zdCBlPXZvaWQgMD09PXQ/dGhpcy5zdHlsZXM6e2xpbmU6dGhpcy5zdHlsZXNbdF19O2Zvcihjb25zdCB0IGluIGUpZm9yKGNvbnN0IHMgaW4gZVt0XSlmb3IoY29uc3QgaSBpbiBlW3RdW3NdKXJldHVybiExO3JldHVybiEwfXN0eWxlSGFzKHQsZSl7aWYoIXRoaXMuc3R5bGVzKXJldHVybiExO2lmKHZvaWQgMCE9PWUmJiF0aGlzLnN0eWxlc1tlXSlyZXR1cm4hMTtjb25zdCBzPXZvaWQgMD09PWU/dGhpcy5zdHlsZXM6ezA6dGhpcy5zdHlsZXNbZV19O2Zvcihjb25zdCBlIGluIHMpZm9yKGNvbnN0IGkgaW4gc1tlXSlpZih2b2lkIDAhPT1zW2VdW2ldW3RdKXJldHVybiEwO3JldHVybiExfWNsZWFuU3R5bGUodCl7aWYoIXRoaXMuc3R5bGVzKXJldHVybiExO2NvbnN0IGU9dGhpcy5zdHlsZXM7bGV0IHMsaSxyPTAsbj0hMCxvPTA7Zm9yKGNvbnN0IG8gaW4gZSl7cz0wO2Zvcihjb25zdCBhIGluIGVbb10pe2NvbnN0IGg9ZVtvXVthXXx8e307cisrLHZvaWQgMCE9PWhbdF0/KGk/aFt0XSE9PWkmJihuPSExKTppPWhbdF0saFt0XT09PXRoaXNbdF0mJmRlbGV0ZSBoW3RdKTpuPSExLDAhPT1PYmplY3Qua2V5cyhoKS5sZW5ndGg/cysrOmRlbGV0ZSBlW29dW2FdfTA9PT1zJiZkZWxldGUgZVtvXX1mb3IobGV0IHQ9MDt0PHRoaXMuX3RleHRMaW5lcy5sZW5ndGg7dCsrKW8rPXRoaXMuX3RleHRMaW5lc1t0XS5sZW5ndGg7biYmcj09PW8mJih0aGlzW3RdPWksdGhpcy5yZW1vdmVTdHlsZSh0KSl9cmVtb3ZlU3R5bGUodCl7aWYoIXRoaXMuc3R5bGVzKXJldHVybjtjb25zdCBlPXRoaXMuc3R5bGVzO2xldCBzLGkscjtmb3IoaSBpbiBlKXtmb3IociBpbiBzPWVbaV0scylkZWxldGUgc1tyXVt0XSwwPT09T2JqZWN0LmtleXMoc1tyXSkubGVuZ3RoJiZkZWxldGUgc1tyXTswPT09T2JqZWN0LmtleXMocykubGVuZ3RoJiZkZWxldGUgZVtpXX19X2V4dGVuZFN0eWxlcyh0LGUpe2NvbnN0e2xpbmVJbmRleDppLGNoYXJJbmRleDpyfT10aGlzLmdldDJEQ3Vyc29yTG9jYXRpb24odCk7dGhpcy5fZ2V0TGluZVN0eWxlKGkpfHx0aGlzLl9zZXRMaW5lU3R5bGUoaSk7Y29uc3Qgbj1ZdChzKHMoe30sdGhpcy5fZ2V0U3R5bGVEZWNsYXJhdGlvbihpLHIpKSxlKSwodD0+dm9pZCAwIT09dCkpO3RoaXMuX3NldFN0eWxlRGVjbGFyYXRpb24oaSxyLG4pfWdldFNlbGVjdGlvblN0eWxlcyh0LGUscyl7Y29uc3QgaT1bXTtmb3IobGV0IHI9dDtyPChlfHx0KTtyKyspaS5wdXNoKHRoaXMuZ2V0U3R5bGVBdFBvc2l0aW9uKHIscykpO3JldHVybiBpfWdldFN0eWxlQXRQb3NpdGlvbih0LGUpe2NvbnN0e2xpbmVJbmRleDpzLGNoYXJJbmRleDppfT10aGlzLmdldDJEQ3Vyc29yTG9jYXRpb24odCk7cmV0dXJuIGU/dGhpcy5nZXRDb21wbGV0ZVN0eWxlRGVjbGFyYXRpb24ocyxpKTp0aGlzLl9nZXRTdHlsZURlY2xhcmF0aW9uKHMsaSl9c2V0U2VsZWN0aW9uU3R5bGVzKHQsZSxzKXtmb3IobGV0IGk9ZTtpPChzfHxlKTtpKyspdGhpcy5fZXh0ZW5kU3R5bGVzKGksdCk7dGhpcy5fZm9yY2VDbGVhckNhY2hlPSEwfV9nZXRTdHlsZURlY2xhcmF0aW9uKHQsZSl7dmFyIHM7Y29uc3QgaT10aGlzLnN0eWxlcyYmdGhpcy5zdHlsZXNbdF07cmV0dXJuIGkmJm51bGwhPT0ocz1pW2VdKSYmdm9pZCAwIT09cz9zOnt9fWdldENvbXBsZXRlU3R5bGVEZWNsYXJhdGlvbih0LGUpe3JldHVybiBzKHMoe30sWHQodGhpcyx0aGlzLmNvbnN0cnVjdG9yLl9zdHlsZVByb3BlcnRpZXMpKSx0aGlzLl9nZXRTdHlsZURlY2xhcmF0aW9uKHQsZSkpfV9zZXRTdHlsZURlY2xhcmF0aW9uKHQsZSxzKXt0aGlzLnN0eWxlc1t0XVtlXT1zfV9kZWxldGVTdHlsZURlY2xhcmF0aW9uKHQsZSl7ZGVsZXRlIHRoaXMuc3R5bGVzW3RdW2VdfV9nZXRMaW5lU3R5bGUodCl7cmV0dXJuISF0aGlzLnN0eWxlc1t0XX1fc2V0TGluZVN0eWxlKHQpe3RoaXMuc3R5bGVzW3RdPXt9fV9kZWxldGVMaW5lU3R5bGUodCl7ZGVsZXRlIHRoaXMuc3R5bGVzW3RdfX10KHlvLFwiX3N0eWxlUHJvcGVydGllc1wiLHVvKTtjb25zdCBfbz0vICArL2cseG89L1wiL2c7ZnVuY3Rpb24gQ28odCxlLHMsaSxyKXtyZXR1cm5cIlxcdFxcdFwiLmNvbmNhdChmdW5jdGlvbih0LGUpe2xldHtsZWZ0OnMsdG9wOmksd2lkdGg6cixoZWlnaHQ6bn09ZSxhPWFyZ3VtZW50cy5sZW5ndGg+MiYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpvLk5VTV9GUkFDVElPTl9ESUdJVFM7Y29uc3QgaD1adChLLHQsITEpLFtjLGwsdSxkXT1bcyxpLHIsbl0ubWFwKCh0PT5xdCh0LGEpKSk7cmV0dXJuXCI8cmVjdCBcIi5jb25jYXQoaCwnIHg9XCInKS5jb25jYXQoYywnXCIgeT1cIicpLmNvbmNhdChsLCdcIiB3aWR0aD1cIicpLmNvbmNhdCh1LCdcIiBoZWlnaHQ9XCInKS5jb25jYXQoZCwnXCI+PC9yZWN0PicpfSh0LHtsZWZ0OmUsdG9wOnMsd2lkdGg6aSxoZWlnaHQ6cn0pLFwiXFxuXCIpfWNvbnN0IGJvPVtcInRleHRBbmNob3JcIixcInRleHREZWNvcmF0aW9uXCIsXCJkeFwiLFwiZHlcIixcInRvcFwiLFwibGVmdFwiLFwiZm9udFNpemVcIixcInN0cm9rZVdpZHRoXCJdO2xldCB3bztjbGFzcyBTbyBleHRlbmRzIHlve3N0YXRpYyBnZXREZWZhdWx0cygpe3JldHVybiBzKHMoe30sc3VwZXIuZ2V0RGVmYXVsdHMoKSksU28ub3duRGVmYXVsdHMpfWNvbnN0cnVjdG9yKGUscyl7c3VwZXIoKSx0KHRoaXMsXCJfX2NoYXJCb3VuZHNcIixbXSksT2JqZWN0LmFzc2lnbih0aGlzLFNvLm93bkRlZmF1bHRzKSx0aGlzLnNldE9wdGlvbnMocyksdGhpcy5zdHlsZXN8fCh0aGlzLnN0eWxlcz17fSksdGhpcy50ZXh0PWUsdGhpcy5pbml0aWFsaXplZD0hMCx0aGlzLnBhdGgmJnRoaXMuc2V0UGF0aEluZm8oKSx0aGlzLmluaXREaW1lbnNpb25zKCksdGhpcy5zZXRDb29yZHMoKX1zZXRQYXRoSW5mbygpe2NvbnN0IHQ9dGhpcy5wYXRoO3QmJih0LnNlZ21lbnRzSW5mbz1Kcih0LnBhdGgpKX1fc3BsaXRUZXh0KCl7Y29uc3QgdD10aGlzLl9zcGxpdFRleHRJbnRvTGluZXModGhpcy50ZXh0KTtyZXR1cm4gdGhpcy50ZXh0TGluZXM9dC5saW5lcyx0aGlzLl90ZXh0TGluZXM9dC5ncmFwaGVtZUxpbmVzLHRoaXMuX3Vud3JhcHBlZFRleHRMaW5lcz10Ll91bndyYXBwZWRMaW5lcyx0aGlzLl90ZXh0PXQuZ3JhcGhlbWVUZXh0LHR9aW5pdERpbWVuc2lvbnMoKXt0aGlzLl9zcGxpdFRleHQoKSx0aGlzLl9jbGVhckNhY2hlKCksdGhpcy5kaXJ0eT0hMCx0aGlzLnBhdGg/KHRoaXMud2lkdGg9dGhpcy5wYXRoLndpZHRoLHRoaXMuaGVpZ2h0PXRoaXMucGF0aC5oZWlnaHQpOih0aGlzLndpZHRoPXRoaXMuY2FsY1RleHRXaWR0aCgpfHx0aGlzLmN1cnNvcldpZHRofHx0aGlzLk1JTl9URVhUX1dJRFRILHRoaXMuaGVpZ2h0PXRoaXMuY2FsY1RleHRIZWlnaHQoKSksdGhpcy50ZXh0QWxpZ24uaW5jbHVkZXMoZm8pJiZ0aGlzLmVubGFyZ2VTcGFjZXMoKX1lbmxhcmdlU3BhY2VzKCl7bGV0IHQsZSxzLGkscixuLG87Zm9yKGxldCBhPTAsaD10aGlzLl90ZXh0TGluZXMubGVuZ3RoO2E8aDthKyspaWYoKHRoaXMudGV4dEFsaWduPT09Zm98fGEhPT1oLTEmJiF0aGlzLmlzRW5kT2ZXcmFwcGluZyhhKSkmJihpPTAscj10aGlzLl90ZXh0TGluZXNbYV0sZT10aGlzLmdldExpbmVXaWR0aChhKSxlPHRoaXMud2lkdGgmJihvPXRoaXMudGV4dExpbmVzW2FdLm1hdGNoKHRoaXMuX3JlU3BhY2VzQW5kVGFicykpKSl7cz1vLmxlbmd0aCx0PSh0aGlzLndpZHRoLWUpL3M7Zm9yKGxldCBlPTA7ZTw9ci5sZW5ndGg7ZSsrKW49dGhpcy5fX2NoYXJCb3VuZHNbYV1bZV0sdGhpcy5fcmVTcGFjZUFuZFRhYi50ZXN0KHJbZV0pPyhuLndpZHRoKz10LG4ua2VybmVkV2lkdGgrPXQsbi5sZWZ0Kz1pLGkrPXQpOm4ubGVmdCs9aX19aXNFbmRPZldyYXBwaW5nKHQpe3JldHVybiB0PT09dGhpcy5fdGV4dExpbmVzLmxlbmd0aC0xfW1pc3NpbmdOZXdsaW5lT2Zmc2V0KHQpe3JldHVybiAxfWdldDJEQ3Vyc29yTG9jYXRpb24odCxlKXtjb25zdCBzPWU/dGhpcy5fdW53cmFwcGVkVGV4dExpbmVzOnRoaXMuX3RleHRMaW5lcztsZXQgaTtmb3IoaT0wO2k8cy5sZW5ndGg7aSsrKXtpZih0PD1zW2ldLmxlbmd0aClyZXR1cm57bGluZUluZGV4OmksY2hhckluZGV4OnR9O3QtPXNbaV0ubGVuZ3RoK3RoaXMubWlzc2luZ05ld2xpbmVPZmZzZXQoaSxlKX1yZXR1cm57bGluZUluZGV4OmktMSxjaGFySW5kZXg6c1tpLTFdLmxlbmd0aDx0P3NbaS0xXS5sZW5ndGg6dH19dG9TdHJpbmcoKXtyZXR1cm5cIiM8VGV4dCAoXCIuY29uY2F0KHRoaXMuY29tcGxleGl0eSgpLCcpOiB7IFwidGV4dFwiOiBcIicpLmNvbmNhdCh0aGlzLnRleHQsJ1wiLCBcImZvbnRGYW1pbHlcIjogXCInKS5jb25jYXQodGhpcy5mb250RmFtaWx5LCdcIiB9PicpfV9nZXRDYWNoZUNhbnZhc0RpbWVuc2lvbnMoKXtjb25zdCB0PXN1cGVyLl9nZXRDYWNoZUNhbnZhc0RpbWVuc2lvbnMoKSxlPXRoaXMuZm9udFNpemU7cmV0dXJuIHQud2lkdGgrPWUqdC56b29tWCx0LmhlaWdodCs9ZSp0Lnpvb21ZLHR9X3JlbmRlcih0KXtjb25zdCBlPXRoaXMucGF0aDtlJiYhZS5pc05vdFZpc2libGUoKSYmZS5fcmVuZGVyKHQpLHRoaXMuX3NldFRleHRTdHlsZXModCksdGhpcy5fcmVuZGVyVGV4dExpbmVzQmFja2dyb3VuZCh0KSx0aGlzLl9yZW5kZXJUZXh0RGVjb3JhdGlvbih0LFwidW5kZXJsaW5lXCIpLHRoaXMuX3JlbmRlclRleHQodCksdGhpcy5fcmVuZGVyVGV4dERlY29yYXRpb24odCxcIm92ZXJsaW5lXCIpLHRoaXMuX3JlbmRlclRleHREZWNvcmF0aW9uKHQsXCJsaW5ldGhyb3VnaFwiKX1fcmVuZGVyVGV4dCh0KXt0aGlzLnBhaW50Rmlyc3Q9PT1KPyh0aGlzLl9yZW5kZXJUZXh0U3Ryb2tlKHQpLHRoaXMuX3JlbmRlclRleHRGaWxsKHQpKToodGhpcy5fcmVuZGVyVGV4dEZpbGwodCksdGhpcy5fcmVuZGVyVGV4dFN0cm9rZSh0KSl9X3NldFRleHRTdHlsZXModCxlLHMpe2lmKHQudGV4dEJhc2VsaW5lPVwiYWxwaGFiZXRpY1wiLHRoaXMucGF0aClzd2l0Y2godGhpcy5wYXRoQWxpZ24pe2Nhc2UgRDp0LnRleHRCYXNlbGluZT1cIm1pZGRsZVwiO2JyZWFrO2Nhc2VcImFzY2VuZGVyXCI6dC50ZXh0QmFzZWxpbmU9UDticmVhaztjYXNlXCJkZXNjZW5kZXJcIjp0LnRleHRCYXNlbGluZT1FfXQuZm9udD10aGlzLl9nZXRGb250RGVjbGFyYXRpb24oZSxzKX1jYWxjVGV4dFdpZHRoKCl7bGV0IHQ9dGhpcy5nZXRMaW5lV2lkdGgoMCk7Zm9yKGxldCBlPTEscz10aGlzLl90ZXh0TGluZXMubGVuZ3RoO2U8cztlKyspe2NvbnN0IHM9dGhpcy5nZXRMaW5lV2lkdGgoZSk7cz50JiYodD1zKX1yZXR1cm4gdH1fcmVuZGVyVGV4dExpbmUodCxlLHMsaSxyLG4pe3RoaXMuX3JlbmRlckNoYXJzKHQsZSxzLGkscixuKX1fcmVuZGVyVGV4dExpbmVzQmFja2dyb3VuZCh0KXtpZighdGhpcy50ZXh0QmFja2dyb3VuZENvbG9yJiYhdGhpcy5zdHlsZUhhcyhcInRleHRCYWNrZ3JvdW5kQ29sb3JcIikpcmV0dXJuO2NvbnN0IGU9dC5maWxsU3R5bGUscz10aGlzLl9nZXRMZWZ0T2Zmc2V0KCk7bGV0IGk9dGhpcy5fZ2V0VG9wT2Zmc2V0KCk7Zm9yKGxldCBlPTAscj10aGlzLl90ZXh0TGluZXMubGVuZ3RoO2U8cjtlKyspe2NvbnN0IHI9dGhpcy5nZXRIZWlnaHRPZkxpbmUoZSk7aWYoIXRoaXMudGV4dEJhY2tncm91bmRDb2xvciYmIXRoaXMuc3R5bGVIYXMoXCJ0ZXh0QmFja2dyb3VuZENvbG9yXCIsZSkpe2krPXI7Y29udGludWV9Y29uc3Qgbj10aGlzLl90ZXh0TGluZXNbZV0ubGVuZ3RoLG89dGhpcy5fZ2V0TGluZUxlZnRPZmZzZXQoZSk7bGV0IGEsaCxjPTAsbD0wLHU9dGhpcy5nZXRWYWx1ZU9mUHJvcGVydHlBdChlLDAsXCJ0ZXh0QmFja2dyb3VuZENvbG9yXCIpO2ZvcihsZXQgZD0wO2Q8bjtkKyspe2NvbnN0IG49dGhpcy5fX2NoYXJCb3VuZHNbZV1bZF07aD10aGlzLmdldFZhbHVlT2ZQcm9wZXJ0eUF0KGUsZCxcInRleHRCYWNrZ3JvdW5kQ29sb3JcIiksdGhpcy5wYXRoPyh0LnNhdmUoKSx0LnRyYW5zbGF0ZShuLnJlbmRlckxlZnQsbi5yZW5kZXJUb3ApLHQucm90YXRlKG4uYW5nbGUpLHQuZmlsbFN0eWxlPWgsaCYmdC5maWxsUmVjdCgtbi53aWR0aC8yLC1yL3RoaXMubGluZUhlaWdodCooMS10aGlzLl9mb250U2l6ZUZyYWN0aW9uKSxuLndpZHRoLHIvdGhpcy5saW5lSGVpZ2h0KSx0LnJlc3RvcmUoKSk6aCE9PXU/KGE9cytvK2wsXCJydGxcIj09PXRoaXMuZGlyZWN0aW9uJiYoYT10aGlzLndpZHRoLWEtYyksdC5maWxsU3R5bGU9dSx1JiZ0LmZpbGxSZWN0KGEsaSxjLHIvdGhpcy5saW5lSGVpZ2h0KSxsPW4ubGVmdCxjPW4ud2lkdGgsdT1oKTpjKz1uLmtlcm5lZFdpZHRofWgmJiF0aGlzLnBhdGgmJihhPXMrbytsLFwicnRsXCI9PT10aGlzLmRpcmVjdGlvbiYmKGE9dGhpcy53aWR0aC1hLWMpLHQuZmlsbFN0eWxlPWgsdC5maWxsUmVjdChhLGksYyxyL3RoaXMubGluZUhlaWdodCkpLGkrPXJ9dC5maWxsU3R5bGU9ZSx0aGlzLl9yZW1vdmVTaGFkb3codCl9X21lYXN1cmVDaGFyKHQsZSxzLGkpe2NvbnN0IHI9Xy5nZXRGb250Q2FjaGUoZSksbj10aGlzLl9nZXRGb250RGVjbGFyYXRpb24oZSksbz1zK3QsYT1zJiZuPT09dGhpcy5fZ2V0Rm9udERlY2xhcmF0aW9uKGkpLGg9ZS5mb250U2l6ZS90aGlzLkNBQ0hFX0ZPTlRfU0laRTtsZXQgYyxsLHUsZDtpZihzJiZ2b2lkIDAhPT1yW3NdJiYodT1yW3NdKSx2b2lkIDAhPT1yW3RdJiYoZD1jPXJbdF0pLGEmJnZvaWQgMCE9PXJbb10mJihsPXJbb10sZD1sLXUpLHZvaWQgMD09PWN8fHZvaWQgMD09PXV8fHZvaWQgMD09PWwpe2NvbnN0IGk9ZnVuY3Rpb24oKXtpZighd28pe2NvbnN0IHQ9dnQoe3dpZHRoOjAsaGVpZ2h0OjB9KTt3bz10LmdldENvbnRleHQoXCIyZFwiKX1yZXR1cm4gd299KCk7dGhpcy5fc2V0VGV4dFN0eWxlcyhpLGUsITApLHZvaWQgMD09PWMmJihkPWM9aS5tZWFzdXJlVGV4dCh0KS53aWR0aCxyW3RdPWMpLHZvaWQgMD09PXUmJmEmJnMmJih1PWkubWVhc3VyZVRleHQocykud2lkdGgscltzXT11KSxhJiZ2b2lkIDA9PT1sJiYobD1pLm1lYXN1cmVUZXh0KG8pLndpZHRoLHJbb109bCxkPWwtdSl9cmV0dXJue3dpZHRoOmMqaCxrZXJuZWRXaWR0aDpkKmh9fWdldEhlaWdodE9mQ2hhcih0LGUpe3JldHVybiB0aGlzLmdldFZhbHVlT2ZQcm9wZXJ0eUF0KHQsZSxcImZvbnRTaXplXCIpfW1lYXN1cmVMaW5lKHQpe2NvbnN0IGU9dGhpcy5fbWVhc3VyZUxpbmUodCk7cmV0dXJuIDAhPT10aGlzLmNoYXJTcGFjaW5nJiYoZS53aWR0aC09dGhpcy5fZ2V0V2lkdGhPZkNoYXJTcGFjaW5nKCkpLGUud2lkdGg8MCYmKGUud2lkdGg9MCksZX1fbWVhc3VyZUxpbmUodCl7bGV0IGUscyxpPTA7Y29uc3Qgcj10aGlzLnBhdGhTaWRlPT09QSxuPXRoaXMucGF0aCxvPXRoaXMuX3RleHRMaW5lc1t0XSxhPW8ubGVuZ3RoLGg9bmV3IEFycmF5KGEpO3RoaXMuX19jaGFyQm91bmRzW3RdPWg7Zm9yKGxldCByPTA7cjxhO3IrKyl7Y29uc3Qgbj1vW3JdO3M9dGhpcy5fZ2V0R3JhcGhlbWVCb3gobix0LHIsZSksaFtyXT1zLGkrPXMua2VybmVkV2lkdGgsZT1ufWlmKGhbYV09e2xlZnQ6cz9zLmxlZnQrcy53aWR0aDowLHdpZHRoOjAsa2VybmVkV2lkdGg6MCxoZWlnaHQ6dGhpcy5mb250U2l6ZSxkZWx0YVk6MH0sbiYmbi5zZWdtZW50c0luZm8pe2xldCB0PTA7Y29uc3QgZT1uLnNlZ21lbnRzSW5mb1tuLnNlZ21lbnRzSW5mby5sZW5ndGgtMV0ubGVuZ3RoO3N3aXRjaCh0aGlzLnRleHRBbGlnbil7Y2FzZSBNOnQ9cj9lLWk6MDticmVhaztjYXNlIEQ6dD0oZS1pKS8yO2JyZWFrO2Nhc2UgQTp0PXI/MDplLWl9dCs9dGhpcy5wYXRoU3RhcnRPZmZzZXQqKHI/LTE6MSk7Zm9yKGxldCBpPXI/YS0xOjA7cj9pPj0wOmk8YTtyP2ktLTppKyspcz1oW2ldLHQ+ZT90JT1lOnQ8MCYmKHQrPWUpLHRoaXMuX3NldEdyYXBoZW1lT25QYXRoKHQscyksdCs9cy5rZXJuZWRXaWR0aH1yZXR1cm57d2lkdGg6aSxudW1PZlNwYWNlczowfX1fc2V0R3JhcGhlbWVPblBhdGgodCxlKXtjb25zdCBzPXQrZS5rZXJuZWRXaWR0aC8yLGk9dGhpcy5wYXRoLHI9UXIoaS5wYXRoLHMsaS5zZWdtZW50c0luZm8pO2UucmVuZGVyTGVmdD1yLngtaS5wYXRoT2Zmc2V0LngsZS5yZW5kZXJUb3A9ci55LWkucGF0aE9mZnNldC55LGUuYW5nbGU9ci5hbmdsZSsodGhpcy5wYXRoU2lkZT09PUE/TWF0aC5QSTowKX1fZ2V0R3JhcGhlbWVCb3godCxlLHMsaSxyKXtjb25zdCBuPXRoaXMuZ2V0Q29tcGxldGVTdHlsZURlY2xhcmF0aW9uKGUscyksbz1pP3RoaXMuZ2V0Q29tcGxldGVTdHlsZURlY2xhcmF0aW9uKGUscy0xKTp7fSxhPXRoaXMuX21lYXN1cmVDaGFyKHQsbixpLG8pO2xldCBoLGM9YS5rZXJuZWRXaWR0aCxsPWEud2lkdGg7MCE9PXRoaXMuY2hhclNwYWNpbmcmJihoPXRoaXMuX2dldFdpZHRoT2ZDaGFyU3BhY2luZygpLGwrPWgsYys9aCk7Y29uc3QgdT17d2lkdGg6bCxsZWZ0OjAsaGVpZ2h0Om4uZm9udFNpemUsa2VybmVkV2lkdGg6YyxkZWx0YVk6bi5kZWx0YVl9O2lmKHM+MCYmIXIpe2NvbnN0IHQ9dGhpcy5fX2NoYXJCb3VuZHNbZV1bcy0xXTt1LmxlZnQ9dC5sZWZ0K3Qud2lkdGgrYS5rZXJuZWRXaWR0aC1hLndpZHRofXJldHVybiB1fWdldEhlaWdodE9mTGluZSh0KXtpZih0aGlzLl9fbGluZUhlaWdodHNbdF0pcmV0dXJuIHRoaXMuX19saW5lSGVpZ2h0c1t0XTtsZXQgZT10aGlzLmdldEhlaWdodE9mQ2hhcih0LDApO2ZvcihsZXQgcz0xLGk9dGhpcy5fdGV4dExpbmVzW3RdLmxlbmd0aDtzPGk7cysrKWU9TWF0aC5tYXgodGhpcy5nZXRIZWlnaHRPZkNoYXIodCxzKSxlKTtyZXR1cm4gdGhpcy5fX2xpbmVIZWlnaHRzW3RdPWUqdGhpcy5saW5lSGVpZ2h0KnRoaXMuX2ZvbnRTaXplTXVsdH1jYWxjVGV4dEhlaWdodCgpe2xldCB0LGU9MDtmb3IobGV0IHM9MCxpPXRoaXMuX3RleHRMaW5lcy5sZW5ndGg7czxpO3MrKyl0PXRoaXMuZ2V0SGVpZ2h0T2ZMaW5lKHMpLGUrPXM9PT1pLTE/dC90aGlzLmxpbmVIZWlnaHQ6dDtyZXR1cm4gZX1fZ2V0TGVmdE9mZnNldCgpe3JldHVyblwibHRyXCI9PT10aGlzLmRpcmVjdGlvbj8tdGhpcy53aWR0aC8yOnRoaXMud2lkdGgvMn1fZ2V0VG9wT2Zmc2V0KCl7cmV0dXJuLXRoaXMuaGVpZ2h0LzJ9X3JlbmRlclRleHRDb21tb24odCxlKXt0LnNhdmUoKTtsZXQgcz0wO2NvbnN0IGk9dGhpcy5fZ2V0TGVmdE9mZnNldCgpLHI9dGhpcy5fZ2V0VG9wT2Zmc2V0KCk7Zm9yKGxldCBuPTAsbz10aGlzLl90ZXh0TGluZXMubGVuZ3RoO248bztuKyspe2NvbnN0IG89dGhpcy5nZXRIZWlnaHRPZkxpbmUobiksYT1vL3RoaXMubGluZUhlaWdodCxoPXRoaXMuX2dldExpbmVMZWZ0T2Zmc2V0KG4pO3RoaXMuX3JlbmRlclRleHRMaW5lKGUsdCx0aGlzLl90ZXh0TGluZXNbbl0saStoLHIrcythLG4pLHMrPW99dC5yZXN0b3JlKCl9X3JlbmRlclRleHRGaWxsKHQpeyh0aGlzLmZpbGx8fHRoaXMuc3R5bGVIYXMoSykpJiZ0aGlzLl9yZW5kZXJUZXh0Q29tbW9uKHQsXCJmaWxsVGV4dFwiKX1fcmVuZGVyVGV4dFN0cm9rZSh0KXsodGhpcy5zdHJva2UmJjAhPT10aGlzLnN0cm9rZVdpZHRofHwhdGhpcy5pc0VtcHR5U3R5bGVzKCkpJiYodGhpcy5zaGFkb3cmJiF0aGlzLnNoYWRvdy5hZmZlY3RTdHJva2UmJnRoaXMuX3JlbW92ZVNoYWRvdyh0KSx0LnNhdmUoKSx0aGlzLl9zZXRMaW5lRGFzaCh0LHRoaXMuc3Ryb2tlRGFzaEFycmF5KSx0LmJlZ2luUGF0aCgpLHRoaXMuX3JlbmRlclRleHRDb21tb24odCxcInN0cm9rZVRleHRcIiksdC5jbG9zZVBhdGgoKSx0LnJlc3RvcmUoKSl9X3JlbmRlckNoYXJzKHQsZSxzLGkscixuKXtjb25zdCBvPXRoaXMuZ2V0SGVpZ2h0T2ZMaW5lKG4pLGE9dGhpcy50ZXh0QWxpZ24uaW5jbHVkZXMoZm8pLGg9dGhpcy5wYXRoLGM9IWEmJjA9PT10aGlzLmNoYXJTcGFjaW5nJiZ0aGlzLmlzRW1wdHlTdHlsZXMobikmJiFoLGw9XCJsdHJcIj09PXRoaXMuZGlyZWN0aW9uLHU9XCJsdHJcIj09PXRoaXMuZGlyZWN0aW9uPzE6LTEsZD1lLmRpcmVjdGlvbjtsZXQgZyxmLHAsbSx2LHk9XCJcIixfPTA7aWYoZS5zYXZlKCksZCE9PXRoaXMuZGlyZWN0aW9uJiYoZS5jYW52YXMuc2V0QXR0cmlidXRlKFwiZGlyXCIsbD9cImx0clwiOlwicnRsXCIpLGUuZGlyZWN0aW9uPWw/XCJsdHJcIjpcInJ0bFwiLGUudGV4dEFsaWduPWw/TTpBKSxyLT1vKnRoaXMuX2ZvbnRTaXplRnJhY3Rpb24vdGhpcy5saW5lSGVpZ2h0LGMpcmV0dXJuIHRoaXMuX3JlbmRlckNoYXIodCxlLG4sMCxzLmpvaW4oXCJcIiksaSxyKSx2b2lkIGUucmVzdG9yZSgpO2ZvcihsZXQgbz0wLGM9cy5sZW5ndGgtMTtvPD1jO28rKyltPW89PT1jfHx0aGlzLmNoYXJTcGFjaW5nfHxoLHkrPXNbb10scD10aGlzLl9fY2hhckJvdW5kc1tuXVtvXSwwPT09Xz8oaSs9dSoocC5rZXJuZWRXaWR0aC1wLndpZHRoKSxfKz1wLndpZHRoKTpfKz1wLmtlcm5lZFdpZHRoLGEmJiFtJiZ0aGlzLl9yZVNwYWNlQW5kVGFiLnRlc3Qoc1tvXSkmJihtPSEwKSxtfHwoZz1nfHx0aGlzLmdldENvbXBsZXRlU3R5bGVEZWNsYXJhdGlvbihuLG8pLGY9dGhpcy5nZXRDb21wbGV0ZVN0eWxlRGVjbGFyYXRpb24obixvKzEpLG09UGkoZyxmLCExKSksbSYmKGg/KGUuc2F2ZSgpLGUudHJhbnNsYXRlKHAucmVuZGVyTGVmdCxwLnJlbmRlclRvcCksZS5yb3RhdGUocC5hbmdsZSksdGhpcy5fcmVuZGVyQ2hhcih0LGUsbixvLHksLV8vMiwwKSxlLnJlc3RvcmUoKSk6KHY9aSx0aGlzLl9yZW5kZXJDaGFyKHQsZSxuLG8seSx2LHIpKSx5PVwiXCIsZz1mLGkrPXUqXyxfPTApO2UucmVzdG9yZSgpfV9hcHBseVBhdHRlcm5HcmFkaWVudFRyYW5zZm9ybVRleHQodCl7Y29uc3QgZT10aGlzLndpZHRoK3RoaXMuc3Ryb2tlV2lkdGgscz10aGlzLmhlaWdodCt0aGlzLnN0cm9rZVdpZHRoLGk9dnQoe3dpZHRoOmUsaGVpZ2h0OnN9KSxyPWkuZ2V0Q29udGV4dChcIjJkXCIpO3JldHVybiBpLndpZHRoPWUsaS5oZWlnaHQ9cyxyLmJlZ2luUGF0aCgpLHIubW92ZVRvKDAsMCksci5saW5lVG8oZSwwKSxyLmxpbmVUbyhlLHMpLHIubGluZVRvKDAscyksci5jbG9zZVBhdGgoKSxyLnRyYW5zbGF0ZShlLzIscy8yKSxyLmZpbGxTdHlsZT10LnRvTGl2ZShyKSx0aGlzLl9hcHBseVBhdHRlcm5HcmFkaWVudFRyYW5zZm9ybShyLHQpLHIuZmlsbCgpLHIuY3JlYXRlUGF0dGVybihpLFwibm8tcmVwZWF0XCIpfWhhbmRsZUZpbGxlcih0LGUscyl7bGV0IGkscjtyZXR1cm4gJHQocyk/XCJwZXJjZW50YWdlXCI9PT1zLmdyYWRpZW50VW5pdHN8fHMuZ3JhZGllbnRUcmFuc2Zvcm18fHMucGF0dGVyblRyYW5zZm9ybT8oaT0tdGhpcy53aWR0aC8yLHI9LXRoaXMuaGVpZ2h0LzIsdC50cmFuc2xhdGUoaSxyKSx0W2VdPXRoaXMuX2FwcGx5UGF0dGVybkdyYWRpZW50VHJhbnNmb3JtVGV4dChzKSx7b2Zmc2V0WDppLG9mZnNldFk6cn0pOih0W2VdPXMudG9MaXZlKHQpLHRoaXMuX2FwcGx5UGF0dGVybkdyYWRpZW50VHJhbnNmb3JtKHQscykpOih0W2VdPXMse29mZnNldFg6MCxvZmZzZXRZOjB9KX1fc2V0U3Ryb2tlU3R5bGVzKHQsZSl7bGV0e3N0cm9rZTpzLHN0cm9rZVdpZHRoOml9PWU7cmV0dXJuIHQubGluZVdpZHRoPWksdC5saW5lQ2FwPXRoaXMuc3Ryb2tlTGluZUNhcCx0LmxpbmVEYXNoT2Zmc2V0PXRoaXMuc3Ryb2tlRGFzaE9mZnNldCx0LmxpbmVKb2luPXRoaXMuc3Ryb2tlTGluZUpvaW4sdC5taXRlckxpbWl0PXRoaXMuc3Ryb2tlTWl0ZXJMaW1pdCx0aGlzLmhhbmRsZUZpbGxlcih0LFwic3Ryb2tlU3R5bGVcIixzKX1fc2V0RmlsbFN0eWxlcyh0LGUpe2xldHtmaWxsOnN9PWU7cmV0dXJuIHRoaXMuaGFuZGxlRmlsbGVyKHQsXCJmaWxsU3R5bGVcIixzKX1fcmVuZGVyQ2hhcih0LGUscyxpLHIsbixvKXtjb25zdCBhPXRoaXMuX2dldFN0eWxlRGVjbGFyYXRpb24ocyxpKSxoPXRoaXMuZ2V0Q29tcGxldGVTdHlsZURlY2xhcmF0aW9uKHMsaSksYz1cImZpbGxUZXh0XCI9PT10JiZoLmZpbGwsbD1cInN0cm9rZVRleHRcIj09PXQmJmguc3Ryb2tlJiZoLnN0cm9rZVdpZHRoO2lmKGx8fGMpe2lmKGUuc2F2ZSgpLGUuZm9udD10aGlzLl9nZXRGb250RGVjbGFyYXRpb24oaCksYS50ZXh0QmFja2dyb3VuZENvbG9yJiZ0aGlzLl9yZW1vdmVTaGFkb3coZSksYS5kZWx0YVkmJihvKz1hLmRlbHRhWSksYyl7Y29uc3QgdD10aGlzLl9zZXRGaWxsU3R5bGVzKGUsaCk7ZS5maWxsVGV4dChyLG4tdC5vZmZzZXRYLG8tdC5vZmZzZXRZKX1pZihsKXtjb25zdCB0PXRoaXMuX3NldFN0cm9rZVN0eWxlcyhlLGgpO2Uuc3Ryb2tlVGV4dChyLG4tdC5vZmZzZXRYLG8tdC5vZmZzZXRZKX1lLnJlc3RvcmUoKX19c2V0U3VwZXJzY3JpcHQodCxlKXt0aGlzLl9zZXRTY3JpcHQodCxlLHRoaXMuc3VwZXJzY3JpcHQpfXNldFN1YnNjcmlwdCh0LGUpe3RoaXMuX3NldFNjcmlwdCh0LGUsdGhpcy5zdWJzY3JpcHQpfV9zZXRTY3JpcHQodCxlLHMpe2NvbnN0IGk9dGhpcy5nZXQyREN1cnNvckxvY2F0aW9uKHQsITApLHI9dGhpcy5nZXRWYWx1ZU9mUHJvcGVydHlBdChpLmxpbmVJbmRleCxpLmNoYXJJbmRleCxcImZvbnRTaXplXCIpLG49dGhpcy5nZXRWYWx1ZU9mUHJvcGVydHlBdChpLmxpbmVJbmRleCxpLmNoYXJJbmRleCxcImRlbHRhWVwiKSxvPXtmb250U2l6ZTpyKnMuc2l6ZSxkZWx0YVk6bityKnMuYmFzZWxpbmV9O3RoaXMuc2V0U2VsZWN0aW9uU3R5bGVzKG8sdCxlKX1fZ2V0TGluZUxlZnRPZmZzZXQodCl7Y29uc3QgZT10aGlzLmdldExpbmVXaWR0aCh0KSxzPXRoaXMud2lkdGgtZSxpPXRoaXMudGV4dEFsaWduLHI9dGhpcy5kaXJlY3Rpb24sbj10aGlzLmlzRW5kT2ZXcmFwcGluZyh0KTtsZXQgbz0wO3JldHVybiBpPT09Zm98fGk9PT12byYmIW58fGk9PT1tbyYmIW58fGk9PT1wbyYmIW4/MDooaT09PUQmJihvPXMvMiksaT09PUEmJihvPXMpLGk9PT12byYmKG89cy8yKSxpPT09bW8mJihvPXMpLFwicnRsXCI9PT1yJiYoaT09PUF8fGk9PT1mb3x8aT09PW1vP289MDppPT09TXx8aT09PXBvP289LXM6aSE9PUQmJmkhPT12b3x8KG89LXMvMikpLG8pfV9jbGVhckNhY2hlKCl7dGhpcy5fZm9yY2VDbGVhckNhY2hlPSExLHRoaXMuX19saW5lV2lkdGhzPVtdLHRoaXMuX19saW5lSGVpZ2h0cz1bXSx0aGlzLl9fY2hhckJvdW5kcz1bXX1nZXRMaW5lV2lkdGgodCl7aWYodm9pZCAwIT09dGhpcy5fX2xpbmVXaWR0aHNbdF0pcmV0dXJuIHRoaXMuX19saW5lV2lkdGhzW3RdO2NvbnN0e3dpZHRoOmV9PXRoaXMubWVhc3VyZUxpbmUodCk7cmV0dXJuIHRoaXMuX19saW5lV2lkdGhzW3RdPWUsZX1fZ2V0V2lkdGhPZkNoYXJTcGFjaW5nKCl7cmV0dXJuIDAhPT10aGlzLmNoYXJTcGFjaW5nP3RoaXMuZm9udFNpemUqdGhpcy5jaGFyU3BhY2luZy8xZTM6MH1nZXRWYWx1ZU9mUHJvcGVydHlBdCh0LGUscyl7dmFyIGk7cmV0dXJuIG51bGwhPT0oaT10aGlzLl9nZXRTdHlsZURlY2xhcmF0aW9uKHQsZSlbc10pJiZ2b2lkIDAhPT1pP2k6dGhpc1tzXX1fcmVuZGVyVGV4dERlY29yYXRpb24odCxlKXtpZighdGhpc1tlXSYmIXRoaXMuc3R5bGVIYXMoZSkpcmV0dXJuO2xldCBzPXRoaXMuX2dldFRvcE9mZnNldCgpO2NvbnN0IGk9dGhpcy5fZ2V0TGVmdE9mZnNldCgpLHI9dGhpcy5wYXRoLG49dGhpcy5fZ2V0V2lkdGhPZkNoYXJTcGFjaW5nKCksbz10aGlzLm9mZnNldHNbZV07Zm9yKGxldCBhPTAsaD10aGlzLl90ZXh0TGluZXMubGVuZ3RoO2E8aDthKyspe2NvbnN0IGg9dGhpcy5nZXRIZWlnaHRPZkxpbmUoYSk7aWYoIXRoaXNbZV0mJiF0aGlzLnN0eWxlSGFzKGUsYSkpe3MrPWg7Y29udGludWV9Y29uc3QgYz10aGlzLl90ZXh0TGluZXNbYV0sbD1oL3RoaXMubGluZUhlaWdodCx1PXRoaXMuX2dldExpbmVMZWZ0T2Zmc2V0KGEpO2xldCBkLGcsZj0wLHA9MCxtPXRoaXMuZ2V0VmFsdWVPZlByb3BlcnR5QXQoYSwwLGUpLHY9dGhpcy5nZXRWYWx1ZU9mUHJvcGVydHlBdChhLDAsSyk7Y29uc3QgeT1zK2wqKDEtdGhpcy5fZm9udFNpemVGcmFjdGlvbik7bGV0IF89dGhpcy5nZXRIZWlnaHRPZkNoYXIoYSwwKSx4PXRoaXMuZ2V0VmFsdWVPZlByb3BlcnR5QXQoYSwwLFwiZGVsdGFZXCIpO2ZvcihsZXQgcz0wLG49Yy5sZW5ndGg7czxuO3MrKyl7Y29uc3Qgbj10aGlzLl9fY2hhckJvdW5kc1thXVtzXTtkPXRoaXMuZ2V0VmFsdWVPZlByb3BlcnR5QXQoYSxzLGUpLGc9dGhpcy5nZXRWYWx1ZU9mUHJvcGVydHlBdChhLHMsSyk7Y29uc3QgaD10aGlzLmdldEhlaWdodE9mQ2hhcihhLHMpLGM9dGhpcy5nZXRWYWx1ZU9mUHJvcGVydHlBdChhLHMsXCJkZWx0YVlcIik7aWYociYmZCYmZyl0LnNhdmUoKSx0LmZpbGxTdHlsZT12LHQudHJhbnNsYXRlKG4ucmVuZGVyTGVmdCxuLnJlbmRlclRvcCksdC5yb3RhdGUobi5hbmdsZSksdC5maWxsUmVjdCgtbi5rZXJuZWRXaWR0aC8yLG8qaCtjLG4ua2VybmVkV2lkdGgsdGhpcy5mb250U2l6ZS8xNSksdC5yZXN0b3JlKCk7ZWxzZSBpZigoZCE9PW18fGchPT12fHxoIT09X3x8YyE9PXgpJiZwPjApe2xldCBlPWkrdStmO1wicnRsXCI9PT10aGlzLmRpcmVjdGlvbiYmKGU9dGhpcy53aWR0aC1lLXApLG0mJnYmJih0LmZpbGxTdHlsZT12LHQuZmlsbFJlY3QoZSx5K28qXyt4LHAsdGhpcy5mb250U2l6ZS8xNSkpLGY9bi5sZWZ0LHA9bi53aWR0aCxtPWQsdj1nLF89aCx4PWN9ZWxzZSBwKz1uLmtlcm5lZFdpZHRofWxldCBDPWkrdStmO1wicnRsXCI9PT10aGlzLmRpcmVjdGlvbiYmKEM9dGhpcy53aWR0aC1DLXApLHQuZmlsbFN0eWxlPWcsZCYmZyYmdC5maWxsUmVjdChDLHkrbypfK3gscC1uLHRoaXMuZm9udFNpemUvMTUpLHMrPWh9dGhpcy5fcmVtb3ZlU2hhZG93KHQpfV9nZXRGb250RGVjbGFyYXRpb24oKXtsZXR7Zm9udEZhbWlseTp0PXRoaXMuZm9udEZhbWlseSxmb250U3R5bGU6ZT10aGlzLmZvbnRTdHlsZSxmb250V2VpZ2h0OnM9dGhpcy5mb250V2VpZ2h0LGZvbnRTaXplOmk9dGhpcy5mb250U2l6ZX09YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHI9YXJndW1lbnRzLmxlbmd0aD4xP2FyZ3VtZW50c1sxXTp2b2lkIDA7Y29uc3Qgbj10LmluY2x1ZGVzKFwiJ1wiKXx8dC5pbmNsdWRlcygnXCInKXx8dC5pbmNsdWRlcyhcIixcIil8fFNvLmdlbmVyaWNGb250cy5pbmNsdWRlcyh0LnRvTG93ZXJDYXNlKCkpP3Q6J1wiJy5jb25jYXQodCwnXCInKTtyZXR1cm5bZSxzLFwiXCIuY29uY2F0KHI/dGhpcy5DQUNIRV9GT05UX1NJWkU6aSxcInB4XCIpLG5dLmpvaW4oXCIgXCIpfXJlbmRlcih0KXt0aGlzLnZpc2libGUmJih0aGlzLmNhbnZhcyYmdGhpcy5jYW52YXMuc2tpcE9mZnNjcmVlbiYmIXRoaXMuZ3JvdXAmJiF0aGlzLmlzT25TY3JlZW4oKXx8KHRoaXMuX2ZvcmNlQ2xlYXJDYWNoZSYmdGhpcy5pbml0RGltZW5zaW9ucygpLHN1cGVyLnJlbmRlcih0KSkpfWdyYXBoZW1lU3BsaXQodCl7cmV0dXJuIGtpKHQpfV9zcGxpdFRleHRJbnRvTGluZXModCl7Y29uc3QgZT10LnNwbGl0KHRoaXMuX3JlTmV3bGluZSkscz1uZXcgQXJyYXkoZS5sZW5ndGgpLGk9W1wiXFxuXCJdO2xldCByPVtdO2ZvcihsZXQgdD0wO3Q8ZS5sZW5ndGg7dCsrKXNbdF09dGhpcy5ncmFwaGVtZVNwbGl0KGVbdF0pLHI9ci5jb25jYXQoc1t0XSxpKTtyZXR1cm4gci5wb3AoKSx7X3Vud3JhcHBlZExpbmVzOnMsbGluZXM6ZSxncmFwaGVtZVRleHQ6cixncmFwaGVtZUxpbmVzOnN9fXRvT2JqZWN0KCl7bGV0IHQ9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOltdO3JldHVybiBzKHMoe30sc3VwZXIudG9PYmplY3QoWy4uLmxvLC4uLnRdKSkse30se3N0eWxlczpFaSh0aGlzLnN0eWxlcyx0aGlzLnRleHQpfSx0aGlzLnBhdGg/e3BhdGg6dGhpcy5wYXRoLnRvT2JqZWN0KCl9Ont9KX1zZXQodCxlKXtjb25zdHt0ZXh0TGF5b3V0UHJvcGVydGllczpzfT10aGlzLmNvbnN0cnVjdG9yO3N1cGVyLnNldCh0LGUpO2xldCBpPSExLHI9ITE7aWYoXCJvYmplY3RcIj09dHlwZW9mIHQpZm9yKGNvbnN0IGUgaW4gdClcInBhdGhcIj09PWUmJnRoaXMuc2V0UGF0aEluZm8oKSxpPWl8fHMuaW5jbHVkZXMoZSkscj1yfHxcInBhdGhcIj09PWU7ZWxzZSBpPXMuaW5jbHVkZXModCkscj1cInBhdGhcIj09PXQ7cmV0dXJuIHImJnRoaXMuc2V0UGF0aEluZm8oKSxpJiZ0aGlzLmluaXRpYWxpemVkJiYodGhpcy5pbml0RGltZW5zaW9ucygpLHRoaXMuc2V0Q29vcmRzKCkpLHRoaXN9Y29tcGxleGl0eSgpe3JldHVybiAxfXN0YXRpYyBhc3luYyBmcm9tRWxlbWVudCh0LGUscil7Y29uc3Qgbj11cih0LFNvLkFUVFJJQlVURV9OQU1FUyxyKSxvPXMocyh7fSxlKSxuKSx7dGV4dEFuY2hvcjphPU0sdGV4dERlY29yYXRpb246aD1cIlwiLGR4OmM9MCxkeTpsPTAsdG9wOnU9MCxsZWZ0OmQ9MCxmb250U2l6ZTpnPU8sc3Ryb2tlV2lkdGg6Zj0xfT1vLHA9aShvLGJvKSxtPW5ldyB0aGlzKCh0LnRleHRDb250ZW50fHxcIlwiKS5yZXBsYWNlKC9eXFxzK3xcXHMrJHxcXG4rL2csXCJcIikucmVwbGFjZSgvXFxzKy9nLFwiIFwiKSxzKHtsZWZ0OmQrYyx0b3A6dStsLHVuZGVybGluZTpoLmluY2x1ZGVzKFwidW5kZXJsaW5lXCIpLG92ZXJsaW5lOmguaW5jbHVkZXMoXCJvdmVybGluZVwiKSxsaW5ldGhyb3VnaDpoLmluY2x1ZGVzKFwibGluZS10aHJvdWdoXCIpLHN0cm9rZVdpZHRoOjAsZm9udFNpemU6Z30scCkpLHY9bS5nZXRTY2FsZWRIZWlnaHQoKS9tLmhlaWdodCx5PSgobS5oZWlnaHQrbS5zdHJva2VXaWR0aCkqbS5saW5lSGVpZ2h0LW0uaGVpZ2h0KSp2LF89bS5nZXRTY2FsZWRIZWlnaHQoKSt5O2xldCB4PTA7cmV0dXJuIGE9PT1EJiYoeD1tLmdldFNjYWxlZFdpZHRoKCkvMiksYT09PUEmJih4PW0uZ2V0U2NhbGVkV2lkdGgoKSksbS5zZXQoe2xlZnQ6bS5sZWZ0LXgsdG9wOm0udG9wLShfLW0uZm9udFNpemUqKC4wNyttLl9mb250U2l6ZUZyYWN0aW9uKSkvbS5saW5lSGVpZ2h0LHN0cm9rZVdpZHRoOmZ9KSxtfXN0YXRpYyBmcm9tT2JqZWN0KHQpe3JldHVybiB0aGlzLl9mcm9tT2JqZWN0KHMocyh7fSx0KSx7fSx7c3R5bGVzOkFpKHQuc3R5bGVzfHx7fSx0LnRleHQpfSkse2V4dHJhUGFyYW06XCJ0ZXh0XCJ9KX19dChTbyxcInRleHRMYXlvdXRQcm9wZXJ0aWVzXCIsY28pLHQoU28sXCJjYWNoZVByb3BlcnRpZXNcIixbLi4uZnMsLi4ubG9dKSx0KFNvLFwib3duRGVmYXVsdHNcIixnbyksdChTbyxcInR5cGVcIixcIlRleHRcIiksdChTbyxcImdlbmVyaWNGb250c1wiLFtcInNlcmlmXCIsXCJzYW5zLXNlcmlmXCIsXCJtb25vc3BhY2VcIixcImN1cnNpdmVcIixcImZhbnRhc3lcIixcInN5c3RlbS11aVwiLFwidWktc2VyaWZcIixcInVpLXNhbnMtc2VyaWZcIixcInVpLW1vbm9zcGFjZVwiLFwidWktcm91bmRlZFwiLFwibWF0aFwiLFwiZW1vamlcIixcImZhbmdzb25nXCJdKSx0KFNvLFwiQVRUUklCVVRFX05BTUVTXCIsamkuY29uY2F0KFwieFwiLFwieVwiLFwiZHhcIixcImR5XCIsXCJmb250LWZhbWlseVwiLFwiZm9udC1zdHlsZVwiLFwiZm9udC13ZWlnaHRcIixcImZvbnQtc2l6ZVwiLFwibGV0dGVyLXNwYWNpbmdcIixcInRleHQtZGVjb3JhdGlvblwiLFwidGV4dC1hbmNob3JcIikpLHZpKFNvLFtjbGFzcyBleHRlbmRzIEJle190b1NWRygpe2NvbnN0IHQ9dGhpcy5fZ2V0U1ZHTGVmdFRvcE9mZnNldHMoKSxlPXRoaXMuX2dldFNWR1RleHRBbmRCZyh0LnRleHRUb3AsdC50ZXh0TGVmdCk7cmV0dXJuIHRoaXMuX3dyYXBTVkdUZXh0QW5kQmcoZSl9dG9TVkcodCl7cmV0dXJuIHRoaXMuX2NyZWF0ZUJhc2VTVkdNYXJrdXAodGhpcy5fdG9TVkcoKSx7cmV2aXZlcjp0LG5vU3R5bGU6ITAsd2l0aFNoYWRvdzohMH0pfV9nZXRTVkdMZWZ0VG9wT2Zmc2V0cygpe3JldHVybnt0ZXh0TGVmdDotdGhpcy53aWR0aC8yLHRleHRUb3A6LXRoaXMuaGVpZ2h0LzIsbGluZVRvcDp0aGlzLmdldEhlaWdodE9mTGluZSgwKX19X3dyYXBTVkdUZXh0QW5kQmcodCl7bGV0e3RleHRCZ1JlY3RzOmUsdGV4dFNwYW5zOnN9PXQ7Y29uc3QgaT10aGlzLmdldFN2Z1RleHREZWNvcmF0aW9uKHRoaXMpO3JldHVybltlLmpvaW4oXCJcIiksJ1xcdFxcdDx0ZXh0IHhtbDpzcGFjZT1cInByZXNlcnZlXCIgJyx0aGlzLmZvbnRGYW1pbHk/J2ZvbnQtZmFtaWx5PVwiJy5jb25jYXQodGhpcy5mb250RmFtaWx5LnJlcGxhY2UoeG8sXCInXCIpLCdcIiAnKTpcIlwiLHRoaXMuZm9udFNpemU/J2ZvbnQtc2l6ZT1cIicuY29uY2F0KHRoaXMuZm9udFNpemUsJ1wiICcpOlwiXCIsdGhpcy5mb250U3R5bGU/J2ZvbnQtc3R5bGU9XCInLmNvbmNhdCh0aGlzLmZvbnRTdHlsZSwnXCIgJyk6XCJcIix0aGlzLmZvbnRXZWlnaHQ/J2ZvbnQtd2VpZ2h0PVwiJy5jb25jYXQodGhpcy5mb250V2VpZ2h0LCdcIiAnKTpcIlwiLGk/J3RleHQtZGVjb3JhdGlvbj1cIicuY29uY2F0KGksJ1wiICcpOlwiXCIsXCJydGxcIj09PXRoaXMuZGlyZWN0aW9uPydkaXJlY3Rpb249XCInLmNvbmNhdCh0aGlzLmRpcmVjdGlvbiwnXCIgJyk6XCJcIiwnc3R5bGU9XCInLHRoaXMuZ2V0U3ZnU3R5bGVzKCEwKSwnXCInLHRoaXMuYWRkUGFpbnRPcmRlcigpLFwiID5cIixzLmpvaW4oXCJcIiksXCI8L3RleHQ+XFxuXCJdfV9nZXRTVkdUZXh0QW5kQmcodCxlKXtjb25zdCBzPVtdLGk9W107bGV0IHIsbj10O3RoaXMuYmFja2dyb3VuZENvbG9yJiZpLnB1c2goLi4uQ28odGhpcy5iYWNrZ3JvdW5kQ29sb3IsLXRoaXMud2lkdGgvMiwtdGhpcy5oZWlnaHQvMix0aGlzLndpZHRoLHRoaXMuaGVpZ2h0KSk7Zm9yKGxldCB0PTAsbz10aGlzLl90ZXh0TGluZXMubGVuZ3RoO3Q8bzt0Kyspcj10aGlzLl9nZXRMaW5lTGVmdE9mZnNldCh0KSxcInJ0bFwiPT09dGhpcy5kaXJlY3Rpb24mJihyKz10aGlzLndpZHRoKSwodGhpcy50ZXh0QmFja2dyb3VuZENvbG9yfHx0aGlzLnN0eWxlSGFzKFwidGV4dEJhY2tncm91bmRDb2xvclwiLHQpKSYmdGhpcy5fc2V0U1ZHVGV4dExpbmVCZyhpLHQsZStyLG4pLHRoaXMuX3NldFNWR1RleHRMaW5lVGV4dChzLHQsZStyLG4pLG4rPXRoaXMuZ2V0SGVpZ2h0T2ZMaW5lKHQpO3JldHVybnt0ZXh0U3BhbnM6cyx0ZXh0QmdSZWN0czppfX1fY3JlYXRlVGV4dENoYXJTcGFuKHQsZSxzLGkpe2NvbnN0IHI9dGhpcy5nZXRTdmdTcGFuU3R5bGVzKGUsdCE9PXQudHJpbSgpfHwhIXQubWF0Y2goX28pKSxuPXI/J3N0eWxlPVwiJy5jb25jYXQociwnXCInKTpcIlwiLGE9ZS5kZWx0YVksaD1hPycgZHk9XCInLmNvbmNhdChxdChhLG8uTlVNX0ZSQUNUSU9OX0RJR0lUUyksJ1wiICcpOlwiXCI7cmV0dXJuJzx0c3BhbiB4PVwiJy5jb25jYXQocXQocyxvLk5VTV9GUkFDVElPTl9ESUdJVFMpLCdcIiB5PVwiJykuY29uY2F0KHF0KGksby5OVU1fRlJBQ1RJT05fRElHSVRTKSwnXCIgJykuY29uY2F0KGgpLmNvbmNhdChuLFwiPlwiKS5jb25jYXQoT2kodCksXCI8L3RzcGFuPlwiKX1fc2V0U1ZHVGV4dExpbmVUZXh0KHQsZSxzLGkpe2NvbnN0IHI9dGhpcy5nZXRIZWlnaHRPZkxpbmUoZSksbj10aGlzLnRleHRBbGlnbi5pbmNsdWRlcyhmbyksbz10aGlzLl90ZXh0TGluZXNbZV07bGV0IGEsaCxjLGwsdSxkPVwiXCIsZz0wO2krPXIqKDEtdGhpcy5fZm9udFNpemVGcmFjdGlvbikvdGhpcy5saW5lSGVpZ2h0O2ZvcihsZXQgcj0wLGY9by5sZW5ndGgtMTtyPD1mO3IrKyl1PXI9PT1mfHx0aGlzLmNoYXJTcGFjaW5nLGQrPW9bcl0sYz10aGlzLl9fY2hhckJvdW5kc1tlXVtyXSwwPT09Zz8ocys9Yy5rZXJuZWRXaWR0aC1jLndpZHRoLGcrPWMud2lkdGgpOmcrPWMua2VybmVkV2lkdGgsbiYmIXUmJnRoaXMuX3JlU3BhY2VBbmRUYWIudGVzdChvW3JdKSYmKHU9ITApLHV8fChhPWF8fHRoaXMuZ2V0Q29tcGxldGVTdHlsZURlY2xhcmF0aW9uKGUsciksaD10aGlzLmdldENvbXBsZXRlU3R5bGVEZWNsYXJhdGlvbihlLHIrMSksdT1QaShhLGgsITApKSx1JiYobD10aGlzLl9nZXRTdHlsZURlY2xhcmF0aW9uKGUsciksdC5wdXNoKHRoaXMuX2NyZWF0ZVRleHRDaGFyU3BhbihkLGwscyxpKSksZD1cIlwiLGE9aCxcInJ0bFwiPT09dGhpcy5kaXJlY3Rpb24/cy09ZzpzKz1nLGc9MCl9X3NldFNWR1RleHRMaW5lQmcodCxlLHMsaSl7Y29uc3Qgcj10aGlzLl90ZXh0TGluZXNbZV0sbj10aGlzLmdldEhlaWdodE9mTGluZShlKS90aGlzLmxpbmVIZWlnaHQ7bGV0IG8sYT0wLGg9MCxjPXRoaXMuZ2V0VmFsdWVPZlByb3BlcnR5QXQoZSwwLFwidGV4dEJhY2tncm91bmRDb2xvclwiKTtmb3IobGV0IGw9MDtsPHIubGVuZ3RoO2wrKyl7Y29uc3R7bGVmdDpyLHdpZHRoOnUsa2VybmVkV2lkdGg6ZH09dGhpcy5fX2NoYXJCb3VuZHNbZV1bbF07bz10aGlzLmdldFZhbHVlT2ZQcm9wZXJ0eUF0KGUsbCxcInRleHRCYWNrZ3JvdW5kQ29sb3JcIiksbyE9PWM/KGMmJnQucHVzaCguLi5DbyhjLHMraCxpLGEsbikpLGg9cixhPXUsYz1vKTphKz1kfW8mJnQucHVzaCguLi5DbyhjLHMraCxpLGEsbikpfV9nZXRTVkdMaW5lVG9wT2Zmc2V0KHQpe2xldCBlLHM9MDtmb3IoZT0wO2U8dDtlKyspcys9dGhpcy5nZXRIZWlnaHRPZkxpbmUoZSk7Y29uc3QgaT10aGlzLmdldEhlaWdodE9mTGluZShlKTtyZXR1cm57bGluZVRvcDpzLG9mZnNldDoodGhpcy5fZm9udFNpemVNdWx0LXRoaXMuX2ZvbnRTaXplRnJhY3Rpb24pKmkvKHRoaXMubGluZUhlaWdodCp0aGlzLl9mb250U2l6ZU11bHQpfX1nZXRTdmdTdHlsZXModCl7cmV0dXJuXCJcIi5jb25jYXQoc3VwZXIuZ2V0U3ZnU3R5bGVzKHQpLFwiIHdoaXRlLXNwYWNlOiBwcmU7XCIpfWdldFN2Z1NwYW5TdHlsZXModCxlKXtjb25zdHtmb250RmFtaWx5OnMsc3Ryb2tlV2lkdGg6aSxzdHJva2U6cixmaWxsOm4sZm9udFNpemU6byxmb250U3R5bGU6YSxmb250V2VpZ2h0OmgsZGVsdGFZOmN9PXQsbD10aGlzLmdldFN2Z1RleHREZWNvcmF0aW9uKHQpO3JldHVybltyP1p0KEoscik6XCJcIixpP1wic3Ryb2tlLXdpZHRoOiBcIi5jb25jYXQoaSxcIjsgXCIpOlwiXCIscz9cImZvbnQtZmFtaWx5OiBcIi5jb25jYXQocy5pbmNsdWRlcyhcIidcIil8fHMuaW5jbHVkZXMoJ1wiJyk/czpcIidcIi5jb25jYXQocyxcIidcIiksXCI7IFwiKTpcIlwiLG8/XCJmb250LXNpemU6IFwiLmNvbmNhdChvLFwicHg7IFwiKTpcIlwiLGE/XCJmb250LXN0eWxlOiBcIi5jb25jYXQoYSxcIjsgXCIpOlwiXCIsaD9cImZvbnQtd2VpZ2h0OiBcIi5jb25jYXQoaCxcIjsgXCIpOlwiXCIsbD9cInRleHQtZGVjb3JhdGlvbjogXCIuY29uY2F0KGwsXCI7IFwiKTpsLG4/WnQoSyxuKTpcIlwiLGM/XCJiYXNlbGluZS1zaGlmdDogXCIuY29uY2F0KC1jLFwiOyBcIik6XCJcIixlP1wid2hpdGUtc3BhY2U6IHByZTsgXCI6XCJcIl0uam9pbihcIlwiKX1nZXRTdmdUZXh0RGVjb3JhdGlvbih0KXtyZXR1cm5bXCJvdmVybGluZVwiLFwidW5kZXJsaW5lXCIsXCJsaW5lLXRocm91Z2hcIl0uZmlsdGVyKChlPT50W2UucmVwbGFjZShcIi1cIixcIlwiKV0pKS5qb2luKFwiIFwiKX19XSksdHQuc2V0Q2xhc3MoU28pLHR0LnNldFNWR0NsYXNzKFNvKTtjbGFzcyBUb3tjb25zdHJ1Y3RvcihlKXt0KHRoaXMsXCJ0YXJnZXRcIix2b2lkIDApLHQodGhpcyxcIl9fbW91c2VEb3duSW5QbGFjZVwiLCExKSx0KHRoaXMsXCJfX2RyYWdTdGFydEZpcmVkXCIsITEpLHQodGhpcyxcIl9faXNEcmFnZ2luZ092ZXJcIiwhMSksdCh0aGlzLFwiX19kcmFnU3RhcnRTZWxlY3Rpb25cIix2b2lkIDApLHQodGhpcyxcIl9fZHJhZ0ltYWdlRGlzcG9zZXJcIix2b2lkIDApLHQodGhpcyxcIl9kaXNwb3NlXCIsdm9pZCAwKSx0aGlzLnRhcmdldD1lO2NvbnN0IHM9W3RoaXMudGFyZ2V0Lm9uKFwiZHJhZ2VudGVyXCIsdGhpcy5kcmFnRW50ZXJIYW5kbGVyLmJpbmQodGhpcykpLHRoaXMudGFyZ2V0Lm9uKFwiZHJhZ292ZXJcIix0aGlzLmRyYWdPdmVySGFuZGxlci5iaW5kKHRoaXMpKSx0aGlzLnRhcmdldC5vbihcImRyYWdsZWF2ZVwiLHRoaXMuZHJhZ0xlYXZlSGFuZGxlci5iaW5kKHRoaXMpKSx0aGlzLnRhcmdldC5vbihcImRyYWdlbmRcIix0aGlzLmRyYWdFbmRIYW5kbGVyLmJpbmQodGhpcykpLHRoaXMudGFyZ2V0Lm9uKFwiZHJvcFwiLHRoaXMuZHJvcEhhbmRsZXIuYmluZCh0aGlzKSldO3RoaXMuX2Rpc3Bvc2U9KCk9PntzLmZvckVhY2goKHQ9PnQoKSkpLHRoaXMuX2Rpc3Bvc2U9dm9pZCAwfX1pc1BvaW50ZXJPdmVyU2VsZWN0aW9uKHQpe2NvbnN0IGU9dGhpcy50YXJnZXQscz1lLmdldFNlbGVjdGlvblN0YXJ0RnJvbVBvaW50ZXIodCk7cmV0dXJuIGUuaXNFZGl0aW5nJiZzPj1lLnNlbGVjdGlvblN0YXJ0JiZzPD1lLnNlbGVjdGlvbkVuZCYmZS5zZWxlY3Rpb25TdGFydDxlLnNlbGVjdGlvbkVuZH1zdGFydCh0KXtyZXR1cm4gdGhpcy5fX21vdXNlRG93bkluUGxhY2U9dGhpcy5pc1BvaW50ZXJPdmVyU2VsZWN0aW9uKHQpfWlzQWN0aXZlKCl7cmV0dXJuIHRoaXMuX19tb3VzZURvd25JblBsYWNlfWVuZCh0KXtjb25zdCBlPXRoaXMuaXNBY3RpdmUoKTtyZXR1cm4gZSYmIXRoaXMuX19kcmFnU3RhcnRGaXJlZCYmKHRoaXMudGFyZ2V0LnNldEN1cnNvckJ5Q2xpY2sodCksdGhpcy50YXJnZXQuaW5pdERlbGF5ZWRDdXJzb3IoITApKSx0aGlzLl9fbW91c2VEb3duSW5QbGFjZT0hMSx0aGlzLl9fZHJhZ1N0YXJ0RmlyZWQ9ITEsdGhpcy5fX2lzRHJhZ2dpbmdPdmVyPSExLGV9Z2V0RHJhZ1N0YXJ0U2VsZWN0aW9uKCl7cmV0dXJuIHRoaXMuX19kcmFnU3RhcnRTZWxlY3Rpb259c2V0RHJhZ0ltYWdlKHQsZSl7dmFyIHM7bGV0e3NlbGVjdGlvblN0YXJ0Omksc2VsZWN0aW9uRW5kOnJ9PWU7Y29uc3Qgbj10aGlzLnRhcmdldCxvPW4uY2FudmFzLGE9bmV3IG90KG4uZmxpcFg/LTE6MSxuLmZsaXBZPy0xOjEpLGg9bi5fZ2V0Q3Vyc29yQm91bmRhcmllcyhpKSxjPW5ldyBvdChoLmxlZnQraC5sZWZ0T2Zmc2V0LGgudG9wK2gudG9wT2Zmc2V0KS5tdWx0aXBseShhKS50cmFuc2Zvcm0obi5jYWxjVHJhbnNmb3JtTWF0cml4KCkpLGw9by5nZXRTY2VuZVBvaW50KHQpLnN1YnRyYWN0KGMpLHU9bi5nZXRDYW52YXNSZXRpbmFTY2FsaW5nKCksZD1uLmdldEJvdW5kaW5nUmVjdCgpLGc9Yy5zdWJ0cmFjdChuZXcgb3QoZC5sZWZ0LGQudG9wKSksZj1vLnZpZXdwb3J0VHJhbnNmb3JtLHA9Zy5hZGQobCkudHJhbnNmb3JtKGYsITApLG09bi5iYWNrZ3JvdW5kQ29sb3Isdj1UaShuLnN0eWxlcyk7bi5iYWNrZ3JvdW5kQ29sb3I9XCJcIjtjb25zdCB5PXtzdHJva2U6XCJ0cmFuc3BhcmVudFwiLGZpbGw6XCJ0cmFuc3BhcmVudFwiLHRleHRCYWNrZ3JvdW5kQ29sb3I6XCJ0cmFuc3BhcmVudFwifTtuLnNldFNlbGVjdGlvblN0eWxlcyh5LDAsaSksbi5zZXRTZWxlY3Rpb25TdHlsZXMoeSxyLG4udGV4dC5sZW5ndGgpLG4uZGlydHk9ITA7Y29uc3QgXz1uLnRvQ2FudmFzRWxlbWVudCh7ZW5hYmxlUmV0aW5hU2NhbGluZzpvLmVuYWJsZVJldGluYVNjYWxpbmcsdmlld3BvcnRUcmFuc2Zvcm06ITB9KTtuLmJhY2tncm91bmRDb2xvcj1tLG4uc3R5bGVzPXYsbi5kaXJ0eT0hMCxvbihfLHtwb3NpdGlvbjpcImZpeGVkXCIsbGVmdDpcIlwiLmNvbmNhdCgtXy53aWR0aCxcInB4XCIpLGJvcmRlcjpqLHdpZHRoOlwiXCIuY29uY2F0KF8ud2lkdGgvdSxcInB4XCIpLGhlaWdodDpcIlwiLmNvbmNhdChfLmhlaWdodC91LFwicHhcIil9KSx0aGlzLl9fZHJhZ0ltYWdlRGlzcG9zZXImJnRoaXMuX19kcmFnSW1hZ2VEaXNwb3NlcigpLHRoaXMuX19kcmFnSW1hZ2VEaXNwb3Nlcj0oKT0+e18ucmVtb3ZlKCl9LHJlKHQudGFyZ2V0fHx0aGlzLnRhcmdldC5oaWRkZW5UZXh0YXJlYSkuYm9keS5hcHBlbmRDaGlsZChfKSxudWxsPT09KHM9dC5kYXRhVHJhbnNmZXIpfHx2b2lkIDA9PT1zfHxzLnNldERyYWdJbWFnZShfLHAueCxwLnkpfW9uRHJhZ1N0YXJ0KHQpe3RoaXMuX19kcmFnU3RhcnRGaXJlZD0hMDtjb25zdCBlPXRoaXMudGFyZ2V0LGk9dGhpcy5pc0FjdGl2ZSgpO2lmKGkmJnQuZGF0YVRyYW5zZmVyKXtjb25zdCBpPXRoaXMuX19kcmFnU3RhcnRTZWxlY3Rpb249e3NlbGVjdGlvblN0YXJ0OmUuc2VsZWN0aW9uU3RhcnQsc2VsZWN0aW9uRW5kOmUuc2VsZWN0aW9uRW5kfSxyPWUuX3RleHQuc2xpY2UoaS5zZWxlY3Rpb25TdGFydCxpLnNlbGVjdGlvbkVuZCkuam9pbihcIlwiKSxuPXMoe3RleHQ6ZS50ZXh0LHZhbHVlOnJ9LGkpO3QuZGF0YVRyYW5zZmVyLnNldERhdGEoXCJ0ZXh0L3BsYWluXCIsciksdC5kYXRhVHJhbnNmZXIuc2V0RGF0YShcImFwcGxpY2F0aW9uL2ZhYnJpY1wiLEpTT04uc3RyaW5naWZ5KHt2YWx1ZTpyLHN0eWxlczplLmdldFNlbGVjdGlvblN0eWxlcyhpLnNlbGVjdGlvblN0YXJ0LGkuc2VsZWN0aW9uRW5kLCEwKX0pKSx0LmRhdGFUcmFuc2Zlci5lZmZlY3RBbGxvd2VkPVwiY29weU1vdmVcIix0aGlzLnNldERyYWdJbWFnZSh0LG4pfXJldHVybiBlLmFib3J0Q3Vyc29yQW5pbWF0aW9uKCksaX1jYW5Ecm9wKHQpe2lmKHRoaXMudGFyZ2V0LmVkaXRhYmxlJiYhdGhpcy50YXJnZXQuZ2V0QWN0aXZlQ29udHJvbCgpJiYhdC5kZWZhdWx0UHJldmVudGVkKXtpZih0aGlzLmlzQWN0aXZlKCkmJnRoaXMuX19kcmFnU3RhcnRTZWxlY3Rpb24pe2NvbnN0IGU9dGhpcy50YXJnZXQuZ2V0U2VsZWN0aW9uU3RhcnRGcm9tUG9pbnRlcih0KSxzPXRoaXMuX19kcmFnU3RhcnRTZWxlY3Rpb247cmV0dXJuIGU8cy5zZWxlY3Rpb25TdGFydHx8ZT5zLnNlbGVjdGlvbkVuZH1yZXR1cm4hMH1yZXR1cm4hMX10YXJnZXRDYW5Ecm9wKHQpe3JldHVybiB0aGlzLnRhcmdldC5jYW5Ecm9wKHQpfWRyYWdFbnRlckhhbmRsZXIodCl7bGV0e2U6ZX09dDtjb25zdCBzPXRoaXMudGFyZ2V0Q2FuRHJvcChlKTshdGhpcy5fX2lzRHJhZ2dpbmdPdmVyJiZzJiYodGhpcy5fX2lzRHJhZ2dpbmdPdmVyPSEwKX1kcmFnT3ZlckhhbmRsZXIodCl7Y29uc3R7ZTplfT10LHM9dGhpcy50YXJnZXRDYW5Ecm9wKGUpOyF0aGlzLl9faXNEcmFnZ2luZ092ZXImJnM/dGhpcy5fX2lzRHJhZ2dpbmdPdmVyPSEwOnRoaXMuX19pc0RyYWdnaW5nT3ZlciYmIXMmJih0aGlzLl9faXNEcmFnZ2luZ092ZXI9ITEpLHRoaXMuX19pc0RyYWdnaW5nT3ZlciYmKGUucHJldmVudERlZmF1bHQoKSx0LmNhbkRyb3A9ITAsdC5kcm9wVGFyZ2V0PXRoaXMudGFyZ2V0KX1kcmFnTGVhdmVIYW5kbGVyKCl7KHRoaXMuX19pc0RyYWdnaW5nT3Zlcnx8dGhpcy5pc0FjdGl2ZSgpKSYmKHRoaXMuX19pc0RyYWdnaW5nT3Zlcj0hMSl9ZHJvcEhhbmRsZXIodCl7dmFyIGU7Y29uc3R7ZTpzfT10LGk9cy5kZWZhdWx0UHJldmVudGVkO3RoaXMuX19pc0RyYWdnaW5nT3Zlcj0hMSxzLnByZXZlbnREZWZhdWx0KCk7bGV0IHI9bnVsbD09PShlPXMuZGF0YVRyYW5zZmVyKXx8dm9pZCAwPT09ZT92b2lkIDA6ZS5nZXREYXRhKFwidGV4dC9wbGFpblwiKTtpZihyJiYhaSl7Y29uc3QgZT10aGlzLnRhcmdldCxpPWUuY2FudmFzO2xldCBuPWUuZ2V0U2VsZWN0aW9uU3RhcnRGcm9tUG9pbnRlcihzKTtjb25zdHtzdHlsZXM6b309cy5kYXRhVHJhbnNmZXIudHlwZXMuaW5jbHVkZXMoXCJhcHBsaWNhdGlvbi9mYWJyaWNcIik/SlNPTi5wYXJzZShzLmRhdGFUcmFuc2Zlci5nZXREYXRhKFwiYXBwbGljYXRpb24vZmFicmljXCIpKTp7fSxhPXJbTWF0aC5tYXgoMCxyLmxlbmd0aC0xKV0saD0wO2lmKHRoaXMuX19kcmFnU3RhcnRTZWxlY3Rpb24pe2NvbnN0IHQ9dGhpcy5fX2RyYWdTdGFydFNlbGVjdGlvbi5zZWxlY3Rpb25TdGFydCxzPXRoaXMuX19kcmFnU3RhcnRTZWxlY3Rpb24uc2VsZWN0aW9uRW5kO24+dCYmbjw9cz9uPXQ6bj5zJiYobi09cy10KSxlLnJlbW92ZUNoYXJzKHQscyksZGVsZXRlIHRoaXMuX19kcmFnU3RhcnRTZWxlY3Rpb259ZS5fcmVOZXdsaW5lLnRlc3QoYSkmJihlLl9yZU5ld2xpbmUudGVzdChlLl90ZXh0W25dKXx8bj09PWUuX3RleHQubGVuZ3RoKSYmKHI9ci50cmltRW5kKCkpLHQuZGlkRHJvcD0hMCx0LmRyb3BUYXJnZXQ9ZSxlLmluc2VydENoYXJzKHIsbyxuKSxpLnNldEFjdGl2ZU9iamVjdChlKSxlLmVudGVyRWRpdGluZyhzKSxlLnNlbGVjdGlvblN0YXJ0PU1hdGgubWluKG4raCxlLl90ZXh0Lmxlbmd0aCksZS5zZWxlY3Rpb25FbmQ9TWF0aC5taW4oZS5zZWxlY3Rpb25TdGFydCtyLmxlbmd0aCxlLl90ZXh0Lmxlbmd0aCksZS5oaWRkZW5UZXh0YXJlYS52YWx1ZT1lLnRleHQsZS5fdXBkYXRlVGV4dGFyZWEoKSxlLmhpZGRlblRleHRhcmVhLmZvY3VzKCksZS5maXJlKHose2luZGV4Om4raCxhY3Rpb246XCJkcm9wXCJ9KSxpLmZpcmUoXCJ0ZXh0OmNoYW5nZWRcIix7dGFyZ2V0OmV9KSxpLmNvbnRleHRUb3BEaXJ0eT0hMCxpLnJlcXVlc3RSZW5kZXJBbGwoKX19ZHJhZ0VuZEhhbmRsZXIodCl7bGV0e2U6ZX09dDtpZih0aGlzLmlzQWN0aXZlKCkmJnRoaXMuX19kcmFnU3RhcnRGaXJlZCYmdGhpcy5fX2RyYWdTdGFydFNlbGVjdGlvbil7dmFyIHM7Y29uc3QgdD10aGlzLnRhcmdldCxpPXRoaXMudGFyZ2V0LmNhbnZhcyx7c2VsZWN0aW9uU3RhcnQ6cixzZWxlY3Rpb25FbmQ6bn09dGhpcy5fX2RyYWdTdGFydFNlbGVjdGlvbixvPShudWxsPT09KHM9ZS5kYXRhVHJhbnNmZXIpfHx2b2lkIDA9PT1zP3ZvaWQgMDpzLmRyb3BFZmZlY3QpfHxqO289PT1qPyh0LnNlbGVjdGlvblN0YXJ0PXIsdC5zZWxlY3Rpb25FbmQ9bix0Ll91cGRhdGVUZXh0YXJlYSgpLHQuaGlkZGVuVGV4dGFyZWEuZm9jdXMoKSk6KHQuY2xlYXJDb250ZXh0VG9wKCksXCJtb3ZlXCI9PT1vJiYodC5yZW1vdmVDaGFycyhyLG4pLHQuc2VsZWN0aW9uU3RhcnQ9dC5zZWxlY3Rpb25FbmQ9cix0LmhpZGRlblRleHRhcmVhJiYodC5oaWRkZW5UZXh0YXJlYS52YWx1ZT10LnRleHQpLHQuX3VwZGF0ZVRleHRhcmVhKCksdC5maXJlKHose2luZGV4OnIsYWN0aW9uOlwiZHJhZ2VuZFwifSksaS5maXJlKFwidGV4dDpjaGFuZ2VkXCIse3RhcmdldDp0fSksaS5yZXF1ZXN0UmVuZGVyQWxsKCkpLHQuZXhpdEVkaXRpbmcoKSl9dGhpcy5fX2RyYWdJbWFnZURpc3Bvc2VyJiZ0aGlzLl9fZHJhZ0ltYWdlRGlzcG9zZXIoKSxkZWxldGUgdGhpcy5fX2RyYWdJbWFnZURpc3Bvc2VyLGRlbGV0ZSB0aGlzLl9fZHJhZ1N0YXJ0U2VsZWN0aW9uLHRoaXMuX19pc0RyYWdnaW5nT3Zlcj0hMX1kaXNwb3NlKCl7dGhpcy5fZGlzcG9zZSYmdGhpcy5fZGlzcG9zZSgpfX1jb25zdCBPbz0vWyBcXG5cXC4sOyFcXD9cXC1dLztjbGFzcyBrbyBleHRlbmRzIFNve2NvbnN0cnVjdG9yKCl7c3VwZXIoLi4uYXJndW1lbnRzKSx0KHRoaXMsXCJfY3VycmVudEN1cnNvck9wYWNpdHlcIiwxKX1pbml0QmVoYXZpb3IoKXt0aGlzLl90aWNrPXRoaXMuX3RpY2suYmluZCh0aGlzKSx0aGlzLl9vblRpY2tDb21wbGV0ZT10aGlzLl9vblRpY2tDb21wbGV0ZS5iaW5kKHRoaXMpLHRoaXMudXBkYXRlU2VsZWN0aW9uT25Nb3VzZU1vdmU9dGhpcy51cGRhdGVTZWxlY3Rpb25Pbk1vdXNlTW92ZS5iaW5kKHRoaXMpfW9uRGVzZWxlY3QodCl7cmV0dXJuIHRoaXMuaXNFZGl0aW5nJiZ0aGlzLmV4aXRFZGl0aW5nKCksdGhpcy5zZWxlY3RlZD0hMSxzdXBlci5vbkRlc2VsZWN0KHQpfV9hbmltYXRlQ3Vyc29yKHQpe2xldHt0b1ZhbHVlOmUsZHVyYXRpb246cyxkZWxheTppLG9uQ29tcGxldGU6cn09dDtyZXR1cm4gQXMoe3N0YXJ0VmFsdWU6dGhpcy5fY3VycmVudEN1cnNvck9wYWNpdHksZW5kVmFsdWU6ZSxkdXJhdGlvbjpzLGRlbGF5Omksb25Db21wbGV0ZTpyLGFib3J0OigpPT4hdGhpcy5jYW52YXN8fHRoaXMuc2VsZWN0aW9uU3RhcnQhPT10aGlzLnNlbGVjdGlvbkVuZCxvbkNoYW5nZTp0PT57dGhpcy5fY3VycmVudEN1cnNvck9wYWNpdHk9dCx0aGlzLnJlbmRlckN1cnNvck9yU2VsZWN0aW9uKCl9fSl9X3RpY2sodCl7dGhpcy5fY3VycmVudFRpY2tTdGF0ZT10aGlzLl9hbmltYXRlQ3Vyc29yKHt0b1ZhbHVlOjAsZHVyYXRpb246dGhpcy5jdXJzb3JEdXJhdGlvbi8yLGRlbGF5Ok1hdGgubWF4KHR8fDAsMTAwKSxvbkNvbXBsZXRlOnRoaXMuX29uVGlja0NvbXBsZXRlfSl9X29uVGlja0NvbXBsZXRlKCl7dmFyIHQ7bnVsbD09PSh0PXRoaXMuX2N1cnJlbnRUaWNrQ29tcGxldGVTdGF0ZSl8fHZvaWQgMD09PXR8fHQuYWJvcnQoKSx0aGlzLl9jdXJyZW50VGlja0NvbXBsZXRlU3RhdGU9dGhpcy5fYW5pbWF0ZUN1cnNvcih7dG9WYWx1ZToxLGR1cmF0aW9uOnRoaXMuY3Vyc29yRHVyYXRpb24sb25Db21wbGV0ZTp0aGlzLl90aWNrfSl9aW5pdERlbGF5ZWRDdXJzb3IodCl7dGhpcy5hYm9ydEN1cnNvckFuaW1hdGlvbigpLHRoaXMuX3RpY2sodD8wOnRoaXMuY3Vyc29yRGVsYXkpfWFib3J0Q3Vyc29yQW5pbWF0aW9uKCl7bGV0IHQ9ITE7W3RoaXMuX2N1cnJlbnRUaWNrU3RhdGUsdGhpcy5fY3VycmVudFRpY2tDb21wbGV0ZVN0YXRlXS5mb3JFYWNoKChlPT57ZSYmIWUuaXNEb25lKCkmJih0PSEwLGUuYWJvcnQoKSl9KSksdGhpcy5fY3VycmVudEN1cnNvck9wYWNpdHk9MSx0JiZ0aGlzLmNsZWFyQ29udGV4dFRvcCgpfXJlc3RhcnRDdXJzb3JJZk5lZWRlZCgpe1t0aGlzLl9jdXJyZW50VGlja1N0YXRlLHRoaXMuX2N1cnJlbnRUaWNrQ29tcGxldGVTdGF0ZV0uc29tZSgodD0+IXR8fHQuaXNEb25lKCkpKSYmdGhpcy5pbml0RGVsYXllZEN1cnNvcigpfXNlbGVjdEFsbCgpe3JldHVybiB0aGlzLnNlbGVjdGlvblN0YXJ0PTAsdGhpcy5zZWxlY3Rpb25FbmQ9dGhpcy5fdGV4dC5sZW5ndGgsdGhpcy5fZmlyZVNlbGVjdGlvbkNoYW5nZWQoKSx0aGlzLl91cGRhdGVUZXh0YXJlYSgpLHRoaXN9Z2V0U2VsZWN0ZWRUZXh0KCl7cmV0dXJuIHRoaXMuX3RleHQuc2xpY2UodGhpcy5zZWxlY3Rpb25TdGFydCx0aGlzLnNlbGVjdGlvbkVuZCkuam9pbihcIlwiKX1maW5kV29yZEJvdW5kYXJ5TGVmdCh0KXtsZXQgZT0wLHM9dC0xO2lmKHRoaXMuX3JlU3BhY2UudGVzdCh0aGlzLl90ZXh0W3NdKSlmb3IoO3RoaXMuX3JlU3BhY2UudGVzdCh0aGlzLl90ZXh0W3NdKTspZSsrLHMtLTtmb3IoOy9cXFMvLnRlc3QodGhpcy5fdGV4dFtzXSkmJnM+LTE7KWUrKyxzLS07cmV0dXJuIHQtZX1maW5kV29yZEJvdW5kYXJ5UmlnaHQodCl7bGV0IGU9MCxzPXQ7aWYodGhpcy5fcmVTcGFjZS50ZXN0KHRoaXMuX3RleHRbc10pKWZvcig7dGhpcy5fcmVTcGFjZS50ZXN0KHRoaXMuX3RleHRbc10pOyllKysscysrO2Zvcig7L1xcUy8udGVzdCh0aGlzLl90ZXh0W3NdKSYmczx0aGlzLl90ZXh0Lmxlbmd0aDspZSsrLHMrKztyZXR1cm4gdCtlfWZpbmRMaW5lQm91bmRhcnlMZWZ0KHQpe2xldCBlPTAscz10LTE7Zm9yKDshL1xcbi8udGVzdCh0aGlzLl90ZXh0W3NdKSYmcz4tMTspZSsrLHMtLTtyZXR1cm4gdC1lfWZpbmRMaW5lQm91bmRhcnlSaWdodCh0KXtsZXQgZT0wLHM9dDtmb3IoOyEvXFxuLy50ZXN0KHRoaXMuX3RleHRbc10pJiZzPHRoaXMuX3RleHQubGVuZ3RoOyllKysscysrO3JldHVybiB0K2V9c2VhcmNoV29yZEJvdW5kYXJ5KHQsZSl7Y29uc3Qgcz10aGlzLl90ZXh0O2xldCBpPXQ+MCYmdGhpcy5fcmVTcGFjZS50ZXN0KHNbdF0pJiYoLTE9PT1lfHwhRi50ZXN0KHNbdC0xXSkpP3QtMTp0LHI9c1tpXTtmb3IoO2k+MCYmaTxzLmxlbmd0aCYmIU9vLnRlc3Qocik7KWkrPWUscj1zW2ldO3JldHVybi0xPT09ZSYmT28udGVzdChyKSYmaSsrLGl9c2VsZWN0V29yZCh0KXt0PXR8fHRoaXMuc2VsZWN0aW9uU3RhcnQ7Y29uc3QgZT10aGlzLnNlYXJjaFdvcmRCb3VuZGFyeSh0LC0xKSxzPU1hdGgubWF4KGUsdGhpcy5zZWFyY2hXb3JkQm91bmRhcnkodCwxKSk7dGhpcy5zZWxlY3Rpb25TdGFydD1lLHRoaXMuc2VsZWN0aW9uRW5kPXMsdGhpcy5fZmlyZVNlbGVjdGlvbkNoYW5nZWQoKSx0aGlzLl91cGRhdGVUZXh0YXJlYSgpLHRoaXMucmVuZGVyQ3Vyc29yT3JTZWxlY3Rpb24oKX1zZWxlY3RMaW5lKHQpe3Q9dHx8dGhpcy5zZWxlY3Rpb25TdGFydDtjb25zdCBlPXRoaXMuZmluZExpbmVCb3VuZGFyeUxlZnQodCkscz10aGlzLmZpbmRMaW5lQm91bmRhcnlSaWdodCh0KTtyZXR1cm4gdGhpcy5zZWxlY3Rpb25TdGFydD1lLHRoaXMuc2VsZWN0aW9uRW5kPXMsdGhpcy5fZmlyZVNlbGVjdGlvbkNoYW5nZWQoKSx0aGlzLl91cGRhdGVUZXh0YXJlYSgpLHRoaXN9ZW50ZXJFZGl0aW5nKHQpeyF0aGlzLmlzRWRpdGluZyYmdGhpcy5lZGl0YWJsZSYmKHRoaXMuZW50ZXJFZGl0aW5nSW1wbCgpLHRoaXMuZmlyZShcImVkaXRpbmc6ZW50ZXJlZFwiLHQ/e2U6dH06dm9pZCAwKSx0aGlzLl9maXJlU2VsZWN0aW9uQ2hhbmdlZCgpLHRoaXMuY2FudmFzJiYodGhpcy5jYW52YXMuZmlyZShcInRleHQ6ZWRpdGluZzplbnRlcmVkXCIse3RhcmdldDp0aGlzLGU6dH0pLHRoaXMuY2FudmFzLnJlcXVlc3RSZW5kZXJBbGwoKSkpfWVudGVyRWRpdGluZ0ltcGwoKXt0aGlzLmNhbnZhcyYmKHRoaXMuY2FudmFzLmNhbGNPZmZzZXQoKSx0aGlzLmNhbnZhcy50ZXh0RWRpdGluZ01hbmFnZXIuZXhpdFRleHRFZGl0aW5nKCkpLHRoaXMuaXNFZGl0aW5nPSEwLHRoaXMuaW5pdEhpZGRlblRleHRhcmVhKCksdGhpcy5oaWRkZW5UZXh0YXJlYS5mb2N1cygpLHRoaXMuaGlkZGVuVGV4dGFyZWEudmFsdWU9dGhpcy50ZXh0LHRoaXMuX3VwZGF0ZVRleHRhcmVhKCksdGhpcy5fc2F2ZUVkaXRpbmdQcm9wcygpLHRoaXMuX3NldEVkaXRpbmdQcm9wcygpLHRoaXMuX3RleHRCZWZvcmVFZGl0PXRoaXMudGV4dCx0aGlzLl90aWNrKCl9dXBkYXRlU2VsZWN0aW9uT25Nb3VzZU1vdmUodCl7aWYodGhpcy5nZXRBY3RpdmVDb250cm9sKCkpcmV0dXJuO2NvbnN0IGU9dGhpcy5oaWRkZW5UZXh0YXJlYTtyZShlKS5hY3RpdmVFbGVtZW50IT09ZSYmZS5mb2N1cygpO2NvbnN0IHM9dGhpcy5nZXRTZWxlY3Rpb25TdGFydEZyb21Qb2ludGVyKHQpLGk9dGhpcy5zZWxlY3Rpb25TdGFydCxyPXRoaXMuc2VsZWN0aW9uRW5kOyhzPT09dGhpcy5fX3NlbGVjdGlvblN0YXJ0T25Nb3VzZURvd24mJmkhPT1yfHxpIT09cyYmciE9PXMpJiYocz50aGlzLl9fc2VsZWN0aW9uU3RhcnRPbk1vdXNlRG93bj8odGhpcy5zZWxlY3Rpb25TdGFydD10aGlzLl9fc2VsZWN0aW9uU3RhcnRPbk1vdXNlRG93bix0aGlzLnNlbGVjdGlvbkVuZD1zKToodGhpcy5zZWxlY3Rpb25TdGFydD1zLHRoaXMuc2VsZWN0aW9uRW5kPXRoaXMuX19zZWxlY3Rpb25TdGFydE9uTW91c2VEb3duKSx0aGlzLnNlbGVjdGlvblN0YXJ0PT09aSYmdGhpcy5zZWxlY3Rpb25FbmQ9PT1yfHwodGhpcy5fZmlyZVNlbGVjdGlvbkNoYW5nZWQoKSx0aGlzLl91cGRhdGVUZXh0YXJlYSgpLHRoaXMucmVuZGVyQ3Vyc29yT3JTZWxlY3Rpb24oKSkpfV9zZXRFZGl0aW5nUHJvcHMoKXt0aGlzLmhvdmVyQ3Vyc29yPVwidGV4dFwiLHRoaXMuY2FudmFzJiYodGhpcy5jYW52YXMuZGVmYXVsdEN1cnNvcj10aGlzLmNhbnZhcy5tb3ZlQ3Vyc29yPVwidGV4dFwiKSx0aGlzLmJvcmRlckNvbG9yPXRoaXMuZWRpdGluZ0JvcmRlckNvbG9yLHRoaXMuaGFzQ29udHJvbHM9dGhpcy5zZWxlY3RhYmxlPSExLHRoaXMubG9ja01vdmVtZW50WD10aGlzLmxvY2tNb3ZlbWVudFk9ITB9ZnJvbVN0cmluZ1RvR3JhcGhlbWVTZWxlY3Rpb24odCxlLHMpe2NvbnN0IGk9cy5zbGljZSgwLHQpLHI9dGhpcy5ncmFwaGVtZVNwbGl0KGkpLmxlbmd0aDtpZih0PT09ZSlyZXR1cm57c2VsZWN0aW9uU3RhcnQ6cixzZWxlY3Rpb25FbmQ6cn07Y29uc3Qgbj1zLnNsaWNlKHQsZSk7cmV0dXJue3NlbGVjdGlvblN0YXJ0OnIsc2VsZWN0aW9uRW5kOnIrdGhpcy5ncmFwaGVtZVNwbGl0KG4pLmxlbmd0aH19ZnJvbUdyYXBoZW1lVG9TdHJpbmdTZWxlY3Rpb24odCxlLHMpe2NvbnN0IGk9cy5zbGljZSgwLHQpLmpvaW4oXCJcIikubGVuZ3RoO2lmKHQ9PT1lKXJldHVybntzZWxlY3Rpb25TdGFydDppLHNlbGVjdGlvbkVuZDppfTtyZXR1cm57c2VsZWN0aW9uU3RhcnQ6aSxzZWxlY3Rpb25FbmQ6aStzLnNsaWNlKHQsZSkuam9pbihcIlwiKS5sZW5ndGh9fV91cGRhdGVUZXh0YXJlYSgpe2lmKHRoaXMuY3Vyc29yT2Zmc2V0Q2FjaGU9e30sdGhpcy5oaWRkZW5UZXh0YXJlYSl7aWYoIXRoaXMuaW5Db21wb3NpdGlvbk1vZGUpe2NvbnN0IHQ9dGhpcy5mcm9tR3JhcGhlbWVUb1N0cmluZ1NlbGVjdGlvbih0aGlzLnNlbGVjdGlvblN0YXJ0LHRoaXMuc2VsZWN0aW9uRW5kLHRoaXMuX3RleHQpO3RoaXMuaGlkZGVuVGV4dGFyZWEuc2VsZWN0aW9uU3RhcnQ9dC5zZWxlY3Rpb25TdGFydCx0aGlzLmhpZGRlblRleHRhcmVhLnNlbGVjdGlvbkVuZD10LnNlbGVjdGlvbkVuZH10aGlzLnVwZGF0ZVRleHRhcmVhUG9zaXRpb24oKX19dXBkYXRlRnJvbVRleHRBcmVhKCl7aWYoIXRoaXMuaGlkZGVuVGV4dGFyZWEpcmV0dXJuO3RoaXMuY3Vyc29yT2Zmc2V0Q2FjaGU9e307Y29uc3QgdD10aGlzLmhpZGRlblRleHRhcmVhO3RoaXMudGV4dD10LnZhbHVlLHRoaXMuc2V0KFwiZGlydHlcIiwhMCksdGhpcy5pbml0RGltZW5zaW9ucygpLHRoaXMuc2V0Q29vcmRzKCk7Y29uc3QgZT10aGlzLmZyb21TdHJpbmdUb0dyYXBoZW1lU2VsZWN0aW9uKHQuc2VsZWN0aW9uU3RhcnQsdC5zZWxlY3Rpb25FbmQsdC52YWx1ZSk7dGhpcy5zZWxlY3Rpb25FbmQ9dGhpcy5zZWxlY3Rpb25TdGFydD1lLnNlbGVjdGlvbkVuZCx0aGlzLmluQ29tcG9zaXRpb25Nb2RlfHwodGhpcy5zZWxlY3Rpb25TdGFydD1lLnNlbGVjdGlvblN0YXJ0KSx0aGlzLnVwZGF0ZVRleHRhcmVhUG9zaXRpb24oKX11cGRhdGVUZXh0YXJlYVBvc2l0aW9uKCl7aWYodGhpcy5zZWxlY3Rpb25TdGFydD09PXRoaXMuc2VsZWN0aW9uRW5kKXtjb25zdCB0PXRoaXMuX2NhbGNUZXh0YXJlYVBvc2l0aW9uKCk7dGhpcy5oaWRkZW5UZXh0YXJlYS5zdHlsZS5sZWZ0PXQubGVmdCx0aGlzLmhpZGRlblRleHRhcmVhLnN0eWxlLnRvcD10LnRvcH19X2NhbGNUZXh0YXJlYVBvc2l0aW9uKCl7aWYoIXRoaXMuY2FudmFzKXJldHVybntsZWZ0OlwiMXB4XCIsdG9wOlwiMXB4XCJ9O2NvbnN0IHQ9dGhpcy5pbkNvbXBvc2l0aW9uTW9kZT90aGlzLmNvbXBvc2l0aW9uU3RhcnQ6dGhpcy5zZWxlY3Rpb25TdGFydCxlPXRoaXMuX2dldEN1cnNvckJvdW5kYXJpZXModCkscz10aGlzLmdldDJEQ3Vyc29yTG9jYXRpb24odCksaT1zLmxpbmVJbmRleCxyPXMuY2hhckluZGV4LG49dGhpcy5nZXRWYWx1ZU9mUHJvcGVydHlBdChpLHIsXCJmb250U2l6ZVwiKSp0aGlzLmxpbmVIZWlnaHQsbz1lLmxlZnRPZmZzZXQsYT10aGlzLmdldENhbnZhc1JldGluYVNjYWxpbmcoKSxoPXRoaXMuY2FudmFzLnVwcGVyQ2FudmFzRWwsYz1oLndpZHRoL2EsbD1oLmhlaWdodC9hLHU9Yy1uLGQ9bC1uLGc9bmV3IG90KGUubGVmdCtvLGUudG9wK2UudG9wT2Zmc2V0K24pLnRyYW5zZm9ybSh0aGlzLmNhbGNUcmFuc2Zvcm1NYXRyaXgoKSkudHJhbnNmb3JtKHRoaXMuY2FudmFzLnZpZXdwb3J0VHJhbnNmb3JtKS5tdWx0aXBseShuZXcgb3QoaC5jbGllbnRXaWR0aC9jLGguY2xpZW50SGVpZ2h0L2wpKTtyZXR1cm4gZy54PDAmJihnLng9MCksZy54PnUmJihnLng9dSksZy55PDAmJihnLnk9MCksZy55PmQmJihnLnk9ZCksZy54Kz10aGlzLmNhbnZhcy5fb2Zmc2V0LmxlZnQsZy55Kz10aGlzLmNhbnZhcy5fb2Zmc2V0LnRvcCx7bGVmdDpcIlwiLmNvbmNhdChnLngsXCJweFwiKSx0b3A6XCJcIi5jb25jYXQoZy55LFwicHhcIiksZm9udFNpemU6XCJcIi5jb25jYXQobixcInB4XCIpLGNoYXJIZWlnaHQ6bn19X3NhdmVFZGl0aW5nUHJvcHMoKXt0aGlzLl9zYXZlZFByb3BzPXtoYXNDb250cm9sczp0aGlzLmhhc0NvbnRyb2xzLGJvcmRlckNvbG9yOnRoaXMuYm9yZGVyQ29sb3IsbG9ja01vdmVtZW50WDp0aGlzLmxvY2tNb3ZlbWVudFgsbG9ja01vdmVtZW50WTp0aGlzLmxvY2tNb3ZlbWVudFksaG92ZXJDdXJzb3I6dGhpcy5ob3ZlckN1cnNvcixzZWxlY3RhYmxlOnRoaXMuc2VsZWN0YWJsZSxkZWZhdWx0Q3Vyc29yOnRoaXMuY2FudmFzJiZ0aGlzLmNhbnZhcy5kZWZhdWx0Q3Vyc29yLG1vdmVDdXJzb3I6dGhpcy5jYW52YXMmJnRoaXMuY2FudmFzLm1vdmVDdXJzb3J9fV9yZXN0b3JlRWRpdGluZ1Byb3BzKCl7dGhpcy5fc2F2ZWRQcm9wcyYmKHRoaXMuaG92ZXJDdXJzb3I9dGhpcy5fc2F2ZWRQcm9wcy5ob3ZlckN1cnNvcix0aGlzLmhhc0NvbnRyb2xzPXRoaXMuX3NhdmVkUHJvcHMuaGFzQ29udHJvbHMsdGhpcy5ib3JkZXJDb2xvcj10aGlzLl9zYXZlZFByb3BzLmJvcmRlckNvbG9yLHRoaXMuc2VsZWN0YWJsZT10aGlzLl9zYXZlZFByb3BzLnNlbGVjdGFibGUsdGhpcy5sb2NrTW92ZW1lbnRYPXRoaXMuX3NhdmVkUHJvcHMubG9ja01vdmVtZW50WCx0aGlzLmxvY2tNb3ZlbWVudFk9dGhpcy5fc2F2ZWRQcm9wcy5sb2NrTW92ZW1lbnRZLHRoaXMuY2FudmFzJiYodGhpcy5jYW52YXMuZGVmYXVsdEN1cnNvcj10aGlzLl9zYXZlZFByb3BzLmRlZmF1bHRDdXJzb3J8fHRoaXMuY2FudmFzLmRlZmF1bHRDdXJzb3IsdGhpcy5jYW52YXMubW92ZUN1cnNvcj10aGlzLl9zYXZlZFByb3BzLm1vdmVDdXJzb3J8fHRoaXMuY2FudmFzLm1vdmVDdXJzb3IpLGRlbGV0ZSB0aGlzLl9zYXZlZFByb3BzKX1fZXhpdEVkaXRpbmcoKXtjb25zdCB0PXRoaXMuaGlkZGVuVGV4dGFyZWE7dGhpcy5zZWxlY3RlZD0hMSx0aGlzLmlzRWRpdGluZz0hMSx0JiYodC5ibHVyJiZ0LmJsdXIoKSx0LnBhcmVudE5vZGUmJnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0KSksdGhpcy5oaWRkZW5UZXh0YXJlYT1udWxsLHRoaXMuYWJvcnRDdXJzb3JBbmltYXRpb24oKSx0aGlzLnNlbGVjdGlvblN0YXJ0IT09dGhpcy5zZWxlY3Rpb25FbmQmJnRoaXMuY2xlYXJDb250ZXh0VG9wKCl9ZXhpdEVkaXRpbmdJbXBsKCl7dGhpcy5fZXhpdEVkaXRpbmcoKSx0aGlzLnNlbGVjdGlvbkVuZD10aGlzLnNlbGVjdGlvblN0YXJ0LHRoaXMuX3Jlc3RvcmVFZGl0aW5nUHJvcHMoKSx0aGlzLl9mb3JjZUNsZWFyQ2FjaGUmJih0aGlzLmluaXREaW1lbnNpb25zKCksdGhpcy5zZXRDb29yZHMoKSl9ZXhpdEVkaXRpbmcoKXtjb25zdCB0PXRoaXMuX3RleHRCZWZvcmVFZGl0IT09dGhpcy50ZXh0O3JldHVybiB0aGlzLmV4aXRFZGl0aW5nSW1wbCgpLHRoaXMuZmlyZShcImVkaXRpbmc6ZXhpdGVkXCIpLHQmJnRoaXMuZmlyZShRKSx0aGlzLmNhbnZhcyYmKHRoaXMuY2FudmFzLmZpcmUoXCJ0ZXh0OmVkaXRpbmc6ZXhpdGVkXCIse3RhcmdldDp0aGlzfSksdCYmdGhpcy5jYW52YXMuZmlyZShcIm9iamVjdDptb2RpZmllZFwiLHt0YXJnZXQ6dGhpc30pKSx0aGlzfV9yZW1vdmVFeHRyYW5lb3VzU3R5bGVzKCl7Zm9yKGNvbnN0IHQgaW4gdGhpcy5zdHlsZXMpdGhpcy5fdGV4dExpbmVzW3RdfHxkZWxldGUgdGhpcy5zdHlsZXNbdF19cmVtb3ZlU3R5bGVGcm9tVG8odCxlKXtjb25zdHtsaW5lSW5kZXg6cyxjaGFySW5kZXg6aX09dGhpcy5nZXQyREN1cnNvckxvY2F0aW9uKHQsITApLHtsaW5lSW5kZXg6cixjaGFySW5kZXg6bn09dGhpcy5nZXQyREN1cnNvckxvY2F0aW9uKGUsITApO2lmKHMhPT1yKXtpZih0aGlzLnN0eWxlc1tzXSlmb3IobGV0IHQ9aTt0PHRoaXMuX3Vud3JhcHBlZFRleHRMaW5lc1tzXS5sZW5ndGg7dCsrKWRlbGV0ZSB0aGlzLnN0eWxlc1tzXVt0XTtpZih0aGlzLnN0eWxlc1tyXSlmb3IobGV0IHQ9bjt0PHRoaXMuX3Vud3JhcHBlZFRleHRMaW5lc1tyXS5sZW5ndGg7dCsrKXtjb25zdCBlPXRoaXMuc3R5bGVzW3JdW3RdO2UmJih0aGlzLnN0eWxlc1tzXXx8KHRoaXMuc3R5bGVzW3NdPXt9KSx0aGlzLnN0eWxlc1tzXVtpK3Qtbl09ZSl9Zm9yKGxldCB0PXMrMTt0PD1yO3QrKylkZWxldGUgdGhpcy5zdHlsZXNbdF07dGhpcy5zaGlmdExpbmVTdHlsZXMocixzLXIpfWVsc2UgaWYodGhpcy5zdHlsZXNbc10pe2NvbnN0IHQ9dGhpcy5zdHlsZXNbc10sZT1uLWk7Zm9yKGxldCBlPWk7ZTxuO2UrKylkZWxldGUgdFtlXTtmb3IoY29uc3QgaSBpbiB0aGlzLnN0eWxlc1tzXSl7Y29uc3Qgcz1wYXJzZUludChpLDEwKTtzPj1uJiYodFtzLWVdPXRbaV0sZGVsZXRlIHRbaV0pfX19c2hpZnRMaW5lU3R5bGVzKHQsZSl7Y29uc3Qgcz1PYmplY3QuYXNzaWduKHt9LHRoaXMuc3R5bGVzKTtmb3IoY29uc3QgaSBpbiB0aGlzLnN0eWxlcyl7Y29uc3Qgcj1wYXJzZUludChpLDEwKTtyPnQmJih0aGlzLnN0eWxlc1tyK2VdPXNbcl0sc1tyLWVdfHxkZWxldGUgdGhpcy5zdHlsZXNbcl0pfX1pbnNlcnROZXdsaW5lU3R5bGVPYmplY3QodCxlLGkscil7Y29uc3Qgbj17fSxvPXRoaXMuX3Vud3JhcHBlZFRleHRMaW5lc1t0XS5sZW5ndGgsYT1vPT09ZTtsZXQgaD0hMTtpfHwoaT0xKSx0aGlzLnNoaWZ0TGluZVN0eWxlcyh0LGkpO2NvbnN0IGM9dGhpcy5zdHlsZXNbdF0/dGhpcy5zdHlsZXNbdF1bMD09PWU/ZTplLTFdOnZvaWQgMDtmb3IoY29uc3QgcyBpbiB0aGlzLnN0eWxlc1t0XSl7Y29uc3QgaT1wYXJzZUludChzLDEwKTtpPj1lJiYoaD0hMCxuW2ktZV09dGhpcy5zdHlsZXNbdF1bc10sYSYmMD09PWV8fGRlbGV0ZSB0aGlzLnN0eWxlc1t0XVtzXSl9bGV0IGw9ITE7Zm9yKGgmJiFhJiYodGhpcy5zdHlsZXNbdCtpXT1uLGw9ITApLChsfHxvPmUpJiZpLS07aT4wOylyJiZyW2ktMV0/dGhpcy5zdHlsZXNbdCtpXT17MDpzKHt9LHJbaS0xXSl9OmM/dGhpcy5zdHlsZXNbdCtpXT17MDpzKHt9LGMpfTpkZWxldGUgdGhpcy5zdHlsZXNbdCtpXSxpLS07dGhpcy5fZm9yY2VDbGVhckNhY2hlPSEwfWluc2VydENoYXJTdHlsZU9iamVjdCh0LGUsaSxyKXt0aGlzLnN0eWxlc3x8KHRoaXMuc3R5bGVzPXt9KTtjb25zdCBuPXRoaXMuc3R5bGVzW3RdLG89bj9zKHt9LG4pOnt9O2l8fChpPTEpO2Zvcihjb25zdCB0IGluIG8pe2NvbnN0IHM9cGFyc2VJbnQodCwxMCk7cz49ZSYmKG5bcytpXT1vW3NdLG9bcy1pXXx8ZGVsZXRlIG5bc10pfWlmKHRoaXMuX2ZvcmNlQ2xlYXJDYWNoZT0hMCxyKXtmb3IoO2ktLTspT2JqZWN0LmtleXMocltpXSkubGVuZ3RoJiYodGhpcy5zdHlsZXNbdF18fCh0aGlzLnN0eWxlc1t0XT17fSksdGhpcy5zdHlsZXNbdF1bZStpXT1zKHt9LHJbaV0pKTtyZXR1cm59aWYoIW4pcmV0dXJuO2NvbnN0IGE9bltlP2UtMToxXTtmb3IoO2EmJmktLTspdGhpcy5zdHlsZXNbdF1bZStpXT1zKHt9LGEpfWluc2VydE5ld1N0eWxlQmxvY2sodCxlLHMpe2NvbnN0IGk9dGhpcy5nZXQyREN1cnNvckxvY2F0aW9uKGUsITApLHI9WzBdO2xldCBuLG89MDtmb3IobGV0IGU9MDtlPHQubGVuZ3RoO2UrKylcIlxcblwiPT09dFtlXT8obysrLHJbb109MCk6cltvXSsrO2ZvcihyWzBdPjAmJih0aGlzLmluc2VydENoYXJTdHlsZU9iamVjdChpLmxpbmVJbmRleCxpLmNoYXJJbmRleCxyWzBdLHMpLHM9cyYmcy5zbGljZShyWzBdKzEpKSxvJiZ0aGlzLmluc2VydE5ld2xpbmVTdHlsZU9iamVjdChpLmxpbmVJbmRleCxpLmNoYXJJbmRleCtyWzBdLG8pLG49MTtuPG87bisrKXJbbl0+MD90aGlzLmluc2VydENoYXJTdHlsZU9iamVjdChpLmxpbmVJbmRleCtuLDAscltuXSxzKTpzJiZ0aGlzLnN0eWxlc1tpLmxpbmVJbmRleCtuXSYmc1swXSYmKHRoaXMuc3R5bGVzW2kubGluZUluZGV4K25dWzBdPXNbMF0pLHM9cyYmcy5zbGljZShyW25dKzEpO3Jbbl0+MCYmdGhpcy5pbnNlcnRDaGFyU3R5bGVPYmplY3QoaS5saW5lSW5kZXgrbiwwLHJbbl0scyl9cmVtb3ZlQ2hhcnModCl7bGV0IGU9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOnQrMTt0aGlzLnJlbW92ZVN0eWxlRnJvbVRvKHQsZSksdGhpcy5fdGV4dC5zcGxpY2UodCxlLXQpLHRoaXMudGV4dD10aGlzLl90ZXh0LmpvaW4oXCJcIiksdGhpcy5zZXQoXCJkaXJ0eVwiLCEwKSx0aGlzLmluaXREaW1lbnNpb25zKCksdGhpcy5zZXRDb29yZHMoKSx0aGlzLl9yZW1vdmVFeHRyYW5lb3VzU3R5bGVzKCl9aW5zZXJ0Q2hhcnModCxlLHMpe2xldCBpPWFyZ3VtZW50cy5sZW5ndGg+MyYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXTpzO2k+cyYmdGhpcy5yZW1vdmVTdHlsZUZyb21UbyhzLGkpO2NvbnN0IHI9dGhpcy5ncmFwaGVtZVNwbGl0KHQpO3RoaXMuaW5zZXJ0TmV3U3R5bGVCbG9jayhyLHMsZSksdGhpcy5fdGV4dD1bLi4udGhpcy5fdGV4dC5zbGljZSgwLHMpLC4uLnIsLi4udGhpcy5fdGV4dC5zbGljZShpKV0sdGhpcy50ZXh0PXRoaXMuX3RleHQuam9pbihcIlwiKSx0aGlzLnNldChcImRpcnR5XCIsITApLHRoaXMuaW5pdERpbWVuc2lvbnMoKSx0aGlzLnNldENvb3JkcygpLHRoaXMuX3JlbW92ZUV4dHJhbmVvdXNTdHlsZXMoKX1zZXRTZWxlY3Rpb25TdGFydEVuZFdpdGhTaGlmdCh0LGUscyl7czw9dD8oZT09PXQ/dGhpcy5fc2VsZWN0aW9uRGlyZWN0aW9uPU06dGhpcy5fc2VsZWN0aW9uRGlyZWN0aW9uPT09QSYmKHRoaXMuX3NlbGVjdGlvbkRpcmVjdGlvbj1NLHRoaXMuc2VsZWN0aW9uRW5kPXQpLHRoaXMuc2VsZWN0aW9uU3RhcnQ9cyk6cz50JiZzPGU/dGhpcy5fc2VsZWN0aW9uRGlyZWN0aW9uPT09QT90aGlzLnNlbGVjdGlvbkVuZD1zOnRoaXMuc2VsZWN0aW9uU3RhcnQ9czooZT09PXQ/dGhpcy5fc2VsZWN0aW9uRGlyZWN0aW9uPUE6dGhpcy5fc2VsZWN0aW9uRGlyZWN0aW9uPT09TSYmKHRoaXMuX3NlbGVjdGlvbkRpcmVjdGlvbj1BLHRoaXMuc2VsZWN0aW9uU3RhcnQ9ZSksdGhpcy5zZWxlY3Rpb25FbmQ9cyl9fWNsYXNzIERvIGV4dGVuZHMga297aW5pdEhpZGRlblRleHRhcmVhKCl7Y29uc3QgdD10aGlzLmNhbnZhcyYmcmUodGhpcy5jYW52YXMuZ2V0RWxlbWVudCgpKXx8bSgpLGU9dC5jcmVhdGVFbGVtZW50KFwidGV4dGFyZWFcIik7T2JqZWN0LmVudHJpZXMoe2F1dG9jYXBpdGFsaXplOlwib2ZmXCIsYXV0b2NvcnJlY3Q6XCJvZmZcIixhdXRvY29tcGxldGU6XCJvZmZcIixzcGVsbGNoZWNrOlwiZmFsc2VcIixcImRhdGEtZmFicmljXCI6XCJ0ZXh0YXJlYVwiLHdyYXA6XCJvZmZcIn0pLm1hcCgodD0+e2xldFtzLGldPXQ7cmV0dXJuIGUuc2V0QXR0cmlidXRlKHMsaSl9KSk7Y29uc3R7dG9wOnMsbGVmdDppLGZvbnRTaXplOnJ9PXRoaXMuX2NhbGNUZXh0YXJlYVBvc2l0aW9uKCk7ZS5zdHlsZS5jc3NUZXh0PVwicG9zaXRpb246IGFic29sdXRlOyB0b3A6IFwiLmNvbmNhdChzLFwiOyBsZWZ0OiBcIikuY29uY2F0KGksXCI7IHotaW5kZXg6IC05OTk7IG9wYWNpdHk6IDA7IHdpZHRoOiAxcHg7IGhlaWdodDogMXB4OyBmb250LXNpemU6IDFweDsgcGFkZGluZy10b3A6IFwiKS5jb25jYXQocixcIjtcIiksKHRoaXMuaGlkZGVuVGV4dGFyZWFDb250YWluZXJ8fHQuYm9keSkuYXBwZW5kQ2hpbGQoZSksT2JqZWN0LmVudHJpZXMoe2JsdXI6XCJibHVyXCIsa2V5ZG93bjpcIm9uS2V5RG93blwiLGtleXVwOlwib25LZXlVcFwiLGlucHV0Olwib25JbnB1dFwiLGNvcHk6XCJjb3B5XCIsY3V0OlwiY29weVwiLHBhc3RlOlwicGFzdGVcIixjb21wb3NpdGlvbnN0YXJ0Olwib25Db21wb3NpdGlvblN0YXJ0XCIsY29tcG9zaXRpb251cGRhdGU6XCJvbkNvbXBvc2l0aW9uVXBkYXRlXCIsY29tcG9zaXRpb25lbmQ6XCJvbkNvbXBvc2l0aW9uRW5kXCJ9KS5tYXAoKHQ9PntsZXRbcyxpXT10O3JldHVybiBlLmFkZEV2ZW50TGlzdGVuZXIocyx0aGlzW2ldLmJpbmQodGhpcykpfSkpLHRoaXMuaGlkZGVuVGV4dGFyZWE9ZX1ibHVyKCl7dGhpcy5hYm9ydEN1cnNvckFuaW1hdGlvbigpfW9uS2V5RG93bih0KXtpZighdGhpcy5pc0VkaXRpbmcpcmV0dXJuO2NvbnN0IGU9XCJydGxcIj09PXRoaXMuZGlyZWN0aW9uP3RoaXMua2V5c01hcFJ0bDp0aGlzLmtleXNNYXA7aWYodC5rZXlDb2RlIGluIGUpdGhpc1tlW3Qua2V5Q29kZV1dKHQpO2Vsc2V7aWYoISh0LmtleUNvZGUgaW4gdGhpcy5jdHJsS2V5c01hcERvd24pfHwhdC5jdHJsS2V5JiYhdC5tZXRhS2V5KXJldHVybjt0aGlzW3RoaXMuY3RybEtleXNNYXBEb3duW3Qua2V5Q29kZV1dKHQpfXQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCksdC5wcmV2ZW50RGVmYXVsdCgpLHQua2V5Q29kZT49MzMmJnQua2V5Q29kZTw9NDA/KHRoaXMuaW5Db21wb3NpdGlvbk1vZGU9ITEsdGhpcy5jbGVhckNvbnRleHRUb3AoKSx0aGlzLnJlbmRlckN1cnNvck9yU2VsZWN0aW9uKCkpOnRoaXMuY2FudmFzJiZ0aGlzLmNhbnZhcy5yZXF1ZXN0UmVuZGVyQWxsKCl9b25LZXlVcCh0KXshdGhpcy5pc0VkaXRpbmd8fHRoaXMuX2NvcHlEb25lfHx0aGlzLmluQ29tcG9zaXRpb25Nb2RlP3RoaXMuX2NvcHlEb25lPSExOnQua2V5Q29kZSBpbiB0aGlzLmN0cmxLZXlzTWFwVXAmJih0LmN0cmxLZXl8fHQubWV0YUtleSkmJih0aGlzW3RoaXMuY3RybEtleXNNYXBVcFt0LmtleUNvZGVdXSh0KSx0LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpLHQucHJldmVudERlZmF1bHQoKSx0aGlzLmNhbnZhcyYmdGhpcy5jYW52YXMucmVxdWVzdFJlbmRlckFsbCgpKX1vbklucHV0KHQpe2NvbnN0IGU9dGhpcy5mcm9tUGFzdGU7aWYodGhpcy5mcm9tUGFzdGU9ITEsdCYmdC5zdG9wUHJvcGFnYXRpb24oKSwhdGhpcy5pc0VkaXRpbmcpcmV0dXJuO2NvbnN0IHM9KCk9Pnt0aGlzLnVwZGF0ZUZyb21UZXh0QXJlYSgpLHRoaXMuZmlyZSh6KSx0aGlzLmNhbnZhcyYmKHRoaXMuY2FudmFzLmZpcmUoXCJ0ZXh0OmNoYW5nZWRcIix7dGFyZ2V0OnRoaXN9KSx0aGlzLmNhbnZhcy5yZXF1ZXN0UmVuZGVyQWxsKCkpfTtpZihcIlwiPT09dGhpcy5oaWRkZW5UZXh0YXJlYS52YWx1ZSlyZXR1cm4gdGhpcy5zdHlsZXM9e30sdm9pZCBzKCk7Y29uc3QgaT10aGlzLl9zcGxpdFRleHRJbnRvTGluZXModGhpcy5oaWRkZW5UZXh0YXJlYS52YWx1ZSkuZ3JhcGhlbWVUZXh0LHI9dGhpcy5fdGV4dC5sZW5ndGgsbj1pLmxlbmd0aCxhPXRoaXMuc2VsZWN0aW9uU3RhcnQsaD10aGlzLnNlbGVjdGlvbkVuZCxjPWEhPT1oO2xldCBsLHUsZCxnLGY9bi1yO2NvbnN0IG09dGhpcy5mcm9tU3RyaW5nVG9HcmFwaGVtZVNlbGVjdGlvbih0aGlzLmhpZGRlblRleHRhcmVhLnNlbGVjdGlvblN0YXJ0LHRoaXMuaGlkZGVuVGV4dGFyZWEuc2VsZWN0aW9uRW5kLHRoaXMuaGlkZGVuVGV4dGFyZWEudmFsdWUpLHY9YT5tLnNlbGVjdGlvblN0YXJ0O2M/KHU9dGhpcy5fdGV4dC5zbGljZShhLGgpLGYrPWgtYSk6bjxyJiYodT12P3RoaXMuX3RleHQuc2xpY2UoaCtmLGgpOnRoaXMuX3RleHQuc2xpY2UoYSxhLWYpKTtjb25zdCB5PWkuc2xpY2UobS5zZWxlY3Rpb25FbmQtZixtLnNlbGVjdGlvbkVuZCk7aWYodSYmdS5sZW5ndGgmJih5Lmxlbmd0aCYmKGw9dGhpcy5nZXRTZWxlY3Rpb25TdHlsZXMoYSxhKzEsITEpLGw9eS5tYXAoKCgpPT5sWzBdKSkpLGM/KGQ9YSxnPWgpOnY/KGQ9aC11Lmxlbmd0aCxnPWgpOihkPWgsZz1oK3UubGVuZ3RoKSx0aGlzLnJlbW92ZVN0eWxlRnJvbVRvKGQsZykpLHkubGVuZ3RoKXtjb25zdHtjb3B5UGFzdGVEYXRhOnR9PXAoKTtlJiZ5LmpvaW4oXCJcIik9PT10LmNvcGllZFRleHQmJiFvLmRpc2FibGVTdHlsZUNvcHlQYXN0ZSYmKGw9dC5jb3BpZWRUZXh0U3R5bGUpLHRoaXMuaW5zZXJ0TmV3U3R5bGVCbG9jayh5LGEsbCl9cygpfW9uQ29tcG9zaXRpb25TdGFydCgpe3RoaXMuaW5Db21wb3NpdGlvbk1vZGU9ITB9b25Db21wb3NpdGlvbkVuZCgpe3RoaXMuaW5Db21wb3NpdGlvbk1vZGU9ITF9b25Db21wb3NpdGlvblVwZGF0ZSh0KXtsZXR7dGFyZ2V0OmV9PXQ7Y29uc3R7c2VsZWN0aW9uU3RhcnQ6cyxzZWxlY3Rpb25FbmQ6aX09ZTt0aGlzLmNvbXBvc2l0aW9uU3RhcnQ9cyx0aGlzLmNvbXBvc2l0aW9uRW5kPWksdGhpcy51cGRhdGVUZXh0YXJlYVBvc2l0aW9uKCl9Y29weSgpe2lmKHRoaXMuc2VsZWN0aW9uU3RhcnQ9PT10aGlzLnNlbGVjdGlvbkVuZClyZXR1cm47Y29uc3R7Y29weVBhc3RlRGF0YTp0fT1wKCk7dC5jb3BpZWRUZXh0PXRoaXMuZ2V0U2VsZWN0ZWRUZXh0KCksby5kaXNhYmxlU3R5bGVDb3B5UGFzdGU/dC5jb3BpZWRUZXh0U3R5bGU9dm9pZCAwOnQuY29waWVkVGV4dFN0eWxlPXRoaXMuZ2V0U2VsZWN0aW9uU3R5bGVzKHRoaXMuc2VsZWN0aW9uU3RhcnQsdGhpcy5zZWxlY3Rpb25FbmQsITApLHRoaXMuX2NvcHlEb25lPSEwfXBhc3RlKCl7dGhpcy5mcm9tUGFzdGU9ITB9X2dldFdpZHRoQmVmb3JlQ3Vyc29yKHQsZSl7bGV0IHMsaT10aGlzLl9nZXRMaW5lTGVmdE9mZnNldCh0KTtyZXR1cm4gZT4wJiYocz10aGlzLl9fY2hhckJvdW5kc1t0XVtlLTFdLGkrPXMubGVmdCtzLndpZHRoKSxpfWdldERvd25DdXJzb3JPZmZzZXQodCxlKXtjb25zdCBzPXRoaXMuX2dldFNlbGVjdGlvbkZvck9mZnNldCh0LGUpLGk9dGhpcy5nZXQyREN1cnNvckxvY2F0aW9uKHMpLHI9aS5saW5lSW5kZXg7aWYocj09PXRoaXMuX3RleHRMaW5lcy5sZW5ndGgtMXx8dC5tZXRhS2V5fHwzND09PXQua2V5Q29kZSlyZXR1cm4gdGhpcy5fdGV4dC5sZW5ndGgtcztjb25zdCBuPWkuY2hhckluZGV4LG89dGhpcy5fZ2V0V2lkdGhCZWZvcmVDdXJzb3IocixuKSxhPXRoaXMuX2dldEluZGV4T25MaW5lKHIrMSxvKTtyZXR1cm4gdGhpcy5fdGV4dExpbmVzW3JdLnNsaWNlKG4pLmxlbmd0aCthKzErdGhpcy5taXNzaW5nTmV3bGluZU9mZnNldChyKX1fZ2V0U2VsZWN0aW9uRm9yT2Zmc2V0KHQsZSl7cmV0dXJuIHQuc2hpZnRLZXkmJnRoaXMuc2VsZWN0aW9uU3RhcnQhPT10aGlzLnNlbGVjdGlvbkVuZCYmZT90aGlzLnNlbGVjdGlvbkVuZDp0aGlzLnNlbGVjdGlvblN0YXJ0fWdldFVwQ3Vyc29yT2Zmc2V0KHQsZSl7Y29uc3Qgcz10aGlzLl9nZXRTZWxlY3Rpb25Gb3JPZmZzZXQodCxlKSxpPXRoaXMuZ2V0MkRDdXJzb3JMb2NhdGlvbihzKSxyPWkubGluZUluZGV4O2lmKDA9PT1yfHx0Lm1ldGFLZXl8fDMzPT09dC5rZXlDb2RlKXJldHVybi1zO2NvbnN0IG49aS5jaGFySW5kZXgsbz10aGlzLl9nZXRXaWR0aEJlZm9yZUN1cnNvcihyLG4pLGE9dGhpcy5fZ2V0SW5kZXhPbkxpbmUoci0xLG8pLGg9dGhpcy5fdGV4dExpbmVzW3JdLnNsaWNlKDAsbiksYz10aGlzLm1pc3NpbmdOZXdsaW5lT2Zmc2V0KHItMSk7cmV0dXJuLXRoaXMuX3RleHRMaW5lc1tyLTFdLmxlbmd0aCthLWgubGVuZ3RoKygxLWMpfV9nZXRJbmRleE9uTGluZSh0LGUpe2NvbnN0IHM9dGhpcy5fdGV4dExpbmVzW3RdO2xldCBpLHIsbj10aGlzLl9nZXRMaW5lTGVmdE9mZnNldCh0KSxvPTA7Zm9yKGxldCBhPTAsaD1zLmxlbmd0aDthPGg7YSsrKWlmKGk9dGhpcy5fX2NoYXJCb3VuZHNbdF1bYV0ud2lkdGgsbis9aSxuPmUpe3I9ITA7Y29uc3QgdD1uLWkscz1uLGg9TWF0aC5hYnModC1lKTtvPU1hdGguYWJzKHMtZSk8aD9hOmEtMTticmVha31yZXR1cm4gcnx8KG89cy5sZW5ndGgtMSksb31tb3ZlQ3Vyc29yRG93bih0KXt0aGlzLnNlbGVjdGlvblN0YXJ0Pj10aGlzLl90ZXh0Lmxlbmd0aCYmdGhpcy5zZWxlY3Rpb25FbmQ+PXRoaXMuX3RleHQubGVuZ3RofHx0aGlzLl9tb3ZlQ3Vyc29yVXBPckRvd24oXCJEb3duXCIsdCl9bW92ZUN1cnNvclVwKHQpezA9PT10aGlzLnNlbGVjdGlvblN0YXJ0JiYwPT09dGhpcy5zZWxlY3Rpb25FbmR8fHRoaXMuX21vdmVDdXJzb3JVcE9yRG93bihcIlVwXCIsdCl9X21vdmVDdXJzb3JVcE9yRG93bih0LGUpe2NvbnN0IHM9dGhpc1tcImdldFwiLmNvbmNhdCh0LFwiQ3Vyc29yT2Zmc2V0XCIpXShlLHRoaXMuX3NlbGVjdGlvbkRpcmVjdGlvbj09PUEpO2lmKGUuc2hpZnRLZXk/dGhpcy5tb3ZlQ3Vyc29yV2l0aFNoaWZ0KHMpOnRoaXMubW92ZUN1cnNvcldpdGhvdXRTaGlmdChzKSwwIT09cyl7Y29uc3QgdD10aGlzLnRleHQubGVuZ3RoO3RoaXMuc2VsZWN0aW9uU3RhcnQ9ZHMoMCx0aGlzLnNlbGVjdGlvblN0YXJ0LHQpLHRoaXMuc2VsZWN0aW9uRW5kPWRzKDAsdGhpcy5zZWxlY3Rpb25FbmQsdCksdGhpcy5hYm9ydEN1cnNvckFuaW1hdGlvbigpLHRoaXMuaW5pdERlbGF5ZWRDdXJzb3IoKSx0aGlzLl9maXJlU2VsZWN0aW9uQ2hhbmdlZCgpLHRoaXMuX3VwZGF0ZVRleHRhcmVhKCl9fW1vdmVDdXJzb3JXaXRoU2hpZnQodCl7Y29uc3QgZT10aGlzLl9zZWxlY3Rpb25EaXJlY3Rpb249PT1NP3RoaXMuc2VsZWN0aW9uU3RhcnQrdDp0aGlzLnNlbGVjdGlvbkVuZCt0O3JldHVybiB0aGlzLnNldFNlbGVjdGlvblN0YXJ0RW5kV2l0aFNoaWZ0KHRoaXMuc2VsZWN0aW9uU3RhcnQsdGhpcy5zZWxlY3Rpb25FbmQsZSksMCE9PXR9bW92ZUN1cnNvcldpdGhvdXRTaGlmdCh0KXtyZXR1cm4gdDwwPyh0aGlzLnNlbGVjdGlvblN0YXJ0Kz10LHRoaXMuc2VsZWN0aW9uRW5kPXRoaXMuc2VsZWN0aW9uU3RhcnQpOih0aGlzLnNlbGVjdGlvbkVuZCs9dCx0aGlzLnNlbGVjdGlvblN0YXJ0PXRoaXMuc2VsZWN0aW9uRW5kKSwwIT09dH1tb3ZlQ3Vyc29yTGVmdCh0KXswPT09dGhpcy5zZWxlY3Rpb25TdGFydCYmMD09PXRoaXMuc2VsZWN0aW9uRW5kfHx0aGlzLl9tb3ZlQ3Vyc29yTGVmdE9yUmlnaHQoXCJMZWZ0XCIsdCl9X21vdmUodCxlLHMpe2xldCBpO2lmKHQuYWx0S2V5KWk9dGhpc1tcImZpbmRXb3JkQm91bmRhcnlcIi5jb25jYXQocyldKHRoaXNbZV0pO2Vsc2V7aWYoIXQubWV0YUtleSYmMzUhPT10LmtleUNvZGUmJjM2IT09dC5rZXlDb2RlKXJldHVybiB0aGlzW2VdKz1cIkxlZnRcIj09PXM/LTE6MSwhMDtpPXRoaXNbXCJmaW5kTGluZUJvdW5kYXJ5XCIuY29uY2F0KHMpXSh0aGlzW2VdKX1yZXR1cm4gdm9pZCAwIT09aSYmdGhpc1tlXSE9PWkmJih0aGlzW2VdPWksITApfV9tb3ZlTGVmdCh0LGUpe3JldHVybiB0aGlzLl9tb3ZlKHQsZSxcIkxlZnRcIil9X21vdmVSaWdodCh0LGUpe3JldHVybiB0aGlzLl9tb3ZlKHQsZSxcIlJpZ2h0XCIpfW1vdmVDdXJzb3JMZWZ0V2l0aG91dFNoaWZ0KHQpe2xldCBlPSEwO3JldHVybiB0aGlzLl9zZWxlY3Rpb25EaXJlY3Rpb249TSx0aGlzLnNlbGVjdGlvbkVuZD09PXRoaXMuc2VsZWN0aW9uU3RhcnQmJjAhPT10aGlzLnNlbGVjdGlvblN0YXJ0JiYoZT10aGlzLl9tb3ZlTGVmdCh0LFwic2VsZWN0aW9uU3RhcnRcIikpLHRoaXMuc2VsZWN0aW9uRW5kPXRoaXMuc2VsZWN0aW9uU3RhcnQsZX1tb3ZlQ3Vyc29yTGVmdFdpdGhTaGlmdCh0KXtyZXR1cm4gdGhpcy5fc2VsZWN0aW9uRGlyZWN0aW9uPT09QSYmdGhpcy5zZWxlY3Rpb25TdGFydCE9PXRoaXMuc2VsZWN0aW9uRW5kP3RoaXMuX21vdmVMZWZ0KHQsXCJzZWxlY3Rpb25FbmRcIik6MCE9PXRoaXMuc2VsZWN0aW9uU3RhcnQ/KHRoaXMuX3NlbGVjdGlvbkRpcmVjdGlvbj1NLHRoaXMuX21vdmVMZWZ0KHQsXCJzZWxlY3Rpb25TdGFydFwiKSk6dm9pZCAwfW1vdmVDdXJzb3JSaWdodCh0KXt0aGlzLnNlbGVjdGlvblN0YXJ0Pj10aGlzLl90ZXh0Lmxlbmd0aCYmdGhpcy5zZWxlY3Rpb25FbmQ+PXRoaXMuX3RleHQubGVuZ3RofHx0aGlzLl9tb3ZlQ3Vyc29yTGVmdE9yUmlnaHQoXCJSaWdodFwiLHQpfV9tb3ZlQ3Vyc29yTGVmdE9yUmlnaHQodCxlKXtjb25zdCBzPVwibW92ZUN1cnNvclwiLmNvbmNhdCh0KS5jb25jYXQoZS5zaGlmdEtleT9cIldpdGhTaGlmdFwiOlwiV2l0aG91dFNoaWZ0XCIpO3RoaXMuX2N1cnJlbnRDdXJzb3JPcGFjaXR5PTEsdGhpc1tzXShlKSYmKHRoaXMuYWJvcnRDdXJzb3JBbmltYXRpb24oKSx0aGlzLmluaXREZWxheWVkQ3Vyc29yKCksdGhpcy5fZmlyZVNlbGVjdGlvbkNoYW5nZWQoKSx0aGlzLl91cGRhdGVUZXh0YXJlYSgpKX1tb3ZlQ3Vyc29yUmlnaHRXaXRoU2hpZnQodCl7cmV0dXJuIHRoaXMuX3NlbGVjdGlvbkRpcmVjdGlvbj09PU0mJnRoaXMuc2VsZWN0aW9uU3RhcnQhPT10aGlzLnNlbGVjdGlvbkVuZD90aGlzLl9tb3ZlUmlnaHQodCxcInNlbGVjdGlvblN0YXJ0XCIpOnRoaXMuc2VsZWN0aW9uRW5kIT09dGhpcy5fdGV4dC5sZW5ndGg/KHRoaXMuX3NlbGVjdGlvbkRpcmVjdGlvbj1BLHRoaXMuX21vdmVSaWdodCh0LFwic2VsZWN0aW9uRW5kXCIpKTp2b2lkIDB9bW92ZUN1cnNvclJpZ2h0V2l0aG91dFNoaWZ0KHQpe2xldCBlPSEwO3JldHVybiB0aGlzLl9zZWxlY3Rpb25EaXJlY3Rpb249QSx0aGlzLnNlbGVjdGlvblN0YXJ0PT09dGhpcy5zZWxlY3Rpb25FbmQ/KGU9dGhpcy5fbW92ZVJpZ2h0KHQsXCJzZWxlY3Rpb25TdGFydFwiKSx0aGlzLnNlbGVjdGlvbkVuZD10aGlzLnNlbGVjdGlvblN0YXJ0KTp0aGlzLnNlbGVjdGlvblN0YXJ0PXRoaXMuc2VsZWN0aW9uRW5kLGV9fWNvbnN0IE1vPXQ9PiEhdC5idXR0b247Y2xhc3MgUG8gZXh0ZW5kcyBEb3tjb25zdHJ1Y3Rvcigpe3N1cGVyKC4uLmFyZ3VtZW50cyksdCh0aGlzLFwiZHJhZ2dhYmxlVGV4dERlbGVnYXRlXCIsdm9pZCAwKX1pbml0QmVoYXZpb3IoKXt0aGlzLm9uKFwibW91c2Vkb3duXCIsdGhpcy5fbW91c2VEb3duSGFuZGxlciksdGhpcy5vbihcIm1vdXNlZG93bjpiZWZvcmVcIix0aGlzLl9tb3VzZURvd25IYW5kbGVyQmVmb3JlKSx0aGlzLm9uKFwibW91c2V1cFwiLHRoaXMubW91c2VVcEhhbmRsZXIpLHRoaXMub24oXCJtb3VzZWRibGNsaWNrXCIsdGhpcy5kb3VibGVDbGlja0hhbmRsZXIpLHRoaXMub24oXCJ0cmlwbGVjbGlja1wiLHRoaXMudHJpcGxlQ2xpY2tIYW5kbGVyKSx0aGlzLl9fbGFzdENsaWNrVGltZT0rbmV3IERhdGUsdGhpcy5fX2xhc3RMYXN0Q2xpY2tUaW1lPStuZXcgRGF0ZSx0aGlzLl9fbGFzdFBvaW50ZXI9e30sdGhpcy5vbihcIm1vdXNlZG93blwiLHRoaXMub25Nb3VzZURvd24pLHRoaXMuZHJhZ2dhYmxlVGV4dERlbGVnYXRlPW5ldyBUbyh0aGlzKSxzdXBlci5pbml0QmVoYXZpb3IoKX1zaG91bGRTdGFydERyYWdnaW5nKCl7cmV0dXJuIHRoaXMuZHJhZ2dhYmxlVGV4dERlbGVnYXRlLmlzQWN0aXZlKCl9b25EcmFnU3RhcnQodCl7cmV0dXJuIHRoaXMuZHJhZ2dhYmxlVGV4dERlbGVnYXRlLm9uRHJhZ1N0YXJ0KHQpfWNhbkRyb3AodCl7cmV0dXJuIHRoaXMuZHJhZ2dhYmxlVGV4dERlbGVnYXRlLmNhbkRyb3AodCl9b25Nb3VzZURvd24odCl7aWYoIXRoaXMuY2FudmFzKXJldHVybjt0aGlzLl9fbmV3Q2xpY2tUaW1lPStuZXcgRGF0ZTtjb25zdCBlPXQucG9pbnRlcjt0aGlzLmlzVHJpcGxlQ2xpY2soZSkmJih0aGlzLmZpcmUoXCJ0cmlwbGVjbGlja1wiLHQpLHBlKHQuZSkpLHRoaXMuX19sYXN0TGFzdENsaWNrVGltZT10aGlzLl9fbGFzdENsaWNrVGltZSx0aGlzLl9fbGFzdENsaWNrVGltZT10aGlzLl9fbmV3Q2xpY2tUaW1lLHRoaXMuX19sYXN0UG9pbnRlcj1lLHRoaXMuX19sYXN0U2VsZWN0ZWQ9dGhpcy5zZWxlY3RlZCYmIXRoaXMuZ2V0QWN0aXZlQ29udHJvbCgpfWlzVHJpcGxlQ2xpY2sodCl7cmV0dXJuIHRoaXMuX19uZXdDbGlja1RpbWUtdGhpcy5fX2xhc3RDbGlja1RpbWU8NTAwJiZ0aGlzLl9fbGFzdENsaWNrVGltZS10aGlzLl9fbGFzdExhc3RDbGlja1RpbWU8NTAwJiZ0aGlzLl9fbGFzdFBvaW50ZXIueD09PXQueCYmdGhpcy5fX2xhc3RQb2ludGVyLnk9PT10Lnl9ZG91YmxlQ2xpY2tIYW5kbGVyKHQpe3RoaXMuaXNFZGl0aW5nJiZ0aGlzLnNlbGVjdFdvcmQodGhpcy5nZXRTZWxlY3Rpb25TdGFydEZyb21Qb2ludGVyKHQuZSkpfXRyaXBsZUNsaWNrSGFuZGxlcih0KXt0aGlzLmlzRWRpdGluZyYmdGhpcy5zZWxlY3RMaW5lKHRoaXMuZ2V0U2VsZWN0aW9uU3RhcnRGcm9tUG9pbnRlcih0LmUpKX1fbW91c2VEb3duSGFuZGxlcih0KXtsZXR7ZTplfT10O3RoaXMuY2FudmFzJiZ0aGlzLmVkaXRhYmxlJiYhTW8oZSkmJiF0aGlzLmdldEFjdGl2ZUNvbnRyb2woKSYmKHRoaXMuZHJhZ2dhYmxlVGV4dERlbGVnYXRlLnN0YXJ0KGUpfHwodGhpcy5jYW52YXMudGV4dEVkaXRpbmdNYW5hZ2VyLnJlZ2lzdGVyKHRoaXMpLHRoaXMuc2VsZWN0ZWQmJih0aGlzLmluQ29tcG9zaXRpb25Nb2RlPSExLHRoaXMuc2V0Q3Vyc29yQnlDbGljayhlKSksdGhpcy5pc0VkaXRpbmcmJih0aGlzLl9fc2VsZWN0aW9uU3RhcnRPbk1vdXNlRG93bj10aGlzLnNlbGVjdGlvblN0YXJ0LHRoaXMuc2VsZWN0aW9uU3RhcnQ9PT10aGlzLnNlbGVjdGlvbkVuZCYmdGhpcy5hYm9ydEN1cnNvckFuaW1hdGlvbigpLHRoaXMucmVuZGVyQ3Vyc29yT3JTZWxlY3Rpb24oKSkpKX1fbW91c2VEb3duSGFuZGxlckJlZm9yZSh0KXtsZXR7ZTplfT10O3RoaXMuY2FudmFzJiZ0aGlzLmVkaXRhYmxlJiYhTW8oZSkmJih0aGlzLnNlbGVjdGVkPXRoaXM9PT10aGlzLmNhbnZhcy5fYWN0aXZlT2JqZWN0KX1tb3VzZVVwSGFuZGxlcih0KXtsZXR7ZTplLHRyYW5zZm9ybTpzfT10O2NvbnN0IGk9dGhpcy5kcmFnZ2FibGVUZXh0RGVsZWdhdGUuZW5kKGUpO2lmKHRoaXMuY2FudmFzKXt0aGlzLmNhbnZhcy50ZXh0RWRpdGluZ01hbmFnZXIudW5yZWdpc3Rlcih0aGlzKTtjb25zdCB0PXRoaXMuY2FudmFzLl9hY3RpdmVPYmplY3Q7aWYodCYmdCE9PXRoaXMpcmV0dXJufSF0aGlzLmVkaXRhYmxlfHx0aGlzLmdyb3VwJiYhdGhpcy5ncm91cC5pbnRlcmFjdGl2ZXx8cyYmcy5hY3Rpb25QZXJmb3JtZWR8fE1vKGUpfHxpfHwodGhpcy5fX2xhc3RTZWxlY3RlZCYmIXRoaXMuZ2V0QWN0aXZlQ29udHJvbCgpPyh0aGlzLnNlbGVjdGVkPSExLHRoaXMuX19sYXN0U2VsZWN0ZWQ9ITEsdGhpcy5lbnRlckVkaXRpbmcoZSksdGhpcy5zZWxlY3Rpb25TdGFydD09PXRoaXMuc2VsZWN0aW9uRW5kP3RoaXMuaW5pdERlbGF5ZWRDdXJzb3IoITApOnRoaXMucmVuZGVyQ3Vyc29yT3JTZWxlY3Rpb24oKSk6dGhpcy5zZWxlY3RlZD0hMCl9c2V0Q3Vyc29yQnlDbGljayh0KXtjb25zdCBlPXRoaXMuZ2V0U2VsZWN0aW9uU3RhcnRGcm9tUG9pbnRlcih0KSxzPXRoaXMuc2VsZWN0aW9uU3RhcnQsaT10aGlzLnNlbGVjdGlvbkVuZDt0LnNoaWZ0S2V5P3RoaXMuc2V0U2VsZWN0aW9uU3RhcnRFbmRXaXRoU2hpZnQocyxpLGUpOih0aGlzLnNlbGVjdGlvblN0YXJ0PWUsdGhpcy5zZWxlY3Rpb25FbmQ9ZSksdGhpcy5pc0VkaXRpbmcmJih0aGlzLl9maXJlU2VsZWN0aW9uQ2hhbmdlZCgpLHRoaXMuX3VwZGF0ZVRleHRhcmVhKCkpfWdldFNlbGVjdGlvblN0YXJ0RnJvbVBvaW50ZXIodCl7Y29uc3QgZT10aGlzLmNhbnZhcy5nZXRTY2VuZVBvaW50KHQpLnRyYW5zZm9ybSh3dCh0aGlzLmNhbGNUcmFuc2Zvcm1NYXRyaXgoKSkpLmFkZChuZXcgb3QoLXRoaXMuX2dldExlZnRPZmZzZXQoKSwtdGhpcy5fZ2V0VG9wT2Zmc2V0KCkpKTtsZXQgcz0wLGk9MCxyPTA7Zm9yKGxldCB0PTA7dDx0aGlzLl90ZXh0TGluZXMubGVuZ3RoJiZzPD1lLnk7dCsrKXMrPXRoaXMuZ2V0SGVpZ2h0T2ZMaW5lKHQpLHI9dCx0PjAmJihpKz10aGlzLl90ZXh0TGluZXNbdC0xXS5sZW5ndGgrdGhpcy5taXNzaW5nTmV3bGluZU9mZnNldCh0LTEpKTtsZXQgbj1NYXRoLmFicyh0aGlzLl9nZXRMaW5lTGVmdE9mZnNldChyKSk7Y29uc3Qgbz10aGlzLl90ZXh0TGluZXNbcl0ubGVuZ3RoLGE9dGhpcy5fX2NoYXJCb3VuZHNbcl07Zm9yKGxldCB0PTA7dDxvO3QrKyl7Y29uc3Qgcz1uK2FbdF0ua2VybmVkV2lkdGg7aWYoZS54PD1zKXtNYXRoLmFicyhlLngtcyk8PU1hdGguYWJzKGUueC1uKSYmaSsrO2JyZWFrfW49cyxpKyt9cmV0dXJuIE1hdGgubWluKHRoaXMuZmxpcFg/by1pOmksdGhpcy5fdGV4dC5sZW5ndGgpfX1jb25zdCBFbz1cIm1vdmVDdXJzb3JVcFwiLEFvPVwibW92ZUN1cnNvckRvd25cIixqbz1cIm1vdmVDdXJzb3JMZWZ0XCIsRm89XCJtb3ZlQ3Vyc29yUmlnaHRcIixMbz1cImV4aXRFZGl0aW5nXCIsUm89cyh7c2VsZWN0aW9uU3RhcnQ6MCxzZWxlY3Rpb25FbmQ6MCxzZWxlY3Rpb25Db2xvcjpcInJnYmEoMTcsMTE5LDI1NSwwLjMpXCIsaXNFZGl0aW5nOiExLGVkaXRhYmxlOiEwLGVkaXRpbmdCb3JkZXJDb2xvcjpcInJnYmEoMTAyLDE1MywyNTUsMC4yNSlcIixjdXJzb3JXaWR0aDoyLGN1cnNvckNvbG9yOlwiXCIsY3Vyc29yRGVsYXk6MWUzLGN1cnNvckR1cmF0aW9uOjYwMCxjYWNoaW5nOiEwLGhpZGRlblRleHRhcmVhQ29udGFpbmVyOm51bGwsa2V5c01hcDp7OTpMbywyNzpMbywzMzpFbywzNDpBbywzNTpGbywzNjpqbywzNzpqbywzODpFbywzOTpGbyw0MDpBb30sa2V5c01hcFJ0bDp7OTpMbywyNzpMbywzMzpFbywzNDpBbywzNTpqbywzNjpGbywzNzpGbywzODpFbywzOTpqbyw0MDpBb30sY3RybEtleXNNYXBEb3duOns2NTpcInNlbGVjdEFsbFwifSxjdHJsS2V5c01hcFVwOns2NzpcImNvcHlcIiw4ODpcImN1dFwifX0se19zZWxlY3Rpb25EaXJlY3Rpb246bnVsbCxfcmVTcGFjZTovXFxzfFxccj9cXG4vLGluQ29tcG9zaXRpb25Nb2RlOiExfSk7Y2xhc3MgSW8gZXh0ZW5kcyBQb3tzdGF0aWMgZ2V0RGVmYXVsdHMoKXtyZXR1cm4gcyhzKHt9LHN1cGVyLmdldERlZmF1bHRzKCkpLElvLm93bkRlZmF1bHRzKX1nZXQgdHlwZSgpe2NvbnN0IHQ9c3VwZXIudHlwZTtyZXR1cm5cIml0ZXh0XCI9PT10P1wiaS10ZXh0XCI6dH1jb25zdHJ1Y3Rvcih0LGUpe3N1cGVyKHQscyhzKHt9LElvLm93bkRlZmF1bHRzKSxlKSksdGhpcy5pbml0QmVoYXZpb3IoKX1fc2V0KHQsZSl7cmV0dXJuIHRoaXMuaXNFZGl0aW5nJiZ0aGlzLl9zYXZlZFByb3BzJiZ0IGluIHRoaXMuX3NhdmVkUHJvcHM/KHRoaXMuX3NhdmVkUHJvcHNbdF09ZSx0aGlzKTooXCJjYW52YXNcIj09PXQmJih0aGlzLmNhbnZhcyBpbnN0YW5jZW9mIHhuJiZ0aGlzLmNhbnZhcy50ZXh0RWRpdGluZ01hbmFnZXIucmVtb3ZlKHRoaXMpLGUgaW5zdGFuY2VvZiB4biYmZS50ZXh0RWRpdGluZ01hbmFnZXIuYWRkKHRoaXMpKSxzdXBlci5fc2V0KHQsZSkpfXNldFNlbGVjdGlvblN0YXJ0KHQpe3Q9TWF0aC5tYXgodCwwKSx0aGlzLl91cGRhdGVBbmRGaXJlKFwic2VsZWN0aW9uU3RhcnRcIix0KX1zZXRTZWxlY3Rpb25FbmQodCl7dD1NYXRoLm1pbih0LHRoaXMudGV4dC5sZW5ndGgpLHRoaXMuX3VwZGF0ZUFuZEZpcmUoXCJzZWxlY3Rpb25FbmRcIix0KX1fdXBkYXRlQW5kRmlyZSh0LGUpe3RoaXNbdF0hPT1lJiYodGhpcy5fZmlyZVNlbGVjdGlvbkNoYW5nZWQoKSx0aGlzW3RdPWUpLHRoaXMuX3VwZGF0ZVRleHRhcmVhKCl9X2ZpcmVTZWxlY3Rpb25DaGFuZ2VkKCl7dGhpcy5maXJlKFwic2VsZWN0aW9uOmNoYW5nZWRcIiksdGhpcy5jYW52YXMmJnRoaXMuY2FudmFzLmZpcmUoXCJ0ZXh0OnNlbGVjdGlvbjpjaGFuZ2VkXCIse3RhcmdldDp0aGlzfSl9aW5pdERpbWVuc2lvbnMoKXt0aGlzLmlzRWRpdGluZyYmdGhpcy5pbml0RGVsYXllZEN1cnNvcigpLHN1cGVyLmluaXREaW1lbnNpb25zKCl9Z2V0U2VsZWN0aW9uU3R5bGVzKCl7bGV0IHQ9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnRoaXMuc2VsZWN0aW9uU3RhcnR8fDAsZT1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06dGhpcy5zZWxlY3Rpb25FbmQscz1hcmd1bWVudHMubGVuZ3RoPjI/YXJndW1lbnRzWzJdOnZvaWQgMDtyZXR1cm4gc3VwZXIuZ2V0U2VsZWN0aW9uU3R5bGVzKHQsZSxzKX1zZXRTZWxlY3Rpb25TdHlsZXModCl7bGV0IGU9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOnRoaXMuc2VsZWN0aW9uU3RhcnR8fDAscz1hcmd1bWVudHMubGVuZ3RoPjImJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06dGhpcy5zZWxlY3Rpb25FbmQ7cmV0dXJuIHN1cGVyLnNldFNlbGVjdGlvblN0eWxlcyh0LGUscyl9Z2V0MkRDdXJzb3JMb2NhdGlvbigpe2xldCB0PWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp0aGlzLnNlbGVjdGlvblN0YXJ0LGU9YXJndW1lbnRzLmxlbmd0aD4xP2FyZ3VtZW50c1sxXTp2b2lkIDA7cmV0dXJuIHN1cGVyLmdldDJEQ3Vyc29yTG9jYXRpb24odCxlKX1yZW5kZXIodCl7c3VwZXIucmVuZGVyKHQpLHRoaXMuY3Vyc29yT2Zmc2V0Q2FjaGU9e30sdGhpcy5yZW5kZXJDdXJzb3JPclNlbGVjdGlvbigpfXRvQ2FudmFzRWxlbWVudCh0KXtjb25zdCBlPXRoaXMuaXNFZGl0aW5nO3RoaXMuaXNFZGl0aW5nPSExO2NvbnN0IHM9c3VwZXIudG9DYW52YXNFbGVtZW50KHQpO3JldHVybiB0aGlzLmlzRWRpdGluZz1lLHN9cmVuZGVyQ3Vyc29yT3JTZWxlY3Rpb24oKXtpZighdGhpcy5pc0VkaXRpbmcpcmV0dXJuO2NvbnN0IHQ9dGhpcy5jbGVhckNvbnRleHRUb3AoITApO2lmKCF0KXJldHVybjtjb25zdCBlPXRoaXMuX2dldEN1cnNvckJvdW5kYXJpZXMoKTt0aGlzLnNlbGVjdGlvblN0YXJ0IT09dGhpcy5zZWxlY3Rpb25FbmR8fHRoaXMuaW5Db21wb3NpdGlvbk1vZGU/dGhpcy5yZW5kZXJTZWxlY3Rpb24odCxlKTp0aGlzLnJlbmRlckN1cnNvcih0LGUpLHRoaXMuY2FudmFzLmNvbnRleHRUb3BEaXJ0eT0hMCx0LnJlc3RvcmUoKX1fZ2V0Q3Vyc29yQm91bmRhcmllcygpe2xldCB0PWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp0aGlzLnNlbGVjdGlvblN0YXJ0LGU9YXJndW1lbnRzLmxlbmd0aD4xP2FyZ3VtZW50c1sxXTp2b2lkIDA7Y29uc3Qgcz10aGlzLl9nZXRMZWZ0T2Zmc2V0KCksaT10aGlzLl9nZXRUb3BPZmZzZXQoKSxyPXRoaXMuX2dldEN1cnNvckJvdW5kYXJpZXNPZmZzZXRzKHQsZSk7cmV0dXJue2xlZnQ6cyx0b3A6aSxsZWZ0T2Zmc2V0OnIubGVmdCx0b3BPZmZzZXQ6ci50b3B9fV9nZXRDdXJzb3JCb3VuZGFyaWVzT2Zmc2V0cyh0LGUpe3JldHVybiBlP3RoaXMuX19nZXRDdXJzb3JCb3VuZGFyaWVzT2Zmc2V0cyh0KTp0aGlzLmN1cnNvck9mZnNldENhY2hlJiZcInRvcFwiaW4gdGhpcy5jdXJzb3JPZmZzZXRDYWNoZT90aGlzLmN1cnNvck9mZnNldENhY2hlOnRoaXMuY3Vyc29yT2Zmc2V0Q2FjaGU9dGhpcy5fX2dldEN1cnNvckJvdW5kYXJpZXNPZmZzZXRzKHQpfV9fZ2V0Q3Vyc29yQm91bmRhcmllc09mZnNldHModCl7bGV0IGU9MCxzPTA7Y29uc3R7Y2hhckluZGV4OmksbGluZUluZGV4OnJ9PXRoaXMuZ2V0MkRDdXJzb3JMb2NhdGlvbih0KTtmb3IobGV0IHQ9MDt0PHI7dCsrKWUrPXRoaXMuZ2V0SGVpZ2h0T2ZMaW5lKHQpO2NvbnN0IG49dGhpcy5fZ2V0TGluZUxlZnRPZmZzZXQociksbz10aGlzLl9fY2hhckJvdW5kc1tyXVtpXTtvJiYocz1vLmxlZnQpLDAhPT10aGlzLmNoYXJTcGFjaW5nJiZpPT09dGhpcy5fdGV4dExpbmVzW3JdLmxlbmd0aCYmKHMtPXRoaXMuX2dldFdpZHRoT2ZDaGFyU3BhY2luZygpKTtjb25zdCBhPXt0b3A6ZSxsZWZ0Om4rKHM+MD9zOjApfTtyZXR1cm5cInJ0bFwiPT09dGhpcy5kaXJlY3Rpb24mJih0aGlzLnRleHRBbGlnbj09PUF8fHRoaXMudGV4dEFsaWduPT09Zm98fHRoaXMudGV4dEFsaWduPT09bW8/YS5sZWZ0Kj0tMTp0aGlzLnRleHRBbGlnbj09PU18fHRoaXMudGV4dEFsaWduPT09cG8/YS5sZWZ0PW4tKHM+MD9zOjApOnRoaXMudGV4dEFsaWduIT09RCYmdGhpcy50ZXh0QWxpZ24hPT12b3x8KGEubGVmdD1uLShzPjA/czowKSkpLGF9cmVuZGVyQ3Vyc29yQXQodCl7dGhpcy5fcmVuZGVyQ3Vyc29yKHRoaXMuY2FudmFzLmNvbnRleHRUb3AsdGhpcy5fZ2V0Q3Vyc29yQm91bmRhcmllcyh0LCEwKSx0KX1yZW5kZXJDdXJzb3IodCxlKXt0aGlzLl9yZW5kZXJDdXJzb3IodCxlLHRoaXMuc2VsZWN0aW9uU3RhcnQpfWdldEN1cnNvclJlbmRlcmluZ0RhdGEoKXtsZXQgdD1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06dGhpcy5zZWxlY3Rpb25TdGFydCxlPWFyZ3VtZW50cy5sZW5ndGg+MSYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXTp0aGlzLl9nZXRDdXJzb3JCb3VuZGFyaWVzKHQpO2NvbnN0IHM9dGhpcy5nZXQyREN1cnNvckxvY2F0aW9uKHQpLGk9cy5saW5lSW5kZXgscj1zLmNoYXJJbmRleD4wP3MuY2hhckluZGV4LTE6MCxuPXRoaXMuZ2V0VmFsdWVPZlByb3BlcnR5QXQoaSxyLFwiZm9udFNpemVcIiksbz10aGlzLmdldE9iamVjdFNjYWxpbmcoKS54KnRoaXMuY2FudmFzLmdldFpvb20oKSxhPXRoaXMuY3Vyc29yV2lkdGgvbyxoPXRoaXMuZ2V0VmFsdWVPZlByb3BlcnR5QXQoaSxyLFwiZGVsdGFZXCIpLGM9ZS50b3BPZmZzZXQrKDEtdGhpcy5fZm9udFNpemVGcmFjdGlvbikqdGhpcy5nZXRIZWlnaHRPZkxpbmUoaSkvdGhpcy5saW5lSGVpZ2h0LW4qKDEtdGhpcy5fZm9udFNpemVGcmFjdGlvbik7cmV0dXJue2NvbG9yOnRoaXMuY3Vyc29yQ29sb3J8fHRoaXMuZ2V0VmFsdWVPZlByb3BlcnR5QXQoaSxyLFwiZmlsbFwiKSxvcGFjaXR5OnRoaXMuX2N1cnJlbnRDdXJzb3JPcGFjaXR5LGxlZnQ6ZS5sZWZ0K2UubGVmdE9mZnNldC1hLzIsdG9wOmMrZS50b3AraCx3aWR0aDphLGhlaWdodDpufX1fcmVuZGVyQ3Vyc29yKHQsZSxzKXtjb25zdHtjb2xvcjppLG9wYWNpdHk6cixsZWZ0Om4sdG9wOm8sd2lkdGg6YSxoZWlnaHQ6aH09dGhpcy5nZXRDdXJzb3JSZW5kZXJpbmdEYXRhKHMsZSk7dC5maWxsU3R5bGU9aSx0Lmdsb2JhbEFscGhhPXIsdC5maWxsUmVjdChuLG8sYSxoKX1yZW5kZXJTZWxlY3Rpb24odCxlKXtjb25zdCBzPXtzZWxlY3Rpb25TdGFydDp0aGlzLmluQ29tcG9zaXRpb25Nb2RlP3RoaXMuaGlkZGVuVGV4dGFyZWEuc2VsZWN0aW9uU3RhcnQ6dGhpcy5zZWxlY3Rpb25TdGFydCxzZWxlY3Rpb25FbmQ6dGhpcy5pbkNvbXBvc2l0aW9uTW9kZT90aGlzLmhpZGRlblRleHRhcmVhLnNlbGVjdGlvbkVuZDp0aGlzLnNlbGVjdGlvbkVuZH07dGhpcy5fcmVuZGVyU2VsZWN0aW9uKHQscyxlKX1yZW5kZXJEcmFnU291cmNlRWZmZWN0KCl7Y29uc3QgdD10aGlzLmRyYWdnYWJsZVRleHREZWxlZ2F0ZS5nZXREcmFnU3RhcnRTZWxlY3Rpb24oKTt0aGlzLl9yZW5kZXJTZWxlY3Rpb24odGhpcy5jYW52YXMuY29udGV4dFRvcCx0LHRoaXMuX2dldEN1cnNvckJvdW5kYXJpZXModC5zZWxlY3Rpb25TdGFydCwhMCkpfXJlbmRlckRyb3BUYXJnZXRFZmZlY3QodCl7Y29uc3QgZT10aGlzLmdldFNlbGVjdGlvblN0YXJ0RnJvbVBvaW50ZXIodCk7dGhpcy5yZW5kZXJDdXJzb3JBdChlKX1fcmVuZGVyU2VsZWN0aW9uKHQsZSxzKXtjb25zdCBpPWUuc2VsZWN0aW9uU3RhcnQscj1lLnNlbGVjdGlvbkVuZCxuPXRoaXMudGV4dEFsaWduLmluY2x1ZGVzKGZvKSxvPXRoaXMuZ2V0MkRDdXJzb3JMb2NhdGlvbihpKSxhPXRoaXMuZ2V0MkRDdXJzb3JMb2NhdGlvbihyKSxoPW8ubGluZUluZGV4LGM9YS5saW5lSW5kZXgsbD1vLmNoYXJJbmRleDwwPzA6by5jaGFySW5kZXgsdT1hLmNoYXJJbmRleDwwPzA6YS5jaGFySW5kZXg7Zm9yKGxldCBlPWg7ZTw9YztlKyspe2NvbnN0IGk9dGhpcy5fZ2V0TGluZUxlZnRPZmZzZXQoZSl8fDA7bGV0IHI9dGhpcy5nZXRIZWlnaHRPZkxpbmUoZSksbz0wLGE9MCxkPTA7aWYoZT09PWgmJihhPXRoaXMuX19jaGFyQm91bmRzW2hdW2xdLmxlZnQpLGU+PWgmJmU8YylkPW4mJiF0aGlzLmlzRW5kT2ZXcmFwcGluZyhlKT90aGlzLndpZHRoOnRoaXMuZ2V0TGluZVdpZHRoKGUpfHw1O2Vsc2UgaWYoZT09PWMpaWYoMD09PXUpZD10aGlzLl9fY2hhckJvdW5kc1tjXVt1XS5sZWZ0O2Vsc2V7Y29uc3QgdD10aGlzLl9nZXRXaWR0aE9mQ2hhclNwYWNpbmcoKTtkPXRoaXMuX19jaGFyQm91bmRzW2NdW3UtMV0ubGVmdCt0aGlzLl9fY2hhckJvdW5kc1tjXVt1LTFdLndpZHRoLXR9bz1yLCh0aGlzLmxpbmVIZWlnaHQ8MXx8ZT09PWMmJnRoaXMubGluZUhlaWdodD4xKSYmKHIvPXRoaXMubGluZUhlaWdodCk7bGV0IGc9cy5sZWZ0K2krYSxmPXIscD0wO2NvbnN0IG09ZC1hO3RoaXMuaW5Db21wb3NpdGlvbk1vZGU/KHQuZmlsbFN0eWxlPXRoaXMuY29tcG9zaXRpb25Db2xvcnx8XCJibGFja1wiLGY9MSxwPXIpOnQuZmlsbFN0eWxlPXRoaXMuc2VsZWN0aW9uQ29sb3IsXCJydGxcIj09PXRoaXMuZGlyZWN0aW9uJiYodGhpcy50ZXh0QWxpZ249PT1BfHx0aGlzLnRleHRBbGlnbj09PWZvfHx0aGlzLnRleHRBbGlnbj09PW1vP2c9dGhpcy53aWR0aC1nLW06dGhpcy50ZXh0QWxpZ249PT1NfHx0aGlzLnRleHRBbGlnbj09PXBvP2c9cy5sZWZ0K2ktZDp0aGlzLnRleHRBbGlnbiE9PUQmJnRoaXMudGV4dEFsaWduIT09dm98fChnPXMubGVmdCtpLWQpKSx0LmZpbGxSZWN0KGcscy50b3Arcy50b3BPZmZzZXQrcCxtLGYpLHMudG9wT2Zmc2V0Kz1vfX1nZXRDdXJyZW50Q2hhckZvbnRTaXplKCl7Y29uc3QgdD10aGlzLl9nZXRDdXJyZW50Q2hhckluZGV4KCk7cmV0dXJuIHRoaXMuZ2V0VmFsdWVPZlByb3BlcnR5QXQodC5sLHQuYyxcImZvbnRTaXplXCIpfWdldEN1cnJlbnRDaGFyQ29sb3IoKXtjb25zdCB0PXRoaXMuX2dldEN1cnJlbnRDaGFySW5kZXgoKTtyZXR1cm4gdGhpcy5nZXRWYWx1ZU9mUHJvcGVydHlBdCh0LmwsdC5jLEspfV9nZXRDdXJyZW50Q2hhckluZGV4KCl7Y29uc3QgdD10aGlzLmdldDJEQ3Vyc29yTG9jYXRpb24odGhpcy5zZWxlY3Rpb25TdGFydCwhMCksZT10LmNoYXJJbmRleD4wP3QuY2hhckluZGV4LTE6MDtyZXR1cm57bDp0LmxpbmVJbmRleCxjOmV9fWRpc3Bvc2UoKXt0aGlzLmV4aXRFZGl0aW5nSW1wbCgpLHRoaXMuZHJhZ2dhYmxlVGV4dERlbGVnYXRlLmRpc3Bvc2UoKSxzdXBlci5kaXNwb3NlKCl9fXQoSW8sXCJvd25EZWZhdWx0c1wiLFJvKSx0KElvLFwidHlwZVwiLFwiSVRleHRcIiksdHQuc2V0Q2xhc3MoSW8pLHR0LnNldENsYXNzKElvLFwiaS10ZXh0XCIpO2NsYXNzIEJvIGV4dGVuZHMgSW97c3RhdGljIGdldERlZmF1bHRzKCl7cmV0dXJuIHMocyh7fSxzdXBlci5nZXREZWZhdWx0cygpKSxCby5vd25EZWZhdWx0cyl9Y29uc3RydWN0b3IodCxlKXtzdXBlcih0LHMocyh7fSxCby5vd25EZWZhdWx0cyksZSkpfXN0YXRpYyBjcmVhdGVDb250cm9scygpe3JldHVybntjb250cm9sczpwaSgpfX1pbml0RGltZW5zaW9ucygpe3RoaXMuaW5pdGlhbGl6ZWQmJih0aGlzLmlzRWRpdGluZyYmdGhpcy5pbml0RGVsYXllZEN1cnNvcigpLHRoaXMuX2NsZWFyQ2FjaGUoKSx0aGlzLmR5bmFtaWNNaW5XaWR0aD0wLHRoaXMuX3N0eWxlTWFwPXRoaXMuX2dlbmVyYXRlU3R5bGVNYXAodGhpcy5fc3BsaXRUZXh0KCkpLHRoaXMuZHluYW1pY01pbldpZHRoPnRoaXMud2lkdGgmJnRoaXMuX3NldChcIndpZHRoXCIsdGhpcy5keW5hbWljTWluV2lkdGgpLHRoaXMudGV4dEFsaWduLmluY2x1ZGVzKGZvKSYmdGhpcy5lbmxhcmdlU3BhY2VzKCksdGhpcy5oZWlnaHQ9dGhpcy5jYWxjVGV4dEhlaWdodCgpKX1fZ2VuZXJhdGVTdHlsZU1hcCh0KXtsZXQgZT0wLHM9MCxpPTA7Y29uc3Qgcj17fTtmb3IobGV0IG49MDtuPHQuZ3JhcGhlbWVMaW5lcy5sZW5ndGg7bisrKVwiXFxuXCI9PT10LmdyYXBoZW1lVGV4dFtpXSYmbj4wPyhzPTAsaSsrLGUrKyk6IXRoaXMuc3BsaXRCeUdyYXBoZW1lJiZ0aGlzLl9yZVNwYWNlQW5kVGFiLnRlc3QodC5ncmFwaGVtZVRleHRbaV0pJiZuPjAmJihzKyssaSsrKSxyW25dPXtsaW5lOmUsb2Zmc2V0OnN9LGkrPXQuZ3JhcGhlbWVMaW5lc1tuXS5sZW5ndGgscys9dC5ncmFwaGVtZUxpbmVzW25dLmxlbmd0aDtyZXR1cm4gcn1zdHlsZUhhcyh0LGUpe2lmKHRoaXMuX3N0eWxlTWFwJiYhdGhpcy5pc1dyYXBwaW5nKXtjb25zdCB0PXRoaXMuX3N0eWxlTWFwW2VdO3QmJihlPXQubGluZSl9cmV0dXJuIHN1cGVyLnN0eWxlSGFzKHQsZSl9aXNFbXB0eVN0eWxlcyh0KXtpZighdGhpcy5zdHlsZXMpcmV0dXJuITA7bGV0IGUscz0wLGk9dCsxLHI9ITE7Y29uc3Qgbj10aGlzLl9zdHlsZU1hcFt0XSxvPXRoaXMuX3N0eWxlTWFwW3QrMV07biYmKHQ9bi5saW5lLHM9bi5vZmZzZXQpLG8mJihpPW8ubGluZSxyPWk9PT10LGU9by5vZmZzZXQpO2NvbnN0IGE9dm9pZCAwPT09dD90aGlzLnN0eWxlczp7bGluZTp0aGlzLnN0eWxlc1t0XX07Zm9yKGNvbnN0IHQgaW4gYSlmb3IoY29uc3QgaSBpbiBhW3RdKXtjb25zdCBuPXBhcnNlSW50KGksMTApO2lmKG4+PXMmJighcnx8bjxlKSlmb3IoY29uc3QgZSBpbiBhW3RdW2ldKXJldHVybiExfXJldHVybiEwfV9nZXRTdHlsZURlY2xhcmF0aW9uKHQsZSl7aWYodGhpcy5fc3R5bGVNYXAmJiF0aGlzLmlzV3JhcHBpbmcpe2NvbnN0IHM9dGhpcy5fc3R5bGVNYXBbdF07aWYoIXMpcmV0dXJue307dD1zLmxpbmUsZT1zLm9mZnNldCtlfXJldHVybiBzdXBlci5fZ2V0U3R5bGVEZWNsYXJhdGlvbih0LGUpfV9zZXRTdHlsZURlY2xhcmF0aW9uKHQsZSxzKXtjb25zdCBpPXRoaXMuX3N0eWxlTWFwW3RdO3N1cGVyLl9zZXRTdHlsZURlY2xhcmF0aW9uKGkubGluZSxpLm9mZnNldCtlLHMpfV9kZWxldGVTdHlsZURlY2xhcmF0aW9uKHQsZSl7Y29uc3Qgcz10aGlzLl9zdHlsZU1hcFt0XTtzdXBlci5fZGVsZXRlU3R5bGVEZWNsYXJhdGlvbihzLmxpbmUscy5vZmZzZXQrZSl9X2dldExpbmVTdHlsZSh0KXtjb25zdCBlPXRoaXMuX3N0eWxlTWFwW3RdO3JldHVybiEhdGhpcy5zdHlsZXNbZS5saW5lXX1fc2V0TGluZVN0eWxlKHQpe2NvbnN0IGU9dGhpcy5fc3R5bGVNYXBbdF07c3VwZXIuX3NldExpbmVTdHlsZShlLmxpbmUpfV93cmFwVGV4dCh0LGUpe3RoaXMuaXNXcmFwcGluZz0hMDtjb25zdCBzPXRoaXMuZ2V0R3JhcGhlbWVEYXRhRm9yUmVuZGVyKHQpLGk9W107Zm9yKGxldCB0PTA7dDxzLndvcmRzRGF0YS5sZW5ndGg7dCsrKWkucHVzaCguLi50aGlzLl93cmFwTGluZSh0LGUscykpO3JldHVybiB0aGlzLmlzV3JhcHBpbmc9ITEsaX1nZXRHcmFwaGVtZURhdGFGb3JSZW5kZXIodCl7Y29uc3QgZT10aGlzLnNwbGl0QnlHcmFwaGVtZSxzPWU/XCJcIjpcIiBcIjtsZXQgaT0wO3JldHVybnt3b3Jkc0RhdGE6dC5tYXAoKCh0LHIpPT57bGV0IG49MDtjb25zdCBvPWU/dGhpcy5ncmFwaGVtZVNwbGl0KHQpOnRoaXMud29yZFNwbGl0KHQpO3JldHVybiAwPT09by5sZW5ndGg/W3t3b3JkOltdLHdpZHRoOjB9XTpvLm1hcCgodD0+e2NvbnN0IG89ZT9bdF06dGhpcy5ncmFwaGVtZVNwbGl0KHQpLGE9dGhpcy5fbWVhc3VyZVdvcmQobyxyLG4pO3JldHVybiBpPU1hdGgubWF4KGEsaSksbis9by5sZW5ndGgrcy5sZW5ndGgse3dvcmQ6byx3aWR0aDphfX0pKX0pKSxsYXJnZXN0V29yZFdpZHRoOml9fV9tZWFzdXJlV29yZCh0LGUpe2xldCBzLGk9YXJndW1lbnRzLmxlbmd0aD4yJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOjAscj0wO2ZvcihsZXQgbj0wLG89dC5sZW5ndGg7bjxvO24rKyl7cis9dGhpcy5fZ2V0R3JhcGhlbWVCb3godFtuXSxlLG4raSxzLHRydWUpLmtlcm5lZFdpZHRoLHM9dFtuXX1yZXR1cm4gcn13b3JkU3BsaXQodCl7cmV0dXJuIHQuc3BsaXQodGhpcy5fd29yZEpvaW5lcnMpfV93cmFwTGluZSh0LGUscyl7bGV0e2xhcmdlc3RXb3JkV2lkdGg6aSx3b3Jkc0RhdGE6cn09cyxuPWFyZ3VtZW50cy5sZW5ndGg+MyYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXTowO2NvbnN0IG89dGhpcy5fZ2V0V2lkdGhPZkNoYXJTcGFjaW5nKCksYT10aGlzLnNwbGl0QnlHcmFwaGVtZSxoPVtdLGM9YT9cIlwiOlwiIFwiO2xldCBsPTAsdT1bXSxkPTAsZz0wLGY9ITA7ZS09bjtjb25zdCBwPU1hdGgubWF4KGUsaSx0aGlzLmR5bmFtaWNNaW5XaWR0aCksbT1yW3RdO2xldCB2O2ZvcihkPTAsdj0wO3Y8bS5sZW5ndGg7disrKXtjb25zdHt3b3JkOmUsd2lkdGg6c309bVt2XTtkKz1lLmxlbmd0aCxsKz1nK3MtbyxsPnAmJiFmPyhoLnB1c2godSksdT1bXSxsPXMsZj0hMCk6bCs9byxmfHxhfHx1LnB1c2goYyksdT11LmNvbmNhdChlKSxnPWE/MDp0aGlzLl9tZWFzdXJlV29yZChbY10sdCxkKSxkKyssZj0hMX1yZXR1cm4gdiYmaC5wdXNoKHUpLGkrbj50aGlzLmR5bmFtaWNNaW5XaWR0aCYmKHRoaXMuZHluYW1pY01pbldpZHRoPWktbytuKSxofWlzRW5kT2ZXcmFwcGluZyh0KXtyZXR1cm4hdGhpcy5fc3R5bGVNYXBbdCsxXXx8dGhpcy5fc3R5bGVNYXBbdCsxXS5saW5lIT09dGhpcy5fc3R5bGVNYXBbdF0ubGluZX1taXNzaW5nTmV3bGluZU9mZnNldCh0LGUpe3JldHVybiB0aGlzLnNwbGl0QnlHcmFwaGVtZSYmIWU/dGhpcy5pc0VuZE9mV3JhcHBpbmcodCk/MTowOjF9X3NwbGl0VGV4dEludG9MaW5lcyh0KXtjb25zdCBlPXN1cGVyLl9zcGxpdFRleHRJbnRvTGluZXModCkscz10aGlzLl93cmFwVGV4dChlLmxpbmVzLHRoaXMud2lkdGgpLGk9bmV3IEFycmF5KHMubGVuZ3RoKTtmb3IobGV0IHQ9MDt0PHMubGVuZ3RoO3QrKylpW3RdPXNbdF0uam9pbihcIlwiKTtyZXR1cm4gZS5saW5lcz1pLGUuZ3JhcGhlbWVMaW5lcz1zLGV9Z2V0TWluV2lkdGgoKXtyZXR1cm4gTWF0aC5tYXgodGhpcy5taW5XaWR0aCx0aGlzLmR5bmFtaWNNaW5XaWR0aCl9X3JlbW92ZUV4dHJhbmVvdXNTdHlsZXMoKXtjb25zdCB0PW5ldyBNYXA7Zm9yKGNvbnN0IGUgaW4gdGhpcy5fc3R5bGVNYXApe2NvbnN0IHM9cGFyc2VJbnQoZSwxMCk7aWYodGhpcy5fdGV4dExpbmVzW3NdKXtjb25zdCBzPXRoaXMuX3N0eWxlTWFwW2VdLmxpbmU7dC5zZXQoXCJcIi5jb25jYXQocyksITApfX1mb3IoY29uc3QgZSBpbiB0aGlzLnN0eWxlcyl0LmhhcyhlKXx8ZGVsZXRlIHRoaXMuc3R5bGVzW2VdfXRvT2JqZWN0KCl7bGV0IHQ9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOltdO3JldHVybiBzdXBlci50b09iamVjdChbXCJtaW5XaWR0aFwiLFwic3BsaXRCeUdyYXBoZW1lXCIsLi4udF0pfX10KEJvLFwidHlwZVwiLFwiVGV4dGJveFwiKSx0KEJvLFwidGV4dExheW91dFByb3BlcnRpZXNcIixbLi4uSW8udGV4dExheW91dFByb3BlcnRpZXMsXCJ3aWR0aFwiXSksdChCbyxcIm93bkRlZmF1bHRzXCIse21pbldpZHRoOjIwLGR5bmFtaWNNaW5XaWR0aDoyLGxvY2tTY2FsaW5nRmxpcDohMCxub1NjYWxlQ2FjaGU6ITEsX3dvcmRKb2luZXJzOi9bIFxcdFxccl0vLHNwbGl0QnlHcmFwaGVtZTohMX0pLHR0LnNldENsYXNzKEJvKTtjbGFzcyBYbyBleHRlbmRzIHhye3Nob3VsZFBlcmZvcm1MYXlvdXQodCl7cmV0dXJuISF0LnRhcmdldC5jbGlwUGF0aCYmc3VwZXIuc2hvdWxkUGVyZm9ybUxheW91dCh0KX1zaG91bGRMYXlvdXRDbGlwUGF0aCgpe3JldHVybiExfWNhbGNMYXlvdXRSZXN1bHQodCxlKXtjb25zdHt0YXJnZXQ6c309dCx7Y2xpcFBhdGg6aSxncm91cDpyfT1zO2lmKCFpfHwhdGhpcy5zaG91bGRQZXJmb3JtTGF5b3V0KHQpKXJldHVybjtjb25zdHt3aWR0aDpuLGhlaWdodDpvfT1tZShfcihzLGkpKSxhPW5ldyBvdChuLG8pO2lmKGkuYWJzb2x1dGVQb3NpdGlvbmVkKXtyZXR1cm57Y2VudGVyOlNlKGkuZ2V0UmVsYXRpdmVDZW50ZXJQb2ludCgpLHZvaWQgMCxyP3IuY2FsY1RyYW5zZm9ybU1hdHJpeCgpOnZvaWQgMCksc2l6ZTphfX17Y29uc3Qgcj1pLmdldFJlbGF0aXZlQ2VudGVyUG9pbnQoKS50cmFuc2Zvcm0ocy5jYWxjT3duTWF0cml4KCksITApO2lmKHRoaXMuc2hvdWxkUGVyZm9ybUxheW91dCh0KSl7Y29uc3R7Y2VudGVyOnM9bmV3IG90LGNvcnJlY3Rpb246aT1uZXcgb3R9PXRoaXMuY2FsY0JvdW5kaW5nQm94KGUsdCl8fHt9O3JldHVybntjZW50ZXI6cy5hZGQociksY29ycmVjdGlvbjppLnN1YnRyYWN0KHIpLHNpemU6YX19cmV0dXJue2NlbnRlcjpzLmdldFJlbGF0aXZlQ2VudGVyUG9pbnQoKS5hZGQociksc2l6ZTphfX19fXQoWG8sXCJ0eXBlXCIsXCJjbGlwLXBhdGhcIiksdHQuc2V0Q2xhc3MoWG8pO2NsYXNzIFlvIGV4dGVuZHMgeHJ7Z2V0SW5pdGlhbFNpemUodCxlKXtsZXR7dGFyZ2V0OnN9PXQse3NpemU6aX09ZTtyZXR1cm4gbmV3IG90KHMud2lkdGh8fGkueCxzLmhlaWdodHx8aS55KX19dChZbyxcInR5cGVcIixcImZpeGVkXCIpLHR0LnNldENsYXNzKFlvKTtjbGFzcyBXbyBleHRlbmRzIFRye3N1YnNjcmliZVRhcmdldHModCl7Y29uc3QgZT10LnRhcmdldDt0LnRhcmdldHMucmVkdWNlKCgodCxlKT0+KGUucGFyZW50JiZ0LmFkZChlLnBhcmVudCksdCkpLG5ldyBTZXQpLmZvckVhY2goKHQ9Pnt0LmxheW91dE1hbmFnZXIuc3Vic2NyaWJlVGFyZ2V0cyh7dGFyZ2V0OnQsdGFyZ2V0czpbZV19KX0pKX11bnN1YnNjcmliZVRhcmdldHModCl7Y29uc3QgZT10LnRhcmdldCxzPWUuZ2V0T2JqZWN0cygpO3QudGFyZ2V0cy5yZWR1Y2UoKCh0LGUpPT4oZS5wYXJlbnQmJnQuYWRkKGUucGFyZW50KSx0KSksbmV3IFNldCkuZm9yRWFjaCgodD0+eyFzLnNvbWUoKGU9PmUucGFyZW50PT09dCkpJiZ0LmxheW91dE1hbmFnZXIudW5zdWJzY3JpYmVUYXJnZXRzKHt0YXJnZXQ6dCx0YXJnZXRzOltlXX0pfSkpfX1jbGFzcyBWbyBleHRlbmRzIERye3N0YXRpYyBnZXREZWZhdWx0cygpe3JldHVybiBzKHMoe30sc3VwZXIuZ2V0RGVmYXVsdHMoKSksVm8ub3duRGVmYXVsdHMpfWNvbnN0cnVjdG9yKCl7bGV0IHQ9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOltdLGU9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOnt9O3N1cGVyKCksT2JqZWN0LmFzc2lnbih0aGlzLFZvLm93bkRlZmF1bHRzKSx0aGlzLnNldE9wdGlvbnMoZSk7Y29uc3R7bGVmdDpzLHRvcDppLGxheW91dE1hbmFnZXI6cn09ZTt0aGlzLmdyb3VwSW5pdCh0LHtsZWZ0OnMsdG9wOmksbGF5b3V0TWFuYWdlcjpudWxsIT1yP3I6bmV3IFdvfSl9X3Nob3VsZFNldE5lc3RlZENvb3Jkcygpe3JldHVybiEwfV9fb2JqZWN0U2VsZWN0aW9uTW9uaXRvcigpe31tdWx0aVNlbGVjdEFkZCgpe2Zvcih2YXIgdD1hcmd1bWVudHMubGVuZ3RoLGU9bmV3IEFycmF5KHQpLHM9MDtzPHQ7cysrKWVbc109YXJndW1lbnRzW3NdO1wic2VsZWN0aW9uLW9yZGVyXCI9PT10aGlzLm11bHRpU2VsZWN0aW9uU3RhY2tpbmc/dGhpcy5hZGQoLi4uZSk6ZS5mb3JFYWNoKCh0PT57Y29uc3QgZT10aGlzLl9vYmplY3RzLmZpbmRJbmRleCgoZT0+ZS5pc0luRnJvbnRPZih0KSkpLHM9LTE9PT1lP3RoaXMuc2l6ZSgpOmU7dGhpcy5pbnNlcnRBdChzLHQpfSkpfWNhbkVudGVyR3JvdXAodCl7cmV0dXJuIHRoaXMuZ2V0T2JqZWN0cygpLnNvbWUoKGU9PmUuaXNEZXNjZW5kYW50T2YodCl8fHQuaXNEZXNjZW5kYW50T2YoZSkpKT8oYShcImVycm9yXCIsXCJBY3RpdmVTZWxlY3Rpb246IGNpcmN1bGFyIG9iamVjdCB0cmVlcyBhcmUgbm90IHN1cHBvcnRlZCwgdGhpcyBjYWxsIGhhcyBubyBlZmZlY3RcIiksITEpOnN1cGVyLmNhbkVudGVyR3JvdXAodCl9ZW50ZXJHcm91cCh0LGUpe3QucGFyZW50JiZ0LnBhcmVudD09PXQuZ3JvdXA/dC5wYXJlbnQuX2V4aXRHcm91cCh0KTp0Lmdyb3VwJiZ0LnBhcmVudCE9PXQuZ3JvdXAmJnQuZ3JvdXAucmVtb3ZlKHQpLHRoaXMuX2VudGVyR3JvdXAodCxlKX1leGl0R3JvdXAodCxlKXt0aGlzLl9leGl0R3JvdXAodCxlKSx0LnBhcmVudCYmdC5wYXJlbnQuX2VudGVyR3JvdXAodCwhMCl9X29uQWZ0ZXJPYmplY3RzQ2hhbmdlKHQsZSl7c3VwZXIuX29uQWZ0ZXJPYmplY3RzQ2hhbmdlKHQsZSk7Y29uc3Qgcz1uZXcgU2V0O2UuZm9yRWFjaCgodD0+e2NvbnN0e3BhcmVudDplfT10O2UmJnMuYWRkKGUpfSkpLHQ9PT12cj9zLmZvckVhY2goKHQ9Pnt0Ll9vbkFmdGVyT2JqZWN0c0NoYW5nZShtcixlKX0pKTpzLmZvckVhY2goKHQ9Pnt0Ll9zZXQoXCJkaXJ0eVwiLCEwKX0pKX1vbkRlc2VsZWN0KCl7cmV0dXJuIHRoaXMucmVtb3ZlQWxsKCksITF9dG9TdHJpbmcoKXtyZXR1cm5cIiM8QWN0aXZlU2VsZWN0aW9uOiAoXCIuY29uY2F0KHRoaXMuY29tcGxleGl0eSgpLFwiKT5cIil9c2hvdWxkQ2FjaGUoKXtyZXR1cm4hMX1pc09uQUNhY2hlKCl7cmV0dXJuITF9X3JlbmRlckNvbnRyb2xzKHQsZSxpKXt0LnNhdmUoKSx0Lmdsb2JhbEFscGhhPXRoaXMuaXNNb3Zpbmc/dGhpcy5ib3JkZXJPcGFjaXR5V2hlbk1vdmluZzoxO2NvbnN0IHI9cyhzKHtoYXNDb250cm9sczohMX0saSkse30se2ZvckFjdGl2ZVNlbGVjdGlvbjohMH0pO2ZvcihsZXQgZT0wO2U8dGhpcy5fb2JqZWN0cy5sZW5ndGg7ZSsrKXRoaXMuX29iamVjdHNbZV0uX3JlbmRlckNvbnRyb2xzKHQscik7c3VwZXIuX3JlbmRlckNvbnRyb2xzKHQsZSksdC5yZXN0b3JlKCl9fXQoVm8sXCJ0eXBlXCIsXCJBY3RpdmVTZWxlY3Rpb25cIiksdChWbyxcIm93bkRlZmF1bHRzXCIse211bHRpU2VsZWN0aW9uU3RhY2tpbmc6XCJjYW52YXMtc3RhY2tpbmdcIn0pLHR0LnNldENsYXNzKFZvKSx0dC5zZXRDbGFzcyhWbyxcImFjdGl2ZVNlbGVjdGlvblwiKTtjbGFzcyB6b3tjb25zdHJ1Y3Rvcigpe3QodGhpcyxcInJlc291cmNlc1wiLHt9KX1hcHBseUZpbHRlcnModCxlLHMsaSxyKXtjb25zdCBuPXIuZ2V0Q29udGV4dChcIjJkXCIpO2lmKCFuKXJldHVybjtuLmRyYXdJbWFnZShlLDAsMCxzLGkpO2NvbnN0IG89e3NvdXJjZVdpZHRoOnMsc291cmNlSGVpZ2h0OmksaW1hZ2VEYXRhOm4uZ2V0SW1hZ2VEYXRhKDAsMCxzLGkpLG9yaWdpbmFsRWw6ZSxvcmlnaW5hbEltYWdlRGF0YTpuLmdldEltYWdlRGF0YSgwLDAscyxpKSxjYW52YXNFbDpyLGN0eDpuLGZpbHRlckJhY2tlbmQ6dGhpc307dC5mb3JFYWNoKCh0PT57dC5hcHBseVRvKG8pfSkpO2NvbnN0e2ltYWdlRGF0YTphfT1vO3JldHVybiBhLndpZHRoPT09cyYmYS5oZWlnaHQ9PT1pfHwoci53aWR0aD1hLndpZHRoLHIuaGVpZ2h0PWEuaGVpZ2h0KSxuLnB1dEltYWdlRGF0YShhLDAsMCksb319Y2xhc3MgSG97Y29uc3RydWN0b3IoKXtsZXR7dGlsZVNpemU6ZT1vLnRleHR1cmVTaXplfT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e307dCh0aGlzLFwiYVBvc2l0aW9uXCIsbmV3IEZsb2F0MzJBcnJheShbMCwwLDAsMSwxLDAsMSwxXSkpLHQodGhpcyxcInJlc291cmNlc1wiLHt9KSx0aGlzLnRpbGVTaXplPWUsdGhpcy5zZXR1cEdMQ29udGV4dChlLGUpLHRoaXMuY2FwdHVyZUdQVUluZm8oKX1zZXR1cEdMQ29udGV4dCh0LGUpe3RoaXMuZGlzcG9zZSgpLHRoaXMuY3JlYXRlV2ViR0xDYW52YXModCxlKX1jcmVhdGVXZWJHTENhbnZhcyh0LGUpe2NvbnN0IHM9dnQoe3dpZHRoOnQsaGVpZ2h0OmV9KSxpPXMuZ2V0Q29udGV4dChcIndlYmdsXCIse2FscGhhOiEwLHByZW11bHRpcGxpZWRBbHBoYTohMSxkZXB0aDohMSxzdGVuY2lsOiExLGFudGlhbGlhczohMX0pO2kmJihpLmNsZWFyQ29sb3IoMCwwLDAsMCksdGhpcy5jYW52YXM9cyx0aGlzLmdsPWkpfWFwcGx5RmlsdGVycyh0LGUscyxpLHIsbil7Y29uc3Qgbz10aGlzLmdsLGE9ci5nZXRDb250ZXh0KFwiMmRcIik7aWYoIW98fCFhKXJldHVybjtsZXQgaDtuJiYoaD10aGlzLmdldENhY2hlZFRleHR1cmUobixlKSk7Y29uc3QgYz17b3JpZ2luYWxXaWR0aDplLndpZHRofHxlLm5hdHVyYWxXaWR0aHx8MCxvcmlnaW5hbEhlaWdodDplLmhlaWdodHx8ZS5uYXR1cmFsSGVpZ2h0fHwwLHNvdXJjZVdpZHRoOnMsc291cmNlSGVpZ2h0OmksZGVzdGluYXRpb25XaWR0aDpzLGRlc3RpbmF0aW9uSGVpZ2h0OmksY29udGV4dDpvLHNvdXJjZVRleHR1cmU6dGhpcy5jcmVhdGVUZXh0dXJlKG8scyxpLGg/dm9pZCAwOmUpLHRhcmdldFRleHR1cmU6dGhpcy5jcmVhdGVUZXh0dXJlKG8scyxpKSxvcmlnaW5hbFRleHR1cmU6aHx8dGhpcy5jcmVhdGVUZXh0dXJlKG8scyxpLGg/dm9pZCAwOmUpLHBhc3Nlczp0Lmxlbmd0aCx3ZWJnbDohMCxhUG9zaXRpb246dGhpcy5hUG9zaXRpb24scHJvZ3JhbUNhY2hlOnRoaXMucHJvZ3JhbUNhY2hlLHBhc3M6MCxmaWx0ZXJCYWNrZW5kOnRoaXMsdGFyZ2V0Q2FudmFzOnJ9LGw9by5jcmVhdGVGcmFtZWJ1ZmZlcigpO3JldHVybiBvLmJpbmRGcmFtZWJ1ZmZlcihvLkZSQU1FQlVGRkVSLGwpLHQuZm9yRWFjaCgodD0+e3QmJnQuYXBwbHlUbyhjKX0pKSxmdW5jdGlvbih0KXtjb25zdCBlPXQudGFyZ2V0Q2FudmFzLHM9ZS53aWR0aCxpPWUuaGVpZ2h0LHI9dC5kZXN0aW5hdGlvbldpZHRoLG49dC5kZXN0aW5hdGlvbkhlaWdodDtzPT09ciYmaT09PW58fChlLndpZHRoPXIsZS5oZWlnaHQ9bil9KGMpLHRoaXMuY29weUdMVG8yRChvLGMpLG8uYmluZFRleHR1cmUoby5URVhUVVJFXzJELG51bGwpLG8uZGVsZXRlVGV4dHVyZShjLnNvdXJjZVRleHR1cmUpLG8uZGVsZXRlVGV4dHVyZShjLnRhcmdldFRleHR1cmUpLG8uZGVsZXRlRnJhbWVidWZmZXIobCksYS5zZXRUcmFuc2Zvcm0oMSwwLDAsMSwwLDApLGN9ZGlzcG9zZSgpe3RoaXMuY2FudmFzJiYodGhpcy5jYW52YXM9bnVsbCx0aGlzLmdsPW51bGwpLHRoaXMuY2xlYXJXZWJHTENhY2hlcygpfWNsZWFyV2ViR0xDYWNoZXMoKXt0aGlzLnByb2dyYW1DYWNoZT17fSx0aGlzLnRleHR1cmVDYWNoZT17fX1jcmVhdGVUZXh0dXJlKHQsZSxzLGkscil7Y29uc3R7TkVBUkVTVDpuLFRFWFRVUkVfMkQ6byxSR0JBOmEsVU5TSUdORURfQllURTpoLENMQU1QX1RPX0VER0U6YyxURVhUVVJFX01BR19GSUxURVI6bCxURVhUVVJFX01JTl9GSUxURVI6dSxURVhUVVJFX1dSQVBfUzpkLFRFWFRVUkVfV1JBUF9UOmd9PXQsZj10LmNyZWF0ZVRleHR1cmUoKTtyZXR1cm4gdC5iaW5kVGV4dHVyZShvLGYpLHQudGV4UGFyYW1ldGVyaShvLGwscnx8biksdC50ZXhQYXJhbWV0ZXJpKG8sdSxyfHxuKSx0LnRleFBhcmFtZXRlcmkobyxkLGMpLHQudGV4UGFyYW1ldGVyaShvLGcsYyksaT90LnRleEltYWdlMkQobywwLGEsYSxoLGkpOnQudGV4SW1hZ2UyRChvLDAsYSxlLHMsMCxhLGgsbnVsbCksZn1nZXRDYWNoZWRUZXh0dXJlKHQsZSxzKXtjb25zdHt0ZXh0dXJlQ2FjaGU6aX09dGhpcztpZihpW3RdKXJldHVybiBpW3RdO3tjb25zdCByPXRoaXMuY3JlYXRlVGV4dHVyZSh0aGlzLmdsLGUud2lkdGgsZS5oZWlnaHQsZSxzKTtyZXR1cm4gciYmKGlbdF09cikscn19ZXZpY3RDYWNoZXNGb3JLZXkodCl7dGhpcy50ZXh0dXJlQ2FjaGVbdF0mJih0aGlzLmdsLmRlbGV0ZVRleHR1cmUodGhpcy50ZXh0dXJlQ2FjaGVbdF0pLGRlbGV0ZSB0aGlzLnRleHR1cmVDYWNoZVt0XSl9Y29weUdMVG8yRCh0LGUpe2NvbnN0IHM9dC5jYW52YXMsaT1lLnRhcmdldENhbnZhcyxyPWkuZ2V0Q29udGV4dChcIjJkXCIpO2lmKCFyKXJldHVybjtyLnRyYW5zbGF0ZSgwLGkuaGVpZ2h0KSxyLnNjYWxlKDEsLTEpO2NvbnN0IG49cy5oZWlnaHQtaS5oZWlnaHQ7ci5kcmF3SW1hZ2UocywwLG4saS53aWR0aCxpLmhlaWdodCwwLDAsaS53aWR0aCxpLmhlaWdodCl9Y29weUdMVG8yRFB1dEltYWdlRGF0YSh0LGUpe2NvbnN0IHM9ZS50YXJnZXRDYW52YXMuZ2V0Q29udGV4dChcIjJkXCIpLGk9ZS5kZXN0aW5hdGlvbldpZHRoLHI9ZS5kZXN0aW5hdGlvbkhlaWdodCxuPWkqcio0O2lmKCFzKXJldHVybjtjb25zdCBvPW5ldyBVaW50OEFycmF5KHRoaXMuaW1hZ2VCdWZmZXIsMCxuKSxhPW5ldyBVaW50OENsYW1wZWRBcnJheSh0aGlzLmltYWdlQnVmZmVyLDAsbik7dC5yZWFkUGl4ZWxzKDAsMCxpLHIsdC5SR0JBLHQuVU5TSUdORURfQllURSxvKTtjb25zdCBoPW5ldyBJbWFnZURhdGEoYSxpLHIpO3MucHV0SW1hZ2VEYXRhKGgsMCwwKX1jYXB0dXJlR1BVSW5mbygpe2lmKHRoaXMuZ3B1SW5mbylyZXR1cm4gdGhpcy5ncHVJbmZvO2NvbnN0IHQ9dGhpcy5nbCxlPXtyZW5kZXJlcjpcIlwiLHZlbmRvcjpcIlwifTtpZighdClyZXR1cm4gZTtjb25zdCBzPXQuZ2V0RXh0ZW5zaW9uKFwiV0VCR0xfZGVidWdfcmVuZGVyZXJfaW5mb1wiKTtpZihzKXtjb25zdCBpPXQuZ2V0UGFyYW1ldGVyKHMuVU5NQVNLRURfUkVOREVSRVJfV0VCR0wpLHI9dC5nZXRQYXJhbWV0ZXIocy5VTk1BU0tFRF9WRU5ET1JfV0VCR0wpO2kmJihlLnJlbmRlcmVyPWkudG9Mb3dlckNhc2UoKSksciYmKGUudmVuZG9yPXIudG9Mb3dlckNhc2UoKSl9cmV0dXJuIHRoaXMuZ3B1SW5mbz1lLGV9fWxldCBHbztmdW5jdGlvbiBObygpe2NvbnN0e1dlYkdMUHJvYmU6dH09cCgpO3JldHVybiB0LnF1ZXJ5V2ViR0wocHQoKSksby5lbmFibGVHTEZpbHRlcmluZyYmdC5pc1N1cHBvcnRlZChvLnRleHR1cmVTaXplKT9uZXcgSG8oe3RpbGVTaXplOm8udGV4dHVyZVNpemV9KTpuZXcgem99ZnVuY3Rpb24gVW8oKXtyZXR1cm4hR28mJighKGFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdKXx8YXJndW1lbnRzWzBdKSYmKEdvPU5vKCkpLEdvfWZ1bmN0aW9uIHFvKHQpe0dvPXR9Y29uc3QgS289W1wiZmlsdGVyc1wiLFwicmVzaXplRmlsdGVyXCIsXCJzcmNcIixcImNyb3NzT3JpZ2luXCIsXCJ0eXBlXCJdLEpvPVtcImNyb3BYXCIsXCJjcm9wWVwiXTtjbGFzcyBRbyBleHRlbmRzIHlpe3N0YXRpYyBnZXREZWZhdWx0cygpe3JldHVybiBzKHMoe30sc3VwZXIuZ2V0RGVmYXVsdHMoKSksUW8ub3duRGVmYXVsdHMpfWNvbnN0cnVjdG9yKGUscyl7c3VwZXIoKSx0KHRoaXMsXCJfbGFzdFNjYWxlWFwiLDEpLHQodGhpcyxcIl9sYXN0U2NhbGVZXCIsMSksdCh0aGlzLFwiX2ZpbHRlclNjYWxpbmdYXCIsMSksdCh0aGlzLFwiX2ZpbHRlclNjYWxpbmdZXCIsMSksdGhpcy5maWx0ZXJzPVtdLE9iamVjdC5hc3NpZ24odGhpcyxRby5vd25EZWZhdWx0cyksdGhpcy5zZXRPcHRpb25zKHMpLHRoaXMuY2FjaGVLZXk9XCJ0ZXh0dXJlXCIuY29uY2F0KGZ0KCkpLHRoaXMuc2V0RWxlbWVudChcInN0cmluZ1wiPT10eXBlb2YgZT8odGhpcy5jYW52YXMmJnJlKHRoaXMuY2FudmFzLmdldEVsZW1lbnQoKSl8fG0oKSkuZ2V0RWxlbWVudEJ5SWQoZSk6ZSxzKX1nZXRFbGVtZW50KCl7cmV0dXJuIHRoaXMuX2VsZW1lbnR9c2V0RWxlbWVudCh0KXtsZXQgZT1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06e307dGhpcy5yZW1vdmVUZXh0dXJlKHRoaXMuY2FjaGVLZXkpLHRoaXMucmVtb3ZlVGV4dHVyZShcIlwiLmNvbmNhdCh0aGlzLmNhY2hlS2V5LFwiX2ZpbHRlcmVkXCIpKSx0aGlzLl9lbGVtZW50PXQsdGhpcy5fb3JpZ2luYWxFbGVtZW50PXQsdGhpcy5fc2V0V2lkdGhIZWlnaHQoZSksdC5jbGFzc0xpc3QuYWRkKFFvLkNTU19DQU5WQVMpLDAhPT10aGlzLmZpbHRlcnMubGVuZ3RoJiZ0aGlzLmFwcGx5RmlsdGVycygpLHRoaXMucmVzaXplRmlsdGVyJiZ0aGlzLmFwcGx5UmVzaXplRmlsdGVycygpfXJlbW92ZVRleHR1cmUodCl7Y29uc3QgZT1VbyghMSk7ZSBpbnN0YW5jZW9mIEhvJiZlLmV2aWN0Q2FjaGVzRm9yS2V5KHQpfWRpc3Bvc2UoKXtzdXBlci5kaXNwb3NlKCksdGhpcy5yZW1vdmVUZXh0dXJlKHRoaXMuY2FjaGVLZXkpLHRoaXMucmVtb3ZlVGV4dHVyZShcIlwiLmNvbmNhdCh0aGlzLmNhY2hlS2V5LFwiX2ZpbHRlcmVkXCIpKSx0aGlzLl9jYWNoZUNvbnRleHQ9bnVsbCxbXCJfb3JpZ2luYWxFbGVtZW50XCIsXCJfZWxlbWVudFwiLFwiX2ZpbHRlcmVkRWxcIixcIl9jYWNoZUNhbnZhc1wiXS5mb3JFYWNoKCh0PT57Y29uc3QgZT10aGlzW3RdO2UmJnAoKS5kaXNwb3NlKGUpLHRoaXNbdF09dm9pZCAwfSkpfWdldENyb3NzT3JpZ2luKCl7cmV0dXJuIHRoaXMuX29yaWdpbmFsRWxlbWVudCYmKHRoaXMuX29yaWdpbmFsRWxlbWVudC5jcm9zc09yaWdpbnx8bnVsbCl9Z2V0T3JpZ2luYWxTaXplKCl7Y29uc3QgdD10aGlzLmdldEVsZW1lbnQoKTtyZXR1cm4gdD97d2lkdGg6dC5uYXR1cmFsV2lkdGh8fHQud2lkdGgsaGVpZ2h0OnQubmF0dXJhbEhlaWdodHx8dC5oZWlnaHR9Ont3aWR0aDowLGhlaWdodDowfX1fc3Ryb2tlKHQpe2lmKCF0aGlzLnN0cm9rZXx8MD09PXRoaXMuc3Ryb2tlV2lkdGgpcmV0dXJuO2NvbnN0IGU9dGhpcy53aWR0aC8yLHM9dGhpcy5oZWlnaHQvMjt0LmJlZ2luUGF0aCgpLHQubW92ZVRvKC1lLC1zKSx0LmxpbmVUbyhlLC1zKSx0LmxpbmVUbyhlLHMpLHQubGluZVRvKC1lLHMpLHQubGluZVRvKC1lLC1zKSx0LmNsb3NlUGF0aCgpfXRvT2JqZWN0KCl7bGV0IHQ9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOltdO2NvbnN0IGU9W107cmV0dXJuIHRoaXMuZmlsdGVycy5mb3JFYWNoKCh0PT57dCYmZS5wdXNoKHQudG9PYmplY3QoKSl9KSkscyhzKHt9LHN1cGVyLnRvT2JqZWN0KFsuLi5KbywuLi50XSkpLHt9LHtzcmM6dGhpcy5nZXRTcmMoKSxjcm9zc09yaWdpbjp0aGlzLmdldENyb3NzT3JpZ2luKCksZmlsdGVyczplfSx0aGlzLnJlc2l6ZUZpbHRlcj97cmVzaXplRmlsdGVyOnRoaXMucmVzaXplRmlsdGVyLnRvT2JqZWN0KCl9Ont9KX1oYXNDcm9wKCl7cmV0dXJuISF0aGlzLmNyb3BYfHwhIXRoaXMuY3JvcFl8fHRoaXMud2lkdGg8dGhpcy5fZWxlbWVudC53aWR0aHx8dGhpcy5oZWlnaHQ8dGhpcy5fZWxlbWVudC5oZWlnaHR9X3RvU1ZHKCl7Y29uc3QgdD1bXSxlPXRoaXMuX2VsZW1lbnQscz0tdGhpcy53aWR0aC8yLGk9LXRoaXMuaGVpZ2h0LzI7bGV0IHI9W10sbj1bXSxvPVwiXCIsYT1cIlwiO2lmKCFlKXJldHVybltdO2lmKHRoaXMuaGFzQ3JvcCgpKXtjb25zdCB0PWZ0KCk7ci5wdXNoKCc8Y2xpcFBhdGggaWQ9XCJpbWFnZUNyb3BfJyt0KydcIj5cXG4nLCdcXHQ8cmVjdCB4PVwiJytzKydcIiB5PVwiJytpKydcIiB3aWR0aD1cIicrdGhpcy53aWR0aCsnXCIgaGVpZ2h0PVwiJyt0aGlzLmhlaWdodCsnXCIgLz5cXG4nLFwiPC9jbGlwUGF0aD5cXG5cIiksbz0nIGNsaXAtcGF0aD1cInVybCgjaW1hZ2VDcm9wXycrdCsnKVwiICd9aWYodGhpcy5pbWFnZVNtb290aGluZ3x8KGE9JyBpbWFnZS1yZW5kZXJpbmc9XCJvcHRpbWl6ZVNwZWVkXCInKSx0LnB1c2goXCJcXHQ8aW1hZ2UgXCIsXCJDT01NT05fUEFSVFNcIiwneGxpbms6aHJlZj1cIicuY29uY2F0KHRoaXMuZ2V0U3ZnU3JjKCEwKSwnXCIgeD1cIicpLmNvbmNhdChzLXRoaXMuY3JvcFgsJ1wiIHk9XCInKS5jb25jYXQoaS10aGlzLmNyb3BZLCdcIiB3aWR0aD1cIicpLmNvbmNhdChlLndpZHRofHxlLm5hdHVyYWxXaWR0aCwnXCIgaGVpZ2h0PVwiJykuY29uY2F0KGUuaGVpZ2h0fHxlLm5hdHVyYWxIZWlnaHQsJ1wiJykuY29uY2F0KGEpLmNvbmNhdChvLFwiPjwvaW1hZ2U+XFxuXCIpKSx0aGlzLnN0cm9rZXx8dGhpcy5zdHJva2VEYXNoQXJyYXkpe2NvbnN0IHQ9dGhpcy5maWxsO3RoaXMuZmlsbD1udWxsLG49WydcXHQ8cmVjdCB4PVwiJy5jb25jYXQocywnXCIgeT1cIicpLmNvbmNhdChpLCdcIiB3aWR0aD1cIicpLmNvbmNhdCh0aGlzLndpZHRoLCdcIiBoZWlnaHQ9XCInKS5jb25jYXQodGhpcy5oZWlnaHQsJ1wiIHN0eWxlPVwiJykuY29uY2F0KHRoaXMuZ2V0U3ZnU3R5bGVzKCksJ1wiIC8+XFxuJyldLHRoaXMuZmlsbD10fXJldHVybiByPXRoaXMucGFpbnRGaXJzdCE9PUs/ci5jb25jYXQobix0KTpyLmNvbmNhdCh0LG4pLHJ9Z2V0U3JjKHQpe2NvbnN0IGU9dD90aGlzLl9lbGVtZW50OnRoaXMuX29yaWdpbmFsRWxlbWVudDtyZXR1cm4gZT9lLnRvRGF0YVVSTD9lLnRvRGF0YVVSTCgpOnRoaXMuc3JjRnJvbUF0dHJpYnV0ZT9lLmdldEF0dHJpYnV0ZShcInNyY1wiKXx8XCJcIjplLnNyYzp0aGlzLnNyY3x8XCJcIn1nZXRTdmdTcmModCl7cmV0dXJuIHRoaXMuZ2V0U3JjKHQpfXNldFNyYyh0KXtsZXR7Y3Jvc3NPcmlnaW46ZSxzaWduYWw6c309YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOnt9O3JldHVybiBSdCh0LHtjcm9zc09yaWdpbjplLHNpZ25hbDpzfSkudGhlbigodD0+e3ZvaWQgMCE9PWUmJnRoaXMuc2V0KHtjcm9zc09yaWdpbjplfSksdGhpcy5zZXRFbGVtZW50KHQpfSkpfXRvU3RyaW5nKCl7cmV0dXJuJyM8SW1hZ2U6IHsgc3JjOiBcIicuY29uY2F0KHRoaXMuZ2V0U3JjKCksJ1wiIH0+Jyl9YXBwbHlSZXNpemVGaWx0ZXJzKCl7Y29uc3QgdD10aGlzLnJlc2l6ZUZpbHRlcixlPXRoaXMubWluaW11bVNjYWxlVHJpZ2dlcixzPXRoaXMuZ2V0VG90YWxPYmplY3RTY2FsaW5nKCksaT1zLngscj1zLnksbj10aGlzLl9maWx0ZXJlZEVsfHx0aGlzLl9vcmlnaW5hbEVsZW1lbnQ7aWYodGhpcy5ncm91cCYmdGhpcy5zZXQoXCJkaXJ0eVwiLCEwKSwhdHx8aT5lJiZyPmUpcmV0dXJuIHRoaXMuX2VsZW1lbnQ9bix0aGlzLl9maWx0ZXJTY2FsaW5nWD0xLHRoaXMuX2ZpbHRlclNjYWxpbmdZPTEsdGhpcy5fbGFzdFNjYWxlWD1pLHZvaWQodGhpcy5fbGFzdFNjYWxlWT1yKTtjb25zdCBvPXZ0KG4pLHt3aWR0aDphLGhlaWdodDpofT1uO3RoaXMuX2VsZW1lbnQ9byx0aGlzLl9sYXN0U2NhbGVYPXQuc2NhbGVYPWksdGhpcy5fbGFzdFNjYWxlWT10LnNjYWxlWT1yLFVvKCkuYXBwbHlGaWx0ZXJzKFt0XSxuLGEsaCx0aGlzLl9lbGVtZW50KSx0aGlzLl9maWx0ZXJTY2FsaW5nWD1vLndpZHRoL3RoaXMuX29yaWdpbmFsRWxlbWVudC53aWR0aCx0aGlzLl9maWx0ZXJTY2FsaW5nWT1vLmhlaWdodC90aGlzLl9vcmlnaW5hbEVsZW1lbnQuaGVpZ2h0fWFwcGx5RmlsdGVycygpe2xldCB0PWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp0aGlzLmZpbHRlcnN8fFtdO2lmKHQ9dC5maWx0ZXIoKHQ9PnQmJiF0LmlzTmV1dHJhbFN0YXRlKCkpKSx0aGlzLnNldChcImRpcnR5XCIsITApLHRoaXMucmVtb3ZlVGV4dHVyZShcIlwiLmNvbmNhdCh0aGlzLmNhY2hlS2V5LFwiX2ZpbHRlcmVkXCIpKSwwPT09dC5sZW5ndGgpcmV0dXJuIHRoaXMuX2VsZW1lbnQ9dGhpcy5fb3JpZ2luYWxFbGVtZW50LHRoaXMuX2ZpbHRlcmVkRWw9dm9pZCAwLHRoaXMuX2ZpbHRlclNjYWxpbmdYPTEsdm9pZCh0aGlzLl9maWx0ZXJTY2FsaW5nWT0xKTtjb25zdCBlPXRoaXMuX29yaWdpbmFsRWxlbWVudCxzPWUubmF0dXJhbFdpZHRofHxlLndpZHRoLGk9ZS5uYXR1cmFsSGVpZ2h0fHxlLmhlaWdodDtpZih0aGlzLl9lbGVtZW50PT09dGhpcy5fb3JpZ2luYWxFbGVtZW50KXtjb25zdCB0PXZ0KHt3aWR0aDpzLGhlaWdodDppfSk7dGhpcy5fZWxlbWVudD10LHRoaXMuX2ZpbHRlcmVkRWw9dH1lbHNlIHRoaXMuX2ZpbHRlcmVkRWwmJih0aGlzLl9lbGVtZW50PXRoaXMuX2ZpbHRlcmVkRWwsdGhpcy5fZmlsdGVyZWRFbC5nZXRDb250ZXh0KFwiMmRcIikuY2xlYXJSZWN0KDAsMCxzLGkpLHRoaXMuX2xhc3RTY2FsZVg9MSx0aGlzLl9sYXN0U2NhbGVZPTEpO1VvKCkuYXBwbHlGaWx0ZXJzKHQsdGhpcy5fb3JpZ2luYWxFbGVtZW50LHMsaSx0aGlzLl9lbGVtZW50KSx0aGlzLl9vcmlnaW5hbEVsZW1lbnQud2lkdGg9PT10aGlzLl9lbGVtZW50LndpZHRoJiZ0aGlzLl9vcmlnaW5hbEVsZW1lbnQuaGVpZ2h0PT09dGhpcy5fZWxlbWVudC5oZWlnaHR8fCh0aGlzLl9maWx0ZXJTY2FsaW5nWD10aGlzLl9lbGVtZW50LndpZHRoL3RoaXMuX29yaWdpbmFsRWxlbWVudC53aWR0aCx0aGlzLl9maWx0ZXJTY2FsaW5nWT10aGlzLl9lbGVtZW50LmhlaWdodC90aGlzLl9vcmlnaW5hbEVsZW1lbnQuaGVpZ2h0KX1fcmVuZGVyKHQpe3QuaW1hZ2VTbW9vdGhpbmdFbmFibGVkPXRoaXMuaW1hZ2VTbW9vdGhpbmcsITAhPT10aGlzLmlzTW92aW5nJiZ0aGlzLnJlc2l6ZUZpbHRlciYmdGhpcy5fbmVlZHNSZXNpemUoKSYmdGhpcy5hcHBseVJlc2l6ZUZpbHRlcnMoKSx0aGlzLl9zdHJva2UodCksdGhpcy5fcmVuZGVyUGFpbnRJbk9yZGVyKHQpfWRyYXdDYWNoZU9uQ2FudmFzKHQpe3QuaW1hZ2VTbW9vdGhpbmdFbmFibGVkPXRoaXMuaW1hZ2VTbW9vdGhpbmcsc3VwZXIuZHJhd0NhY2hlT25DYW52YXModCl9c2hvdWxkQ2FjaGUoKXtyZXR1cm4gdGhpcy5uZWVkc0l0c093bkNhY2hlKCl9X3JlbmRlckZpbGwodCl7Y29uc3QgZT10aGlzLl9lbGVtZW50O2lmKCFlKXJldHVybjtjb25zdCBzPXRoaXMuX2ZpbHRlclNjYWxpbmdYLGk9dGhpcy5fZmlsdGVyU2NhbGluZ1kscj10aGlzLndpZHRoLG49dGhpcy5oZWlnaHQsbz1NYXRoLm1heCh0aGlzLmNyb3BYLDApLGE9TWF0aC5tYXgodGhpcy5jcm9wWSwwKSxoPWUubmF0dXJhbFdpZHRofHxlLndpZHRoLGM9ZS5uYXR1cmFsSGVpZ2h0fHxlLmhlaWdodCxsPW8qcyx1PWEqaSxkPU1hdGgubWluKHIqcyxoLWwpLGc9TWF0aC5taW4obippLGMtdSksZj0tci8yLHA9LW4vMixtPU1hdGgubWluKHIsaC9zLW8pLHY9TWF0aC5taW4obixjL2ktYSk7ZSYmdC5kcmF3SW1hZ2UoZSxsLHUsZCxnLGYscCxtLHYpfV9uZWVkc1Jlc2l6ZSgpe2NvbnN0IHQ9dGhpcy5nZXRUb3RhbE9iamVjdFNjYWxpbmcoKTtyZXR1cm4gdC54IT09dGhpcy5fbGFzdFNjYWxlWHx8dC55IT09dGhpcy5fbGFzdFNjYWxlWX1fcmVzZXRXaWR0aEhlaWdodCgpe3RoaXMuc2V0KHRoaXMuZ2V0T3JpZ2luYWxTaXplKCkpfV9zZXRXaWR0aEhlaWdodCgpe2xldHt3aWR0aDp0LGhlaWdodDplfT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e307Y29uc3Qgcz10aGlzLmdldE9yaWdpbmFsU2l6ZSgpO3RoaXMud2lkdGg9dHx8cy53aWR0aCx0aGlzLmhlaWdodD1lfHxzLmhlaWdodH1wYXJzZVByZXNlcnZlQXNwZWN0UmF0aW9BdHRyaWJ1dGUoKXtjb25zdCB0PUp0KHRoaXMucHJlc2VydmVBc3BlY3RSYXRpb3x8XCJcIiksZT10aGlzLndpZHRoLHM9dGhpcy5oZWlnaHQsaT17d2lkdGg6ZSxoZWlnaHQ6c307bGV0IHIsbj10aGlzLl9lbGVtZW50LndpZHRoLG89dGhpcy5fZWxlbWVudC5oZWlnaHQsYT0xLGg9MSxjPTAsbD0wLHU9MCxkPTA7cmV0dXJuIXR8fHQuYWxpZ25YPT09aiYmdC5hbGlnblk9PT1qPyhhPWUvbixoPXMvbyk6KFwibWVldFwiPT09dC5tZWV0T3JTbGljZSYmKGE9aD1Ncih0aGlzLl9lbGVtZW50LGkpLHI9KGUtbiphKS8yLFwiTWluXCI9PT10LmFsaWduWCYmKGM9LXIpLFwiTWF4XCI9PT10LmFsaWduWCYmKGM9cikscj0ocy1vKmgpLzIsXCJNaW5cIj09PXQuYWxpZ25ZJiYobD0tciksXCJNYXhcIj09PXQuYWxpZ25ZJiYobD1yKSksXCJzbGljZVwiPT09dC5tZWV0T3JTbGljZSYmKGE9aD1Qcih0aGlzLl9lbGVtZW50LGkpLHI9bi1lL2EsXCJNaWRcIj09PXQuYWxpZ25YJiYodT1yLzIpLFwiTWF4XCI9PT10LmFsaWduWCYmKHU9cikscj1vLXMvaCxcIk1pZFwiPT09dC5hbGlnblkmJihkPXIvMiksXCJNYXhcIj09PXQuYWxpZ25ZJiYoZD1yKSxuPWUvYSxvPXMvaCkpLHt3aWR0aDpuLGhlaWdodDpvLHNjYWxlWDphLHNjYWxlWTpoLG9mZnNldExlZnQ6YyxvZmZzZXRUb3A6bCxjcm9wWDp1LGNyb3BZOmR9fXN0YXRpYyBmcm9tT2JqZWN0KHQsZSl7bGV0e2ZpbHRlcnM6cixyZXNpemVGaWx0ZXI6bixzcmM6byxjcm9zc09yaWdpbjphLHR5cGU6aH09dCxjPWkodCxLbyk7cmV0dXJuIFByb21pc2UuYWxsKFtSdChvLHMocyh7fSxlKSx7fSx7Y3Jvc3NPcmlnaW46YX0pKSxyJiZJdChyLGUpLG4mJkl0KFtuXSxlKSxCdChjLGUpXSkudGhlbigodD0+e2xldFtlLGk9W10sW3JdPVtdLG49e31dPXQ7cmV0dXJuIG5ldyB0aGlzKGUscyhzKHt9LGMpLHt9LHtzcmM6byxmaWx0ZXJzOmkscmVzaXplRmlsdGVyOnJ9LG4pKX0pKX1zdGF0aWMgZnJvbVVSTCh0KXtsZXR7Y3Jvc3NPcmlnaW46ZT1udWxsLHNpZ25hbDpzfT1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06e30saT1hcmd1bWVudHMubGVuZ3RoPjI/YXJndW1lbnRzWzJdOnZvaWQgMDtyZXR1cm4gUnQodCx7Y3Jvc3NPcmlnaW46ZSxzaWduYWw6c30pLnRoZW4oKHQ9Pm5ldyB0aGlzKHQsaSkpKX1zdGF0aWMgYXN5bmMgZnJvbUVsZW1lbnQodCl7bGV0IGU9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOnt9LHM9YXJndW1lbnRzLmxlbmd0aD4yP2FyZ3VtZW50c1syXTp2b2lkIDA7Y29uc3QgaT11cih0LHRoaXMuQVRUUklCVVRFX05BTUVTLHMpO3JldHVybiB0aGlzLmZyb21VUkwoaVtcInhsaW5rOmhyZWZcIl0sZSxpKS5jYXRjaCgodD0+KGEoXCJsb2dcIixcIlVuYWJsZSB0byBwYXJzZSBJbWFnZVwiLHQpLG51bGwpKSl9fWZ1bmN0aW9uIFpvKHQpe2lmKCFxZS50ZXN0KHQubm9kZU5hbWUpKXJldHVybnt9O2NvbnN0IGU9dC5nZXRBdHRyaWJ1dGUoXCJ2aWV3Qm94XCIpO2xldCBzLGkscj0xLG49MSxvPTAsYT0wO2NvbnN0IGg9dC5nZXRBdHRyaWJ1dGUoXCJ3aWR0aFwiKSxjPXQuZ2V0QXR0cmlidXRlKFwiaGVpZ2h0XCIpLGw9dC5nZXRBdHRyaWJ1dGUoXCJ4XCIpfHwwLHU9dC5nZXRBdHRyaWJ1dGUoXCJ5XCIpfHwwLGQ9IShlJiZKZS50ZXN0KGUpKSxnPSFofHwhY3x8XCIxMDAlXCI9PT1ofHxcIjEwMCVcIj09PWM7bGV0IGY9XCJcIixwPTAsbT0wO2lmKGQmJihsfHx1KSYmdC5wYXJlbnROb2RlJiZcIiNkb2N1bWVudFwiIT09dC5wYXJlbnROb2RlLm5vZGVOYW1lJiYoZj1cIiB0cmFuc2xhdGUoXCIrS3QobHx8XCIwXCIpK1wiIFwiK0t0KHV8fFwiMFwiKStcIikgXCIscz0odC5nZXRBdHRyaWJ1dGUoXCJ0cmFuc2Zvcm1cIil8fFwiXCIpK2YsdC5zZXRBdHRyaWJ1dGUoXCJ0cmFuc2Zvcm1cIixzKSx0LnJlbW92ZUF0dHJpYnV0ZShcInhcIiksdC5yZW1vdmVBdHRyaWJ1dGUoXCJ5XCIpKSxkJiZnKXJldHVybnt3aWR0aDowLGhlaWdodDowfTtjb25zdCB2PXt3aWR0aDowLGhlaWdodDowfTtpZihkKXJldHVybiB2LndpZHRoPUt0KGgpLHYuaGVpZ2h0PUt0KGMpLHY7Y29uc3QgeT1lLm1hdGNoKEplKTtvPS1wYXJzZUZsb2F0KHlbMV0pLGE9LXBhcnNlRmxvYXQoeVsyXSk7Y29uc3QgXz1wYXJzZUZsb2F0KHlbM10pLHg9cGFyc2VGbG9hdCh5WzRdKTt2Lm1pblg9byx2Lm1pblk9YSx2LnZpZXdCb3hXaWR0aD1fLHYudmlld0JveEhlaWdodD14LGc/KHYud2lkdGg9Xyx2LmhlaWdodD14KToodi53aWR0aD1LdChoKSx2LmhlaWdodD1LdChjKSxyPXYud2lkdGgvXyxuPXYuaGVpZ2h0L3gpO2NvbnN0IEM9SnQodC5nZXRBdHRyaWJ1dGUoXCJwcmVzZXJ2ZUFzcGVjdFJhdGlvXCIpfHxcIlwiKTtpZihDLmFsaWduWCE9PWomJihcIm1lZXRcIj09PUMubWVldE9yU2xpY2UmJihuPXI9cj5uP246ciksXCJzbGljZVwiPT09Qy5tZWV0T3JTbGljZSYmKG49cj1yPm4/cjpuKSxwPXYud2lkdGgtXypyLG09di5oZWlnaHQteCpyLFwiTWlkXCI9PT1DLmFsaWduWCYmKHAvPTIpLFwiTWlkXCI9PT1DLmFsaWduWSYmKG0vPTIpLFwiTWluXCI9PT1DLmFsaWduWCYmKHA9MCksXCJNaW5cIj09PUMuYWxpZ25ZJiYobT0wKSksMT09PXImJjE9PT1uJiYwPT09byYmMD09PWEmJjA9PT1sJiYwPT09dSlyZXR1cm4gdjtpZigobHx8dSkmJlwiI2RvY3VtZW50XCIhPT10LnBhcmVudE5vZGUubm9kZU5hbWUmJihmPVwiIHRyYW5zbGF0ZShcIitLdChsfHxcIjBcIikrXCIgXCIrS3QodXx8XCIwXCIpK1wiKSBcIikscz1mK1wiIG1hdHJpeChcIityK1wiIDAgMCBcIituK1wiIFwiKyhvKnIrcCkrXCIgXCIrKGEqbittKStcIikgXCIsXCJzdmdcIj09PXQubm9kZU5hbWUpe2ZvcihpPXQub3duZXJEb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoVmUsXCJnXCIpO3QuZmlyc3RDaGlsZDspaS5hcHBlbmRDaGlsZCh0LmZpcnN0Q2hpbGQpO3QuYXBwZW5kQ2hpbGQoaSl9ZWxzZSBpPXQsaS5yZW1vdmVBdHRyaWJ1dGUoXCJ4XCIpLGkucmVtb3ZlQXR0cmlidXRlKFwieVwiKSxzPWkuZ2V0QXR0cmlidXRlKFwidHJhbnNmb3JtXCIpK3M7cmV0dXJuIGkuc2V0QXR0cmlidXRlKFwidHJhbnNmb3JtXCIscyksdn10KFFvLFwidHlwZVwiLFwiSW1hZ2VcIiksdChRbyxcImNhY2hlUHJvcGVydGllc1wiLFsuLi5mcywuLi5Kb10pLHQoUW8sXCJvd25EZWZhdWx0c1wiLHtzdHJva2VXaWR0aDowLHNyY0Zyb21BdHRyaWJ1dGU6ITEsbWluaW11bVNjYWxlVHJpZ2dlcjouNSxjcm9wWDowLGNyb3BZOjAsaW1hZ2VTbW9vdGhpbmc6ITB9KSx0KFFvLFwiQ1NTX0NBTlZBU1wiLFwiY2FudmFzLWltZ1wiKSx0KFFvLFwiQVRUUklCVVRFX05BTUVTXCIsWy4uLmppLFwieFwiLFwieVwiLFwid2lkdGhcIixcImhlaWdodFwiLFwicHJlc2VydmVBc3BlY3RSYXRpb1wiLFwieGxpbms6aHJlZlwiLFwiY3Jvc3NPcmlnaW5cIixcImltYWdlLXJlbmRlcmluZ1wiXSksdHQuc2V0Q2xhc3MoUW8pLHR0LnNldFNWR0NsYXNzKFFvKTtjb25zdCAkbz10PT50LnRhZ05hbWUucmVwbGFjZShcInN2ZzpcIixcIlwiKSx0YT1YZShbXCJwYXR0ZXJuXCIsXCJkZWZzXCIsXCJzeW1ib2xcIixcIm1ldGFkYXRhXCIsXCJjbGlwUGF0aFwiLFwibWFza1wiLFwiZGVzY1wiXSk7ZnVuY3Rpb24gZWEodCxlKXtsZXQgcyxpLHIsbixvPVtdO2ZvcihyPTAsbj1lLmxlbmd0aDtyPG47cisrKXM9ZVtyXSxpPXQuZ2V0RWxlbWVudHNCeVRhZ05hbWVOUyhcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIscyksbz1vLmNvbmNhdChBcnJheS5mcm9tKGkpKTtyZXR1cm4gb31jb25zdCBzYT1bXCJncmFkaWVudFRyYW5zZm9ybVwiLFwieDFcIixcIngyXCIsXCJ5MVwiLFwieTJcIixcImdyYWRpZW50VW5pdHNcIixcImN4XCIsXCJjeVwiLFwiclwiLFwiZnhcIixcImZ5XCJdLGlhPVwieGxpbms6aHJlZlwiO2Z1bmN0aW9uIHJhKHQsZSl7dmFyIHM7Y29uc3QgaT0obnVsbD09PShzPWUuZ2V0QXR0cmlidXRlKGlhKSl8fHZvaWQgMD09PXM/dm9pZCAwOnMuc2xpY2UoMSkpfHxcIlwiLHI9dC5nZXRFbGVtZW50QnlJZChpKTtpZihyJiZyLmdldEF0dHJpYnV0ZShpYSkmJnJhKHQsciksciYmKHNhLmZvckVhY2goKHQ9Pntjb25zdCBzPXIuZ2V0QXR0cmlidXRlKHQpOyFlLmhhc0F0dHJpYnV0ZSh0KSYmcyYmZS5zZXRBdHRyaWJ1dGUodCxzKX0pKSwhZS5jaGlsZHJlbi5sZW5ndGgpKXtjb25zdCB0PXIuY2xvbmVOb2RlKCEwKTtmb3IoO3QuZmlyc3RDaGlsZDspZS5hcHBlbmRDaGlsZCh0LmZpcnN0Q2hpbGQpfWUucmVtb3ZlQXR0cmlidXRlKGlhKX1jb25zdCBuYT1bXCJsaW5lYXJHcmFkaWVudFwiLFwicmFkaWFsR3JhZGllbnRcIixcInN2ZzpsaW5lYXJHcmFkaWVudFwiLFwic3ZnOnJhZGlhbEdyYWRpZW50XCJdO2Z1bmN0aW9uIG9hKHQpe2NvbnN0IGU9dC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInN0eWxlXCIpO2xldCBpLHI7Y29uc3Qgbj17fTtmb3IoaT0wLHI9ZS5sZW5ndGg7aTxyO2krKyl7Y29uc3QgdD0oZVtpXS50ZXh0Q29udGVudHx8XCJcIikucmVwbGFjZSgvXFwvXFwqW1xcc1xcU10qP1xcKlxcLy9nLFwiXCIpO1wiXCIhPT10LnRyaW0oKSYmdC5zcGxpdChcIn1cIikuZmlsdGVyKCgodCxlLHMpPT5zLmxlbmd0aD4xJiZ0LnRyaW0oKSkpLmZvckVhY2goKHQ9PntpZigodC5tYXRjaCgvey9nKXx8W10pLmxlbmd0aD4xJiZ0LnRyaW0oKS5zdGFydHNXaXRoKFwiQFwiKSlyZXR1cm47Y29uc3QgZT10LnNwbGl0KFwie1wiKSxvPXt9LGE9ZVsxXS50cmltKCkuc3BsaXQoXCI7XCIpLmZpbHRlcigoZnVuY3Rpb24odCl7cmV0dXJuIHQudHJpbSgpfSkpO2ZvcihpPTAscj1hLmxlbmd0aDtpPHI7aSsrKXtjb25zdCB0PWFbaV0uc3BsaXQoXCI6XCIpLGU9dFswXS50cmltKCkscz10WzFdLnRyaW0oKTtvW2VdPXN9KHQ9ZVswXS50cmltKCkpLnNwbGl0KFwiLFwiKS5mb3JFYWNoKCh0PT57XCJcIiE9PSh0PXQucmVwbGFjZSgvXnN2Zy9pLFwiXCIpLnRyaW0oKSkmJihuW3RdPXMocyh7fSxuW3RdfHx7fSksbykpfSkpfSkpfXJldHVybiBufWNvbnN0IGFhPXQ9PnR0LmdldFNWR0NsYXNzKCRvKHQpLnRvTG93ZXJDYXNlKCkpO2NsYXNzIGhhe2NvbnN0cnVjdG9yKHQsZSxzLGkscil7dGhpcy5lbGVtZW50cz10LHRoaXMub3B0aW9ucz1lLHRoaXMucmV2aXZlcj1zLHRoaXMucmVnZXhVcmw9L151cmxcXChbJ1wiXT8jKFteJ1wiXSspWydcIl0/XFwpL2csdGhpcy5kb2M9aSx0aGlzLmNsaXBQYXRocz1yLHRoaXMuZ3JhZGllbnREZWZzPWZ1bmN0aW9uKHQpe2NvbnN0IGU9ZWEodCxuYSkscz17fTtsZXQgaT1lLmxlbmd0aDtmb3IoO2ktLTspe2NvbnN0IHI9ZVtpXTtyLmdldEF0dHJpYnV0ZShcInhsaW5rOmhyZWZcIikmJnJhKHQscik7Y29uc3Qgbj1yLmdldEF0dHJpYnV0ZShcImlkXCIpO24mJihzW25dPXIpfXJldHVybiBzfShpKSx0aGlzLmNzc1J1bGVzPW9hKGkpfXBhcnNlKCl7cmV0dXJuIFByb21pc2UuYWxsKHRoaXMuZWxlbWVudHMubWFwKCh0PT50aGlzLmNyZWF0ZU9iamVjdCh0KSkpKX1hc3luYyBjcmVhdGVPYmplY3QodCl7Y29uc3QgZT1hYSh0KTtpZihlKXtjb25zdCBzPWF3YWl0IGUuZnJvbUVsZW1lbnQodCx0aGlzLm9wdGlvbnMsdGhpcy5jc3NSdWxlcyk7cmV0dXJuIHRoaXMucmVzb2x2ZUdyYWRpZW50KHMsdCxLKSx0aGlzLnJlc29sdmVHcmFkaWVudChzLHQsSikscyBpbnN0YW5jZW9mIFFvJiZzLl9vcmlnaW5hbEVsZW1lbnQ/Y24ocyxzLnBhcnNlUHJlc2VydmVBc3BlY3RSYXRpb0F0dHJpYnV0ZSgpKTpjbihzKSxhd2FpdCB0aGlzLnJlc29sdmVDbGlwUGF0aChzLHQpLHRoaXMucmV2aXZlciYmdGhpcy5yZXZpdmVyKHQscyksc31yZXR1cm4gbnVsbH1leHRyYWN0UHJvcGVydHlEZWZpbml0aW9uKHQsZSxzKXtjb25zdCBpPXRbZV0scj10aGlzLnJlZ2V4VXJsO2lmKCFyLnRlc3QoaSkpcmV0dXJuO3IubGFzdEluZGV4PTA7Y29uc3Qgbj1yLmV4ZWMoaSlbMV07cmV0dXJuIHIubGFzdEluZGV4PTAsc1tuXX1yZXNvbHZlR3JhZGllbnQodCxlLGkpe2NvbnN0IHI9dGhpcy5leHRyYWN0UHJvcGVydHlEZWZpbml0aW9uKHQsaSx0aGlzLmdyYWRpZW50RGVmcyk7aWYocil7Y29uc3Qgbj1lLmdldEF0dHJpYnV0ZShpK1wiLW9wYWNpdHlcIiksbz1Mbi5mcm9tRWxlbWVudChyLHQscyhzKHt9LHRoaXMub3B0aW9ucykse30se29wYWNpdHk6bn0pKTt0LnNldChpLG8pfX1hc3luYyByZXNvbHZlQ2xpcFBhdGgodCxlLHMpe2NvbnN0IGk9dGhpcy5leHRyYWN0UHJvcGVydHlEZWZpbml0aW9uKHQsXCJjbGlwUGF0aFwiLHRoaXMuY2xpcFBhdGhzKTtpZihpKXtjb25zdCByPXd0KHQuY2FsY1RyYW5zZm9ybU1hdHJpeCgpKSxuPWlbMF0ucGFyZW50RWxlbWVudDtsZXQgbz1lO2Zvcig7IXMmJm8ucGFyZW50RWxlbWVudCYmby5nZXRBdHRyaWJ1dGUoXCJjbGlwLXBhdGhcIikhPT10LmNsaXBQYXRoOylvPW8ucGFyZW50RWxlbWVudDtvLnBhcmVudEVsZW1lbnQuYXBwZW5kQ2hpbGQobik7Y29uc3QgYT1ucihcIlwiLmNvbmNhdChvLmdldEF0dHJpYnV0ZShcInRyYW5zZm9ybVwiKXx8XCJcIixcIiBcIikuY29uY2F0KG4uZ2V0QXR0cmlidXRlKFwib3JpZ2luYWxUcmFuc2Zvcm1cIil8fFwiXCIpKTtuLnNldEF0dHJpYnV0ZShcInRyYW5zZm9ybVwiLFwibWF0cml4KFwiLmNvbmNhdChhLmpvaW4oXCIsXCIpLFwiKVwiKSk7Y29uc3QgaD1hd2FpdCBQcm9taXNlLmFsbChpLm1hcCgodD0+YWEodCkuZnJvbUVsZW1lbnQodCx0aGlzLm9wdGlvbnMsdGhpcy5jc3NSdWxlcykudGhlbigodD0+KGNuKHQpLHQuZmlsbFJ1bGU9dC5jbGlwUnVsZSxkZWxldGUgdC5jbGlwUnVsZSx0KSkpKSkpLGM9MT09PWgubGVuZ3RoP2hbMF06bmV3IERyKGgpLGw9U3QocixjLmNhbGNUcmFuc2Zvcm1NYXRyaXgoKSk7Yy5jbGlwUGF0aCYmYXdhaXQgdGhpcy5yZXNvbHZlQ2xpcFBhdGgoYyxvLG4uZ2V0QXR0cmlidXRlKFwiY2xpcC1wYXRoXCIpP286dm9pZCAwKTtjb25zdHtzY2FsZVg6dSxzY2FsZVk6ZCxhbmdsZTpnLHNrZXdYOmYsdHJhbnNsYXRlWDpwLHRyYW5zbGF0ZVk6bX09a3QobCk7Yy5zZXQoe2ZsaXBYOiExLGZsaXBZOiExfSksYy5zZXQoe3NjYWxlWDp1LHNjYWxlWTpkLGFuZ2xlOmcsc2tld1g6Zixza2V3WTowfSksYy5zZXRQb3NpdGlvbkJ5T3JpZ2luKG5ldyBvdChwLG0pLEQsRCksdC5jbGlwUGF0aD1jfWVsc2UgZGVsZXRlIHQuY2xpcFBhdGh9fWNvbnN0IGNhPXQ9PlVlLnRlc3QoJG8odCkpLGxhPSgpPT4oe29iamVjdHM6W10sZWxlbWVudHM6W10sb3B0aW9uczp7fSxhbGxFbGVtZW50czpbXX0pO2FzeW5jIGZ1bmN0aW9uIHVhKHQsZSl7bGV0e2Nyb3NzT3JpZ2luOmksc2lnbmFsOnJ9PWFyZ3VtZW50cy5sZW5ndGg+MiYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTp7fTtpZihyJiZyLmFib3J0ZWQpcmV0dXJuIGEoXCJsb2dcIixuZXcgYyhcInBhcnNlU1ZHRG9jdW1lbnRcIikpLGxhKCk7Y29uc3Qgbj10LmRvY3VtZW50RWxlbWVudDshZnVuY3Rpb24odCl7Y29uc3QgZT1lYSh0LFtcInVzZVwiLFwic3ZnOnVzZVwiXSkscz1bXCJ4XCIsXCJ5XCIsXCJ4bGluazpocmVmXCIsXCJocmVmXCIsXCJ0cmFuc2Zvcm1cIl07Zm9yKGNvbnN0IGkgb2YgZSl7Y29uc3QgZT1pLmF0dHJpYnV0ZXMscj17fTtmb3IoY29uc3QgdCBvZiBlKXQudmFsdWUmJihyW3QubmFtZV09dC52YWx1ZSk7Y29uc3Qgbj0ocltcInhsaW5rOmhyZWZcIl18fHIuaHJlZnx8XCJcIikuc2xpY2UoMSk7aWYoXCJcIj09PW4pcmV0dXJuO2NvbnN0IG89dC5nZXRFbGVtZW50QnlJZChuKTtpZihudWxsPT09bylyZXR1cm47bGV0IGE9by5jbG9uZU5vZGUoITApO2NvbnN0IGg9YS5hdHRyaWJ1dGVzLGM9e307Zm9yKGNvbnN0IHQgb2YgaCl0LnZhbHVlJiYoY1t0Lm5hbWVdPXQudmFsdWUpO2NvbnN0e3g6bD0wLHk6dT0wLHRyYW5zZm9ybTpkPVwiXCJ9PXIsZz1cIlwiLmNvbmNhdChkLFwiIFwiKS5jb25jYXQoYy50cmFuc2Zvcm18fFwiXCIsXCIgdHJhbnNsYXRlKFwiKS5jb25jYXQobCxcIiwgXCIpLmNvbmNhdCh1LFwiKVwiKTtpZihabyhhKSwvXnN2ZyQvaS50ZXN0KGEubm9kZU5hbWUpKXtjb25zdCB0PWEub3duZXJEb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoVmUsXCJnXCIpO09iamVjdC5lbnRyaWVzKGMpLmZvckVhY2goKGU9PntsZXRbcyxpXT1lO3JldHVybiB0LnNldEF0dHJpYnV0ZU5TKFZlLHMsaSl9KSksdC5hcHBlbmQoLi4uYS5jaGlsZE5vZGVzKSxhPXR9Zm9yKGNvbnN0IHQgb2YgZSl7aWYoIXQpY29udGludWU7Y29uc3R7bmFtZTplLHZhbHVlOml9PXQ7aWYoIXMuaW5jbHVkZXMoZSkpaWYoXCJzdHlsZVwiPT09ZSl7Y29uc3QgdD17fTtocihpLHQpLE9iamVjdC5lbnRyaWVzKGMpLmZvckVhY2goKGU9PntsZXRbcyxpXT1lO3Rbc109aX0pKSxocihjLnN0eWxlfHxcIlwiLHQpO2NvbnN0IHM9T2JqZWN0LmVudHJpZXModCkubWFwKCh0PT50LmpvaW4oXCI6XCIpKSkuam9pbihcIjtcIik7YS5zZXRBdHRyaWJ1dGUoZSxzKX1lbHNlIWNbZV0mJmEuc2V0QXR0cmlidXRlKGUsaSl9YS5zZXRBdHRyaWJ1dGUoXCJ0cmFuc2Zvcm1cIixnKSxhLnNldEF0dHJpYnV0ZShcImluc3RhbnRpYXRlZF9ieV91c2VcIixcIjFcIiksYS5yZW1vdmVBdHRyaWJ1dGUoXCJpZFwiKSxpLnBhcmVudE5vZGUucmVwbGFjZUNoaWxkKGEsaSl9fSh0KTtjb25zdCBvPUFycmF5LmZyb20obi5nZXRFbGVtZW50c0J5VGFnTmFtZShcIipcIikpLGg9cyhzKHt9LFpvKG4pKSx7fSx7Y3Jvc3NPcmlnaW46aSxzaWduYWw6cn0pLGw9by5maWx0ZXIoKHQ9Pihabyh0KSxjYSh0KSYmIWZ1bmN0aW9uKHQpe2xldCBlPXQ7Zm9yKDtlJiYoZT1lLnBhcmVudEVsZW1lbnQpOylpZihlJiZlLm5vZGVOYW1lJiZ0YS50ZXN0KCRvKGUpKSYmIWUuZ2V0QXR0cmlidXRlKFwiaW5zdGFudGlhdGVkX2J5X3VzZVwiKSlyZXR1cm4hMDtyZXR1cm4hMX0odCkpKSk7aWYoIWx8fGwmJiFsLmxlbmd0aClyZXR1cm4gcyhzKHt9LGxhKCkpLHt9LHtvcHRpb25zOmgsYWxsRWxlbWVudHM6b30pO2NvbnN0IHU9e307by5maWx0ZXIoKHQ9PlwiY2xpcFBhdGhcIj09PSRvKHQpKSkuZm9yRWFjaCgodD0+e3Quc2V0QXR0cmlidXRlKFwib3JpZ2luYWxUcmFuc2Zvcm1cIix0LmdldEF0dHJpYnV0ZShcInRyYW5zZm9ybVwiKXx8XCJcIik7Y29uc3QgZT10LmdldEF0dHJpYnV0ZShcImlkXCIpO3VbZV09QXJyYXkuZnJvbSh0LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiKlwiKSkuZmlsdGVyKCh0PT5jYSh0KSkpfSkpO2NvbnN0IGQ9bmV3IGhhKGwsaCxlLHQsdSk7cmV0dXJue29iamVjdHM6YXdhaXQgZC5wYXJzZSgpLGVsZW1lbnRzOmwsb3B0aW9uczpoLGFsbEVsZW1lbnRzOm99fWZ1bmN0aW9uIGRhKHQsZSxzKXtyZXR1cm4gdWEoKG5ldyh2KCkuRE9NUGFyc2VyKSkucGFyc2VGcm9tU3RyaW5nKHQudHJpbSgpLFwidGV4dC94bWxcIiksZSxzKX1mdW5jdGlvbiBnYSh0LGUpe2xldCBzPWFyZ3VtZW50cy5sZW5ndGg+MiYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTp7fTtyZXR1cm4gbmV3IFByb21pc2UoKChlLGkpPT57aG4odC5yZXBsYWNlKC9eXFxuXFxzKi8sXCJcIikudHJpbSgpLHtvbkNvbXBsZXRlOnQ9Pntjb25zdCBzPXQucmVzcG9uc2VYTUw7cyYmZShzKSxpKCl9LHNpZ25hbDpzLnNpZ25hbH0pfSkpLnRoZW4oKHQ9PnVhKHQsZSxzKSkpLmNhdGNoKCgoKT0+bGEoKSkpfWNvbnN0IGZhPVcscGE9dD0+ZnVuY3Rpb24oZSxzLGkpe2NvbnN0e3BvaW50czpyLHBhdGhPZmZzZXQ6bn09aTtyZXR1cm4gbmV3IG90KHJbdF0pLnN1YnRyYWN0KG4pLnRyYW5zZm9ybShTdChpLmdldFZpZXdwb3J0VHJhbnNmb3JtKCksaS5jYWxjVHJhbnNmb3JtTWF0cml4KCkpKX0sbWE9KHQsZSxzLGkpPT57Y29uc3R7dGFyZ2V0OnIscG9pbnRJbmRleDpufT1lLG89cixhPVNlKG5ldyBvdChzLGkpLHZvaWQgMCxvLmNhbGNPd25NYXRyaXgoKSk7cmV0dXJuIG8ucG9pbnRzW25dPWEuYWRkKG8ucGF0aE9mZnNldCksby5zZXREaW1lbnNpb25zKCksITB9LHZhPSh0LGUpPT5mdW5jdGlvbihpLHIsbixvKXtjb25zdCBhPXIudGFyZ2V0LGg9bmV3IG90KGEucG9pbnRzWyh0PjA/dDphLnBvaW50cy5sZW5ndGgpLTFdKSxjPWguc3VidHJhY3QoYS5wYXRoT2Zmc2V0KS50cmFuc2Zvcm0oYS5jYWxjT3duTWF0cml4KCkpLGw9ZShpLHMocyh7fSxyKSx7fSx7cG9pbnRJbmRleDp0fSksbixvKSx1PWguc3VidHJhY3QoYS5wYXRoT2Zmc2V0KS50cmFuc2Zvcm0oYS5jYWxjT3duTWF0cml4KCkpLnN1YnRyYWN0KGMpO3JldHVybiBhLmxlZnQtPXUueCxhLnRvcC09dS55LGx9LHlhPXQ9PlhzKGZhLHZhKHQsbWEpKTtjb25zdCBfYT0odCxlLHMpPT57Y29uc3R7cGF0aDppLHBhdGhPZmZzZXQ6cn09dCxuPWlbZV07cmV0dXJuIG5ldyBvdChuW3NdLXIueCxuW3MrMV0tci55KS50cmFuc2Zvcm0oU3QodC5nZXRWaWV3cG9ydFRyYW5zZm9ybSgpLHQuY2FsY1RyYW5zZm9ybU1hdHJpeCgpKSl9O2Z1bmN0aW9uIHhhKHQsZSxzKXtjb25zdHtjb21tYW5kSW5kZXg6aSxwb2ludEluZGV4OnJ9PXRoaXM7cmV0dXJuIF9hKHMsaSxyKX1mdW5jdGlvbiBDYSh0LGUsaSxyKXtjb25zdHt0YXJnZXQ6bn09ZSx7Y29tbWFuZEluZGV4Om8scG9pbnRJbmRleDphfT10aGlzLGg9KCh0LGUscyxpLHIpPT57Y29uc3R7cGF0aDpuLHBhdGhPZmZzZXQ6b309dCxhPW5bKGk+MD9pOm4ubGVuZ3RoKS0xXSxoPW5ldyBvdChhW3JdLGFbcisxXSksYz1oLnN1YnRyYWN0KG8pLnRyYW5zZm9ybSh0LmNhbGNPd25NYXRyaXgoKSksbD1TZShuZXcgb3QoZSxzKSx2b2lkIDAsdC5jYWxjT3duTWF0cml4KCkpO25baV1bcl09bC54K28ueCxuW2ldW3IrMV09bC55K28ueSx0LnNldERpbWVuc2lvbnMoKTtjb25zdCB1PWguc3VidHJhY3QodC5wYXRoT2Zmc2V0KS50cmFuc2Zvcm0odC5jYWxjT3duTWF0cml4KCkpLnN1YnRyYWN0KGMpO3JldHVybiB0LmxlZnQtPXUueCx0LnRvcC09dS55LHQuc2V0KFwiZGlydHlcIiwhMCksITB9KShuLGkscixvLGEpO3JldHVybiBrZSh0aGlzLmFjdGlvbk5hbWUscyhzKHt9LEZlKHQsZSxpLHIpKSx7fSx7Y29tbWFuZEluZGV4Om8scG9pbnRJbmRleDphfSkpLGh9Y2xhc3MgYmEgZXh0ZW5kcyBIc3tjb25zdHJ1Y3Rvcih0KXtzdXBlcih0KX1yZW5kZXIodCxlLGkscixuKXtjb25zdCBvPXMocyh7fSxyKSx7fSx7Y29ybmVyQ29sb3I6dGhpcy5jb250cm9sRmlsbCxjb3JuZXJTdHJva2VDb2xvcjp0aGlzLmNvbnRyb2xTdHJva2UsdHJhbnNwYXJlbnRDb3JuZXJzOiF0aGlzLmNvbnRyb2xGaWxsfSk7c3VwZXIucmVuZGVyKHQsZSxpLG8sbil9fWNsYXNzIHdhIGV4dGVuZHMgYmF7Y29uc3RydWN0b3IodCl7c3VwZXIodCl9cmVuZGVyKHQsZSxzLGkscil7Y29uc3R7cGF0aDpufT1yLHtjb21tYW5kSW5kZXg6byxwb2ludEluZGV4OmEsY29ubmVjdFRvQ29tbWFuZEluZGV4OmgsY29ubmVjdFRvUG9pbnRJbmRleDpjfT10aGlzO3Quc2F2ZSgpLHQuc3Ryb2tlU3R5bGU9dGhpcy5jb250cm9sU3Ryb2tlLHRoaXMuY29ubmVjdGlvbkRhc2hBcnJheSYmdC5zZXRMaW5lRGFzaCh0aGlzLmNvbm5lY3Rpb25EYXNoQXJyYXkpO2NvbnN0W2xdPW5bb10sdT1fYShyLGgsYyk7aWYoXCJRXCI9PT1sKXtjb25zdCBpPV9hKHIsbyxhKzIpO3QubW92ZVRvKGkueCxpLnkpLHQubGluZVRvKGUscyl9ZWxzZSB0Lm1vdmVUbyhlLHMpO3QubGluZVRvKHUueCx1LnkpLHQuc3Ryb2tlKCksdC5yZXN0b3JlKCksc3VwZXIucmVuZGVyKHQsZSxzLGkscil9fWNvbnN0IFNhPSh0LGUsaSxyLG4sbyk9Pm5ldyhpP3dhOmJhKShzKHMoe2NvbW1hbmRJbmRleDp0LHBvaW50SW5kZXg6ZSxhY3Rpb25OYW1lOlwibW9kaWZ5UGF0aFwiLHBvc2l0aW9uSGFuZGxlcjp4YSxhY3Rpb25IYW5kbGVyOkNhLGNvbm5lY3RUb0NvbW1hbmRJbmRleDpuLGNvbm5lY3RUb1BvaW50SW5kZXg6b30sciksaT9yLmNvbnRyb2xQb2ludFN0eWxlOnIucG9pbnRTdHlsZSkpO3ZhciBUYT1PYmplY3QuZnJlZXplKHtfX3Byb3RvX186bnVsbCxjaGFuZ2VXaWR0aDpXcyxjcmVhdGVPYmplY3REZWZhdWx0Q29udHJvbHM6Z2ksY3JlYXRlUGF0aENvbnRyb2xzOmZ1bmN0aW9uKHQpe2xldCBlPWFyZ3VtZW50cy5sZW5ndGg+MSYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXTp7fTtjb25zdCBzPXt9O2xldCBpPVwiTVwiO3JldHVybiB0LnBhdGguZm9yRWFjaCgoKHQscik9Pntjb25zdCBuPXRbMF07c3dpdGNoKFwiWlwiIT09biYmKHNbXCJjX1wiLmNvbmNhdChyLFwiX1wiKS5jb25jYXQobildPVNhKHIsdC5sZW5ndGgtMiwhMSxlKSksbil7Y2FzZVwiQ1wiOnNbXCJjX1wiLmNvbmNhdChyLFwiX0NfQ1BfMVwiKV09U2EociwxLCEwLGUsci0xLCh0PT5cIkNcIj09PXQ/NTpcIlFcIj09PXQ/MzoxKShpKSksc1tcImNfXCIuY29uY2F0KHIsXCJfQ19DUF8yXCIpXT1TYShyLDMsITAsZSxyLDUpO2JyZWFrO2Nhc2VcIlFcIjpzW1wiY19cIi5jb25jYXQocixcIl9RX0NQXzFcIildPVNhKHIsMSwhMCxlLHIsMyl9aT1ufSkpLHN9LGNyZWF0ZVBvbHlBY3Rpb25IYW5kbGVyOnlhLGNyZWF0ZVBvbHlDb250cm9sczpmdW5jdGlvbih0KXtsZXQgZT1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06e307Y29uc3QgaT17fTtmb3IobGV0IHI9MDtyPChcIm51bWJlclwiPT10eXBlb2YgdD90OnQucG9pbnRzLmxlbmd0aCk7cisrKWlbXCJwXCIuY29uY2F0KHIpXT1uZXcgSHMocyh7YWN0aW9uTmFtZTpmYSxwb3NpdGlvbkhhbmRsZXI6cGEociksYWN0aW9uSGFuZGxlcjp5YShyKX0sZSkpO3JldHVybiBpfSxjcmVhdGVQb2x5UG9zaXRpb25IYW5kbGVyOnBhLGNyZWF0ZVJlc2l6ZUNvbnRyb2xzOmZpLGNyZWF0ZVRleHRib3hEZWZhdWx0Q29udHJvbHM6cGksZHJhZ0hhbmRsZXI6SWUsZmFjdG9yeVBvbHlBY3Rpb25IYW5kbGVyOnZhLGdldExvY2FsUG9pbnQ6UmUscG9seUFjdGlvbkhhbmRsZXI6bWEscmVuZGVyQ2lyY2xlQ29udHJvbDpWcyxyZW5kZXJTcXVhcmVDb250cm9sOnpzLHJvdGF0aW9uU3R5bGVIYW5kbGVyOkdzLHJvdGF0aW9uV2l0aFNuYXBwaW5nOk5zLHNjYWxlQ3Vyc29yU3R5bGVIYW5kbGVyOkpzLHNjYWxlT3JTa2V3QWN0aW9uTmFtZTpjaSxzY2FsZVNrZXdDdXJzb3JTdHlsZUhhbmRsZXI6bGksc2NhbGluZ0VxdWFsbHk6WnMsc2NhbGluZ1g6JHMsc2NhbGluZ1hPclNrZXdpbmdZOnVpLHNjYWxpbmdZOnRpLHNjYWxpbmdZT3JTa2V3aW5nWDpkaSxza2V3Q3Vyc29yU3R5bGVIYW5kbGVyOnJpLHNrZXdIYW5kbGVyWDpvaSxza2V3SGFuZGxlclk6YWksd3JhcFdpdGhGaXJlRXZlbnQ6WHMsd3JhcFdpdGhGaXhlZEFuY2hvcjpZc30pO2NvbnN0IE9hPXQ9PnZvaWQgMCE9PXQud2ViZ2wsa2E9KHQsZSk9Pntjb25zdCBzPXZ0KHt3aWR0aDp0LGhlaWdodDplfSksaT1wdCgpLmdldENvbnRleHQoXCJ3ZWJnbFwiKSxyPXtpbWFnZUJ1ZmZlcjpuZXcgQXJyYXlCdWZmZXIodCplKjQpfSxuPXtkZXN0aW5hdGlvbldpZHRoOnQsZGVzdGluYXRpb25IZWlnaHQ6ZSx0YXJnZXRDYW52YXM6c307bGV0IG87bz12KCkucGVyZm9ybWFuY2Uubm93KCksSG8ucHJvdG90eXBlLmNvcHlHTFRvMkQuY2FsbChyLGksbik7Y29uc3QgYT12KCkucGVyZm9ybWFuY2Uubm93KCktbztvPXYoKS5wZXJmb3JtYW5jZS5ub3coKSxIby5wcm90b3R5cGUuY29weUdMVG8yRFB1dEltYWdlRGF0YS5jYWxsKHIsaSxuKTtyZXR1cm4gYT52KCkucGVyZm9ybWFuY2Uubm93KCktb30sRGE9XCJwcmVjaXNpb24gaGlnaHAgZmxvYXRcIixNYT1cIlxcbiAgICBcIi5jb25jYXQoRGEsXCI7XFxuICAgIHZhcnlpbmcgdmVjMiB2VGV4Q29vcmQ7XFxuICAgIHVuaWZvcm0gc2FtcGxlcjJEIHVUZXh0dXJlO1xcbiAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgZ2xfRnJhZ0NvbG9yID0gdGV4dHVyZTJEKHVUZXh0dXJlLCB2VGV4Q29vcmQpO1xcbiAgICB9XCIpLFBhPVtcInR5cGVcIl0sRWE9W1widHlwZVwiXSxBYT1uZXcgUmVnRXhwKERhLFwiZ1wiKTtjbGFzcyBqYXtnZXQgdHlwZSgpe3JldHVybiB0aGlzLmNvbnN0cnVjdG9yLnR5cGV9Y29uc3RydWN0b3IoKXtsZXQgdD1pKGFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSxQYSk7T2JqZWN0LmFzc2lnbih0aGlzLHRoaXMuY29uc3RydWN0b3IuZGVmYXVsdHMsdCl9Z2V0RnJhZ21lbnRTb3VyY2UoKXtyZXR1cm4gTWF9Z2V0VmVydGV4U291cmNlKCl7cmV0dXJuXCJcXG4gICAgYXR0cmlidXRlIHZlYzIgYVBvc2l0aW9uO1xcbiAgICB2YXJ5aW5nIHZlYzIgdlRleENvb3JkO1xcbiAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgdlRleENvb3JkID0gYVBvc2l0aW9uO1xcbiAgICAgIGdsX1Bvc2l0aW9uID0gdmVjNChhUG9zaXRpb24gKiAyLjAgLSAxLjAsIDAuMCwgMS4wKTtcXG4gICAgfVwifWNyZWF0ZVByb2dyYW0odCl7bGV0IGU9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOnRoaXMuZ2V0RnJhZ21lbnRTb3VyY2UoKSxzPWFyZ3VtZW50cy5sZW5ndGg+MiYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTp0aGlzLmdldFZlcnRleFNvdXJjZSgpO2NvbnN0e1dlYkdMUHJvYmU6e0dMUHJlY2lzaW9uOmk9XCJoaWdocFwifX09cCgpO1wiaGlnaHBcIiE9PWkmJihlPWUucmVwbGFjZShBYSxEYS5yZXBsYWNlKFwiaGlnaHBcIixpKSkpO2NvbnN0IHI9dC5jcmVhdGVTaGFkZXIodC5WRVJURVhfU0hBREVSKSxuPXQuY3JlYXRlU2hhZGVyKHQuRlJBR01FTlRfU0hBREVSKSxvPXQuY3JlYXRlUHJvZ3JhbSgpO2lmKCFyfHwhbnx8IW8pdGhyb3cgbmV3IGgoXCJWZXJ0ZXgsIGZyYWdtZW50IHNoYWRlciBvciBwcm9ncmFtIGNyZWF0aW9uIGVycm9yXCIpO2lmKHQuc2hhZGVyU291cmNlKHIscyksdC5jb21waWxlU2hhZGVyKHIpLCF0LmdldFNoYWRlclBhcmFtZXRlcihyLHQuQ09NUElMRV9TVEFUVVMpKXRocm93IG5ldyBoKFwiVmVydGV4IHNoYWRlciBjb21waWxlIGVycm9yIGZvciBcIi5jb25jYXQodGhpcy50eXBlLFwiOiBcIikuY29uY2F0KHQuZ2V0U2hhZGVySW5mb0xvZyhyKSkpO2lmKHQuc2hhZGVyU291cmNlKG4sZSksdC5jb21waWxlU2hhZGVyKG4pLCF0LmdldFNoYWRlclBhcmFtZXRlcihuLHQuQ09NUElMRV9TVEFUVVMpKXRocm93IG5ldyBoKFwiRnJhZ21lbnQgc2hhZGVyIGNvbXBpbGUgZXJyb3IgZm9yIFwiLmNvbmNhdCh0aGlzLnR5cGUsXCI6IFwiKS5jb25jYXQodC5nZXRTaGFkZXJJbmZvTG9nKG4pKSk7aWYodC5hdHRhY2hTaGFkZXIobyxyKSx0LmF0dGFjaFNoYWRlcihvLG4pLHQubGlua1Byb2dyYW0obyksIXQuZ2V0UHJvZ3JhbVBhcmFtZXRlcihvLHQuTElOS19TVEFUVVMpKXRocm93IG5ldyBoKCdTaGFkZXIgbGluayBlcnJvciBmb3IgXCInLmNvbmNhdCh0aGlzLnR5cGUsJ1wiICcpLmNvbmNhdCh0LmdldFByb2dyYW1JbmZvTG9nKG8pKSk7Y29uc3QgYT10aGlzLmdldFVuaWZvcm1Mb2NhdGlvbnModCxvKXx8e307cmV0dXJuIGEudVN0ZXBXPXQuZ2V0VW5pZm9ybUxvY2F0aW9uKG8sXCJ1U3RlcFdcIiksYS51U3RlcEg9dC5nZXRVbmlmb3JtTG9jYXRpb24obyxcInVTdGVwSFwiKSx7cHJvZ3JhbTpvLGF0dHJpYnV0ZUxvY2F0aW9uczp0aGlzLmdldEF0dHJpYnV0ZUxvY2F0aW9ucyh0LG8pLHVuaWZvcm1Mb2NhdGlvbnM6YX19Z2V0QXR0cmlidXRlTG9jYXRpb25zKHQsZSl7cmV0dXJue2FQb3NpdGlvbjp0LmdldEF0dHJpYkxvY2F0aW9uKGUsXCJhUG9zaXRpb25cIil9fWdldFVuaWZvcm1Mb2NhdGlvbnModCxlKXtjb25zdCBzPXRoaXMuY29uc3RydWN0b3IudW5pZm9ybUxvY2F0aW9ucyxpPXt9O2ZvcihsZXQgcj0wO3I8cy5sZW5ndGg7cisrKWlbc1tyXV09dC5nZXRVbmlmb3JtTG9jYXRpb24oZSxzW3JdKTtyZXR1cm4gaX1zZW5kQXR0cmlidXRlRGF0YSh0LGUscyl7Y29uc3QgaT1lLmFQb3NpdGlvbixyPXQuY3JlYXRlQnVmZmVyKCk7dC5iaW5kQnVmZmVyKHQuQVJSQVlfQlVGRkVSLHIpLHQuZW5hYmxlVmVydGV4QXR0cmliQXJyYXkoaSksdC52ZXJ0ZXhBdHRyaWJQb2ludGVyKGksMix0LkZMT0FULCExLDAsMCksdC5idWZmZXJEYXRhKHQuQVJSQVlfQlVGRkVSLHMsdC5TVEFUSUNfRFJBVyl9X3NldHVwRnJhbWVCdWZmZXIodCl7Y29uc3QgZT10LmNvbnRleHQ7aWYodC5wYXNzZXM+MSl7Y29uc3Qgcz10LmRlc3RpbmF0aW9uV2lkdGgsaT10LmRlc3RpbmF0aW9uSGVpZ2h0O3Quc291cmNlV2lkdGg9PT1zJiZ0LnNvdXJjZUhlaWdodD09PWl8fChlLmRlbGV0ZVRleHR1cmUodC50YXJnZXRUZXh0dXJlKSx0LnRhcmdldFRleHR1cmU9dC5maWx0ZXJCYWNrZW5kLmNyZWF0ZVRleHR1cmUoZSxzLGkpKSxlLmZyYW1lYnVmZmVyVGV4dHVyZTJEKGUuRlJBTUVCVUZGRVIsZS5DT0xPUl9BVFRBQ0hNRU5UMCxlLlRFWFRVUkVfMkQsdC50YXJnZXRUZXh0dXJlLDApfWVsc2UgZS5iaW5kRnJhbWVidWZmZXIoZS5GUkFNRUJVRkZFUixudWxsKSxlLmZpbmlzaCgpfV9zd2FwVGV4dHVyZXModCl7dC5wYXNzZXMtLSx0LnBhc3MrKztjb25zdCBlPXQudGFyZ2V0VGV4dHVyZTt0LnRhcmdldFRleHR1cmU9dC5zb3VyY2VUZXh0dXJlLHQuc291cmNlVGV4dHVyZT1lfWlzTmV1dHJhbFN0YXRlKHQpe3JldHVybiExfWFwcGx5VG8odCl7T2EodCk/KHRoaXMuX3NldHVwRnJhbWVCdWZmZXIodCksdGhpcy5hcHBseVRvV2ViR0wodCksdGhpcy5fc3dhcFRleHR1cmVzKHQpKTp0aGlzLmFwcGx5VG8yZCh0KX1hcHBseVRvMmQodCl7fWdldENhY2hlS2V5KCl7cmV0dXJuIHRoaXMudHlwZX1yZXRyaWV2ZVNoYWRlcih0KXtjb25zdCBlPXRoaXMuZ2V0Q2FjaGVLZXkoKTtyZXR1cm4gdC5wcm9ncmFtQ2FjaGVbZV18fCh0LnByb2dyYW1DYWNoZVtlXT10aGlzLmNyZWF0ZVByb2dyYW0odC5jb250ZXh0KSksdC5wcm9ncmFtQ2FjaGVbZV19YXBwbHlUb1dlYkdMKHQpe2NvbnN0IGU9dC5jb250ZXh0LHM9dGhpcy5yZXRyaWV2ZVNoYWRlcih0KTswPT09dC5wYXNzJiZ0Lm9yaWdpbmFsVGV4dHVyZT9lLmJpbmRUZXh0dXJlKGUuVEVYVFVSRV8yRCx0Lm9yaWdpbmFsVGV4dHVyZSk6ZS5iaW5kVGV4dHVyZShlLlRFWFRVUkVfMkQsdC5zb3VyY2VUZXh0dXJlKSxlLnVzZVByb2dyYW0ocy5wcm9ncmFtKSx0aGlzLnNlbmRBdHRyaWJ1dGVEYXRhKGUscy5hdHRyaWJ1dGVMb2NhdGlvbnMsdC5hUG9zaXRpb24pLGUudW5pZm9ybTFmKHMudW5pZm9ybUxvY2F0aW9ucy51U3RlcFcsMS90LnNvdXJjZVdpZHRoKSxlLnVuaWZvcm0xZihzLnVuaWZvcm1Mb2NhdGlvbnMudVN0ZXBILDEvdC5zb3VyY2VIZWlnaHQpLHRoaXMuc2VuZFVuaWZvcm1EYXRhKGUscy51bmlmb3JtTG9jYXRpb25zKSxlLnZpZXdwb3J0KDAsMCx0LmRlc3RpbmF0aW9uV2lkdGgsdC5kZXN0aW5hdGlvbkhlaWdodCksZS5kcmF3QXJyYXlzKGUuVFJJQU5HTEVfU1RSSVAsMCw0KX1iaW5kQWRkaXRpb25hbFRleHR1cmUodCxlLHMpe3QuYWN0aXZlVGV4dHVyZShzKSx0LmJpbmRUZXh0dXJlKHQuVEVYVFVSRV8yRCxlKSx0LmFjdGl2ZVRleHR1cmUodC5URVhUVVJFMCl9dW5iaW5kQWRkaXRpb25hbFRleHR1cmUodCxlKXt0LmFjdGl2ZVRleHR1cmUoZSksdC5iaW5kVGV4dHVyZSh0LlRFWFRVUkVfMkQsbnVsbCksdC5hY3RpdmVUZXh0dXJlKHQuVEVYVFVSRTApfXNlbmRVbmlmb3JtRGF0YSh0LGUpe31jcmVhdGVIZWxwTGF5ZXIodCl7aWYoIXQuaGVscExheWVyKXtjb25zdHtzb3VyY2VXaWR0aDplLHNvdXJjZUhlaWdodDpzfT10LGk9dnQoe3dpZHRoOmUsaGVpZ2h0OnN9KTt0LmhlbHBMYXllcj1pfX10b09iamVjdCgpe2NvbnN0IHQ9T2JqZWN0LmtleXModGhpcy5jb25zdHJ1Y3Rvci5kZWZhdWx0c3x8e30pO3JldHVybiBzKHt0eXBlOnRoaXMudHlwZX0sdC5yZWR1Y2UoKCh0LGUpPT4odFtlXT10aGlzW2VdLHQpKSx7fSkpfXRvSlNPTigpe3JldHVybiB0aGlzLnRvT2JqZWN0KCl9c3RhdGljIGFzeW5jIGZyb21PYmplY3QodCxlKXtyZXR1cm4gbmV3IHRoaXMoaSh0LEVhKSl9fXQoamEsXCJ0eXBlXCIsXCJCYXNlRmlsdGVyXCIpLHQoamEsXCJ1bmlmb3JtTG9jYXRpb25zXCIsW10pO2NvbnN0IEZhPXttdWx0aXBseTpcImdsX0ZyYWdDb2xvci5yZ2IgKj0gdUNvbG9yLnJnYjtcXG5cIixzY3JlZW46XCJnbF9GcmFnQ29sb3IucmdiID0gMS4wIC0gKDEuMCAtIGdsX0ZyYWdDb2xvci5yZ2IpICogKDEuMCAtIHVDb2xvci5yZ2IpO1xcblwiLGFkZDpcImdsX0ZyYWdDb2xvci5yZ2IgKz0gdUNvbG9yLnJnYjtcXG5cIixkaWZmZXJlbmNlOlwiZ2xfRnJhZ0NvbG9yLnJnYiA9IGFicyhnbF9GcmFnQ29sb3IucmdiIC0gdUNvbG9yLnJnYik7XFxuXCIsc3VidHJhY3Q6XCJnbF9GcmFnQ29sb3IucmdiIC09IHVDb2xvci5yZ2I7XFxuXCIsbGlnaHRlbjpcImdsX0ZyYWdDb2xvci5yZ2IgPSBtYXgoZ2xfRnJhZ0NvbG9yLnJnYiwgdUNvbG9yLnJnYik7XFxuXCIsZGFya2VuOlwiZ2xfRnJhZ0NvbG9yLnJnYiA9IG1pbihnbF9GcmFnQ29sb3IucmdiLCB1Q29sb3IucmdiKTtcXG5cIixleGNsdXNpb246XCJnbF9GcmFnQ29sb3IucmdiICs9IHVDb2xvci5yZ2IgLSAyLjAgKiAodUNvbG9yLnJnYiAqIGdsX0ZyYWdDb2xvci5yZ2IpO1xcblwiLG92ZXJsYXk6XCJcXG4gICAgaWYgKHVDb2xvci5yIDwgMC41KSB7XFxuICAgICAgZ2xfRnJhZ0NvbG9yLnIgKj0gMi4wICogdUNvbG9yLnI7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgZ2xfRnJhZ0NvbG9yLnIgPSAxLjAgLSAyLjAgKiAoMS4wIC0gZ2xfRnJhZ0NvbG9yLnIpICogKDEuMCAtIHVDb2xvci5yKTtcXG4gICAgfVxcbiAgICBpZiAodUNvbG9yLmcgPCAwLjUpIHtcXG4gICAgICBnbF9GcmFnQ29sb3IuZyAqPSAyLjAgKiB1Q29sb3IuZztcXG4gICAgfSBlbHNlIHtcXG4gICAgICBnbF9GcmFnQ29sb3IuZyA9IDEuMCAtIDIuMCAqICgxLjAgLSBnbF9GcmFnQ29sb3IuZykgKiAoMS4wIC0gdUNvbG9yLmcpO1xcbiAgICB9XFxuICAgIGlmICh1Q29sb3IuYiA8IDAuNSkge1xcbiAgICAgIGdsX0ZyYWdDb2xvci5iICo9IDIuMCAqIHVDb2xvci5iO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGdsX0ZyYWdDb2xvci5iID0gMS4wIC0gMi4wICogKDEuMCAtIGdsX0ZyYWdDb2xvci5iKSAqICgxLjAgLSB1Q29sb3IuYik7XFxuICAgIH1cXG4gICAgXCIsdGludDpcIlxcbiAgICBnbF9GcmFnQ29sb3IucmdiICo9ICgxLjAgLSB1Q29sb3IuYSk7XFxuICAgIGdsX0ZyYWdDb2xvci5yZ2IgKz0gdUNvbG9yLnJnYjtcXG4gICAgXCJ9O2NsYXNzIExhIGV4dGVuZHMgamF7Z2V0Q2FjaGVLZXkoKXtyZXR1cm5cIlwiLmNvbmNhdCh0aGlzLnR5cGUsXCJfXCIpLmNvbmNhdCh0aGlzLm1vZGUpfWdldEZyYWdtZW50U291cmNlKCl7cmV0dXJuXCJcXG4gICAgICBwcmVjaXNpb24gaGlnaHAgZmxvYXQ7XFxuICAgICAgdW5pZm9ybSBzYW1wbGVyMkQgdVRleHR1cmU7XFxuICAgICAgdW5pZm9ybSB2ZWM0IHVDb2xvcjtcXG4gICAgICB2YXJ5aW5nIHZlYzIgdlRleENvb3JkO1xcbiAgICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICAgIHZlYzQgY29sb3IgPSB0ZXh0dXJlMkQodVRleHR1cmUsIHZUZXhDb29yZCk7XFxuICAgICAgICBnbF9GcmFnQ29sb3IgPSBjb2xvcjtcXG4gICAgICAgIGlmIChjb2xvci5hID4gMC4wKSB7XFxuICAgICAgICAgIFwiLmNvbmNhdChGYVt0aGlzLm1vZGVdLFwiXFxuICAgICAgICB9XFxuICAgICAgfVxcbiAgICAgIFwiKX1hcHBseVRvMmQodCl7bGV0e2ltYWdlRGF0YTp7ZGF0YTplfX09dDtjb25zdCBzPW5ldyBVdCh0aGlzLmNvbG9yKS5nZXRTb3VyY2UoKSxpPXRoaXMuYWxwaGEscj1zWzBdKmksbj1zWzFdKmksbz1zWzJdKmksYT0xLWk7Zm9yKGxldCB0PTA7dDxlLmxlbmd0aDt0Kz00KXtjb25zdCBzPWVbdF0saT1lW3QrMV0saD1lW3QrMl07bGV0IGMsbCx1O3N3aXRjaCh0aGlzLm1vZGUpe2Nhc2VcIm11bHRpcGx5XCI6Yz1zKnIvMjU1LGw9aSpuLzI1NSx1PWgqby8yNTU7YnJlYWs7Y2FzZVwic2NyZWVuXCI6Yz0yNTUtKDI1NS1zKSooMjU1LXIpLzI1NSxsPTI1NS0oMjU1LWkpKigyNTUtbikvMjU1LHU9MjU1LSgyNTUtaCkqKDI1NS1vKS8yNTU7YnJlYWs7Y2FzZVwiYWRkXCI6Yz1zK3IsbD1pK24sdT1oK287YnJlYWs7Y2FzZVwiZGlmZmVyZW5jZVwiOmM9TWF0aC5hYnMocy1yKSxsPU1hdGguYWJzKGktbiksdT1NYXRoLmFicyhoLW8pO2JyZWFrO2Nhc2VcInN1YnRyYWN0XCI6Yz1zLXIsbD1pLW4sdT1oLW87YnJlYWs7Y2FzZVwiZGFya2VuXCI6Yz1NYXRoLm1pbihzLHIpLGw9TWF0aC5taW4oaSxuKSx1PU1hdGgubWluKGgsbyk7YnJlYWs7Y2FzZVwibGlnaHRlblwiOmM9TWF0aC5tYXgocyxyKSxsPU1hdGgubWF4KGksbiksdT1NYXRoLm1heChoLG8pO2JyZWFrO2Nhc2VcIm92ZXJsYXlcIjpjPXI8MTI4PzIqcypyLzI1NToyNTUtMiooMjU1LXMpKigyNTUtcikvMjU1LGw9bjwxMjg/MippKm4vMjU1OjI1NS0yKigyNTUtaSkqKDI1NS1uKS8yNTUsdT1vPDEyOD8yKmgqby8yNTU6MjU1LTIqKDI1NS1oKSooMjU1LW8pLzI1NTticmVhaztjYXNlXCJleGNsdXNpb25cIjpjPXIrcy0yKnIqcy8yNTUsbD1uK2ktMipuKmkvMjU1LHU9bytoLTIqbypoLzI1NTticmVhaztjYXNlXCJ0aW50XCI6Yz1yK3MqYSxsPW4raSphLHU9bytoKmF9ZVt0XT1jLGVbdCsxXT1sLGVbdCsyXT11fX1zZW5kVW5pZm9ybURhdGEodCxlKXtjb25zdCBzPW5ldyBVdCh0aGlzLmNvbG9yKS5nZXRTb3VyY2UoKTtzWzBdPXRoaXMuYWxwaGEqc1swXS8yNTUsc1sxXT10aGlzLmFscGhhKnNbMV0vMjU1LHNbMl09dGhpcy5hbHBoYSpzWzJdLzI1NSxzWzNdPXRoaXMuYWxwaGEsdC51bmlmb3JtNGZ2KGUudUNvbG9yLHMpfX10KExhLFwiZGVmYXVsdHNcIix7Y29sb3I6XCIjRjk1QzYzXCIsbW9kZTpcIm11bHRpcGx5XCIsYWxwaGE6MX0pLHQoTGEsXCJ0eXBlXCIsXCJCbGVuZENvbG9yXCIpLHQoTGEsXCJ1bmlmb3JtTG9jYXRpb25zXCIsW1widUNvbG9yXCJdKSx0dC5zZXRDbGFzcyhMYSk7Y29uc3QgUmE9e211bHRpcGx5OlwiXFxuICAgIHByZWNpc2lvbiBoaWdocCBmbG9hdDtcXG4gICAgdW5pZm9ybSBzYW1wbGVyMkQgdVRleHR1cmU7XFxuICAgIHVuaWZvcm0gc2FtcGxlcjJEIHVJbWFnZTtcXG4gICAgdW5pZm9ybSB2ZWM0IHVDb2xvcjtcXG4gICAgdmFyeWluZyB2ZWMyIHZUZXhDb29yZDtcXG4gICAgdmFyeWluZyB2ZWMyIHZUZXhDb29yZDI7XFxuICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICB2ZWM0IGNvbG9yID0gdGV4dHVyZTJEKHVUZXh0dXJlLCB2VGV4Q29vcmQpO1xcbiAgICAgIHZlYzQgY29sb3IyID0gdGV4dHVyZTJEKHVJbWFnZSwgdlRleENvb3JkMik7XFxuICAgICAgY29sb3IucmdiYSAqPSBjb2xvcjIucmdiYTtcXG4gICAgICBnbF9GcmFnQ29sb3IgPSBjb2xvcjtcXG4gICAgfVxcbiAgICBcIixtYXNrOlwiXFxuICAgIHByZWNpc2lvbiBoaWdocCBmbG9hdDtcXG4gICAgdW5pZm9ybSBzYW1wbGVyMkQgdVRleHR1cmU7XFxuICAgIHVuaWZvcm0gc2FtcGxlcjJEIHVJbWFnZTtcXG4gICAgdW5pZm9ybSB2ZWM0IHVDb2xvcjtcXG4gICAgdmFyeWluZyB2ZWMyIHZUZXhDb29yZDtcXG4gICAgdmFyeWluZyB2ZWMyIHZUZXhDb29yZDI7XFxuICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICB2ZWM0IGNvbG9yID0gdGV4dHVyZTJEKHVUZXh0dXJlLCB2VGV4Q29vcmQpO1xcbiAgICAgIHZlYzQgY29sb3IyID0gdGV4dHVyZTJEKHVJbWFnZSwgdlRleENvb3JkMik7XFxuICAgICAgY29sb3IuYSA9IGNvbG9yMi5hO1xcbiAgICAgIGdsX0ZyYWdDb2xvciA9IGNvbG9yO1xcbiAgICB9XFxuICAgIFwifSxJYT1bXCJ0eXBlXCIsXCJpbWFnZVwiXTtjbGFzcyBCYSBleHRlbmRzIGphe2dldENhY2hlS2V5KCl7cmV0dXJuXCJcIi5jb25jYXQodGhpcy50eXBlLFwiX1wiKS5jb25jYXQodGhpcy5tb2RlKX1nZXRGcmFnbWVudFNvdXJjZSgpe3JldHVybiBSYVt0aGlzLm1vZGVdfWdldFZlcnRleFNvdXJjZSgpe3JldHVyblwiXFxuICAgIGF0dHJpYnV0ZSB2ZWMyIGFQb3NpdGlvbjtcXG4gICAgdmFyeWluZyB2ZWMyIHZUZXhDb29yZDtcXG4gICAgdmFyeWluZyB2ZWMyIHZUZXhDb29yZDI7XFxuICAgIHVuaWZvcm0gbWF0MyB1VHJhbnNmb3JtTWF0cml4O1xcbiAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgdlRleENvb3JkID0gYVBvc2l0aW9uO1xcbiAgICAgIHZUZXhDb29yZDIgPSAodVRyYW5zZm9ybU1hdHJpeCAqIHZlYzMoYVBvc2l0aW9uLCAxLjApKS54eTtcXG4gICAgICBnbF9Qb3NpdGlvbiA9IHZlYzQoYVBvc2l0aW9uICogMi4wIC0gMS4wLCAwLjAsIDEuMCk7XFxuICAgIH1cXG4gICAgXCJ9YXBwbHlUb1dlYkdMKHQpe2NvbnN0IGU9dC5jb250ZXh0LHM9dGhpcy5jcmVhdGVUZXh0dXJlKHQuZmlsdGVyQmFja2VuZCx0aGlzLmltYWdlKTt0aGlzLmJpbmRBZGRpdGlvbmFsVGV4dHVyZShlLHMsZS5URVhUVVJFMSksc3VwZXIuYXBwbHlUb1dlYkdMKHQpLHRoaXMudW5iaW5kQWRkaXRpb25hbFRleHR1cmUoZSxlLlRFWFRVUkUxKX1jcmVhdGVUZXh0dXJlKHQsZSl7cmV0dXJuIHQuZ2V0Q2FjaGVkVGV4dHVyZShlLmNhY2hlS2V5LGUuZ2V0RWxlbWVudCgpKX1jYWxjdWxhdGVNYXRyaXgoKXtjb25zdCB0PXRoaXMuaW1hZ2Use3dpZHRoOmUsaGVpZ2h0OnN9PXQuZ2V0RWxlbWVudCgpO3JldHVyblsxL3Quc2NhbGVYLDAsMCwwLDEvdC5zY2FsZVksMCwtdC5sZWZ0L2UsLXQudG9wL3MsMV19YXBwbHlUbzJkKHQpe2xldHtpbWFnZURhdGE6e2RhdGE6ZSx3aWR0aDpzLGhlaWdodDppfSxmaWx0ZXJCYWNrZW5kOntyZXNvdXJjZXM6cn19PXQ7Y29uc3Qgbj10aGlzLmltYWdlO3IuYmxlbmRJbWFnZXx8KHIuYmxlbmRJbWFnZT1wdCgpKTtjb25zdCBvPXIuYmxlbmRJbWFnZSxhPW8uZ2V0Q29udGV4dChcIjJkXCIpO28ud2lkdGghPT1zfHxvLmhlaWdodCE9PWk/KG8ud2lkdGg9cyxvLmhlaWdodD1pKTphLmNsZWFyUmVjdCgwLDAscyxpKSxhLnNldFRyYW5zZm9ybShuLnNjYWxlWCwwLDAsbi5zY2FsZVksbi5sZWZ0LG4udG9wKSxhLmRyYXdJbWFnZShuLmdldEVsZW1lbnQoKSwwLDAscyxpKTtjb25zdCBoPWEuZ2V0SW1hZ2VEYXRhKDAsMCxzLGkpLmRhdGE7Zm9yKGxldCB0PTA7dDxlLmxlbmd0aDt0Kz00KXtjb25zdCBzPWVbdF0saT1lW3QrMV0scj1lW3QrMl0sbj1lW3QrM10sbz1oW3RdLGE9aFt0KzFdLGM9aFt0KzJdLGw9aFt0KzNdO3N3aXRjaCh0aGlzLm1vZGUpe2Nhc2VcIm11bHRpcGx5XCI6ZVt0XT1zKm8vMjU1LGVbdCsxXT1pKmEvMjU1LGVbdCsyXT1yKmMvMjU1LGVbdCszXT1uKmwvMjU1O2JyZWFrO2Nhc2VcIm1hc2tcIjplW3QrM109bH19fXNlbmRVbmlmb3JtRGF0YSh0LGUpe2NvbnN0IHM9dGhpcy5jYWxjdWxhdGVNYXRyaXgoKTt0LnVuaWZvcm0xaShlLnVJbWFnZSwxKSx0LnVuaWZvcm1NYXRyaXgzZnYoZS51VHJhbnNmb3JtTWF0cml4LCExLHMpfXRvT2JqZWN0KCl7cmV0dXJuIHMocyh7fSxzdXBlci50b09iamVjdCgpKSx7fSx7aW1hZ2U6dGhpcy5pbWFnZSYmdGhpcy5pbWFnZS50b09iamVjdCgpfSl9c3RhdGljIGFzeW5jIGZyb21PYmplY3QodCxlKXtsZXR7dHlwZTpyLGltYWdlOm59PXQsbz1pKHQsSWEpO3JldHVybiBRby5mcm9tT2JqZWN0KG4sZSkudGhlbigodD0+bmV3IHRoaXMocyhzKHt9LG8pLHt9LHtpbWFnZTp0fSkpKSl9fXQoQmEsXCJ0eXBlXCIsXCJCbGVuZEltYWdlXCIpLHQoQmEsXCJkZWZhdWx0c1wiLHttb2RlOlwibXVsdGlwbHlcIixhbHBoYToxfSksdChCYSxcInVuaWZvcm1Mb2NhdGlvbnNcIixbXCJ1VHJhbnNmb3JtTWF0cml4XCIsXCJ1SW1hZ2VcIl0pLHR0LnNldENsYXNzKEJhKTtjbGFzcyBYYSBleHRlbmRzIGphe2dldEZyYWdtZW50U291cmNlKCl7cmV0dXJuXCJcXG4gICAgcHJlY2lzaW9uIGhpZ2hwIGZsb2F0O1xcbiAgICB1bmlmb3JtIHNhbXBsZXIyRCB1VGV4dHVyZTtcXG4gICAgdW5pZm9ybSB2ZWMyIHVEZWx0YTtcXG4gICAgdmFyeWluZyB2ZWMyIHZUZXhDb29yZDtcXG4gICAgY29uc3QgZmxvYXQgblNhbXBsZXMgPSAxNS4wO1xcbiAgICB2ZWMzIHYzb2Zmc2V0ID0gdmVjMygxMi45ODk4LCA3OC4yMzMsIDE1MS43MTgyKTtcXG4gICAgZmxvYXQgcmFuZG9tKHZlYzMgc2NhbGUpIHtcXG4gICAgICAvKiB1c2UgdGhlIGZyYWdtZW50IHBvc2l0aW9uIGZvciBhIGRpZmZlcmVudCBzZWVkIHBlci1waXhlbCAqL1xcbiAgICAgIHJldHVybiBmcmFjdChzaW4oZG90KGdsX0ZyYWdDb29yZC54eXosIHNjYWxlKSkgKiA0Mzc1OC41NDUzKTtcXG4gICAgfVxcbiAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgdmVjNCBjb2xvciA9IHZlYzQoMC4wKTtcXG4gICAgICBmbG9hdCB0b3RhbCA9IDAuMDtcXG4gICAgICBmbG9hdCBvZmZzZXQgPSByYW5kb20odjNvZmZzZXQpO1xcbiAgICAgIGZvciAoZmxvYXQgdCA9IC1uU2FtcGxlczsgdCA8PSBuU2FtcGxlczsgdCsrKSB7XFxuICAgICAgICBmbG9hdCBwZXJjZW50ID0gKHQgKyBvZmZzZXQgLSAwLjUpIC8gblNhbXBsZXM7XFxuICAgICAgICBmbG9hdCB3ZWlnaHQgPSAxLjAgLSBhYnMocGVyY2VudCk7XFxuICAgICAgICBjb2xvciArPSB0ZXh0dXJlMkQodVRleHR1cmUsIHZUZXhDb29yZCArIHVEZWx0YSAqIHBlcmNlbnQpICogd2VpZ2h0O1xcbiAgICAgICAgdG90YWwgKz0gd2VpZ2h0O1xcbiAgICAgIH1cXG4gICAgICBnbF9GcmFnQ29sb3IgPSBjb2xvciAvIHRvdGFsO1xcbiAgICB9XFxuICBcIn1hcHBseVRvKHQpe09hKHQpPyh0aGlzLmFzcGVjdFJhdGlvPXQuc291cmNlV2lkdGgvdC5zb3VyY2VIZWlnaHQsdC5wYXNzZXMrKyx0aGlzLl9zZXR1cEZyYW1lQnVmZmVyKHQpLHRoaXMuaG9yaXpvbnRhbD0hMCx0aGlzLmFwcGx5VG9XZWJHTCh0KSx0aGlzLl9zd2FwVGV4dHVyZXModCksdGhpcy5fc2V0dXBGcmFtZUJ1ZmZlcih0KSx0aGlzLmhvcml6b250YWw9ITEsdGhpcy5hcHBseVRvV2ViR0wodCksdGhpcy5fc3dhcFRleHR1cmVzKHQpKTp0aGlzLmFwcGx5VG8yZCh0KX1hcHBseVRvMmQodCl7dC5pbWFnZURhdGE9dGhpcy5zaW1wbGVCbHVyKHQpfXNpbXBsZUJsdXIodCl7bGV0e2N0eDplLGltYWdlRGF0YTpzLGZpbHRlckJhY2tlbmQ6e3Jlc291cmNlczppfX09dDtjb25zdHt3aWR0aDpyLGhlaWdodDpufT1zO2kuYmx1ckxheWVyMXx8KGkuYmx1ckxheWVyMT1wdCgpLGkuYmx1ckxheWVyMj1wdCgpKTtjb25zdCBvPWkuYmx1ckxheWVyMSxhPWkuYmx1ckxheWVyMjtvLndpZHRoPT09ciYmby5oZWlnaHQ9PT1ufHwoYS53aWR0aD1vLndpZHRoPXIsYS5oZWlnaHQ9by5oZWlnaHQ9bik7Y29uc3QgaD1vLmdldENvbnRleHQoXCIyZFwiKSxjPWEuZ2V0Q29udGV4dChcIjJkXCIpLGw9MTUsdT0uMDYqdGhpcy5ibHVyKi41O2xldCBkLGcsZixwO2ZvcihoLnB1dEltYWdlRGF0YShzLDAsMCksYy5jbGVhclJlY3QoMCwwLHIsbikscD0tMTU7cDw9bDtwKyspZD0oTWF0aC5yYW5kb20oKS0uNSkvNCxnPXAvbCxmPXUqZypyK2QsYy5nbG9iYWxBbHBoYT0xLU1hdGguYWJzKGcpLGMuZHJhd0ltYWdlKG8sZixkKSxoLmRyYXdJbWFnZShhLDAsMCksYy5nbG9iYWxBbHBoYT0xLGMuY2xlYXJSZWN0KDAsMCxhLndpZHRoLGEuaGVpZ2h0KTtmb3IocD0tMTU7cDw9bDtwKyspZD0oTWF0aC5yYW5kb20oKS0uNSkvNCxnPXAvbCxmPXUqZypuK2QsYy5nbG9iYWxBbHBoYT0xLU1hdGguYWJzKGcpLGMuZHJhd0ltYWdlKG8sZCxmKSxoLmRyYXdJbWFnZShhLDAsMCksYy5nbG9iYWxBbHBoYT0xLGMuY2xlYXJSZWN0KDAsMCxhLndpZHRoLGEuaGVpZ2h0KTtlLmRyYXdJbWFnZShvLDAsMCk7Y29uc3QgbT1lLmdldEltYWdlRGF0YSgwLDAsby53aWR0aCxvLmhlaWdodCk7cmV0dXJuIGguZ2xvYmFsQWxwaGE9MSxoLmNsZWFyUmVjdCgwLDAsby53aWR0aCxvLmhlaWdodCksbX1zZW5kVW5pZm9ybURhdGEodCxlKXtjb25zdCBzPXRoaXMuY2hvb3NlUmlnaHREZWx0YSgpO3QudW5pZm9ybTJmdihlLnVEZWx0YSxzKX1pc05ldXRyYWxTdGF0ZSgpe3JldHVybiAwPT09dGhpcy5ibHVyfWNob29zZVJpZ2h0RGVsdGEoKXtsZXQgdD0xO2NvbnN0IGU9WzAsMF07dGhpcy5ob3Jpem9udGFsP3RoaXMuYXNwZWN0UmF0aW8+MSYmKHQ9MS90aGlzLmFzcGVjdFJhdGlvKTp0aGlzLmFzcGVjdFJhdGlvPDEmJih0PXRoaXMuYXNwZWN0UmF0aW8pO2NvbnN0IHM9dCp0aGlzLmJsdXIqLjEyO3JldHVybiB0aGlzLmhvcml6b250YWw/ZVswXT1zOmVbMV09cyxlfX10KFhhLFwidHlwZVwiLFwiQmx1clwiKSx0KFhhLFwiZGVmYXVsdHNcIix7Ymx1cjowfSksdChYYSxcInVuaWZvcm1Mb2NhdGlvbnNcIixbXCJ1RGVsdGFcIl0pLHR0LnNldENsYXNzKFhhKTtjbGFzcyBZYSBleHRlbmRzIGphe2dldEZyYWdtZW50U291cmNlKCl7cmV0dXJuXCJcXG4gIHByZWNpc2lvbiBoaWdocCBmbG9hdDtcXG4gIHVuaWZvcm0gc2FtcGxlcjJEIHVUZXh0dXJlO1xcbiAgdW5pZm9ybSBmbG9hdCB1QnJpZ2h0bmVzcztcXG4gIHZhcnlpbmcgdmVjMiB2VGV4Q29vcmQ7XFxuICB2b2lkIG1haW4oKSB7XFxuICAgIHZlYzQgY29sb3IgPSB0ZXh0dXJlMkQodVRleHR1cmUsIHZUZXhDb29yZCk7XFxuICAgIGNvbG9yLnJnYiArPSB1QnJpZ2h0bmVzcztcXG4gICAgZ2xfRnJhZ0NvbG9yID0gY29sb3I7XFxuICB9XFxuXCJ9YXBwbHlUbzJkKHQpe2xldHtpbWFnZURhdGE6e2RhdGE6ZX19PXQ7Y29uc3Qgcz1NYXRoLnJvdW5kKDI1NSp0aGlzLmJyaWdodG5lc3MpO2ZvcihsZXQgdD0wO3Q8ZS5sZW5ndGg7dCs9NCllW3RdKz1zLGVbdCsxXSs9cyxlW3QrMl0rPXN9aXNOZXV0cmFsU3RhdGUoKXtyZXR1cm4gMD09PXRoaXMuYnJpZ2h0bmVzc31zZW5kVW5pZm9ybURhdGEodCxlKXt0LnVuaWZvcm0xZihlLnVCcmlnaHRuZXNzLHRoaXMuYnJpZ2h0bmVzcyl9fXQoWWEsXCJ0eXBlXCIsXCJCcmlnaHRuZXNzXCIpLHQoWWEsXCJkZWZhdWx0c1wiLHticmlnaHRuZXNzOjB9KSx0KFlhLFwidW5pZm9ybUxvY2F0aW9uc1wiLFtcInVCcmlnaHRuZXNzXCJdKSx0dC5zZXRDbGFzcyhZYSk7Y29uc3QgV2E9e21hdHJpeDpbMSwwLDAsMCwwLDAsMSwwLDAsMCwwLDAsMSwwLDAsMCwwLDAsMSwwXSxjb2xvcnNPbmx5OiEwfTtjbGFzcyBWYSBleHRlbmRzIGphe2dldEZyYWdtZW50U291cmNlKCl7cmV0dXJuXCJcXG4gIHByZWNpc2lvbiBoaWdocCBmbG9hdDtcXG4gIHVuaWZvcm0gc2FtcGxlcjJEIHVUZXh0dXJlO1xcbiAgdmFyeWluZyB2ZWMyIHZUZXhDb29yZDtcXG4gIHVuaWZvcm0gbWF0NCB1Q29sb3JNYXRyaXg7XFxuICB1bmlmb3JtIHZlYzQgdUNvbnN0YW50cztcXG4gIHZvaWQgbWFpbigpIHtcXG4gICAgdmVjNCBjb2xvciA9IHRleHR1cmUyRCh1VGV4dHVyZSwgdlRleENvb3JkKTtcXG4gICAgY29sb3IgKj0gdUNvbG9yTWF0cml4O1xcbiAgICBjb2xvciArPSB1Q29uc3RhbnRzO1xcbiAgICBnbF9GcmFnQ29sb3IgPSBjb2xvcjtcXG4gIH1cIn1hcHBseVRvMmQodCl7Y29uc3QgZT10LmltYWdlRGF0YS5kYXRhLHM9dGhpcy5tYXRyaXgsaT10aGlzLmNvbG9yc09ubHk7Zm9yKGxldCB0PTA7dDxlLmxlbmd0aDt0Kz00KXtjb25zdCByPWVbdF0sbj1lW3QrMV0sbz1lW3QrMl07aWYoZVt0XT1yKnNbMF0rbipzWzFdK28qc1syXSsyNTUqc1s0XSxlW3QrMV09cipzWzVdK24qc1s2XStvKnNbN10rMjU1KnNbOV0sZVt0KzJdPXIqc1sxMF0rbipzWzExXStvKnNbMTJdKzI1NSpzWzE0XSwhaSl7Y29uc3QgaT1lW3QrM107ZVt0XSs9aSpzWzNdLGVbdCsxXSs9aSpzWzhdLGVbdCsyXSs9aSpzWzEzXSxlW3QrM109cipzWzE1XStuKnNbMTZdK28qc1sxN10raSpzWzE4XSsyNTUqc1sxOV19fX1zZW5kVW5pZm9ybURhdGEodCxlKXtjb25zdCBzPXRoaXMubWF0cml4LGk9W3NbMF0sc1sxXSxzWzJdLHNbM10sc1s1XSxzWzZdLHNbN10sc1s4XSxzWzEwXSxzWzExXSxzWzEyXSxzWzEzXSxzWzE1XSxzWzE2XSxzWzE3XSxzWzE4XV0scj1bc1s0XSxzWzldLHNbMTRdLHNbMTldXTt0LnVuaWZvcm1NYXRyaXg0ZnYoZS51Q29sb3JNYXRyaXgsITEsaSksdC51bmlmb3JtNGZ2KGUudUNvbnN0YW50cyxyKX10b09iamVjdCgpe3JldHVybiBzKHMoe30sc3VwZXIudG9PYmplY3QoKSkse30se21hdHJpeDpbLi4udGhpcy5tYXRyaXhdfSl9fWZ1bmN0aW9uIHphKGUscyl7dmFyIGk7Y29uc3Qgcj0odChpPWNsYXNzIGV4dGVuZHMgVmF7dG9PYmplY3QoKXtyZXR1cm57dHlwZTp0aGlzLnR5cGUsY29sb3JzT25seTp0aGlzLmNvbG9yc09ubHl9fX0sXCJ0eXBlXCIsZSksdChpLFwiZGVmYXVsdHNcIix7Y29sb3JzT25seTohMSxtYXRyaXg6c30pLGkpO3JldHVybiB0dC5zZXRDbGFzcyhyLGUpLHJ9dChWYSxcInR5cGVcIixcIkNvbG9yTWF0cml4XCIpLHQoVmEsXCJkZWZhdWx0c1wiLFdhKSx0KFZhLFwidW5pZm9ybUxvY2F0aW9uc1wiLFtcInVDb2xvck1hdHJpeFwiLFwidUNvbnN0YW50c1wiXSksdHQuc2V0Q2xhc3MoVmEpO2NvbnN0IEhhPXphKFwiQnJvd25pZVwiLFsuNTk5NywuMzQ1NTMsLS4yNzA4MiwwLC4xODYsLS4wMzc3LC44NjA5NSwuMTUwNTksMCwtLjE0NDksLjI0MTEzLC0uMDc0NDEsLjQ0OTcyLDAsLS4wMjk2NSwwLDAsMCwxLDBdKSxHYT16YShcIlZpbnRhZ2VcIixbLjYyNzkzLC4zMjAyMSwtLjAzOTY1LDAsLjAzNzg0LC4wMjU3OCwuNjQ0MTEsLjAzMjU5LDAsLjAyOTI2LC4wNDY2LC0uMDg1MTIsLjUyNDE2LDAsLjAyMDIzLDAsMCwwLDEsMF0pLE5hPXphKFwiS29kYWNocm9tZVwiLFsxLjEyODU1LC0uMzk2NzMsLS4wMzk5MiwwLC4yNDk5MSwtLjE2NDA0LDEuMDgzNTIsLS4wNTQ5OCwwLC4wOTY5OCwtLjE2Nzg2LC0uNTYwMzQsMS42MDE0OCwwLC4xMzk3MiwwLDAsMCwxLDBdKSxVYT16YShcIlRlY2huaWNvbG9yXCIsWzEuOTEyNTIsLS44NTQ1MywtLjA5MTU1LDAsLjA0NjI0LC0uMzA4NzgsMS43NjU4OSwtLjEwNjAxLDAsLS4yNzU4OSwtLjIzMTEsLS43NTAxOCwxLjg0NzU5LDAsLjEyMTM3LDAsMCwwLDEsMF0pLHFhPXphKFwiUG9sYXJvaWRcIixbMS40MzgsLS4wNjIsLS4wNjIsMCwwLC0uMTIyLDEuMzc4LC0uMTIyLDAsMCwtLjAxNiwtLjAxNiwxLjQ4MywwLDAsMCwwLDAsMSwwXSksS2E9emEoXCJTZXBpYVwiLFsuMzkzLC43NjksLjE4OSwwLDAsLjM0OSwuNjg2LC4xNjgsMCwwLC4yNzIsLjUzNCwuMTMxLDAsMCwwLDAsMCwxLDBdKSxKYT16YShcIkJsYWNrV2hpdGVcIixbMS41LDEuNSwxLjUsMCwtMSwxLjUsMS41LDEuNSwwLC0xLDEuNSwxLjUsMS41LDAsLTEsMCwwLDAsMSwwXSk7Y2xhc3MgUWEgZXh0ZW5kcyBqYXtjb25zdHJ1Y3Rvcigpe2xldCB0PWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fTtzdXBlcih0KSx0aGlzLnN1YkZpbHRlcnM9dC5zdWJGaWx0ZXJzfHxbXX1hcHBseVRvKHQpe09hKHQpJiYodC5wYXNzZXMrPXRoaXMuc3ViRmlsdGVycy5sZW5ndGgtMSksdGhpcy5zdWJGaWx0ZXJzLmZvckVhY2goKGU9PntlLmFwcGx5VG8odCl9KSl9dG9PYmplY3QoKXtyZXR1cm57dHlwZTp0aGlzLnR5cGUsc3ViRmlsdGVyczp0aGlzLnN1YkZpbHRlcnMubWFwKCh0PT50LnRvT2JqZWN0KCkpKX19aXNOZXV0cmFsU3RhdGUoKXtyZXR1cm4hdGhpcy5zdWJGaWx0ZXJzLnNvbWUoKHQ9PiF0LmlzTmV1dHJhbFN0YXRlKCkpKX1zdGF0aWMgZnJvbU9iamVjdCh0LGUpe3JldHVybiBQcm9taXNlLmFsbCgodC5zdWJGaWx0ZXJzfHxbXSkubWFwKCh0PT50dC5nZXRDbGFzcyh0LnR5cGUpLmZyb21PYmplY3QodCxlKSkpKS50aGVuKCh0PT5uZXcgdGhpcyh7c3ViRmlsdGVyczp0fSkpKX19dChRYSxcInR5cGVcIixcIkNvbXBvc2VkXCIpLHR0LnNldENsYXNzKFFhKTtjbGFzcyBaYSBleHRlbmRzIGphe2dldEZyYWdtZW50U291cmNlKCl7cmV0dXJuXCJcXG4gIHByZWNpc2lvbiBoaWdocCBmbG9hdDtcXG4gIHVuaWZvcm0gc2FtcGxlcjJEIHVUZXh0dXJlO1xcbiAgdW5pZm9ybSBmbG9hdCB1Q29udHJhc3Q7XFxuICB2YXJ5aW5nIHZlYzIgdlRleENvb3JkO1xcbiAgdm9pZCBtYWluKCkge1xcbiAgICB2ZWM0IGNvbG9yID0gdGV4dHVyZTJEKHVUZXh0dXJlLCB2VGV4Q29vcmQpO1xcbiAgICBmbG9hdCBjb250cmFzdEYgPSAxLjAxNSAqICh1Q29udHJhc3QgKyAxLjApIC8gKDEuMCAqICgxLjAxNSAtIHVDb250cmFzdCkpO1xcbiAgICBjb2xvci5yZ2IgPSBjb250cmFzdEYgKiAoY29sb3IucmdiIC0gMC41KSArIDAuNTtcXG4gICAgZ2xfRnJhZ0NvbG9yID0gY29sb3I7XFxuICB9XCJ9aXNOZXV0cmFsU3RhdGUoKXtyZXR1cm4gMD09PXRoaXMuY29udHJhc3R9YXBwbHlUbzJkKHQpe2xldHtpbWFnZURhdGE6e2RhdGE6ZX19PXQ7Y29uc3Qgcz1NYXRoLmZsb29yKDI1NSp0aGlzLmNvbnRyYXN0KSxpPTI1OSoocysyNTUpLygyNTUqKDI1OS1zKSk7Zm9yKGxldCB0PTA7dDxlLmxlbmd0aDt0Kz00KWVbdF09aSooZVt0XS0xMjgpKzEyOCxlW3QrMV09aSooZVt0KzFdLTEyOCkrMTI4LGVbdCsyXT1pKihlW3QrMl0tMTI4KSsxMjh9c2VuZFVuaWZvcm1EYXRhKHQsZSl7dC51bmlmb3JtMWYoZS51Q29udHJhc3QsdGhpcy5jb250cmFzdCl9fXQoWmEsXCJ0eXBlXCIsXCJDb250cmFzdFwiKSx0KFphLFwiZGVmYXVsdHNcIix7Y29udHJhc3Q6MH0pLHQoWmEsXCJ1bmlmb3JtTG9jYXRpb25zXCIsW1widUNvbnRyYXN0XCJdKSx0dC5zZXRDbGFzcyhaYSk7Y29uc3QgJGE9e0NvbnZvbHV0ZV8zXzE6XCJcXG4gICAgcHJlY2lzaW9uIGhpZ2hwIGZsb2F0O1xcbiAgICB1bmlmb3JtIHNhbXBsZXIyRCB1VGV4dHVyZTtcXG4gICAgdW5pZm9ybSBmbG9hdCB1TWF0cml4WzldO1xcbiAgICB1bmlmb3JtIGZsb2F0IHVTdGVwVztcXG4gICAgdW5pZm9ybSBmbG9hdCB1U3RlcEg7XFxuICAgIHZhcnlpbmcgdmVjMiB2VGV4Q29vcmQ7XFxuICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICB2ZWM0IGNvbG9yID0gdmVjNCgwLCAwLCAwLCAwKTtcXG4gICAgICBmb3IgKGZsb2F0IGggPSAwLjA7IGggPCAzLjA7IGgrPTEuMCkge1xcbiAgICAgICAgZm9yIChmbG9hdCB3ID0gMC4wOyB3IDwgMy4wOyB3Kz0xLjApIHtcXG4gICAgICAgICAgdmVjMiBtYXRyaXhQb3MgPSB2ZWMyKHVTdGVwVyAqICh3IC0gMSksIHVTdGVwSCAqIChoIC0gMSkpO1xcbiAgICAgICAgICBjb2xvciArPSB0ZXh0dXJlMkQodVRleHR1cmUsIHZUZXhDb29yZCArIG1hdHJpeFBvcykgKiB1TWF0cml4W2ludChoICogMy4wICsgdyldO1xcbiAgICAgICAgfVxcbiAgICAgIH1cXG4gICAgICBnbF9GcmFnQ29sb3IgPSBjb2xvcjtcXG4gICAgfVxcbiAgICBcIixDb252b2x1dGVfM18wOlwiXFxuICAgIHByZWNpc2lvbiBoaWdocCBmbG9hdDtcXG4gICAgdW5pZm9ybSBzYW1wbGVyMkQgdVRleHR1cmU7XFxuICAgIHVuaWZvcm0gZmxvYXQgdU1hdHJpeFs5XTtcXG4gICAgdW5pZm9ybSBmbG9hdCB1U3RlcFc7XFxuICAgIHVuaWZvcm0gZmxvYXQgdVN0ZXBIO1xcbiAgICB2YXJ5aW5nIHZlYzIgdlRleENvb3JkO1xcbiAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgdmVjNCBjb2xvciA9IHZlYzQoMCwgMCwgMCwgMSk7XFxuICAgICAgZm9yIChmbG9hdCBoID0gMC4wOyBoIDwgMy4wOyBoKz0xLjApIHtcXG4gICAgICAgIGZvciAoZmxvYXQgdyA9IDAuMDsgdyA8IDMuMDsgdys9MS4wKSB7XFxuICAgICAgICAgIHZlYzIgbWF0cml4UG9zID0gdmVjMih1U3RlcFcgKiAodyAtIDEuMCksIHVTdGVwSCAqIChoIC0gMS4wKSk7XFxuICAgICAgICAgIGNvbG9yLnJnYiArPSB0ZXh0dXJlMkQodVRleHR1cmUsIHZUZXhDb29yZCArIG1hdHJpeFBvcykucmdiICogdU1hdHJpeFtpbnQoaCAqIDMuMCArIHcpXTtcXG4gICAgICAgIH1cXG4gICAgICB9XFxuICAgICAgZmxvYXQgYWxwaGEgPSB0ZXh0dXJlMkQodVRleHR1cmUsIHZUZXhDb29yZCkuYTtcXG4gICAgICBnbF9GcmFnQ29sb3IgPSBjb2xvcjtcXG4gICAgICBnbF9GcmFnQ29sb3IuYSA9IGFscGhhO1xcbiAgICB9XFxuICAgIFwiLENvbnZvbHV0ZV81XzE6XCJcXG4gICAgcHJlY2lzaW9uIGhpZ2hwIGZsb2F0O1xcbiAgICB1bmlmb3JtIHNhbXBsZXIyRCB1VGV4dHVyZTtcXG4gICAgdW5pZm9ybSBmbG9hdCB1TWF0cml4WzI1XTtcXG4gICAgdW5pZm9ybSBmbG9hdCB1U3RlcFc7XFxuICAgIHVuaWZvcm0gZmxvYXQgdVN0ZXBIO1xcbiAgICB2YXJ5aW5nIHZlYzIgdlRleENvb3JkO1xcbiAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgdmVjNCBjb2xvciA9IHZlYzQoMCwgMCwgMCwgMCk7XFxuICAgICAgZm9yIChmbG9hdCBoID0gMC4wOyBoIDwgNS4wOyBoKz0xLjApIHtcXG4gICAgICAgIGZvciAoZmxvYXQgdyA9IDAuMDsgdyA8IDUuMDsgdys9MS4wKSB7XFxuICAgICAgICAgIHZlYzIgbWF0cml4UG9zID0gdmVjMih1U3RlcFcgKiAodyAtIDIuMCksIHVTdGVwSCAqIChoIC0gMi4wKSk7XFxuICAgICAgICAgIGNvbG9yICs9IHRleHR1cmUyRCh1VGV4dHVyZSwgdlRleENvb3JkICsgbWF0cml4UG9zKSAqIHVNYXRyaXhbaW50KGggKiA1LjAgKyB3KV07XFxuICAgICAgICB9XFxuICAgICAgfVxcbiAgICAgIGdsX0ZyYWdDb2xvciA9IGNvbG9yO1xcbiAgICB9XFxuICAgIFwiLENvbnZvbHV0ZV81XzA6XCJcXG4gICAgcHJlY2lzaW9uIGhpZ2hwIGZsb2F0O1xcbiAgICB1bmlmb3JtIHNhbXBsZXIyRCB1VGV4dHVyZTtcXG4gICAgdW5pZm9ybSBmbG9hdCB1TWF0cml4WzI1XTtcXG4gICAgdW5pZm9ybSBmbG9hdCB1U3RlcFc7XFxuICAgIHVuaWZvcm0gZmxvYXQgdVN0ZXBIO1xcbiAgICB2YXJ5aW5nIHZlYzIgdlRleENvb3JkO1xcbiAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgdmVjNCBjb2xvciA9IHZlYzQoMCwgMCwgMCwgMSk7XFxuICAgICAgZm9yIChmbG9hdCBoID0gMC4wOyBoIDwgNS4wOyBoKz0xLjApIHtcXG4gICAgICAgIGZvciAoZmxvYXQgdyA9IDAuMDsgdyA8IDUuMDsgdys9MS4wKSB7XFxuICAgICAgICAgIHZlYzIgbWF0cml4UG9zID0gdmVjMih1U3RlcFcgKiAodyAtIDIuMCksIHVTdGVwSCAqIChoIC0gMi4wKSk7XFxuICAgICAgICAgIGNvbG9yLnJnYiArPSB0ZXh0dXJlMkQodVRleHR1cmUsIHZUZXhDb29yZCArIG1hdHJpeFBvcykucmdiICogdU1hdHJpeFtpbnQoaCAqIDUuMCArIHcpXTtcXG4gICAgICAgIH1cXG4gICAgICB9XFxuICAgICAgZmxvYXQgYWxwaGEgPSB0ZXh0dXJlMkQodVRleHR1cmUsIHZUZXhDb29yZCkuYTtcXG4gICAgICBnbF9GcmFnQ29sb3IgPSBjb2xvcjtcXG4gICAgICBnbF9GcmFnQ29sb3IuYSA9IGFscGhhO1xcbiAgICB9XFxuICAgIFwiLENvbnZvbHV0ZV83XzE6XCJcXG4gICAgcHJlY2lzaW9uIGhpZ2hwIGZsb2F0O1xcbiAgICB1bmlmb3JtIHNhbXBsZXIyRCB1VGV4dHVyZTtcXG4gICAgdW5pZm9ybSBmbG9hdCB1TWF0cml4WzQ5XTtcXG4gICAgdW5pZm9ybSBmbG9hdCB1U3RlcFc7XFxuICAgIHVuaWZvcm0gZmxvYXQgdVN0ZXBIO1xcbiAgICB2YXJ5aW5nIHZlYzIgdlRleENvb3JkO1xcbiAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgdmVjNCBjb2xvciA9IHZlYzQoMCwgMCwgMCwgMCk7XFxuICAgICAgZm9yIChmbG9hdCBoID0gMC4wOyBoIDwgNy4wOyBoKz0xLjApIHtcXG4gICAgICAgIGZvciAoZmxvYXQgdyA9IDAuMDsgdyA8IDcuMDsgdys9MS4wKSB7XFxuICAgICAgICAgIHZlYzIgbWF0cml4UG9zID0gdmVjMih1U3RlcFcgKiAodyAtIDMuMCksIHVTdGVwSCAqIChoIC0gMy4wKSk7XFxuICAgICAgICAgIGNvbG9yICs9IHRleHR1cmUyRCh1VGV4dHVyZSwgdlRleENvb3JkICsgbWF0cml4UG9zKSAqIHVNYXRyaXhbaW50KGggKiA3LjAgKyB3KV07XFxuICAgICAgICB9XFxuICAgICAgfVxcbiAgICAgIGdsX0ZyYWdDb2xvciA9IGNvbG9yO1xcbiAgICB9XFxuICAgIFwiLENvbnZvbHV0ZV83XzA6XCJcXG4gICAgcHJlY2lzaW9uIGhpZ2hwIGZsb2F0O1xcbiAgICB1bmlmb3JtIHNhbXBsZXIyRCB1VGV4dHVyZTtcXG4gICAgdW5pZm9ybSBmbG9hdCB1TWF0cml4WzQ5XTtcXG4gICAgdW5pZm9ybSBmbG9hdCB1U3RlcFc7XFxuICAgIHVuaWZvcm0gZmxvYXQgdVN0ZXBIO1xcbiAgICB2YXJ5aW5nIHZlYzIgdlRleENvb3JkO1xcbiAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgdmVjNCBjb2xvciA9IHZlYzQoMCwgMCwgMCwgMSk7XFxuICAgICAgZm9yIChmbG9hdCBoID0gMC4wOyBoIDwgNy4wOyBoKz0xLjApIHtcXG4gICAgICAgIGZvciAoZmxvYXQgdyA9IDAuMDsgdyA8IDcuMDsgdys9MS4wKSB7XFxuICAgICAgICAgIHZlYzIgbWF0cml4UG9zID0gdmVjMih1U3RlcFcgKiAodyAtIDMuMCksIHVTdGVwSCAqIChoIC0gMy4wKSk7XFxuICAgICAgICAgIGNvbG9yLnJnYiArPSB0ZXh0dXJlMkQodVRleHR1cmUsIHZUZXhDb29yZCArIG1hdHJpeFBvcykucmdiICogdU1hdHJpeFtpbnQoaCAqIDcuMCArIHcpXTtcXG4gICAgICAgIH1cXG4gICAgICB9XFxuICAgICAgZmxvYXQgYWxwaGEgPSB0ZXh0dXJlMkQodVRleHR1cmUsIHZUZXhDb29yZCkuYTtcXG4gICAgICBnbF9GcmFnQ29sb3IgPSBjb2xvcjtcXG4gICAgICBnbF9GcmFnQ29sb3IuYSA9IGFscGhhO1xcbiAgICB9XFxuICAgIFwiLENvbnZvbHV0ZV85XzE6XCJcXG4gICAgcHJlY2lzaW9uIGhpZ2hwIGZsb2F0O1xcbiAgICB1bmlmb3JtIHNhbXBsZXIyRCB1VGV4dHVyZTtcXG4gICAgdW5pZm9ybSBmbG9hdCB1TWF0cml4WzgxXTtcXG4gICAgdW5pZm9ybSBmbG9hdCB1U3RlcFc7XFxuICAgIHVuaWZvcm0gZmxvYXQgdVN0ZXBIO1xcbiAgICB2YXJ5aW5nIHZlYzIgdlRleENvb3JkO1xcbiAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgdmVjNCBjb2xvciA9IHZlYzQoMCwgMCwgMCwgMCk7XFxuICAgICAgZm9yIChmbG9hdCBoID0gMC4wOyBoIDwgOS4wOyBoKz0xLjApIHtcXG4gICAgICAgIGZvciAoZmxvYXQgdyA9IDAuMDsgdyA8IDkuMDsgdys9MS4wKSB7XFxuICAgICAgICAgIHZlYzIgbWF0cml4UG9zID0gdmVjMih1U3RlcFcgKiAodyAtIDQuMCksIHVTdGVwSCAqIChoIC0gNC4wKSk7XFxuICAgICAgICAgIGNvbG9yICs9IHRleHR1cmUyRCh1VGV4dHVyZSwgdlRleENvb3JkICsgbWF0cml4UG9zKSAqIHVNYXRyaXhbaW50KGggKiA5LjAgKyB3KV07XFxuICAgICAgICB9XFxuICAgICAgfVxcbiAgICAgIGdsX0ZyYWdDb2xvciA9IGNvbG9yO1xcbiAgICB9XFxuICAgIFwiLENvbnZvbHV0ZV85XzA6XCJcXG4gICAgcHJlY2lzaW9uIGhpZ2hwIGZsb2F0O1xcbiAgICB1bmlmb3JtIHNhbXBsZXIyRCB1VGV4dHVyZTtcXG4gICAgdW5pZm9ybSBmbG9hdCB1TWF0cml4WzgxXTtcXG4gICAgdW5pZm9ybSBmbG9hdCB1U3RlcFc7XFxuICAgIHVuaWZvcm0gZmxvYXQgdVN0ZXBIO1xcbiAgICB2YXJ5aW5nIHZlYzIgdlRleENvb3JkO1xcbiAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgdmVjNCBjb2xvciA9IHZlYzQoMCwgMCwgMCwgMSk7XFxuICAgICAgZm9yIChmbG9hdCBoID0gMC4wOyBoIDwgOS4wOyBoKz0xLjApIHtcXG4gICAgICAgIGZvciAoZmxvYXQgdyA9IDAuMDsgdyA8IDkuMDsgdys9MS4wKSB7XFxuICAgICAgICAgIHZlYzIgbWF0cml4UG9zID0gdmVjMih1U3RlcFcgKiAodyAtIDQuMCksIHVTdGVwSCAqIChoIC0gNC4wKSk7XFxuICAgICAgICAgIGNvbG9yLnJnYiArPSB0ZXh0dXJlMkQodVRleHR1cmUsIHZUZXhDb29yZCArIG1hdHJpeFBvcykucmdiICogdU1hdHJpeFtpbnQoaCAqIDkuMCArIHcpXTtcXG4gICAgICAgIH1cXG4gICAgICB9XFxuICAgICAgZmxvYXQgYWxwaGEgPSB0ZXh0dXJlMkQodVRleHR1cmUsIHZUZXhDb29yZCkuYTtcXG4gICAgICBnbF9GcmFnQ29sb3IgPSBjb2xvcjtcXG4gICAgICBnbF9GcmFnQ29sb3IuYSA9IGFscGhhO1xcbiAgICB9XFxuICAgIFwifTtjbGFzcyB0aCBleHRlbmRzIGphe2dldENhY2hlS2V5KCl7cmV0dXJuXCJcIi5jb25jYXQodGhpcy50eXBlLFwiX1wiKS5jb25jYXQoTWF0aC5zcXJ0KHRoaXMubWF0cml4Lmxlbmd0aCksXCJfXCIpLmNvbmNhdCh0aGlzLm9wYXF1ZT8xOjApfWdldEZyYWdtZW50U291cmNlKCl7cmV0dXJuICRhW3RoaXMuZ2V0Q2FjaGVLZXkoKV19YXBwbHlUbzJkKHQpe2NvbnN0IGU9dC5pbWFnZURhdGEscz1lLmRhdGEsaT10aGlzLm1hdHJpeCxyPU1hdGgucm91bmQoTWF0aC5zcXJ0KGkubGVuZ3RoKSksbj1NYXRoLmZsb29yKHIvMiksbz1lLndpZHRoLGE9ZS5oZWlnaHQsaD10LmN0eC5jcmVhdGVJbWFnZURhdGEobyxhKSxjPWguZGF0YSxsPXRoaXMub3BhcXVlPzE6MDtsZXQgdSxkLGcsZixwLG0sdix5LF8seCxDLGIsdztmb3IoQz0wO0M8YTtDKyspZm9yKHg9MDt4PG87eCsrKXtmb3IocD00KihDKm8reCksdT0wLGQ9MCxnPTAsZj0wLHc9MDt3PHI7dysrKWZvcihiPTA7YjxyO2IrKyl2PUMrdy1uLG09eCtiLW4sdjwwfHx2Pj1hfHxtPDB8fG0+PW98fCh5PTQqKHYqbyttKSxfPWlbdypyK2JdLHUrPXNbeV0qXyxkKz1zW3krMV0qXyxnKz1zW3krMl0qXyxsfHwoZis9c1t5KzNdKl8pKTtjW3BdPXUsY1twKzFdPWQsY1twKzJdPWcsY1twKzNdPWw/c1twKzNdOmZ9dC5pbWFnZURhdGE9aH1zZW5kVW5pZm9ybURhdGEodCxlKXt0LnVuaWZvcm0xZnYoZS51TWF0cml4LHRoaXMubWF0cml4KX10b09iamVjdCgpe3JldHVybiBzKHMoe30sc3VwZXIudG9PYmplY3QoKSkse30se29wYXF1ZTp0aGlzLm9wYXF1ZSxtYXRyaXg6Wy4uLnRoaXMubWF0cml4XX0pfX10KHRoLFwidHlwZVwiLFwiQ29udm9sdXRlXCIpLHQodGgsXCJkZWZhdWx0c1wiLHtvcGFxdWU6ITEsbWF0cml4OlswLDAsMCwwLDEsMCwwLDAsMF19KSx0KHRoLFwidW5pZm9ybUxvY2F0aW9uc1wiLFtcInVNYXRyaXhcIixcInVPcGFxdWVcIixcInVIYWxmU2l6ZVwiLFwidVNpemVcIl0pLHR0LnNldENsYXNzKHRoKTtjb25zdCBlaD1cIkdhbW1hXCI7Y2xhc3Mgc2ggZXh0ZW5kcyBqYXtnZXRGcmFnbWVudFNvdXJjZSgpe3JldHVyblwiXFxuICBwcmVjaXNpb24gaGlnaHAgZmxvYXQ7XFxuICB1bmlmb3JtIHNhbXBsZXIyRCB1VGV4dHVyZTtcXG4gIHVuaWZvcm0gdmVjMyB1R2FtbWE7XFxuICB2YXJ5aW5nIHZlYzIgdlRleENvb3JkO1xcbiAgdm9pZCBtYWluKCkge1xcbiAgICB2ZWM0IGNvbG9yID0gdGV4dHVyZTJEKHVUZXh0dXJlLCB2VGV4Q29vcmQpO1xcbiAgICB2ZWMzIGNvcnJlY3Rpb24gPSAoMS4wIC8gdUdhbW1hKTtcXG4gICAgY29sb3IuciA9IHBvdyhjb2xvci5yLCBjb3JyZWN0aW9uLnIpO1xcbiAgICBjb2xvci5nID0gcG93KGNvbG9yLmcsIGNvcnJlY3Rpb24uZyk7XFxuICAgIGNvbG9yLmIgPSBwb3coY29sb3IuYiwgY29ycmVjdGlvbi5iKTtcXG4gICAgZ2xfRnJhZ0NvbG9yID0gY29sb3I7XFxuICAgIGdsX0ZyYWdDb2xvci5yZ2IgKj0gY29sb3IuYTtcXG4gIH1cXG5cIn1jb25zdHJ1Y3Rvcigpe2xldCB0PWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fTtzdXBlcih0KSx0aGlzLmdhbW1hPXQuZ2FtbWF8fHRoaXMuY29uc3RydWN0b3IuZGVmYXVsdHMuZ2FtbWEuY29uY2F0KCl9YXBwbHlUbzJkKHQpe2xldHtpbWFnZURhdGE6e2RhdGE6ZX19PXQ7Y29uc3Qgcz10aGlzLmdhbW1hLGk9MS9zWzBdLHI9MS9zWzFdLG49MS9zWzJdO3RoaXMucmdiVmFsdWVzfHwodGhpcy5yZ2JWYWx1ZXM9e3I6bmV3IFVpbnQ4QXJyYXkoMjU2KSxnOm5ldyBVaW50OEFycmF5KDI1NiksYjpuZXcgVWludDhBcnJheSgyNTYpfSk7Y29uc3Qgbz10aGlzLnJnYlZhbHVlcztmb3IobGV0IHQ9MDt0PDI1Njt0Kyspby5yW3RdPTI1NSpNYXRoLnBvdyh0LzI1NSxpKSxvLmdbdF09MjU1Kk1hdGgucG93KHQvMjU1LHIpLG8uYlt0XT0yNTUqTWF0aC5wb3codC8yNTUsbik7Zm9yKGxldCB0PTA7dDxlLmxlbmd0aDt0Kz00KWVbdF09by5yW2VbdF1dLGVbdCsxXT1vLmdbZVt0KzFdXSxlW3QrMl09by5iW2VbdCsyXV19c2VuZFVuaWZvcm1EYXRhKHQsZSl7dC51bmlmb3JtM2Z2KGUudUdhbW1hLHRoaXMuZ2FtbWEpfWlzTmV1dHJhbFN0YXRlKCl7Y29uc3R7Z2FtbWE6dH09dGhpcztyZXR1cm4gMT09PXRbMF0mJjE9PT10WzFdJiYxPT09dFsyXX10b09iamVjdCgpe3JldHVybnt0eXBlOmVoLGdhbW1hOnRoaXMuZ2FtbWEuY29uY2F0KCl9fX10KHNoLFwidHlwZVwiLGVoKSx0KHNoLFwiZGVmYXVsdHNcIix7Z2FtbWE6WzEsMSwxXX0pLHQoc2gsXCJ1bmlmb3JtTG9jYXRpb25zXCIsW1widUdhbW1hXCJdKSx0dC5zZXRDbGFzcyhzaCk7Y29uc3QgaWg9e2F2ZXJhZ2U6XCJcXG4gICAgcHJlY2lzaW9uIGhpZ2hwIGZsb2F0O1xcbiAgICB1bmlmb3JtIHNhbXBsZXIyRCB1VGV4dHVyZTtcXG4gICAgdmFyeWluZyB2ZWMyIHZUZXhDb29yZDtcXG4gICAgdm9pZCBtYWluKCkge1xcbiAgICAgIHZlYzQgY29sb3IgPSB0ZXh0dXJlMkQodVRleHR1cmUsIHZUZXhDb29yZCk7XFxuICAgICAgZmxvYXQgYXZlcmFnZSA9IChjb2xvci5yICsgY29sb3IuYiArIGNvbG9yLmcpIC8gMy4wO1xcbiAgICAgIGdsX0ZyYWdDb2xvciA9IHZlYzQoYXZlcmFnZSwgYXZlcmFnZSwgYXZlcmFnZSwgY29sb3IuYSk7XFxuICAgIH1cXG4gICAgXCIsbGlnaHRuZXNzOlwiXFxuICAgIHByZWNpc2lvbiBoaWdocCBmbG9hdDtcXG4gICAgdW5pZm9ybSBzYW1wbGVyMkQgdVRleHR1cmU7XFxuICAgIHVuaWZvcm0gaW50IHVNb2RlO1xcbiAgICB2YXJ5aW5nIHZlYzIgdlRleENvb3JkO1xcbiAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgdmVjNCBjb2wgPSB0ZXh0dXJlMkQodVRleHR1cmUsIHZUZXhDb29yZCk7XFxuICAgICAgZmxvYXQgYXZlcmFnZSA9IChtYXgobWF4KGNvbC5yLCBjb2wuZyksY29sLmIpICsgbWluKG1pbihjb2wuciwgY29sLmcpLGNvbC5iKSkgLyAyLjA7XFxuICAgICAgZ2xfRnJhZ0NvbG9yID0gdmVjNChhdmVyYWdlLCBhdmVyYWdlLCBhdmVyYWdlLCBjb2wuYSk7XFxuICAgIH1cXG4gICAgXCIsbHVtaW5vc2l0eTpcIlxcbiAgICBwcmVjaXNpb24gaGlnaHAgZmxvYXQ7XFxuICAgIHVuaWZvcm0gc2FtcGxlcjJEIHVUZXh0dXJlO1xcbiAgICB1bmlmb3JtIGludCB1TW9kZTtcXG4gICAgdmFyeWluZyB2ZWMyIHZUZXhDb29yZDtcXG4gICAgdm9pZCBtYWluKCkge1xcbiAgICAgIHZlYzQgY29sID0gdGV4dHVyZTJEKHVUZXh0dXJlLCB2VGV4Q29vcmQpO1xcbiAgICAgIGZsb2F0IGF2ZXJhZ2UgPSAwLjIxICogY29sLnIgKyAwLjcyICogY29sLmcgKyAwLjA3ICogY29sLmI7XFxuICAgICAgZ2xfRnJhZ0NvbG9yID0gdmVjNChhdmVyYWdlLCBhdmVyYWdlLCBhdmVyYWdlLCBjb2wuYSk7XFxuICAgIH1cXG4gICAgXCJ9O2NsYXNzIHJoIGV4dGVuZHMgamF7YXBwbHlUbzJkKHQpe2xldHtpbWFnZURhdGE6e2RhdGE6ZX19PXQ7Zm9yKGxldCB0LHM9MDtzPGUubGVuZ3RoO3MrPTQpe2NvbnN0IGk9ZVtzXSxyPWVbcysxXSxuPWVbcysyXTtzd2l0Y2godGhpcy5tb2RlKXtjYXNlXCJhdmVyYWdlXCI6dD0oaStyK24pLzM7YnJlYWs7Y2FzZVwibGlnaHRuZXNzXCI6dD0oTWF0aC5taW4oaSxyLG4pK01hdGgubWF4KGkscixuKSkvMjticmVhaztjYXNlXCJsdW1pbm9zaXR5XCI6dD0uMjEqaSsuNzIqcisuMDcqbn1lW3MrMl09ZVtzKzFdPWVbc109dH19Z2V0Q2FjaGVLZXkoKXtyZXR1cm5cIlwiLmNvbmNhdCh0aGlzLnR5cGUsXCJfXCIpLmNvbmNhdCh0aGlzLm1vZGUpfWdldEZyYWdtZW50U291cmNlKCl7cmV0dXJuIGloW3RoaXMubW9kZV19c2VuZFVuaWZvcm1EYXRhKHQsZSl7dC51bmlmb3JtMWkoZS51TW9kZSwxKX1pc05ldXRyYWxTdGF0ZSgpe3JldHVybiExfX10KHJoLFwidHlwZVwiLFwiR3JheXNjYWxlXCIpLHQocmgsXCJkZWZhdWx0c1wiLHttb2RlOlwiYXZlcmFnZVwifSksdChyaCxcInVuaWZvcm1Mb2NhdGlvbnNcIixbXCJ1TW9kZVwiXSksdHQuc2V0Q2xhc3MocmgpO2NvbnN0IG5oPXMocyh7fSxXYSkse30se3JvdGF0aW9uOjB9KTtjbGFzcyBvaCBleHRlbmRzIFZhe2NhbGN1bGF0ZU1hdHJpeCgpe2NvbnN0IHQ9dGhpcy5yb3RhdGlvbipNYXRoLlBJLGU9cnQodCkscz1udCh0KSxpPTEvMyxyPU1hdGguc3FydChpKSpzLG49MS1lO3RoaXMubWF0cml4PVtlK24vMyxpKm4tcixpKm4rciwwLDAsaSpuK3IsZStpKm4saSpuLXIsMCwwLGkqbi1yLGkqbityLGUraSpuLDAsMCwwLDAsMCwxLDBdfWlzTmV1dHJhbFN0YXRlKCl7cmV0dXJuIDA9PT10aGlzLnJvdGF0aW9ufWFwcGx5VG8odCl7dGhpcy5jYWxjdWxhdGVNYXRyaXgoKSxzdXBlci5hcHBseVRvKHQpfXRvT2JqZWN0KCl7cmV0dXJue3R5cGU6dGhpcy50eXBlLHJvdGF0aW9uOnRoaXMucm90YXRpb259fX10KG9oLFwidHlwZVwiLFwiSHVlUm90YXRpb25cIiksdChvaCxcImRlZmF1bHRzXCIsbmgpLHR0LnNldENsYXNzKG9oKTtjbGFzcyBhaCBleHRlbmRzIGphe2FwcGx5VG8yZCh0KXtsZXR7aW1hZ2VEYXRhOntkYXRhOmV9fT10O2ZvcihsZXQgdD0wO3Q8ZS5sZW5ndGg7dCs9NCllW3RdPTI1NS1lW3RdLGVbdCsxXT0yNTUtZVt0KzFdLGVbdCsyXT0yNTUtZVt0KzJdLHRoaXMuYWxwaGEmJihlW3QrM109MjU1LWVbdCszXSl9Z2V0RnJhZ21lbnRTb3VyY2UoKXtyZXR1cm5cIlxcbiAgcHJlY2lzaW9uIGhpZ2hwIGZsb2F0O1xcbiAgdW5pZm9ybSBzYW1wbGVyMkQgdVRleHR1cmU7XFxuICB1bmlmb3JtIGludCB1SW52ZXJ0O1xcbiAgdW5pZm9ybSBpbnQgdUFscGhhO1xcbiAgdmFyeWluZyB2ZWMyIHZUZXhDb29yZDtcXG4gIHZvaWQgbWFpbigpIHtcXG4gICAgdmVjNCBjb2xvciA9IHRleHR1cmUyRCh1VGV4dHVyZSwgdlRleENvb3JkKTtcXG4gICAgaWYgKHVJbnZlcnQgPT0gMSkge1xcbiAgICAgIGlmICh1QWxwaGEgPT0gMSkge1xcbiAgICAgICAgZ2xfRnJhZ0NvbG9yID0gdmVjNCgxLjAgLSBjb2xvci5yLDEuMCAtY29sb3IuZywxLjAgLWNvbG9yLmIsMS4wIC1jb2xvci5hKTtcXG4gICAgICB9IGVsc2Uge1xcbiAgICAgICAgZ2xfRnJhZ0NvbG9yID0gdmVjNCgxLjAgLSBjb2xvci5yLDEuMCAtY29sb3IuZywxLjAgLWNvbG9yLmIsY29sb3IuYSk7XFxuICAgICAgfVxcbiAgICB9IGVsc2Uge1xcbiAgICAgIGdsX0ZyYWdDb2xvciA9IGNvbG9yO1xcbiAgICB9XFxuICB9XFxuXCJ9aXNOZXV0cmFsU3RhdGUoKXtyZXR1cm4hdGhpcy5pbnZlcnR9c2VuZFVuaWZvcm1EYXRhKHQsZSl7dC51bmlmb3JtMWkoZS51SW52ZXJ0LE51bWJlcih0aGlzLmludmVydCkpLHQudW5pZm9ybTFpKGUudUFscGhhLE51bWJlcih0aGlzLmFscGhhKSl9fXQoYWgsXCJ0eXBlXCIsXCJJbnZlcnRcIiksdChhaCxcImRlZmF1bHRzXCIse2FscGhhOiExLGludmVydDohMH0pLHQoYWgsXCJ1bmlmb3JtTG9jYXRpb25zXCIsW1widUludmVydFwiLFwidUFscGhhXCJdKSx0dC5zZXRDbGFzcyhhaCk7Y2xhc3MgaGggZXh0ZW5kcyBqYXtnZXRGcmFnbWVudFNvdXJjZSgpe3JldHVyblwiXFxuICBwcmVjaXNpb24gaGlnaHAgZmxvYXQ7XFxuICB1bmlmb3JtIHNhbXBsZXIyRCB1VGV4dHVyZTtcXG4gIHVuaWZvcm0gZmxvYXQgdVN0ZXBIO1xcbiAgdW5pZm9ybSBmbG9hdCB1Tm9pc2U7XFxuICB1bmlmb3JtIGZsb2F0IHVTZWVkO1xcbiAgdmFyeWluZyB2ZWMyIHZUZXhDb29yZDtcXG4gIGZsb2F0IHJhbmQodmVjMiBjbywgZmxvYXQgc2VlZCwgZmxvYXQgdlNjYWxlKSB7XFxuICAgIHJldHVybiBmcmFjdChzaW4oZG90KGNvLnh5ICogdlNjYWxlICx2ZWMyKDEyLjk4OTggLCA3OC4yMzMpKSkgKiA0Mzc1OC41NDUzICogKHNlZWQgKyAwLjAxKSAvIDIuMCk7XFxuICB9XFxuICB2b2lkIG1haW4oKSB7XFxuICAgIHZlYzQgY29sb3IgPSB0ZXh0dXJlMkQodVRleHR1cmUsIHZUZXhDb29yZCk7XFxuICAgIGNvbG9yLnJnYiArPSAoMC41IC0gcmFuZCh2VGV4Q29vcmQsIHVTZWVkLCAwLjEgLyB1U3RlcEgpKSAqIHVOb2lzZTtcXG4gICAgZ2xfRnJhZ0NvbG9yID0gY29sb3I7XFxuICB9XFxuXCJ9YXBwbHlUbzJkKHQpe2xldHtpbWFnZURhdGE6e2RhdGE6ZX19PXQ7Y29uc3Qgcz10aGlzLm5vaXNlO2ZvcihsZXQgdD0wO3Q8ZS5sZW5ndGg7dCs9NCl7Y29uc3QgaT0oLjUtTWF0aC5yYW5kb20oKSkqcztlW3RdKz1pLGVbdCsxXSs9aSxlW3QrMl0rPWl9fXNlbmRVbmlmb3JtRGF0YSh0LGUpe3QudW5pZm9ybTFmKGUudU5vaXNlLHRoaXMubm9pc2UvMjU1KSx0LnVuaWZvcm0xZihlLnVTZWVkLE1hdGgucmFuZG9tKCkpfWlzTmV1dHJhbFN0YXRlKCl7cmV0dXJuIDA9PT10aGlzLm5vaXNlfX10KGhoLFwidHlwZVwiLFwiTm9pc2VcIiksdChoaCxcImRlZmF1bHRzXCIse25vaXNlOjB9KSx0KGhoLFwidW5pZm9ybUxvY2F0aW9uc1wiLFtcInVOb2lzZVwiLFwidVNlZWRcIl0pLHR0LnNldENsYXNzKGhoKTtjbGFzcyBjaCBleHRlbmRzIGphe2FwcGx5VG8yZCh0KXtsZXR7aW1hZ2VEYXRhOntkYXRhOmUsd2lkdGg6cyxoZWlnaHQ6aX19PXQ7Zm9yKGxldCB0PTA7dDxpO3QrPXRoaXMuYmxvY2tzaXplKWZvcihsZXQgcj0wO3I8cztyKz10aGlzLmJsb2Nrc2l6ZSl7Y29uc3Qgbj00KnQqcys0KnIsbz1lW25dLGE9ZVtuKzFdLGg9ZVtuKzJdLGM9ZVtuKzNdO2ZvcihsZXQgbj10O248TWF0aC5taW4odCt0aGlzLmJsb2Nrc2l6ZSxpKTtuKyspZm9yKGxldCB0PXI7dDxNYXRoLm1pbihyK3RoaXMuYmxvY2tzaXplLHMpO3QrKyl7Y29uc3QgaT00Km4qcys0KnQ7ZVtpXT1vLGVbaSsxXT1hLGVbaSsyXT1oLGVbaSszXT1jfX19aXNOZXV0cmFsU3RhdGUoKXtyZXR1cm4gMT09PXRoaXMuYmxvY2tzaXplfWdldEZyYWdtZW50U291cmNlKCl7cmV0dXJuXCJcXG4gIHByZWNpc2lvbiBoaWdocCBmbG9hdDtcXG4gIHVuaWZvcm0gc2FtcGxlcjJEIHVUZXh0dXJlO1xcbiAgdW5pZm9ybSBmbG9hdCB1QmxvY2tzaXplO1xcbiAgdW5pZm9ybSBmbG9hdCB1U3RlcFc7XFxuICB1bmlmb3JtIGZsb2F0IHVTdGVwSDtcXG4gIHZhcnlpbmcgdmVjMiB2VGV4Q29vcmQ7XFxuICB2b2lkIG1haW4oKSB7XFxuICAgIGZsb2F0IGJsb2NrVyA9IHVCbG9ja3NpemUgKiB1U3RlcFc7XFxuICAgIGZsb2F0IGJsb2NrSCA9IHVCbG9ja3NpemUgKiB1U3RlcEg7XFxuICAgIGludCBwb3NYID0gaW50KHZUZXhDb29yZC54IC8gYmxvY2tXKTtcXG4gICAgaW50IHBvc1kgPSBpbnQodlRleENvb3JkLnkgLyBibG9ja0gpO1xcbiAgICBmbG9hdCBmcG9zWCA9IGZsb2F0KHBvc1gpO1xcbiAgICBmbG9hdCBmcG9zWSA9IGZsb2F0KHBvc1kpO1xcbiAgICB2ZWMyIHNxdWFyZUNvb3JkcyA9IHZlYzIoZnBvc1ggKiBibG9ja1csIGZwb3NZICogYmxvY2tIKTtcXG4gICAgdmVjNCBjb2xvciA9IHRleHR1cmUyRCh1VGV4dHVyZSwgc3F1YXJlQ29vcmRzKTtcXG4gICAgZ2xfRnJhZ0NvbG9yID0gY29sb3I7XFxuICB9XFxuXCJ9c2VuZFVuaWZvcm1EYXRhKHQsZSl7dC51bmlmb3JtMWYoZS51QmxvY2tzaXplLHRoaXMuYmxvY2tzaXplKX19dChjaCxcInR5cGVcIixcIlBpeGVsYXRlXCIpLHQoY2gsXCJkZWZhdWx0c1wiLHtibG9ja3NpemU6NH0pLHQoY2gsXCJ1bmlmb3JtTG9jYXRpb25zXCIsW1widUJsb2Nrc2l6ZVwiXSksdHQuc2V0Q2xhc3MoY2gpO2NsYXNzIGxoIGV4dGVuZHMgamF7Z2V0RnJhZ21lbnRTb3VyY2UoKXtyZXR1cm5cIlxcbnByZWNpc2lvbiBoaWdocCBmbG9hdDtcXG51bmlmb3JtIHNhbXBsZXIyRCB1VGV4dHVyZTtcXG51bmlmb3JtIHZlYzQgdUxvdztcXG51bmlmb3JtIHZlYzQgdUhpZ2g7XFxudmFyeWluZyB2ZWMyIHZUZXhDb29yZDtcXG52b2lkIG1haW4oKSB7XFxuICBnbF9GcmFnQ29sb3IgPSB0ZXh0dXJlMkQodVRleHR1cmUsIHZUZXhDb29yZCk7XFxuICBpZihhbGwoZ3JlYXRlclRoYW4oZ2xfRnJhZ0NvbG9yLnJnYix1TG93LnJnYikpICYmIGFsbChncmVhdGVyVGhhbih1SGlnaC5yZ2IsZ2xfRnJhZ0NvbG9yLnJnYikpKSB7XFxuICAgIGdsX0ZyYWdDb2xvci5hID0gMC4wO1xcbiAgfVxcbn1cXG5cIn1hcHBseVRvMmQodCl7bGV0e2ltYWdlRGF0YTp7ZGF0YTplfX09dDtjb25zdCBzPTI1NSp0aGlzLmRpc3RhbmNlLGk9bmV3IFV0KHRoaXMuY29sb3IpLmdldFNvdXJjZSgpLHI9W2lbMF0tcyxpWzFdLXMsaVsyXS1zXSxuPVtpWzBdK3MsaVsxXStzLGlbMl0rc107Zm9yKGxldCB0PTA7dDxlLmxlbmd0aDt0Kz00KXtjb25zdCBzPWVbdF0saT1lW3QrMV0sbz1lW3QrMl07cz5yWzBdJiZpPnJbMV0mJm8+clsyXSYmczxuWzBdJiZpPG5bMV0mJm88blsyXSYmKGVbdCszXT0wKX19c2VuZFVuaWZvcm1EYXRhKHQsZSl7Y29uc3Qgcz1uZXcgVXQodGhpcy5jb2xvcikuZ2V0U291cmNlKCksaT10aGlzLmRpc3RhbmNlLHI9WzArc1swXS8yNTUtaSwwK3NbMV0vMjU1LWksMCtzWzJdLzI1NS1pLDFdLG49W3NbMF0vMjU1K2ksc1sxXS8yNTUraSxzWzJdLzI1NStpLDFdO3QudW5pZm9ybTRmdihlLnVMb3csciksdC51bmlmb3JtNGZ2KGUudUhpZ2gsbil9fXQobGgsXCJ0eXBlXCIsXCJSZW1vdmVDb2xvclwiKSx0KGxoLFwiZGVmYXVsdHNcIix7Y29sb3I6XCIjRkZGRkZGXCIsZGlzdGFuY2U6LjAyLHVzZUFscGhhOiExfSksdChsaCxcInVuaWZvcm1Mb2NhdGlvbnNcIixbXCJ1TG93XCIsXCJ1SGlnaFwiXSksdHQuc2V0Q2xhc3MobGgpO2NsYXNzIHVoIGV4dGVuZHMgamF7c2VuZFVuaWZvcm1EYXRhKHQsZSl7dC51bmlmb3JtMmZ2KGUudURlbHRhLHRoaXMuaG9yaXpvbnRhbD9bMS90aGlzLndpZHRoLDBdOlswLDEvdGhpcy5oZWlnaHRdKSx0LnVuaWZvcm0xZnYoZS51VGFwcyx0aGlzLnRhcHMpfWdldEZpbHRlcldpbmRvdygpe2NvbnN0IHQ9dGhpcy50ZW1wU2NhbGU7cmV0dXJuIE1hdGguY2VpbCh0aGlzLmxhbmN6b3NMb2Jlcy90KX1nZXRDYWNoZUtleSgpe2NvbnN0IHQ9dGhpcy5nZXRGaWx0ZXJXaW5kb3coKTtyZXR1cm5cIlwiLmNvbmNhdCh0aGlzLnR5cGUsXCJfXCIpLmNvbmNhdCh0KX1nZXRGcmFnbWVudFNvdXJjZSgpe2NvbnN0IHQ9dGhpcy5nZXRGaWx0ZXJXaW5kb3coKTtyZXR1cm4gdGhpcy5nZW5lcmF0ZVNoYWRlcih0KX1nZXRUYXBzKCl7Y29uc3QgdD10aGlzLmxhbmN6b3NDcmVhdGUodGhpcy5sYW5jem9zTG9iZXMpLGU9dGhpcy50ZW1wU2NhbGUscz10aGlzLmdldEZpbHRlcldpbmRvdygpLGk9bmV3IEFycmF5KHMpO2ZvcihsZXQgcj0xO3I8PXM7cisrKWlbci0xXT10KHIqZSk7cmV0dXJuIGl9Z2VuZXJhdGVTaGFkZXIodCl7Y29uc3QgZT1uZXcgQXJyYXkodCk7Zm9yKGxldCBzPTE7czw9dDtzKyspZVtzLTFdPVwiXCIuY29uY2F0KHMsXCIuMCAqIHVEZWx0YVwiKTtyZXR1cm5cIlxcbiAgICAgIHByZWNpc2lvbiBoaWdocCBmbG9hdDtcXG4gICAgICB1bmlmb3JtIHNhbXBsZXIyRCB1VGV4dHVyZTtcXG4gICAgICB1bmlmb3JtIHZlYzIgdURlbHRhO1xcbiAgICAgIHZhcnlpbmcgdmVjMiB2VGV4Q29vcmQ7XFxuICAgICAgdW5pZm9ybSBmbG9hdCB1VGFwc1tcIi5jb25jYXQodCxcIl07XFxuICAgICAgdm9pZCBtYWluKCkge1xcbiAgICAgICAgdmVjNCBjb2xvciA9IHRleHR1cmUyRCh1VGV4dHVyZSwgdlRleENvb3JkKTtcXG4gICAgICAgIGZsb2F0IHN1bSA9IDEuMDtcXG4gICAgICAgIFwiKS5jb25jYXQoZS5tYXAoKCh0LGUpPT5cIlxcbiAgICAgICAgICAgICAgY29sb3IgKz0gdGV4dHVyZTJEKHVUZXh0dXJlLCB2VGV4Q29vcmQgKyBcIi5jb25jYXQodCxcIikgKiB1VGFwc1tcIikuY29uY2F0KGUsXCJdICsgdGV4dHVyZTJEKHVUZXh0dXJlLCB2VGV4Q29vcmQgLSBcIikuY29uY2F0KHQsXCIpICogdVRhcHNbXCIpLmNvbmNhdChlLFwiXTtcXG4gICAgICAgICAgICAgIHN1bSArPSAyLjAgKiB1VGFwc1tcIikuY29uY2F0KGUsXCJdO1xcbiAgICAgICAgICAgIFwiKSkpLmpvaW4oXCJcXG5cIiksXCJcXG4gICAgICAgIGdsX0ZyYWdDb2xvciA9IGNvbG9yIC8gc3VtO1xcbiAgICAgIH1cXG4gICAgXCIpfWFwcGx5VG9Gb3JXZWJnbCh0KXt0LnBhc3NlcysrLHRoaXMud2lkdGg9dC5zb3VyY2VXaWR0aCx0aGlzLmhvcml6b250YWw9ITAsdGhpcy5kVz1NYXRoLnJvdW5kKHRoaXMud2lkdGgqdGhpcy5zY2FsZVgpLHRoaXMuZEg9dC5zb3VyY2VIZWlnaHQsdGhpcy50ZW1wU2NhbGU9dGhpcy5kVy90aGlzLndpZHRoLHRoaXMudGFwcz10aGlzLmdldFRhcHMoKSx0LmRlc3RpbmF0aW9uV2lkdGg9dGhpcy5kVyxzdXBlci5hcHBseVRvKHQpLHQuc291cmNlV2lkdGg9dC5kZXN0aW5hdGlvbldpZHRoLHRoaXMuaGVpZ2h0PXQuc291cmNlSGVpZ2h0LHRoaXMuaG9yaXpvbnRhbD0hMSx0aGlzLmRIPU1hdGgucm91bmQodGhpcy5oZWlnaHQqdGhpcy5zY2FsZVkpLHRoaXMudGVtcFNjYWxlPXRoaXMuZEgvdGhpcy5oZWlnaHQsdGhpcy50YXBzPXRoaXMuZ2V0VGFwcygpLHQuZGVzdGluYXRpb25IZWlnaHQ9dGhpcy5kSCxzdXBlci5hcHBseVRvKHQpLHQuc291cmNlSGVpZ2h0PXQuZGVzdGluYXRpb25IZWlnaHR9YXBwbHlUbyh0KXtPYSh0KT90aGlzLmFwcGx5VG9Gb3JXZWJnbCh0KTp0aGlzLmFwcGx5VG8yZCh0KX1pc05ldXRyYWxTdGF0ZSgpe3JldHVybiAxPT09dGhpcy5zY2FsZVgmJjE9PT10aGlzLnNjYWxlWX1sYW5jem9zQ3JlYXRlKHQpe3JldHVybiBlPT57aWYoZT49dHx8ZTw9LXQpcmV0dXJuIDA7aWYoZTwxLjE5MjA5MjllLTcmJmU+LTEuMTkyMDkyOWUtNylyZXR1cm4gMTtjb25zdCBzPShlKj1NYXRoLlBJKS90O3JldHVybiBNYXRoLnNpbihlKS9lKk1hdGguc2luKHMpL3N9fWFwcGx5VG8yZCh0KXtjb25zdCBlPXQuaW1hZ2VEYXRhLHM9dGhpcy5zY2FsZVgsaT10aGlzLnNjYWxlWTt0aGlzLnJjcFNjYWxlWD0xL3MsdGhpcy5yY3BTY2FsZVk9MS9pO2NvbnN0IHI9ZS53aWR0aCxuPWUuaGVpZ2h0LG89TWF0aC5yb3VuZChyKnMpLGE9TWF0aC5yb3VuZChuKmkpO2xldCBoO2g9XCJzbGljZUhhY2tcIj09PXRoaXMucmVzaXplVHlwZT90aGlzLnNsaWNlQnlUd28odCxyLG4sbyxhKTpcImhlcm1pdGVcIj09PXRoaXMucmVzaXplVHlwZT90aGlzLmhlcm1pdGVGYXN0UmVzaXplKHQscixuLG8sYSk6XCJiaWxpbmVhclwiPT09dGhpcy5yZXNpemVUeXBlP3RoaXMuYmlsaW5lYXJGaWx0ZXJpbmcodCxyLG4sbyxhKTpcImxhbmN6b3NcIj09PXRoaXMucmVzaXplVHlwZT90aGlzLmxhbmN6b3NSZXNpemUodCxyLG4sbyxhKTpuZXcgSW1hZ2VEYXRhKG8sYSksdC5pbWFnZURhdGE9aH1zbGljZUJ5VHdvKHQsZSxzLGkscil7Y29uc3Qgbj10LmltYWdlRGF0YSxvPS41O2xldCBhPSExLGg9ITEsYz1lKm8sbD1zKm87Y29uc3QgdT10LmZpbHRlckJhY2tlbmQucmVzb3VyY2VzO2xldCBkPTAsZz0wO2NvbnN0IGY9ZTtsZXQgcD0wO3Uuc2xpY2VCeVR3b3x8KHUuc2xpY2VCeVR3bz1wdCgpKTtjb25zdCBtPXUuc2xpY2VCeVR3bzsobS53aWR0aDwxLjUqZXx8bS5oZWlnaHQ8cykmJihtLndpZHRoPTEuNSplLG0uaGVpZ2h0PXMpO2NvbnN0IHY9bS5nZXRDb250ZXh0KFwiMmRcIik7Zm9yKHYuY2xlYXJSZWN0KDAsMCwxLjUqZSxzKSx2LnB1dEltYWdlRGF0YShuLDAsMCksaT1NYXRoLmZsb29yKGkpLHI9TWF0aC5mbG9vcihyKTshYXx8IWg7KWU9YyxzPWwsaTxNYXRoLmZsb29yKGMqbyk/Yz1NYXRoLmZsb29yKGMqbyk6KGM9aSxhPSEwKSxyPE1hdGguZmxvb3IobCpvKT9sPU1hdGguZmxvb3IobCpvKToobD1yLGg9ITApLHYuZHJhd0ltYWdlKG0sZCxnLGUscyxmLHAsYyxsKSxkPWYsZz1wLHArPWw7cmV0dXJuIHYuZ2V0SW1hZ2VEYXRhKGQsZyxpLHIpfWxhbmN6b3NSZXNpemUodCxlLHMsaSxyKXtjb25zdCBuPXQuaW1hZ2VEYXRhLmRhdGEsbz10LmN0eC5jcmVhdGVJbWFnZURhdGEoaSxyKSxhPW8uZGF0YSxoPXRoaXMubGFuY3pvc0NyZWF0ZSh0aGlzLmxhbmN6b3NMb2JlcyksYz10aGlzLnJjcFNjYWxlWCxsPXRoaXMucmNwU2NhbGVZLHU9Mi90aGlzLnJjcFNjYWxlWCxkPTIvdGhpcy5yY3BTY2FsZVksZz1NYXRoLmNlaWwoYyp0aGlzLmxhbmN6b3NMb2Jlcy8yKSxmPU1hdGguY2VpbChsKnRoaXMubGFuY3pvc0xvYmVzLzIpLHA9e30sbT17eDowLHk6MH0sdj17eDowLHk6MH07cmV0dXJuIGZ1bmN0aW9uIHQoeSl7bGV0IF8seCxDLGIsdyxTLFQsTyxrLEQsTTtmb3IobS54PSh5Ky41KSpjLHYueD1NYXRoLmZsb29yKG0ueCksXz0wO188cjtfKyspe2ZvcihtLnk9KF8rLjUpKmwsdi55PU1hdGguZmxvb3IobS55KSx3PTAsUz0wLFQ9MCxPPTAsaz0wLHg9di54LWc7eDw9di54K2c7eCsrKWlmKCEoeDwwfHx4Pj1lKSl7RD1NYXRoLmZsb29yKDFlMypNYXRoLmFicyh4LW0ueCkpLHBbRF18fChwW0RdPXt9KTtmb3IobGV0IHQ9di55LWY7dDw9di55K2Y7dCsrKXQ8MHx8dD49c3x8KE09TWF0aC5mbG9vcigxZTMqTWF0aC5hYnModC1tLnkpKSxwW0RdW01dfHwocFtEXVtNXT1oKE1hdGguc3FydChNYXRoLnBvdyhEKnUsMikrTWF0aC5wb3coTSpkLDIpKS8xZTMpKSxDPXBbRF1bTV0sQz4wJiYoYj00Kih0KmUreCksdys9QyxTKz1DKm5bYl0sVCs9QypuW2IrMV0sTys9QypuW2IrMl0says9QypuW2IrM10pKX1iPTQqKF8qaSt5KSxhW2JdPVMvdyxhW2IrMV09VC93LGFbYisyXT1PL3csYVtiKzNdPWsvd31yZXR1cm4rK3k8aT90KHkpOm99KDApfWJpbGluZWFyRmlsdGVyaW5nKHQsZSxzLGkscil7bGV0IG4sbyxhLGgsYyxsLHUsZCxnLGYscCxtLHYseT0wO2NvbnN0IF89dGhpcy5yY3BTY2FsZVgseD10aGlzLnJjcFNjYWxlWSxDPTQqKGUtMSksYj10LmltYWdlRGF0YS5kYXRhLHc9dC5jdHguY3JlYXRlSW1hZ2VEYXRhKGksciksUz13LmRhdGE7Zm9yKHU9MDt1PHI7dSsrKWZvcihkPTA7ZDxpO2QrKylmb3IoYz1NYXRoLmZsb29yKF8qZCksbD1NYXRoLmZsb29yKHgqdSksZz1fKmQtYyxmPXgqdS1sLHY9NCoobCplK2MpLHA9MDtwPDQ7cCsrKW49Ylt2K3BdLG89Ylt2KzQrcF0sYT1iW3YrQytwXSxoPWJbditDKzQrcF0sbT1uKigxLWcpKigxLWYpK28qZyooMS1mKSthKmYqKDEtZykraCpnKmYsU1t5KytdPW07cmV0dXJuIHd9aGVybWl0ZUZhc3RSZXNpemUodCxlLHMsaSxyKXtjb25zdCBuPXRoaXMucmNwU2NhbGVYLG89dGhpcy5yY3BTY2FsZVksYT1NYXRoLmNlaWwobi8yKSxoPU1hdGguY2VpbChvLzIpLGM9dC5pbWFnZURhdGEuZGF0YSxsPXQuY3R4LmNyZWF0ZUltYWdlRGF0YShpLHIpLHU9bC5kYXRhO2ZvcihsZXQgdD0wO3Q8cjt0KyspZm9yKGxldCBzPTA7czxpO3MrKyl7Y29uc3Qgcj00KihzK3QqaSk7bGV0IGw9MCxkPTAsZz0wLGY9MCxwPTAsbT0wLHY9MDtjb25zdCB5PSh0Ky41KSpvO2ZvcihsZXQgaT1NYXRoLmZsb29yKHQqbyk7aTwodCsxKSpvO2krKyl7Y29uc3QgdD1NYXRoLmFicyh5LShpKy41KSkvaCxyPShzKy41KSpuLG89dCp0O2ZvcihsZXQgdD1NYXRoLmZsb29yKHMqbik7dDwocysxKSpuO3QrKyl7bGV0IHM9TWF0aC5hYnMoci0odCsuNSkpL2E7Y29uc3Qgbj1NYXRoLnNxcnQobytzKnMpO24+MSYmbjwtMXx8KGw9MipuKm4qbi0zKm4qbisxLGw+MCYmKHM9NCoodCtpKmUpLHYrPWwqY1tzKzNdLGcrPWwsY1tzKzNdPDI1NSYmKGw9bCpjW3MrM10vMjUwKSxmKz1sKmNbc10scCs9bCpjW3MrMV0sbSs9bCpjW3MrMl0sZCs9bCkpfX11W3JdPWYvZCx1W3IrMV09cC9kLHVbcisyXT1tL2QsdVtyKzNdPXYvZ31yZXR1cm4gbH19dCh1aCxcInR5cGVcIixcIlJlc2l6ZVwiKSx0KHVoLFwiZGVmYXVsdHNcIix7cmVzaXplVHlwZTpcImhlcm1pdGVcIixzY2FsZVg6MSxzY2FsZVk6MSxsYW5jem9zTG9iZXM6M30pLHQodWgsXCJ1bmlmb3JtTG9jYXRpb25zXCIsW1widURlbHRhXCIsXCJ1VGFwc1wiXSksdHQuc2V0Q2xhc3ModWgpO2NsYXNzIGRoIGV4dGVuZHMgamF7Z2V0RnJhZ21lbnRTb3VyY2UoKXtyZXR1cm5cIlxcbiAgcHJlY2lzaW9uIGhpZ2hwIGZsb2F0O1xcbiAgdW5pZm9ybSBzYW1wbGVyMkQgdVRleHR1cmU7XFxuICB1bmlmb3JtIGZsb2F0IHVTYXR1cmF0aW9uO1xcbiAgdmFyeWluZyB2ZWMyIHZUZXhDb29yZDtcXG4gIHZvaWQgbWFpbigpIHtcXG4gICAgdmVjNCBjb2xvciA9IHRleHR1cmUyRCh1VGV4dHVyZSwgdlRleENvb3JkKTtcXG4gICAgZmxvYXQgcmdNYXggPSBtYXgoY29sb3IuciwgY29sb3IuZyk7XFxuICAgIGZsb2F0IHJnYk1heCA9IG1heChyZ01heCwgY29sb3IuYik7XFxuICAgIGNvbG9yLnIgKz0gcmdiTWF4ICE9IGNvbG9yLnIgPyAocmdiTWF4IC0gY29sb3IucikgKiB1U2F0dXJhdGlvbiA6IDAuMDA7XFxuICAgIGNvbG9yLmcgKz0gcmdiTWF4ICE9IGNvbG9yLmcgPyAocmdiTWF4IC0gY29sb3IuZykgKiB1U2F0dXJhdGlvbiA6IDAuMDA7XFxuICAgIGNvbG9yLmIgKz0gcmdiTWF4ICE9IGNvbG9yLmIgPyAocmdiTWF4IC0gY29sb3IuYikgKiB1U2F0dXJhdGlvbiA6IDAuMDA7XFxuICAgIGdsX0ZyYWdDb2xvciA9IGNvbG9yO1xcbiAgfVxcblwifWFwcGx5VG8yZCh0KXtsZXR7aW1hZ2VEYXRhOntkYXRhOmV9fT10O2NvbnN0IHM9LXRoaXMuc2F0dXJhdGlvbjtmb3IobGV0IHQ9MDt0PGUubGVuZ3RoO3QrPTQpe2NvbnN0IGk9ZVt0XSxyPWVbdCsxXSxuPWVbdCsyXSxvPU1hdGgubWF4KGkscixuKTtlW3RdKz1vIT09aT8oby1pKSpzOjAsZVt0KzFdKz1vIT09cj8oby1yKSpzOjAsZVt0KzJdKz1vIT09bj8oby1uKSpzOjB9fXNlbmRVbmlmb3JtRGF0YSh0LGUpe3QudW5pZm9ybTFmKGUudVNhdHVyYXRpb24sLXRoaXMuc2F0dXJhdGlvbil9aXNOZXV0cmFsU3RhdGUoKXtyZXR1cm4gMD09PXRoaXMuc2F0dXJhdGlvbn19dChkaCxcInR5cGVcIixcIlNhdHVyYXRpb25cIiksdChkaCxcImRlZmF1bHRzXCIse3NhdHVyYXRpb246MH0pLHQoZGgsXCJ1bmlmb3JtTG9jYXRpb25zXCIsW1widVNhdHVyYXRpb25cIl0pLHR0LnNldENsYXNzKGRoKTtjbGFzcyBnaCBleHRlbmRzIGphe2dldEZyYWdtZW50U291cmNlKCl7cmV0dXJuXCJcXG4gIHByZWNpc2lvbiBoaWdocCBmbG9hdDtcXG4gIHVuaWZvcm0gc2FtcGxlcjJEIHVUZXh0dXJlO1xcbiAgdW5pZm9ybSBmbG9hdCB1VmlicmFuY2U7XFxuICB2YXJ5aW5nIHZlYzIgdlRleENvb3JkO1xcbiAgdm9pZCBtYWluKCkge1xcbiAgICB2ZWM0IGNvbG9yID0gdGV4dHVyZTJEKHVUZXh0dXJlLCB2VGV4Q29vcmQpO1xcbiAgICBmbG9hdCBtYXggPSBtYXgoY29sb3IuciwgbWF4KGNvbG9yLmcsIGNvbG9yLmIpKTtcXG4gICAgZmxvYXQgYXZnID0gKGNvbG9yLnIgKyBjb2xvci5nICsgY29sb3IuYikgLyAzLjA7XFxuICAgIGZsb2F0IGFtdCA9IChhYnMobWF4IC0gYXZnKSAqIDIuMCkgKiB1VmlicmFuY2U7XFxuICAgIGNvbG9yLnIgKz0gbWF4ICE9IGNvbG9yLnIgPyAobWF4IC0gY29sb3IucikgKiBhbXQgOiAwLjAwO1xcbiAgICBjb2xvci5nICs9IG1heCAhPSBjb2xvci5nID8gKG1heCAtIGNvbG9yLmcpICogYW10IDogMC4wMDtcXG4gICAgY29sb3IuYiArPSBtYXggIT0gY29sb3IuYiA/IChtYXggLSBjb2xvci5iKSAqIGFtdCA6IDAuMDA7XFxuICAgIGdsX0ZyYWdDb2xvciA9IGNvbG9yO1xcbiAgfVxcblwifWFwcGx5VG8yZCh0KXtsZXR7aW1hZ2VEYXRhOntkYXRhOmV9fT10O2NvbnN0IHM9LXRoaXMudmlicmFuY2U7Zm9yKGxldCB0PTA7dDxlLmxlbmd0aDt0Kz00KXtjb25zdCBpPWVbdF0scj1lW3QrMV0sbj1lW3QrMl0sbz1NYXRoLm1heChpLHIsbiksYT0oaStyK24pLzMsaD0yKk1hdGguYWJzKG8tYSkvMjU1KnM7ZVt0XSs9byE9PWk/KG8taSkqaDowLGVbdCsxXSs9byE9PXI/KG8tcikqaDowLGVbdCsyXSs9byE9PW4/KG8tbikqaDowfX1zZW5kVW5pZm9ybURhdGEodCxlKXt0LnVuaWZvcm0xZihlLnVWaWJyYW5jZSwtdGhpcy52aWJyYW5jZSl9aXNOZXV0cmFsU3RhdGUoKXtyZXR1cm4gMD09PXRoaXMudmlicmFuY2V9fXQoZ2gsXCJ0eXBlXCIsXCJWaWJyYW5jZVwiKSx0KGdoLFwiZGVmYXVsdHNcIix7dmlicmFuY2U6MH0pLHQoZ2gsXCJ1bmlmb3JtTG9jYXRpb25zXCIsW1widVZpYnJhbmNlXCJdKSx0dC5zZXRDbGFzcyhnaCk7dmFyIGZoPU9iamVjdC5mcmVlemUoe19fcHJvdG9fXzpudWxsLEJhc2VGaWx0ZXI6amEsQmxhY2tXaGl0ZTpKYSxCbGVuZENvbG9yOkxhLEJsZW5kSW1hZ2U6QmEsQmx1cjpYYSxCcmlnaHRuZXNzOllhLEJyb3duaWU6SGEsQ29sb3JNYXRyaXg6VmEsQ29tcG9zZWQ6UWEsQ29udHJhc3Q6WmEsQ29udm9sdXRlOnRoLEdhbW1hOnNoLEdyYXlzY2FsZTpyaCxIdWVSb3RhdGlvbjpvaCxJbnZlcnQ6YWgsS29kYWNocm9tZTpOYSxOb2lzZTpoaCxQaXhlbGF0ZTpjaCxQb2xhcm9pZDpxYSxSZW1vdmVDb2xvcjpsaCxSZXNpemU6dWgsU2F0dXJhdGlvbjpkaCxTZXBpYTpLYSxUZWNobmljb2xvcjpVYSxWaWJyYW5jZTpnaCxWaW50YWdlOkdhfSk7ZXhwb3J0e1ZvIGFzIEFjdGl2ZVNlbGVjdGlvbixCbiBhcyBCYXNlQnJ1c2gsQnMgYXMgQmFzZUZhYnJpY09iamVjdCx4biBhcyBDYW52YXMsem8gYXMgQ2FudmFzMmRGaWx0ZXJCYWNrZW5kLHVuIGFzIENhbnZhc0RPTU1hbmFnZXIsR24gYXMgQ2lyY2xlLE5uIGFzIENpcmNsZUJydXNoLFhvIGFzIENsaXBQYXRoTGF5b3V0LFV0IGFzIENvbG9yLEhzIGFzIENvbnRyb2wsZW8gYXMgRWxsaXBzZSxRbyBhcyBGYWJyaWNJbWFnZSx5aSBhcyBGYWJyaWNPYmplY3QsU28gYXMgRmFicmljVGV4dCxDciBhcyBGaXRDb250ZW50TGF5b3V0LFlvIGFzIEZpeGVkTGF5b3V0LExuIGFzIEdyYWRpZW50LERyIGFzIEdyb3VwLElvIGFzIElUZXh0LFFvIGFzIEltYWdlLG1pIGFzIEludGVyYWN0aXZlRmFicmljT2JqZWN0LEZzIGFzIEludGVyc2VjdGlvbixUciBhcyBMYXlvdXRNYW5hZ2VyLHhyIGFzIExheW91dFN0cmF0ZWd5LFpuIGFzIExpbmUseWkgYXMgT2JqZWN0LHN0IGFzIE9ic2VydmFibGUsV24gYXMgUGF0aCxJbiBhcyBQYXR0ZXJuLHFuIGFzIFBhdHRlcm5CcnVzaCxWbiBhcyBQZW5jaWxCcnVzaCxvdCBhcyBQb2ludCxvbyBhcyBQb2x5Z29uLG5vIGFzIFBvbHlsaW5lLGZyIGFzIFJlY3QsdXMgYXMgU2hhZG93LFVuIGFzIFNwcmF5QnJ1c2gsdWUgYXMgU3RhdGljQ2FudmFzLGNlIGFzIFN0YXRpY0NhbnZhc0RPTU1hbmFnZXIsU28gYXMgVGV4dCxCbyBhcyBUZXh0Ym94LCRuIGFzIFRyaWFuZ2xlLEhvIGFzIFdlYkdMRmlsdGVyQmFja2VuZCxfIGFzIGNhY2hlLHR0IGFzIGNsYXNzUmVnaXN0cnksbyBhcyBjb25maWcsVGEgYXMgY29udHJvbHNVdGlscyxjdCBhcyBjcmVhdGVDb2xsZWN0aW9uTWl4aW4sZmggYXMgZmlsdGVycyxvYSBhcyBnZXRDU1NSdWxlcyxwIGFzIGdldEVudixtIGFzIGdldEZhYnJpY0RvY3VtZW50LHYgYXMgZ2V0RmFicmljV2luZG93LFVvIGFzIGdldEZpbHRlckJhY2tlbmQsVCBhcyBpTWF0cml4LE5vIGFzIGluaXRGaWx0ZXJCYWNrZW5kLGthIGFzIGlzUHV0SW1hZ2VGYXN0ZXIsT2EgYXMgaXNXZWJHTFBpcGVsaW5lU3RhdGUsZGEgYXMgbG9hZFNWR0Zyb21TdHJpbmcsZ2EgYXMgbG9hZFNWR0Zyb21VUkwsdXIgYXMgcGFyc2VBdHRyaWJ1dGVzLGFyIGFzIHBhcnNlRm9udERlY2xhcmF0aW9uLHNvIGFzIHBhcnNlUG9pbnRzQXR0cmlidXRlLHVhIGFzIHBhcnNlU1ZHRG9jdW1lbnQsY3IgYXMgcGFyc2VTdHlsZUF0dHJpYnV0ZSxuciBhcyBwYXJzZVRyYW5zZm9ybUF0dHJpYnV0ZSxldCBhcyBydW5uaW5nQW5pbWF0aW9ucyxmIGFzIHNldEVudixxbyBhcyBzZXRGaWx0ZXJCYWNrZW5kLGxuIGFzIHV0aWwseCBhcyB2ZXJzaW9ufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1pbi5tanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/fabric/dist/index.min.mjs\n"));

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["main-app"], () => (__webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5CTushar%20bajaj%5C%5COneDrive%5C%5CDesktop%5C%5Cdrawing%5C%5Csrc%5C%5Capp%5C%5Ctest%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!")));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);